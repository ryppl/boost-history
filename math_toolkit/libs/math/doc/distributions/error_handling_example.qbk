[section:error_eg Error Handling Example]

See [link math_toolkit.special.error_handling error handling]
for a detailed explanation of the mechanism of handling errors,
including the common "bad" arguments to distributions and functions,
and how to use __policy_section to control it.

But, by default, *exceptions will be raised*,
to get the most appropriate value, usually a NaN, or zero, returned you need to change the policy.

See [@../../example/error_handling_example.cpp error_handling_example.cpp] for the source code of an example.

This example is detailed at the Policy tutorial in
[link math_toolkit.policy.pol_tutorial.changing_policy_defaults Changing the Policy Defaults].

[caution If throw is enabled (the default) but do NOT have try & catch block,
then the program will terminate with an uncaught exception and probably abort.
Therefore to get the benefit of helpful error messages, enabling *all exceptions
and using try & catch* is recommended for all applications.
However, for simplicity, the is not done for most examples.]
  
[endsect] [/section:error_eg Error Handling Example]
[/ 
  Copyright 2007 John Maddock and Paul A. Bristow.
  Distributed under the Boost Software License, Version 1.0.
  (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt).
]

