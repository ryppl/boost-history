<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../xslt/html.xsl"?>
<library>
	<name>mirror</name>
	<Name>Mirror</Name>
	<title>Mirror C++ Library</title> 
	<date>
		<from>2008</from>
		<to>2008</to>
	</date>
	<authors>
		<author id="m_ch">
			<name>Matúš</name>
			<surname>Chochlík</surname>
			<email>chochlik@gmail.com</email>
		</author>
	</authors>
	<revisions>
		<revision id="20080415" major="0" minor="1" micro="0" author="m_ch">
			Initial implementation.
		</revision>
		<revision id="20080416" major="0" minor="1" micro="1" author="m_ch">
			Updated documentation and added several examples.
		</revision>
		<revision id="20080417_1146CET" major="0" minor="1" micro="2" author="m_ch">
			- Modified the REG_NAMESPACE*(...) macros to make them much more simple
			- Modified the name_to_stream templates and split the sources into
			  separate files
			- Added BOOST_MIRROR_REFLECT_NAMESPACE and BOOST_MIRROR_REFLECT_TYPE*
			  macros that expand to the approrpiate meta-object type
			- Updated documentation
			- Added example on type registration and usage
		</revision>
		<revision id="20080417_1855CET" major="0" minor="1" micro="3" author="m_ch">
			- Added an elaborate example on class registration and usage
			- Made major modifications to multiple sources
		</revision>
		<revision id="20080418" major="0" minor="1" micro="4" author="m_ch">
			- Added two examples (incomplete)
			- Made some modifications to multiple sources
			- Minor updates to documentation
		</revision>
		<revision id="20080421" major="0" minor="1" micro="5" author="m_ch">
			- Added support for access to the inherited member attributes of a class
			- Updated the example on virtual inheritance 
			- Updated the example on serialization (still unfinished)
		</revision>
		<revision id="20080422" major="0" minor="1" micro="6" author="m_ch">
			- Made minor updates to documentation
		</revision>
		<revision id="20080423" major="0" minor="1" micro="7" author="m_ch">
			- Added example on cooperation with Boost.Serialization
			  (will not compile with gcc)
		</revision>
		<revision id="20080424" major="0" minor="1" micro="8" author="m_ch">
			- Added support for base name querying for non trivial types
			- Added meta_type for std::pair
			- NOTE: tested only with MSVC++ 2008 EE
		</revision>
		<revision id="20080425_1116CET" major="0" minor="1" micro="9" author="m_ch">
			- Added the index to the base name of static arrays
			- NOTE: tested only with MSVC++ 2008 EE
		</revision>
		<revision id="20080425_1758CET" major="0" minor="1" micro="10" author="m_ch">
			- Added support for getting fully qualified names of namespaces/types/etc.
			- Updated several examples to show full_name getting
			- NOTE: full_name getter not available yet for all meta_types 
			- NOTE: tested only with MSVC++ 2008 EE
		</revision>
		<revision id="20080425_2052CET" major="0" minor="1" micro="11" author="m_ch">
			- Finished full name getters 
			- Modified meta_type for std::pair
			- Updated example showing the reflection of std::pair
			- NOTE: tested only with MSVC++ 2008 EE
		</revision>
		<revision id="20080426" major="0" minor="1" micro="12" author="m_ch">
			- Added meta_type for boost::tuple
			- Added meta_type for std::vector
			- Added meta_type for std::map
			- Added meta_type for std::list
			- Added meta_type for std::set
			- Modified several other internal headers
			- NOTE: tested only with MSVC++ 2008 EE
		</revision>
		<revision id="20080428" major="0" minor="1" micro="13" author="m_ch">
			- Added meta_attribs for boost::tuple
			- Added meta_attribs for std::vector
			- Reimplemented meta_attributes::for_each
			- The for_each function is now available also for all attributes
			- Updated several examples to show new functionality
			- NOTE: tested only with MSVC++ 2008 
		</revision>
		<revision id="20080428" major="0" minor="1" micro="14" author="m_ch">
			- Fixed several bugs that prevented the compilation with gcc
			- Updated the special/boost_tuple.cpp example 
			- Tested with MSVC++ 2008 EE on Vista and g++ 4.1.3 on Ubuntu 7.10
		</revision>
		<revision id="20080430" major="0" minor="1" micro="15" author="m_ch">
			- Updated several sources to comply with the Boost Coding Guidelines 
			  for Integral Constant Expressions, now using the BOOST_STATIC_CONSTANT
			  macro.
		</revision>
		<revision id="20080501" major="0" minor="1" micro="16" author="m_ch">
			- Major redesign and rewrite of certain things
			- Moved the all_attributes implementation out of the meta_class
			  to a separate template (placed in mirror/meta_attribs.cpp)
			- Renamed the meta_type::base_type to meta_type::reflected_type
			- Removed the for_each function from the meta_class::attributes 
			  and meta_class::all_attributes
			- Added some separate algorithms working on the meta_class::attributes
			  and meta_class::all_attributes including for_each and reverse_for_each
			- Added some separate algorithms working on the meta_class::base_classes
			  including for_each and reverse_for_each
			- Added some useful functors 
			- Moved the reflects_*.cpp to the new traits subfolder
			- Added 'position' type to the meta_inheritance template
			- Updated examples to show the new features
			- Added two meta_class traversal algorithms
			- Added example showing class structure traversal
			- Tested only with MSVC++ 2008 EE, so may fail to compile with other compilers
		</revision>
		<revision id="20080502_1200CET" major="0" minor="1" micro="17" author="m_ch">
			- A temporary workaround, which may cause memory-leak reports
			  on program exit, has been introduced. This should be fixed ASAP.
			- Tested and successfully compiled with MSVC++ 2008 EE on Vista
			  gcc 4.2.1 and gcc 4.3.0 on OpenSuSE
		</revision>
		<revision id="20080502_1730CET" major="0" minor="1" micro="18" author="m_ch">
			- Several tests and a Jamfile added to the libs/mirror/test subdir
			- Added meta-type for arrays with undefined element count
		</revision>
		<revision id="20080503" major="0" minor="1" micro="19" author="m_ch">
			- Changed the template argument names to comply with the boost naming policy
			- Fixed a problem in examples/registering/classes.cpp that caused compilation 
			  errors with gcc.
			- Tested with MSVC++ 2008 EE on Vista and gcc 4.2.1 on FreeBSD
		</revision>
	</revisions>
</library>
