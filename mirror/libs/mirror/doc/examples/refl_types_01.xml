<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE section PUBLIC "-//Boost//DTD BoostBook XML V1.0//EN"
	"http://www.boost.org/tools/boostbook/dtd/boostbook.dtd">
<section id="mirror.examples.refl_types_01"
	 xmlns:xi="http://www.w3.org/2001/XInclude"
>
<using-namespace name="boost::mirror"/>
<using-namespace name="boost::cts"/>

<title>Reflecting complex types - example 1</title>
<para>This example shows how to use the type <link linkend="mirror.reference.reflecting">reflection macro</link> - 
<code><macroname>BOOST_MIRRORED_TYPE</macroname></code>,
to get an instantiation of the <code><classname>meta_type</classname></code> template, that provides meta-information
about a type. 
Furthermore it shows the basic usage of the type name getter function <code>full_name</code> defined by this template.
</para>
<para>
In this example only types which are derived from the types that are pre-registered by <libraryname>Mirror</libraryname> are reflected. 
See <xref linkend="mirror.examples.registering"/> to find out more about registering types with <libraryname>Mirror</libraryname>.

</para>
<xi:include href="../samples/usage_meta_type_01.xml"/>
</section>

