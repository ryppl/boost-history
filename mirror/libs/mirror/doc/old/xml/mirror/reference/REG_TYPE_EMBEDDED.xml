<?xml version="1.0" encoding="utf-8"?>
<feature_doc>
	<overview>
		<paragraph>
			The <feat_ref>REG_TYPE_EMBEDDED</feat_ref> macro registers a type declared inside of a class with the <lib_name_ref/> library. 
		</paragraph>
	</overview>
	<macro name="REG_TYPE_EMBEDDED">
		<arg name="WRAPPER">
			The (full) name of the class inside of which the type or class is declared. This class must be already registered.
		</arg>
		<arg name="TYPENAME">
			The name of the type or class to be registered (without nested name specifier).
		</arg>
	</macro>
	<overview>
	</overview>
	<requirements>
		<header>meta_type.hpp</header>
	</requirements>
	<example>
		<cpp_source>
			<cpp_line>namespace foo {</cpp_line><cpp_indent>
			<cpp_line>namespace detail {</cpp_line><cpp_indent>
			<cpp_line>struct bar</cpp_line>
			<cpp_line>{</cpp_line><cpp_indent>
			<cpp_line>struct part</cpp_line>
			<cpp_line>{</cpp_line><cpp_indent>
			</cpp_indent><cpp_line>};<cpp_comment>// struct part</cpp_comment></cpp_line>
			</cpp_indent><cpp_line>};<cpp_comment>// struct bar</cpp_comment></cpp_line>
			</cpp_indent><cpp_line>} <cpp_comment>// namespace detail</cpp_comment></cpp_line>
			</cpp_indent><cpp_line>} <cpp_comment>// namespace foo</cpp_comment></cpp_line>
			<cpp_line/>
			<cpp_line><cpp_comment>// the registering must be done </cpp_comment></cpp_line>
			<cpp_line><cpp_comment>// in the boost::mirror namespace</cpp_comment></cpp_line>
			<cpp_line>namespace boost {</cpp_line><cpp_indent>
			<cpp_line>namespace mirror {</cpp_line><cpp_indent>
			<cpp_line><cpp_comment>// register the namespaces </cpp_comment></cpp_line>
			<cpp_line><feat_ref>REG_NAMESPACE_TOP_LEVEL</feat_ref>(foo)</cpp_line>
			<cpp_line><feat_ref>REG_NAMESPACE</feat_ref>(_foo, detail)</cpp_line>
			<cpp_line/>
			<cpp_line><cpp_comment>// register the 'wrapping' class</cpp_comment></cpp_line>
			<cpp_line><feat_ref>REG_TYPE</feat_ref>(_foo_detail, ::foo::detail, bar)</cpp_line>
			<cpp_line><cpp_comment>// register the 'embedded' class</cpp_comment></cpp_line>
			<cpp_line><feat_ref>REG_TYPE_EMBEDDED</feat_ref>(::foo::detail::bar, part)</cpp_line>
			</cpp_indent><cpp_line>} <cpp_comment>// namespace mirror</cpp_comment></cpp_line>
			</cpp_indent><cpp_line>} <cpp_comment>// namespace boost</cpp_comment></cpp_line>
		</cpp_source>
	</example>
</feature_doc>

