<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE section PUBLIC "-//Boost//DTD BoostBook XML V1.0//EN"
	"http://www.boost.org/tools/boostbook/dtd/boostbook.dtd">
<function name="bstrlen"
	xmlns:xi="http://www.w3.org/2001/XInclude"
>
	<type>size_t</type>
	<parameter name="str">
		<paramtype>const <classname>bchar</classname>*</paramtype>
	</parameter>
	<purpose>
		<para>Returns the length (the count of characters) of the given string without the terminating null character.
		</para>
	</purpose>
	<description>
		<para>Calling this function is equivalent to calling <code>strlen</code> if 
		<code><classname>bchar</classname></code> is defined as <code>char</code> or to calling <code>wcslen</code> if
		<code><classname>bchar</classname></code> is defined as <code>wchar_t</code>.
		</para>
		<section id="char_type_switch.bstrlen.reference.samples">
			<title>Examples</title>
<programlisting>
#include &lt;assert.h&gt;
#include &lt;boost/char_type_switch/cstring.hpp&gt;

int main(void)
{
	using namespace ::boost::cts;
	assert(<functionname>bstrlen</functionname>(<macroname>BOOST_CTS_LIT</macroname>("foo")) == 3);
	assert(<functionname>bstrlen</functionname>(<macroname>BOOST_CTS_LIT</macroname>("foo")) == <macroname>BOOST_CTS_LIT_LENGTH</macroname>("foo"));
	//
	const <classname>bchar</classname> bar[] = <macroname>BOOST_CTS_LIT</macroname>("bar");
	assert(<functionname>bstrlen</functionname>(bar) == 3);
	return 0;
}
</programlisting>
		</section>
	</description>
</function>
