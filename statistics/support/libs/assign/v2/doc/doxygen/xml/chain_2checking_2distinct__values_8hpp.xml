<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="chain_2checking_2distinct__values_8hpp" kind="file">
    <compoundname>distinct_values.hpp</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">boost/utility/enable_if.hpp</includes>
    <includes local="no">boost/type_traits/is_same.hpp</includes>
    <includes refid="constants_8hpp" local="no">boost/assign/v2/detail/checking/constants.hpp</includes>
    <includes refid="detail_2checking_2container_8hpp" local="no">boost/assign/v2/detail/checking/container.hpp</includes>
    <includes refid="chain_8hpp" local="no">boost/assign/v2/chain/chain.hpp</includes>
    <incdepgraph>
      <node id="3679">
        <label>boost/assign/v2/put/modifier/def.hpp</label>
        <link refid="def_8hpp_source"/>
      </node>
      <node id="3671">
        <label>boost/mpl/size.hpp</label>
      </node>
      <node id="3555">
        <label>boost/type_traits/remove_cv.hpp</label>
      </node>
      <node id="3567">
        <label>boost/assign/v2/detail/type_traits/container/forward_to_value.hpp</label>
        <link refid="forward__to__value_8hpp_source"/>
        <childnode refid="3568" relation="include">
        </childnode>
      </node>
      <node id="3578">
        <label>boost/mpl/always.hpp</label>
      </node>
      <node id="3569">
        <label>boost/assign/v2/detail/type_traits/container/ptr_to_value_container.hpp</label>
        <link refid="ptr__to__value__container_8hpp_source"/>
        <childnode refid="3557" relation="include">
        </childnode>
      </node>
      <node id="3549">
        <label>boost/assign/v2/detail/checking/check_equal.hpp</label>
        <link refid="check__equal_8hpp_source"/>
        <childnode refid="3550" relation="include">
        </childnode>
      </node>
      <node id="3610">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="3651">
        <label>boost/mpl/vector.hpp</label>
      </node>
      <node id="3643">
        <label>boost/assign/v2/detail/config/limit_arity.hpp</label>
        <link refid="limit__arity_8hpp_source"/>
        <childnode refid="3638" relation="include">
        </childnode>
        <childnode refid="3644" relation="include">
        </childnode>
      </node>
      <node id="3577">
        <label>boost/mpl/apply.hpp</label>
      </node>
      <node id="3633">
        <label>boost/assign/v2/ref/wrapper/base.hpp</label>
        <link refid="ref_2wrapper_2base_8hpp_source"/>
        <childnode refid="3592" relation="include">
        </childnode>
        <childnode refid="3595" relation="include">
        </childnode>
      </node>
      <node id="3583">
        <label>boost/assign/v2/detail/checking/map.hpp</label>
        <link refid="map_8hpp_source"/>
        <childnode refid="3584" relation="include">
        </childnode>
        <childnode refid="3585" relation="include">
        </childnode>
        <childnode refid="3549" relation="include">
        </childnode>
        <childnode refid="3544" relation="include">
        </childnode>
        <childnode refid="3571" relation="include">
        </childnode>
      </node>
      <node id="3618">
        <label>boost/assign/v2/chain/aux_/sub.hpp</label>
        <link refid="chain_2aux___2sub_8hpp_source"/>
        <childnode refid="3599" relation="include">
        </childnode>
        <childnode refid="3619" relation="include">
        </childnode>
        <childnode refid="3709" relation="include">
        </childnode>
      </node>
      <node id="3672">
        <label>boost/assign/v2/detail/functor/new.hpp</label>
        <link refid="new_8hpp_source"/>
        <childnode refid="3561" relation="include">
        </childnode>
        <childnode refid="3647" relation="include">
        </childnode>
        <childnode refid="3639" relation="include">
        </childnode>
        <childnode refid="3640" relation="include">
        </childnode>
        <childnode refid="3596" relation="include">
        </childnode>
        <childnode refid="3555" relation="include">
        </childnode>
        <childnode refid="3578" relation="include">
        </childnode>
        <childnode refid="3664" relation="include">
        </childnode>
        <childnode refid="3643" relation="include">
        </childnode>
        <childnode refid="3646" relation="include">
        </childnode>
      </node>
      <node id="3712">
        <label>boost/assign/v2/chain/aux_/adaptor.hpp</label>
        <link refid="chain_2aux___2adaptor_8hpp_source"/>
        <childnode refid="3681" relation="include">
        </childnode>
      </node>
      <node id="3545">
        <label>boost/next_prior.hpp</label>
      </node>
      <node id="3594">
        <label>boost/type_traits/is_reference.hpp</label>
      </node>
      <node id="3647">
        <label>boost/preprocessor/repetition/repeat_from_to.hpp</label>
      </node>
      <node id="3587">
        <label>boost/range/end.hpp</label>
      </node>
      <node id="3662">
        <label>boost/preprocessor/tuple/to_seq.hpp</label>
      </node>
      <node id="3611">
        <label>boost/assign/v2/ref/detail/convert_traits/twin_values.hpp</label>
        <link refid="ref_2detail_2convert__traits_2twin__values_8hpp_source"/>
        <childnode refid="3559" relation="include">
        </childnode>
        <childnode refid="3558" relation="include">
        </childnode>
        <childnode refid="3612" relation="include">
        </childnode>
        <childnode refid="3613" relation="include">
        </childnode>
      </node>
      <node id="3683">
        <label>boost/typeof/typeof.hpp</label>
      </node>
      <node id="3600">
        <label>boost/range/iterator.hpp</label>
      </node>
      <node id="3688">
        <label>boost/assign/v2/detail/type_traits/container/is_set.hpp</label>
        <link refid="is__set_8hpp_source"/>
        <childnode refid="3554" relation="include">
        </childnode>
        <childnode refid="3555" relation="include">
        </childnode>
        <childnode refid="3556" relation="include">
        </childnode>
        <childnode refid="3557" relation="include">
        </childnode>
        <childnode refid="3567" relation="include">
        </childnode>
      </node>
      <node id="3624">
        <label>boost/assign/v2/put/sub/make.hpp</label>
        <link refid="put_2sub_2make_8hpp_source"/>
        <childnode refid="3625" relation="include">
        </childnode>
        <childnode refid="3636" relation="include">
        </childnode>
        <childnode refid="3682" relation="include">
        </childnode>
      </node>
      <node id="3642">
        <label>boost/assign/v2/detail/config/limit_csv_arity.hpp</label>
        <link refid="limit__csv__arity_8hpp_source"/>
      </node>
      <node id="3595">
        <label>boost/type_traits/is_const.hpp</label>
      </node>
      <node id="3673">
        <label>boost/assign/v2/detail/keyword/keyword.hpp</label>
        <link refid="detail_2keyword_2keyword_8hpp_source"/>
        <childnode refid="3674" relation="include">
        </childnode>
        <childnode refid="3675" relation="include">
        </childnode>
      </node>
      <node id="3581">
        <label>boost/assign/v2/detail/checking/fifo.hpp</label>
        <link refid="fifo_8hpp_source"/>
        <childnode refid="3544" relation="include">
        </childnode>
        <childnode refid="3549" relation="include">
        </childnode>
        <childnode refid="3553" relation="include">
        </childnode>
      </node>
      <node id="3706">
        <label>boost/range/algorithm/copy.hpp</label>
      </node>
      <node id="3655">
        <label>boost/assign/v2/detail/pp/args.hpp</label>
        <link refid="args_8hpp_source"/>
        <childnode refid="3562" relation="include">
        </childnode>
        <childnode refid="3656" relation="include">
        </childnode>
        <childnode refid="3639" relation="include">
        </childnode>
        <childnode refid="3657" relation="include">
        </childnode>
        <childnode refid="3658" relation="include">
        </childnode>
      </node>
      <node id="3621">
        <label>boost/assign/v2/put/range/modifier/modifier.hpp</label>
        <link refid="range_2modifier_2modifier_8hpp_source"/>
        <childnode refid="3622" relation="include">
        </childnode>
        <childnode refid="3701" relation="include">
        </childnode>
        <childnode refid="3707" relation="include">
        </childnode>
        <childnode refid="3708" relation="include">
        </childnode>
      </node>
      <node id="3580">
        <label>boost/assign/v2/detail/checking/array.hpp</label>
        <link refid="array_8hpp_source"/>
        <childnode refid="3549" relation="include">
        </childnode>
        <childnode refid="3544" relation="include">
        </childnode>
        <childnode refid="3573" relation="include">
        </childnode>
      </node>
      <node id="3584">
        <label>boost/range/begin.hpp</label>
      </node>
      <node id="3608">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="3703">
        <label>stdexcept</label>
      </node>
      <node id="3620">
        <label>boost/assign/v2/put/range/adaptor.hpp</label>
        <link refid="put_2range_2adaptor_8hpp_source"/>
        <childnode refid="3621" relation="include">
        </childnode>
      </node>
      <node id="3614">
        <label>boost/type_traits/add_const.hpp</label>
      </node>
      <node id="3630">
        <label>boost/assign/v2/ref/wrapper/wrapper.hpp</label>
        <link refid="ref_2wrapper_2wrapper_8hpp_source"/>
        <childnode refid="3631" relation="include">
        </childnode>
        <childnode refid="3625" relation="include">
        </childnode>
        <childnode refid="3632" relation="include">
        </childnode>
      </node>
      <node id="3704">
        <label>boost/throw_exception.hpp</label>
      </node>
      <node id="3702">
        <label>string</label>
      </node>
      <node id="3669">
        <label>boost/mpl/at.hpp</label>
      </node>
      <node id="3589">
        <label>boost/assign/v2/chain/chain.hpp</label>
        <link refid="chain_8hpp_source"/>
        <childnode refid="3590" relation="include">
        </childnode>
        <childnode refid="3711" relation="include">
        </childnode>
        <childnode refid="3713" relation="include">
        </childnode>
      </node>
      <node id="3645">
        <label>boost/assign/v2/detail/functor/functor.hpp</label>
        <link refid="detail_2functor_2functor_8hpp_source"/>
        <childnode refid="3646" relation="include">
        </childnode>
        <childnode refid="3663" relation="include">
        </childnode>
        <childnode refid="3667" relation="include">
        </childnode>
        <childnode refid="3672" relation="include">
        </childnode>
      </node>
      <node id="3638">
        <label>boost/preprocessor/arithmetic/inc.hpp</label>
      </node>
      <node id="3710">
        <label>boost/assign/v2/detail/relational_op/crtp.hpp</label>
        <link refid="detail_2relational__op_2crtp_8hpp_source"/>
        <childnode refid="3542" relation="include">
        </childnode>
        <childnode refid="3697" relation="include">
        </childnode>
      </node>
      <node id="3552">
        <label>boost/assign/v2/detail/checking/deduce_check.hpp</label>
        <link refid="deduce__check_8hpp_source"/>
        <childnode refid="3553" relation="include">
        </childnode>
        <childnode refid="3570" relation="include">
        </childnode>
        <childnode refid="3571" relation="include">
        </childnode>
        <childnode refid="3572" relation="include">
        </childnode>
        <childnode refid="3573" relation="include">
        </childnode>
        <childnode refid="3575" relation="include">
        </childnode>
        <childnode refid="3576" relation="include">
        </childnode>
      </node>
      <node id="3711">
        <label>boost/assign/v2/chain/aux_/bitwise_or.hpp</label>
        <link refid="bitwise__or_8hpp_source"/>
        <childnode refid="3681" relation="include">
        </childnode>
        <childnode refid="3590" relation="include">
        </childnode>
        <childnode refid="3712" relation="include">
        </childnode>
        <childnode refid="3618" relation="include">
        </childnode>
      </node>
      <node id="3565">
        <label>boost/assign/v2/detail/type_traits/container/static_size.hpp</label>
        <link refid="static__size_8hpp_source"/>
        <childnode refid="3566" relation="include">
        </childnode>
        <childnode refid="3556" relation="include">
        </childnode>
        <childnode refid="3564" relation="include">
        </childnode>
      </node>
      <node id="3563">
        <label>boost/type_traits/remove_reference.hpp</label>
      </node>
      <node id="3551">
        <label>boost/assign/v2/detail/checking/container.hpp</label>
        <link refid="detail_2checking_2container_8hpp_source"/>
        <childnode refid="3552" relation="include">
        </childnode>
        <childnode refid="3580" relation="include">
        </childnode>
        <childnode refid="3581" relation="include">
        </childnode>
        <childnode refid="3582" relation="include">
        </childnode>
        <childnode refid="3583" relation="include">
        </childnode>
        <childnode refid="3586" relation="include">
        </childnode>
      </node>
      <node id="3687">
        <label>boost/assign/v2/detail/type_traits/container/is_associative.hpp</label>
        <link refid="is__associative_8hpp_source"/>
        <childnode refid="3607" relation="include">
        </childnode>
        <childnode refid="3571" relation="include">
        </childnode>
        <childnode refid="3688" relation="include">
        </childnode>
      </node>
      <node id="3548">
        <label>boost/numeric/conversion/converter.hpp</label>
      </node>
      <node id="3681">
        <label>boost/mpl/void.hpp</label>
      </node>
      <node id="3613">
        <label>boost/assign/v2/ref/detail/convert_traits/add_const.hpp</label>
        <link refid="add__const_8hpp_source"/>
        <childnode refid="3559" relation="include">
        </childnode>
        <childnode refid="3558" relation="include">
        </childnode>
        <childnode refid="3614" relation="include">
        </childnode>
      </node>
      <node id="3686">
        <label>boost/type_traits/detail/yes_no_type.hpp</label>
      </node>
      <node id="3604">
        <label>boost/range/detail/demote_iterator_traversal_tag.hpp</label>
      </node>
      <node id="3566">
        <label>boost/mpl/size_t.hpp</label>
      </node>
      <node id="3550">
        <label>boost/assert.hpp</label>
      </node>
      <node id="3622">
        <label>boost/assign/v2/put/range/modifier/put.hpp</label>
        <link refid="range_2modifier_2put_8hpp_source"/>
        <childnode refid="3623" relation="include">
        </childnode>
        <childnode refid="3624" relation="include">
        </childnode>
      </node>
      <node id="3707">
        <label>boost/assign/v2/put/range/modifier/range.hpp</label>
        <link refid="put_2range_2modifier_2range_8hpp_source"/>
        <childnode refid="3584" relation="include">
        </childnode>
        <childnode refid="3587" relation="include">
        </childnode>
      </node>
      <node id="3559">
        <label>boost/mpl/eval_if.hpp</label>
      </node>
      <node id="3699">
        <label>boost/assign/v2/put/generic/expose_modifier.hpp</label>
        <link refid="expose__modifier_8hpp_source"/>
        <childnode refid="3679" relation="include">
        </childnode>
      </node>
      <node id="3571">
        <label>boost/assign/v2/detail/type_traits/container/is_map.hpp</label>
        <link refid="is__map_8hpp_source"/>
        <childnode refid="3554" relation="include">
        </childnode>
        <childnode refid="3555" relation="include">
        </childnode>
        <childnode refid="3556" relation="include">
        </childnode>
        <childnode refid="3557" relation="include">
        </childnode>
        <childnode refid="3567" relation="include">
        </childnode>
      </node>
      <node id="3625">
        <label>boost/assign/v2/ref/wrapper/copy.hpp</label>
        <link refid="ref_2wrapper_2copy_8hpp_source"/>
        <childnode refid="3626" relation="include">
        </childnode>
        <childnode refid="3554" relation="include">
        </childnode>
        <childnode refid="3627" relation="include">
        </childnode>
        <childnode refid="3555" relation="include">
        </childnode>
        <childnode refid="3628" relation="include">
        </childnode>
        <childnode refid="3633" relation="include">
        </childnode>
        <childnode refid="3634" relation="include">
        </childnode>
      </node>
      <node id="3661">
        <label>boost/assign/v2/detail/pp/seq.hpp</label>
        <link refid="seq_8hpp_source"/>
        <childnode refid="3662" relation="include">
        </childnode>
      </node>
      <node id="3631">
        <label>boost/assign/v2/ref/wrapper/deduce_assign_tag.hpp</label>
        <link refid="deduce__assign__tag_8hpp_source"/>
        <childnode refid="3559" relation="include">
        </childnode>
        <childnode refid="3558" relation="include">
        </childnode>
        <childnode refid="3543" relation="include">
        </childnode>
      </node>
      <node id="3596">
        <label>boost/range/reference.hpp</label>
      </node>
      <node id="3694">
        <label>boost/assign/v2/put/modifier/push_back.hpp</label>
        <link refid="push__back_8hpp_source"/>
        <childnode refid="3692" relation="include">
        </childnode>
      </node>
      <node id="3658">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="3700">
        <label>boost/assign/v2/put/generic/expose_fun.hpp</label>
        <link refid="expose__fun_8hpp_source"/>
      </node>
      <node id="3588">
        <label>boost/assign/v2/detail/checking/iterator.hpp</label>
        <link refid="detail_2checking_2iterator_8hpp_source"/>
        <childnode refid="3545" relation="include">
        </childnode>
        <childnode refid="3549" relation="include">
        </childnode>
        <childnode refid="3544" relation="include">
        </childnode>
      </node>
      <node id="3540">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/checking/distinct_values.hpp</label>
        <link refid="chain/checking/distinct_values.hpp"/>
        <childnode refid="3541" relation="include">
        </childnode>
        <childnode refid="3542" relation="include">
        </childnode>
        <childnode refid="3543" relation="include">
        </childnode>
        <childnode refid="3544" relation="include">
        </childnode>
        <childnode refid="3551" relation="include">
        </childnode>
        <childnode refid="3589" relation="include">
        </childnode>
      </node>
      <node id="3693">
        <label>boost/assign/v2/put/modifier/push.hpp</label>
        <link refid="push_8hpp_source"/>
        <childnode refid="3692" relation="include">
        </childnode>
      </node>
      <node id="3606">
        <label>boost/assign/v2/ref/detail/convert_traits/result.hpp</label>
        <link refid="ref_2detail_2convert__traits_2result_8hpp_source"/>
        <childnode refid="3592" relation="include">
        </childnode>
        <childnode refid="3593" relation="include">
        </childnode>
        <childnode refid="3607" relation="include">
        </childnode>
        <childnode refid="3608" relation="include">
        </childnode>
        <childnode refid="3543" relation="include">
        </childnode>
        <childnode refid="3595" relation="include">
        </childnode>
        <childnode refid="3594" relation="include">
        </childnode>
        <childnode refid="3609" relation="include">
        </childnode>
        <childnode refid="3563" relation="include">
        </childnode>
        <childnode refid="3610" relation="include">
        </childnode>
        <childnode refid="3611" relation="include">
        </childnode>
        <childnode refid="3615" relation="include">
        </childnode>
      </node>
      <node id="3637">
        <label>boost/preprocessor/arithmetic/add.hpp</label>
      </node>
      <node id="3675">
        <label>boost/assign/v2/detail/keyword/unwrap.hpp</label>
        <link refid="unwrap_8hpp_source"/>
      </node>
      <node id="3546">
        <label>boost/range.hpp</label>
      </node>
      <node id="3690">
        <label>boost/assign/v2/put/generic/new_fun.hpp</label>
        <link refid="new__fun_8hpp_source"/>
        <childnode refid="3577" relation="include">
        </childnode>
        <childnode refid="3681" relation="include">
        </childnode>
        <childnode refid="3542" relation="include">
        </childnode>
        <childnode refid="3543" relation="include">
        </childnode>
        <childnode refid="3682" relation="include">
        </childnode>
      </node>
      <node id="3572">
        <label>boost/assign/v2/detail/type_traits/container/is_sorted.hpp</label>
        <link refid="is__sorted_8hpp_source"/>
        <childnode refid="3554" relation="include">
        </childnode>
        <childnode refid="3555" relation="include">
        </childnode>
        <childnode refid="3556" relation="include">
        </childnode>
        <childnode refid="3567" relation="include">
        </childnode>
      </node>
      <node id="3695">
        <label>boost/assign/v2/put/modifier/push_front.hpp</label>
        <link refid="push__front_8hpp_source"/>
        <childnode refid="3692" relation="include">
        </childnode>
      </node>
      <node id="3573">
        <label>boost/assign/v2/detail/type_traits/container/is_static_array.hpp</label>
        <link refid="is__static__array_8hpp_source"/>
        <childnode refid="3555" relation="include">
        </childnode>
        <childnode refid="3574" relation="include">
        </childnode>
        <childnode refid="3567" relation="include">
        </childnode>
      </node>
      <node id="3542">
        <label>boost/utility/enable_if.hpp</label>
      </node>
      <node id="3560">
        <label>boost/assign/v2/detail/type_traits/container/ptr_to_value.hpp</label>
        <link refid="ptr__to__value_8hpp_source"/>
        <childnode refid="3561" relation="include">
        </childnode>
        <childnode refid="3562" relation="include">
        </childnode>
        <childnode refid="3554" relation="include">
        </childnode>
        <childnode refid="3563" relation="include">
        </childnode>
        <childnode refid="3564" relation="include">
        </childnode>
        <childnode refid="3556" relation="include">
        </childnode>
        <childnode refid="3565" relation="include">
        </childnode>
      </node>
      <node id="3556">
        <label>boost/assign/v2/detail/fwd/container.hpp</label>
        <link refid="detail_2fwd_2container_8hpp_source"/>
      </node>
      <node id="3684">
        <label>boost/assign/v2/put/modifier/deduce.hpp</label>
        <link refid="put_2modifier_2deduce_8hpp_source"/>
        <childnode refid="3559" relation="include">
        </childnode>
        <childnode refid="3543" relation="include">
        </childnode>
        <childnode refid="3558" relation="include">
        </childnode>
        <childnode refid="3576" relation="include">
        </childnode>
        <childnode refid="3573" relation="include">
        </childnode>
        <childnode refid="3685" relation="include">
        </childnode>
        <childnode refid="3687" relation="include">
        </childnode>
      </node>
      <node id="3579">
        <label>boost/mpl/placeholders.hpp</label>
      </node>
      <node id="3617">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="3652">
        <label>boost/assign/v2/detail/config/limit_lvalue_const_arity.hpp</label>
        <link refid="limit__lvalue__const__arity_8hpp_source"/>
        <childnode refid="3638" relation="include">
        </childnode>
        <childnode refid="3644" relation="include">
        </childnode>
        <childnode refid="3643" relation="include">
        </childnode>
      </node>
      <node id="3639">
        <label>boost/preprocessor/repetition/enum_params.hpp</label>
      </node>
      <node id="3685">
        <label>boost/assign/v2/detail/type_traits/container/has_push.hpp</label>
        <link refid="has__push_8hpp_source"/>
        <childnode refid="3554" relation="include">
        </childnode>
        <childnode refid="3614" relation="include">
        </childnode>
        <childnode refid="3592" relation="include">
        </childnode>
        <childnode refid="3686" relation="include">
        </childnode>
        <childnode refid="3664" relation="include">
        </childnode>
      </node>
      <node id="3568">
        <label>boost/assign/v2/detail/type_traits/container/value_container.hpp</label>
        <link refid="value__container_8hpp_source"/>
        <childnode refid="3558" relation="include">
        </childnode>
        <childnode refid="3559" relation="include">
        </childnode>
        <childnode refid="3557" relation="include">
        </childnode>
        <childnode refid="3569" relation="include">
        </childnode>
      </node>
      <node id="3678">
        <label>boost/accumulators/framework/accumulator_base.hpp</label>
      </node>
      <node id="3616">
        <label>boost/numeric/conversion/conversion_traits.hpp</label>
      </node>
      <node id="3541">
        <label>vector</label>
      </node>
      <node id="3674">
        <label>boost/assign/v2/detail/keyword/nil.hpp</label>
        <link refid="nil_8hpp_source"/>
      </node>
      <node id="3605">
        <label>boost/assign/v2/detail/type_traits/meta_convert.hpp</label>
        <link refid="meta__convert_8hpp_source"/>
        <childnode refid="3606" relation="include">
        </childnode>
      </node>
      <node id="3682">
        <label>boost/assign/v2/put/generic/result_of_modulo.hpp</label>
        <link refid="result__of__modulo_8hpp_source"/>
        <childnode refid="3577" relation="include">
        </childnode>
        <childnode refid="3683" relation="include">
        </childnode>
      </node>
      <node id="3564">
        <label>boost/assign/v2/detail/fwd/ptr_container.hpp</label>
        <link refid="ptr__container_8hpp_source"/>
      </node>
      <node id="3670">
        <label>boost/mpl/int.hpp</label>
      </node>
      <node id="3609">
        <label>boost/type_traits/is_convertible.hpp</label>
      </node>
      <node id="3701">
        <label>boost/assign/v2/put/range/modifier/copy.hpp</label>
        <link refid="put_2range_2modifier_2copy_8hpp_source"/>
        <childnode refid="3702" relation="include">
        </childnode>
        <childnode refid="3703" relation="include">
        </childnode>
        <childnode refid="3704" relation="include">
        </childnode>
        <childnode refid="3584" relation="include">
        </childnode>
        <childnode refid="3705" relation="include">
        </childnode>
        <childnode refid="3706" relation="include">
        </childnode>
      </node>
      <node id="3640">
        <label>boost/preprocessor/repetition/enum_binary_params.hpp</label>
      </node>
      <node id="3558">
        <label>boost/mpl/identity.hpp</label>
      </node>
      <node id="3632">
        <label>boost/assign/v2/ref/wrapper/rebind.hpp</label>
        <link refid="rebind_8hpp_source"/>
        <childnode refid="3626" relation="include">
        </childnode>
        <childnode refid="3628" relation="include">
        </childnode>
        <childnode refid="3633" relation="include">
        </childnode>
        <childnode refid="3634" relation="include">
        </childnode>
      </node>
      <node id="3627">
        <label>boost/call_traits.hpp</label>
      </node>
      <node id="3585">
        <label>boost/utility.hpp</label>
      </node>
      <node id="3709">
        <label>boost/assign/v2/detail/relational_op/relational_op.hpp</label>
        <link refid="relational__op_2relational__op_8hpp_source"/>
        <childnode refid="3710" relation="include">
        </childnode>
      </node>
      <node id="3601">
        <label>boost/assign/v2/chain/traits/iterator.hpp</label>
        <link refid="chain_2traits_2iterator_8hpp_source"/>
        <childnode refid="3577" relation="include">
        </childnode>
        <childnode refid="3563" relation="include">
        </childnode>
        <childnode refid="3602" relation="include">
        </childnode>
        <childnode refid="3603" relation="include">
        </childnode>
        <childnode refid="3604" relation="include">
        </childnode>
        <childnode refid="3605" relation="include">
        </childnode>
      </node>
      <node id="3649">
        <label>boost/preprocessor/seq/for_each_product.hpp</label>
      </node>
      <node id="3599">
        <label>boost/range/iterator_range.hpp</label>
      </node>
      <node id="3689">
        <label>boost/assign/v2/put/modifier/incr_lookup.hpp</label>
        <link refid="incr__lookup_8hpp_source"/>
        <childnode refid="3577" relation="include">
        </childnode>
        <childnode refid="3678" relation="include">
        </childnode>
        <childnode refid="3679" relation="include">
        </childnode>
        <childnode refid="3666" relation="include">
        </childnode>
        <childnode refid="3667" relation="include">
        </childnode>
        <childnode refid="3690" relation="include">
        </childnode>
        <childnode refid="3680" relation="include">
        </childnode>
        <childnode refid="3682" relation="include">
        </childnode>
      </node>
      <node id="3629">
        <label>boost/ref.hpp</label>
      </node>
      <node id="3607">
        <label>boost/mpl/or.hpp</label>
      </node>
      <node id="3590">
        <label>boost/assign/v2/chain/traits/result.hpp</label>
        <link refid="chain_2traits_2result_8hpp_source"/>
        <childnode refid="3559" relation="include">
        </childnode>
        <childnode refid="3558" relation="include">
        </childnode>
        <childnode refid="3591" relation="include">
        </childnode>
        <childnode refid="3597" relation="include">
        </childnode>
        <childnode refid="3618" relation="include">
        </childnode>
      </node>
      <node id="3641">
        <label>boost/preprocessor/repeat_from_to.hpp</label>
      </node>
      <node id="3646">
        <label>boost/assign/v2/detail/functor/crtp_unary_and_up.hpp</label>
        <link refid="crtp__unary__and__up_8hpp_source"/>
        <childnode refid="3638" relation="include">
        </childnode>
        <childnode refid="3647" relation="include">
        </childnode>
        <childnode refid="3640" relation="include">
        </childnode>
        <childnode refid="3639" relation="include">
        </childnode>
        <childnode refid="3648" relation="include">
        </childnode>
        <childnode refid="3649" relation="include">
        </childnode>
        <childnode refid="3650" relation="include">
        </childnode>
        <childnode refid="3577" relation="include">
        </childnode>
        <childnode refid="3651" relation="include">
        </childnode>
        <childnode refid="3542" relation="include">
        </childnode>
        <childnode refid="3643" relation="include">
        </childnode>
        <childnode refid="3652" relation="include">
        </childnode>
        <childnode refid="3653" relation="include">
        </childnode>
        <childnode refid="3655" relation="include">
        </childnode>
        <childnode refid="3659" relation="include">
        </childnode>
        <childnode refid="3661" relation="include">
        </childnode>
      </node>
      <node id="3692">
        <label>boost/assign/v2/put/modifier/xxx.hpp</label>
        <link refid="xxx_8hpp_source"/>
        <childnode refid="3562" relation="include">
        </childnode>
        <childnode refid="3678" relation="include">
        </childnode>
        <childnode refid="3679" relation="include">
        </childnode>
        <childnode refid="3680" relation="include">
        </childnode>
      </node>
      <node id="3544">
        <label>boost/assign/v2/detail/checking/constants.hpp</label>
        <link refid="constants_8hpp_source"/>
        <childnode refid="3545" relation="include">
        </childnode>
        <childnode refid="3546" relation="include">
        </childnode>
        <childnode refid="3547" relation="include">
        </childnode>
        <childnode refid="3548" relation="include">
        </childnode>
        <childnode refid="3549" relation="include">
        </childnode>
      </node>
      <node id="3648">
        <label>boost/preprocessor/repetition/repeat.hpp</label>
      </node>
      <node id="3696">
        <label>boost/assign/v2/put/modifier/repeat.hpp</label>
        <link refid="put_2modifier_2repeat_8hpp_source"/>
        <childnode refid="3697" relation="include">
        </childnode>
        <childnode refid="3542" relation="include">
        </childnode>
        <childnode refid="3678" relation="include">
        </childnode>
        <childnode refid="3679" relation="include">
        </childnode>
        <childnode refid="3698" relation="include">
        </childnode>
        <childnode refid="3680" relation="include">
        </childnode>
        <childnode refid="3625" relation="include">
        </childnode>
      </node>
      <node id="3628">
        <label>boost/assign/v2/ref/wrapper/framework.hpp</label>
        <link refid="framework_8hpp_source"/>
        <childnode refid="3554" relation="include">
        </childnode>
        <childnode refid="3629" relation="include">
        </childnode>
        <childnode refid="3630" relation="include">
        </childnode>
      </node>
      <node id="3667">
        <label>boost/assign/v2/detail/functor/identity.hpp</label>
        <link refid="identity_8hpp_source"/>
        <childnode refid="3668" relation="include">
        </childnode>
        <childnode refid="3669" relation="include">
        </childnode>
        <childnode refid="3670" relation="include">
        </childnode>
        <childnode refid="3671" relation="include">
        </childnode>
        <childnode refid="3559" relation="include">
        </childnode>
        <childnode refid="3612" relation="include">
        </childnode>
        <childnode refid="3646" relation="include">
        </childnode>
      </node>
      <node id="3582">
        <label>boost/assign/v2/detail/checking/lifo.hpp</label>
        <link refid="lifo_8hpp_source"/>
        <childnode refid="3549" relation="include">
        </childnode>
        <childnode refid="3544" relation="include">
        </childnode>
        <childnode refid="3570" relation="include">
        </childnode>
      </node>
      <node id="3666">
        <label>boost/assign/v2/detail/type_traits/value.hpp</label>
        <link refid="value_8hpp_source"/>
        <childnode refid="3555" relation="include">
        </childnode>
        <childnode refid="3558" relation="include">
        </childnode>
      </node>
      <node id="3636">
        <label>boost/assign/v2/put/generic/crtp.hpp</label>
        <link refid="put_2generic_2crtp_8hpp_source"/>
        <childnode refid="3637" relation="include">
        </childnode>
        <childnode refid="3638" relation="include">
        </childnode>
        <childnode refid="3562" relation="include">
        </childnode>
        <childnode refid="3639" relation="include">
        </childnode>
        <childnode refid="3640" relation="include">
        </childnode>
        <childnode refid="3641" relation="include">
        </childnode>
        <childnode refid="3578" relation="include">
        </childnode>
        <childnode refid="3577" relation="include">
        </childnode>
        <childnode refid="3559" relation="include">
        </childnode>
        <childnode refid="3555" relation="include">
        </childnode>
        <childnode refid="3596" relation="include">
        </childnode>
        <childnode refid="3642" relation="include">
        </childnode>
        <childnode refid="3643" relation="include">
        </childnode>
        <childnode refid="3557" relation="include">
        </childnode>
        <childnode refid="3645" relation="include">
        </childnode>
        <childnode refid="3673" relation="include">
        </childnode>
        <childnode refid="3653" relation="include">
        </childnode>
        <childnode refid="3676" relation="include">
        </childnode>
        <childnode refid="3682" relation="include">
        </childnode>
        <childnode refid="3699" relation="include">
        </childnode>
        <childnode refid="3700" relation="include">
        </childnode>
        <childnode refid="3698" relation="include">
        </childnode>
      </node>
      <node id="3586">
        <label>boost/assign/v2/detail/checking/range.hpp</label>
        <link refid="detail_2checking_2range_8hpp_source"/>
        <childnode refid="3545" relation="include">
        </childnode>
        <childnode refid="3584" relation="include">
        </childnode>
        <childnode refid="3587" relation="include">
        </childnode>
        <childnode refid="3575" relation="include">
        </childnode>
        <childnode refid="3572" relation="include">
        </childnode>
        <childnode refid="3549" relation="include">
        </childnode>
        <childnode refid="3588" relation="include">
        </childnode>
      </node>
      <node id="3562">
        <label>boost/preprocessor/cat.hpp</label>
      </node>
      <node id="3650">
        <label>boost/preprocessor/seq/first_n.hpp</label>
      </node>
      <node id="3660">
        <label>boost/preprocessor/seq/enum.hpp</label>
      </node>
      <node id="3598">
        <label>boost/concept/assert.hpp</label>
      </node>
      <node id="3570">
        <label>boost/assign/v2/detail/type_traits/container/is_lifo.hpp</label>
        <link refid="is__lifo_8hpp_source"/>
        <childnode refid="3554" relation="include">
        </childnode>
        <childnode refid="3555" relation="include">
        </childnode>
        <childnode refid="3556" relation="include">
        </childnode>
        <childnode refid="3557" relation="include">
        </childnode>
        <childnode refid="3567" relation="include">
        </childnode>
      </node>
      <node id="3713">
        <label>boost/assign/v2/chain/aux_/logical_and.hpp</label>
        <link refid="logical__and_8hpp_source"/>
        <childnode refid="3711" relation="include">
        </childnode>
        <childnode refid="3590" relation="include">
        </childnode>
      </node>
      <node id="3644">
        <label>boost/mpl/limits/arity.hpp</label>
      </node>
      <node id="3619">
        <label>boost/assign/v2/put/range/convert.hpp</label>
        <link refid="convert_8hpp_source"/>
        <childnode refid="3620" relation="include">
        </childnode>
      </node>
      <node id="3635">
        <label>boost/operators.hpp</label>
      </node>
      <node id="3597">
        <label>boost/assign/v2/chain/traits/range.hpp</label>
        <link refid="chain_2traits_2range_8hpp_source"/>
        <childnode refid="3598" relation="include">
        </childnode>
        <childnode refid="3599" relation="include">
        </childnode>
        <childnode refid="3600" relation="include">
        </childnode>
        <childnode refid="3601" relation="include">
        </childnode>
      </node>
      <node id="3592">
        <label>boost/config.hpp</label>
      </node>
      <node id="3575">
        <label>boost/assign/v2/detail/type_traits/container/is_range.hpp</label>
        <link refid="is__range_8hpp_source"/>
        <childnode refid="3554" relation="include">
        </childnode>
      </node>
      <node id="3547">
        <label>boost/array.hpp</label>
      </node>
      <node id="3657">
        <label>boost/preprocessor/seq/for_each_i.hpp</label>
      </node>
      <node id="3593">
        <label>boost/mpl/and.hpp</label>
      </node>
      <node id="3697">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="3677">
        <label>boost/assign/v2/put/modifier/at_next.hpp</label>
        <link refid="at__next_8hpp_source"/>
        <childnode refid="3678" relation="include">
        </childnode>
        <childnode refid="3679" relation="include">
        </childnode>
        <childnode refid="3680" relation="include">
        </childnode>
        <childnode refid="3666" relation="include">
        </childnode>
      </node>
      <node id="3615">
        <label>boost/assign/v2/ref/detail/convert_traits/distinct_values.hpp</label>
        <link refid="ref_2detail_2convert__traits_2distinct__values_8hpp_source"/>
        <childnode refid="3616" relation="include">
        </childnode>
        <childnode refid="3559" relation="include">
        </childnode>
        <childnode refid="3558" relation="include">
        </childnode>
        <childnode refid="3593" relation="include">
        </childnode>
        <childnode refid="3609" relation="include">
        </childnode>
        <childnode refid="3617" relation="include">
        </childnode>
        <childnode refid="3613" relation="include">
        </childnode>
      </node>
      <node id="3708">
        <label>boost/assign/v2/put/range/modifier/deduce.hpp</label>
        <link refid="put_2range_2modifier_2deduce_8hpp_source"/>
        <childnode refid="3574" relation="include">
        </childnode>
        <childnode refid="3685" relation="include">
        </childnode>
        <childnode refid="3576" relation="include">
        </childnode>
      </node>
      <node id="3654">
        <label>boost/preprocessor/logical/and.hpp</label>
      </node>
      <node id="3691">
        <label>boost/assign/v2/put/modifier/insert.hpp</label>
        <link refid="insert_8hpp_source"/>
        <childnode refid="3692" relation="include">
        </childnode>
      </node>
      <node id="3623">
        <label>boost/range/algorithm/for_each.hpp</label>
      </node>
      <node id="3705">
        <label>boost/range/size.hpp</label>
      </node>
      <node id="3680">
        <label>boost/assign/v2/put/generic/new_modifier.hpp</label>
        <link refid="new__modifier_8hpp_source"/>
        <childnode refid="3577" relation="include">
        </childnode>
        <childnode refid="3681" relation="include">
        </childnode>
        <childnode refid="3542" relation="include">
        </childnode>
        <childnode refid="3543" relation="include">
        </childnode>
        <childnode refid="3682" relation="include">
        </childnode>
      </node>
      <node id="3603">
        <label>boost/range/detail/chain_iterator.hpp</label>
      </node>
      <node id="3553">
        <label>boost/assign/v2/detail/type_traits/container/is_fifo.hpp</label>
        <link refid="is__fifo_8hpp_source"/>
        <childnode refid="3554" relation="include">
        </childnode>
        <childnode refid="3555" relation="include">
        </childnode>
        <childnode refid="3556" relation="include">
        </childnode>
        <childnode refid="3557" relation="include">
        </childnode>
        <childnode refid="3567" relation="include">
        </childnode>
      </node>
      <node id="3602">
        <label>boost/iterator/iterator_traits.hpp</label>
      </node>
      <node id="3664">
        <label>boost/assign/v2/detail/type_traits/container/value.hpp</label>
        <link refid="container_2value_8hpp_source"/>
        <childnode refid="3559" relation="include">
        </childnode>
        <childnode refid="3558" relation="include">
        </childnode>
        <childnode refid="3665" relation="include">
        </childnode>
        <childnode refid="3666" relation="include">
        </childnode>
        <childnode refid="3567" relation="include">
        </childnode>
      </node>
      <node id="3626">
        <label>algorithm</label>
      </node>
      <node id="3665">
        <label>boost/type_traits/remove_pointer.hpp</label>
      </node>
      <node id="3557">
        <label>boost/assign/v2/detail/type_traits/container/is_ptr_container.hpp</label>
        <link refid="is__ptr__container_8hpp_source"/>
        <childnode refid="3558" relation="include">
        </childnode>
        <childnode refid="3559" relation="include">
        </childnode>
        <childnode refid="3560" relation="include">
        </childnode>
      </node>
      <node id="3663">
        <label>boost/assign/v2/detail/functor/constructor.hpp</label>
        <link refid="constructor_8hpp_source"/>
        <childnode refid="3647" relation="include">
        </childnode>
        <childnode refid="3639" relation="include">
        </childnode>
        <childnode refid="3640" relation="include">
        </childnode>
        <childnode refid="3596" relation="include">
        </childnode>
        <childnode refid="3555" relation="include">
        </childnode>
        <childnode refid="3578" relation="include">
        </childnode>
        <childnode refid="3664" relation="include">
        </childnode>
        <childnode refid="3643" relation="include">
        </childnode>
        <childnode refid="3646" relation="include">
        </childnode>
      </node>
      <node id="3576">
        <label>boost/assign/v2/detail/mpl/switch.hpp</label>
        <link refid="switch_8hpp_source"/>
        <childnode refid="3554" relation="include">
        </childnode>
        <childnode refid="3559" relation="include">
        </childnode>
        <childnode refid="3558" relation="include">
        </childnode>
        <childnode refid="3577" relation="include">
        </childnode>
        <childnode refid="3578" relation="include">
        </childnode>
        <childnode refid="3579" relation="include">
        </childnode>
      </node>
      <node id="3612">
        <label>boost/type_traits/add_reference.hpp</label>
      </node>
      <node id="3554">
        <label>boost/mpl/bool.hpp</label>
      </node>
      <node id="3591">
        <label>boost/assign/v2/chain/traits/use_lvalue.hpp</label>
        <link refid="use__lvalue_8hpp_source"/>
        <childnode refid="3592" relation="include">
        </childnode>
        <childnode refid="3593" relation="include">
        </childnode>
        <childnode refid="3559" relation="include">
        </childnode>
        <childnode refid="3554" relation="include">
        </childnode>
        <childnode refid="3558" relation="include">
        </childnode>
        <childnode refid="3563" relation="include">
        </childnode>
        <childnode refid="3594" relation="include">
        </childnode>
        <childnode refid="3543" relation="include">
        </childnode>
        <childnode refid="3595" relation="include">
        </childnode>
        <childnode refid="3596" relation="include">
        </childnode>
      </node>
      <node id="3659">
        <label>boost/assign/v2/detail/pp/params.hpp</label>
        <link refid="params_8hpp_source"/>
        <childnode refid="3658" relation="include">
        </childnode>
        <childnode refid="3660" relation="include">
        </childnode>
      </node>
      <node id="3698">
        <label>boost/assign/v2/put/generic/base.hpp</label>
        <link refid="put_2generic_2base_8hpp_source"/>
      </node>
      <node id="3656">
        <label>boost/preprocessor/comma_if.hpp</label>
      </node>
      <node id="3634">
        <label>boost/assign/v2/ref/wrapper/crtp.hpp</label>
        <link refid="ref_2wrapper_2crtp_8hpp_source"/>
        <childnode refid="3542" relation="include">
        </childnode>
        <childnode refid="3543" relation="include">
        </childnode>
        <childnode refid="3610" relation="include">
        </childnode>
        <childnode refid="3614" relation="include">
        </childnode>
        <childnode refid="3627" relation="include">
        </childnode>
        <childnode refid="3635" relation="include">
        </childnode>
      </node>
      <node id="3561">
        <label>memory</label>
      </node>
      <node id="3653">
        <label>boost/assign/v2/detail/config/enable_cpp0x.hpp</label>
        <link refid="enable__cpp0x_8hpp_source"/>
        <childnode refid="3654" relation="include">
        </childnode>
      </node>
      <node id="3676">
        <label>boost/assign/v2/put/modifier/modifier.hpp</label>
        <link refid="modifier_2modifier_8hpp_source"/>
        <childnode refid="3677" relation="include">
        </childnode>
        <childnode refid="3684" relation="include">
        </childnode>
        <childnode refid="3689" relation="include">
        </childnode>
        <childnode refid="3691" relation="include">
        </childnode>
        <childnode refid="3693" relation="include">
        </childnode>
        <childnode refid="3694" relation="include">
        </childnode>
        <childnode refid="3695" relation="include">
        </childnode>
        <childnode refid="3696" relation="include">
        </childnode>
      </node>
      <node id="3543">
        <label>boost/type_traits/is_same.hpp</label>
      </node>
      <node id="3574">
        <label>boost/assign/v2/detail/type_traits/container/has_static_size.hpp</label>
        <link refid="has__static__size_8hpp_source"/>
        <childnode refid="3564" relation="include">
        </childnode>
        <childnode refid="3554" relation="include">
        </childnode>
      </node>
      <node id="3668">
        <label>boost/mpl/equal_to.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceboost">boost</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign">boost::assign</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2">boost::assign::v2</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2_1_1checking">boost::assign::v2::checking</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2_1_1checking_1_1chain">boost::assign::v2::checking::chain</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2_1_1checking_1_1chain_1_1distinct__values">boost::assign::v2::checking::chain::distinct_values</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="chain_2checking_2distinct__values_8hpp_1a455ca22fffb3ff9a06888154d10c986e" prot="public" static="no">
        <name>m</name>
        <param><defname>T1</defname></param>
        <param><defname>T2</defname></param>
        <initializer>template&lt;typename T&gt;													   \
    void do_check(typename boost::enable_if&lt;boost::is_same&lt;T,T1&gt; &gt;::type* = 0) \
    {																		   \
        typedef T1 t1_;														   \
        typedef T2 t2_;														   \
        typedef std::vector&lt;T1&gt; vec1_;                                         \
        typedef std::vector&lt;T2&gt; vec2_;                                         \
        vec1_ vec1, vec3;                                                      \
        vec2_ vec2;                                                            \
        {																       \
            namespace ns = v2::checking::constants;			                   \
            vec1.push_back( ns::a ); 									       \
            vec1.push_back( ns::b );									       \
            vec2.push_back( ns::c ); 									       \
            vec2.push_back( ns::d );									       \
            vec2.push_back( ns::e );									       \
            vec3.push_back( ns::f ); 									       \
            vec3.push_back( ns::g ); 									       \
            vec3.push_back( ns::h );									       \
        }																       \
        namespace chk = checking::container;                                   \
        {                                                                      \
        	using namespace adaptor;										   \
    		chk::do_check( vec1 | _chain( vec2 ) | _chain( vec3 ) );           \
        }                                                                      \
    }														                   \</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/checking/distinct_values.hpp" line="56" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/checking/distinct_values.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="2"><highlight class="comment">//<sp/><sp/>Boost.Assign<sp/>v2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2003-2004<sp/>Thorsten<sp/>Ottosen<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2010<sp/>Erwann<sp/>Rogard<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Use,<sp/>modification<sp/>and<sp/>distribution<sp/>are<sp/>subject<sp/>to<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.<sp/>(See<sp/>accompanying<sp/>file<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at<sp/>http://www.boost.org/LICENSE_1_0.txt)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight><highlight class="preprocessor">#ifndef<sp/>BOOST_ASSIGN_V2_CHAIN_CHECKING_DISTINCT_VALUES_ER_2010_HPP</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOOST_ASSIGN_V2_CHAIN_CHECKING_DISTINCT_VALUES_ER_2010_HPP</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/utility/enable_if.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/type_traits/is_same.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/v2/detail/checking/constants.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/v2/detail/checking/container.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/v2/chain/chain.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">boost{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">assign{<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">v2{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">checking{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">chain{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">distinct_values{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>value<sp/>types<sp/>of<sp/>the<sp/>two<sp/>ranges<sp/>differ,<sp/>their<sp/>references<sp/>must<sp/>be<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>converted<sp/>to<sp/>value_type.<sp/>In<sp/>particular,<sp/>lvalue<sp/>cannot<sp/>be<sp/>preserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>m(T1,T2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>void<sp/>do_check(typename<sp/>boost::enable_if&lt;boost::is_same&lt;T,T1&gt;<sp/>&gt;::type*<sp/>=<sp/>0)<sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>T1<sp/>t1_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>T2<sp/>t2_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>std::vector&lt;T1&gt;<sp/>vec1_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>std::vector&lt;T2&gt;<sp/>vec2_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec1_<sp/>vec1,<sp/>vec3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec2_<sp/>vec2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespace<sp/>ns<sp/>=<sp/>v2::checking::constants;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec1.push_back(<sp/>ns::a<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec1.push_back(<sp/>ns::b<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec2.push_back(<sp/>ns::c<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec2.push_back(<sp/>ns::d<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec2.push_back(<sp/>ns::e<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec3.push_back(<sp/>ns::f<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec3.push_back(<sp/>ns::g<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec3.push_back(<sp/>ns::h<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespace<sp/>chk<sp/>=<sp/>checking::container;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>using<sp/>namespace<sp/>adaptor;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chk::do_check(<sp/>vec1<sp/>|<sp/>_chain(<sp/>vec2<sp/>)<sp/>|<sp/>_chain(<sp/>vec3<sp/>)<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">m(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">m(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">m(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">m(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>m</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>distinct_values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>chain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>v2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>assign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>boost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/checking/distinct_values.hpp"/>
  </compounddef>
</doxygen>
