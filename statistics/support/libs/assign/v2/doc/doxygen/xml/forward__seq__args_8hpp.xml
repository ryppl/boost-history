<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="forward__seq__args_8hpp" kind="file">
    <compoundname>forward_seq_args.hpp</compoundname>
    <includes local="no">boost/mpl/int.hpp</includes>
    <includes local="no">boost/mpl/size.hpp</includes>
    <includes refid="forward__args_8hpp" local="no">boost/assign/v2/put/compose/functor/forward_args.hpp</includes>
    <includedby refid="put_2compose_2functor_2functor_8hpp" local="no">/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/functor.hpp</includedby>
    <includedby refid="put_2compose_2functor_2sub_8hpp" local="no">/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/sub.hpp</includedby>
    <incdepgraph>
      <node id="10351">
        <label>boost/mpl/unpack_args.hpp</label>
      </node>
      <node id="10330">
        <label>boost/mpl/size.hpp</label>
      </node>
      <node id="10380">
        <label>boost/type_traits/remove_cv.hpp</label>
      </node>
      <node id="10385">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="10353">
        <label>boost/mpl/vector.hpp</label>
      </node>
      <node id="10340">
        <label>boost/assign/v2/detail/config/limit_arity.hpp</label>
        <link refid="limit__arity_8hpp_source"/>
        <childnode refid="10332" relation="include">
        </childnode>
        <childnode refid="10341" relation="include">
        </childnode>
      </node>
      <node id="10350">
        <label>boost/mpl/apply.hpp</label>
      </node>
      <node id="10381">
        <label>boost/assign/v2/ref/wrapper/base.hpp</label>
        <link refid="ref_2wrapper_2base_8hpp_source"/>
        <childnode refid="10382" relation="include">
        </childnode>
        <childnode refid="10383" relation="include">
        </childnode>
      </node>
      <node id="10349">
        <label>boost/preprocessor/repetition/repeat_from_to.hpp</label>
      </node>
      <node id="10390">
        <label>boost/assign/v2/ref/fusion_matrix/fwd.hpp</label>
        <link refid="ref_2fusion__matrix_2fwd_8hpp_source"/>
        <childnode refid="10343" relation="include">
        </childnode>
        <childnode refid="10336" relation="include">
        </childnode>
        <childnode refid="10339" relation="include">
        </childnode>
        <childnode refid="10340" relation="include">
        </childnode>
      </node>
      <node id="10368">
        <label>boost/preprocessor/tuple/to_seq.hpp</label>
      </node>
      <node id="10348">
        <label>boost/preprocessor/repetition/enum_trailing.hpp</label>
      </node>
      <node id="10383">
        <label>boost/type_traits/is_const.hpp</label>
      </node>
      <node id="10361">
        <label>boost/assign/v2/detail/pp/args.hpp</label>
        <link refid="args_8hpp_source"/>
        <childnode refid="10344" relation="include">
        </childnode>
        <childnode refid="10362" relation="include">
        </childnode>
        <childnode refid="10335" relation="include">
        </childnode>
        <childnode refid="10363" relation="include">
        </childnode>
        <childnode refid="10364" relation="include">
        </childnode>
      </node>
      <node id="10386">
        <label>boost/type_traits/add_const.hpp</label>
      </node>
      <node id="10372">
        <label>boost/assign/v2/ref/wrapper/wrapper.hpp</label>
        <link refid="ref_2wrapper_2wrapper_8hpp_source"/>
        <childnode refid="10373" relation="include">
        </childnode>
        <childnode refid="10377" relation="include">
        </childnode>
        <childnode refid="10388" relation="include">
        </childnode>
      </node>
      <node id="10345">
        <label>boost/preprocessor/punctuation/comma.hpp</label>
      </node>
      <node id="10332">
        <label>boost/preprocessor/arithmetic/inc.hpp</label>
      </node>
      <node id="10336">
        <label>boost/preprocessor/repetition/enum_params_with_a_default.hpp</label>
      </node>
      <node id="10374">
        <label>boost/mpl/eval_if.hpp</label>
      </node>
      <node id="10377">
        <label>boost/assign/v2/ref/wrapper/copy.hpp</label>
        <link refid="ref_2wrapper_2copy_8hpp_source"/>
        <childnode refid="10378" relation="include">
        </childnode>
        <childnode refid="10370" relation="include">
        </childnode>
        <childnode refid="10379" relation="include">
        </childnode>
        <childnode refid="10380" relation="include">
        </childnode>
        <childnode refid="10369" relation="include">
        </childnode>
        <childnode refid="10381" relation="include">
        </childnode>
        <childnode refid="10384" relation="include">
        </childnode>
      </node>
      <node id="10373">
        <label>boost/assign/v2/ref/wrapper/deduce_assign_tag.hpp</label>
        <link refid="deduce__assign__tag_8hpp_source"/>
        <childnode refid="10374" relation="include">
        </childnode>
        <childnode refid="10375" relation="include">
        </childnode>
        <childnode refid="10376" relation="include">
        </childnode>
      </node>
      <node id="10367">
        <label>boost/assign/v2/detail/pp/seq.hpp</label>
        <link refid="seq_8hpp_source"/>
        <childnode refid="10368" relation="include">
        </childnode>
      </node>
      <node id="10364">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="10343">
        <label>boost/preprocessor/arithmetic/dec.hpp</label>
      </node>
      <node id="10354">
        <label>boost/utility/enable_if.hpp</label>
      </node>
      <node id="10339">
        <label>boost/mpl/aux_/na.hpp</label>
      </node>
      <node id="10342">
        <label>boost/assign/v2/ref/fusion_matrix/container.hpp</label>
        <link refid="ref_2fusion__matrix_2container_8hpp_source"/>
        <childnode refid="10343" relation="include">
        </childnode>
        <childnode refid="10344" relation="include">
        </childnode>
        <childnode refid="10345" relation="include">
        </childnode>
        <childnode refid="10334" relation="include">
        </childnode>
        <childnode refid="10346" relation="include">
        </childnode>
        <childnode refid="10347" relation="include">
        </childnode>
        <childnode refid="10335" relation="include">
        </childnode>
        <childnode refid="10336" relation="include">
        </childnode>
        <childnode refid="10348" relation="include">
        </childnode>
        <childnode refid="10337" relation="include">
        </childnode>
        <childnode refid="10338" relation="include">
        </childnode>
        <childnode refid="10349" relation="include">
        </childnode>
        <childnode refid="10350" relation="include">
        </childnode>
        <childnode refid="10351" relation="include">
        </childnode>
        <childnode refid="10339" relation="include">
        </childnode>
        <childnode refid="10329" relation="include">
        </childnode>
        <childnode refid="10352" relation="include">
        </childnode>
        <childnode refid="10330" relation="include">
        </childnode>
        <childnode refid="10353" relation="include">
        </childnode>
        <childnode refid="10354" relation="include">
        </childnode>
        <childnode refid="10340" relation="include">
        </childnode>
        <childnode refid="10355" relation="include">
        </childnode>
        <childnode refid="10369" relation="include">
        </childnode>
        <childnode refid="10389" relation="include">
        </childnode>
        <childnode refid="10390" relation="include">
        </childnode>
      </node>
      <node id="10389">
        <label>boost/assign/v2/ref/fusion/link_holder.hpp</label>
        <link refid="link__holder_8hpp_source"/>
        <childnode refid="10329" relation="include">
        </childnode>
        <childnode refid="10369" relation="include">
        </childnode>
        <childnode refid="10377" relation="include">
        </childnode>
      </node>
      <node id="10358">
        <label>boost/assign/v2/detail/config/limit_lvalue_const_arity.hpp</label>
        <link refid="limit__lvalue__const__arity_8hpp_source"/>
        <childnode refid="10332" relation="include">
        </childnode>
        <childnode refid="10341" relation="include">
        </childnode>
        <childnode refid="10340" relation="include">
        </childnode>
      </node>
      <node id="10335">
        <label>boost/preprocessor/repetition/enum_params.hpp</label>
      </node>
      <node id="10331">
        <label>boost/assign/v2/put/compose/functor/forward_args.hpp</label>
        <link refid="forward__args_8hpp_source"/>
        <childnode refid="10332" relation="include">
        </childnode>
        <childnode refid="10333" relation="include">
        </childnode>
        <childnode refid="10334" relation="include">
        </childnode>
        <childnode refid="10335" relation="include">
        </childnode>
        <childnode refid="10336" relation="include">
        </childnode>
        <childnode refid="10337" relation="include">
        </childnode>
        <childnode refid="10338" relation="include">
        </childnode>
        <childnode refid="10339" relation="include">
        </childnode>
        <childnode refid="10329" relation="include">
        </childnode>
        <childnode refid="10340" relation="include">
        </childnode>
        <childnode refid="10342" relation="include">
        </childnode>
        <childnode refid="10369" relation="include">
        </childnode>
        <childnode refid="10377" relation="include">
        </childnode>
      </node>
      <node id="10329">
        <label>boost/mpl/int.hpp</label>
      </node>
      <node id="10352">
        <label>boost/mpl/minus.hpp</label>
      </node>
      <node id="10346">
        <label>boost/preprocessor/repetition/enum_binary_params.hpp</label>
      </node>
      <node id="10375">
        <label>boost/mpl/identity.hpp</label>
      </node>
      <node id="10388">
        <label>boost/assign/v2/ref/wrapper/rebind.hpp</label>
        <link refid="rebind_8hpp_source"/>
        <childnode refid="10378" relation="include">
        </childnode>
        <childnode refid="10369" relation="include">
        </childnode>
        <childnode refid="10381" relation="include">
        </childnode>
        <childnode refid="10384" relation="include">
        </childnode>
      </node>
      <node id="10379">
        <label>boost/call_traits.hpp</label>
      </node>
      <node id="10334">
        <label>boost/preprocessor/punctuation/comma_if.hpp</label>
      </node>
      <node id="10356">
        <label>boost/preprocessor/seq/for_each_product.hpp</label>
      </node>
      <node id="10371">
        <label>boost/ref.hpp</label>
      </node>
      <node id="10355">
        <label>boost/assign/v2/detail/functor/crtp_unary_and_up.hpp</label>
        <link refid="crtp__unary__and__up_8hpp_source"/>
        <childnode refid="10332" relation="include">
        </childnode>
        <childnode refid="10349" relation="include">
        </childnode>
        <childnode refid="10346" relation="include">
        </childnode>
        <childnode refid="10335" relation="include">
        </childnode>
        <childnode refid="10338" relation="include">
        </childnode>
        <childnode refid="10356" relation="include">
        </childnode>
        <childnode refid="10357" relation="include">
        </childnode>
        <childnode refid="10350" relation="include">
        </childnode>
        <childnode refid="10353" relation="include">
        </childnode>
        <childnode refid="10354" relation="include">
        </childnode>
        <childnode refid="10340" relation="include">
        </childnode>
        <childnode refid="10358" relation="include">
        </childnode>
        <childnode refid="10359" relation="include">
        </childnode>
        <childnode refid="10361" relation="include">
        </childnode>
        <childnode refid="10365" relation="include">
        </childnode>
        <childnode refid="10367" relation="include">
        </childnode>
      </node>
      <node id="10328">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/forward_seq_args.hpp</label>
        <link refid="forward_seq_args.hpp"/>
        <childnode refid="10329" relation="include">
        </childnode>
        <childnode refid="10330" relation="include">
        </childnode>
        <childnode refid="10331" relation="include">
        </childnode>
      </node>
      <node id="10338">
        <label>boost/preprocessor/repetition/repeat.hpp</label>
      </node>
      <node id="10369">
        <label>boost/assign/v2/ref/wrapper/framework.hpp</label>
        <link refid="framework_8hpp_source"/>
        <childnode refid="10370" relation="include">
        </childnode>
        <childnode refid="10371" relation="include">
        </childnode>
        <childnode refid="10372" relation="include">
        </childnode>
      </node>
      <node id="10344">
        <label>boost/preprocessor/cat.hpp</label>
      </node>
      <node id="10357">
        <label>boost/preprocessor/seq/first_n.hpp</label>
      </node>
      <node id="10366">
        <label>boost/preprocessor/seq/enum.hpp</label>
      </node>
      <node id="10333">
        <label>boost/preprocessor/control/expr_if.hpp</label>
      </node>
      <node id="10341">
        <label>boost/mpl/limits/arity.hpp</label>
      </node>
      <node id="10387">
        <label>boost/operators.hpp</label>
      </node>
      <node id="10382">
        <label>boost/config.hpp</label>
      </node>
      <node id="10347">
        <label>boost/preprocessor/repetition/enum.hpp</label>
      </node>
      <node id="10363">
        <label>boost/preprocessor/seq/for_each_i.hpp</label>
      </node>
      <node id="10360">
        <label>boost/preprocessor/logical/and.hpp</label>
      </node>
      <node id="10337">
        <label>boost/preprocessor/repetition/enum_trailing_params.hpp</label>
      </node>
      <node id="10378">
        <label>algorithm</label>
      </node>
      <node id="10370">
        <label>boost/mpl/bool.hpp</label>
      </node>
      <node id="10365">
        <label>boost/assign/v2/detail/pp/params.hpp</label>
        <link refid="params_8hpp_source"/>
        <childnode refid="10364" relation="include">
        </childnode>
        <childnode refid="10366" relation="include">
        </childnode>
      </node>
      <node id="10362">
        <label>boost/preprocessor/comma_if.hpp</label>
      </node>
      <node id="10384">
        <label>boost/assign/v2/ref/wrapper/crtp.hpp</label>
        <link refid="ref_2wrapper_2crtp_8hpp_source"/>
        <childnode refid="10354" relation="include">
        </childnode>
        <childnode refid="10376" relation="include">
        </childnode>
        <childnode refid="10385" relation="include">
        </childnode>
        <childnode refid="10386" relation="include">
        </childnode>
        <childnode refid="10379" relation="include">
        </childnode>
        <childnode refid="10387" relation="include">
        </childnode>
      </node>
      <node id="10359">
        <label>boost/assign/v2/detail/config/enable_cpp0x.hpp</label>
        <link refid="enable__cpp0x_8hpp_source"/>
        <childnode refid="10360" relation="include">
        </childnode>
      </node>
      <node id="10376">
        <label>boost/type_traits/is_same.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="10400">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/sub.hpp</label>
        <link refid="put_2compose_2functor_2sub_8hpp_source"/>
        <childnode refid="10392" relation="include">
        </childnode>
      </node>
      <node id="10394">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/put.hpp</label>
        <link refid="put_8hpp_source"/>
        <childnode refid="10395" relation="include">
        </childnode>
        <childnode refid="10397" relation="include">
        </childnode>
      </node>
      <node id="10392">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/functor.hpp</label>
        <link refid="put_2compose_2functor_2functor_8hpp_source"/>
        <childnode refid="10393" relation="include">
        </childnode>
      </node>
      <node id="10399">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/anon/make.hpp</label>
        <link refid="anon_2make_8hpp_source"/>
        <childnode refid="10396" relation="include">
        </childnode>
        <childnode refid="10398" relation="include">
        </childnode>
      </node>
      <node id="10395">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/anon/cont.hpp</label>
        <link refid="anon_2cont_8hpp_source"/>
        <childnode refid="10396" relation="include">
        </childnode>
        <childnode refid="10398" relation="include">
        </childnode>
        <childnode refid="10399" relation="include">
        </childnode>
      </node>
      <node id="10397">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/v2.hpp</label>
        <link refid="v2_8hpp_source"/>
      </node>
      <node id="10398">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/anon/csv.hpp</label>
        <link refid="anon_2csv_8hpp_source"/>
        <childnode refid="10396" relation="include">
        </childnode>
      </node>
      <node id="10393">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/compose.hpp</label>
        <link refid="compose_8hpp_source"/>
        <childnode refid="10394" relation="include">
        </childnode>
      </node>
      <node id="10391">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/forward_seq_args.hpp</label>
        <link refid="forward_seq_args.hpp"/>
        <childnode refid="10392" relation="include">
        </childnode>
        <childnode refid="10400" relation="include">
        </childnode>
      </node>
      <node id="10396">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/anon/anon.hpp</label>
        <link refid="anon_2anon_8hpp_source"/>
        <childnode refid="10397" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1put__compose__aux_1_1forward__seq__args__caller" prot="public">boost::assign::v2::put_compose_aux::forward_seq_args_caller</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1put__compose__aux_1_1forward__seq__args__caller_3_01_i_00_01_n_00_01true_01_4" prot="public">boost::assign::v2::put_compose_aux::forward_seq_args_caller&lt; I, N, true &gt;</innerclass>
    <innernamespace refid="namespaceboost">boost</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign">boost::assign</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2">boost::assign::v2</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2_1_1put__compose__aux">boost::assign::v2::put_compose_aux</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="2"><highlight class="comment">//<sp/><sp/>Boost.Assign<sp/>v2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2003-2004<sp/>Thorsten<sp/>Ottosen<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2010<sp/>Erwann<sp/>Rogard<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Use,<sp/>modification<sp/>and<sp/>distribution<sp/>are<sp/>subject<sp/>to<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.<sp/>(See<sp/>accompanying<sp/>file<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at<sp/>http://www.boost.org/LICENSE_1_0.txt)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight><highlight class="preprocessor">#ifndef<sp/>BOOST_ASSIGN_V2_PUT_COMPOSE_FORWARD_SEQ_ARGS_ER_2010_HPP</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOOST_ASSIGN_V2_PUT_COMPOSE_FORWARD_SEQ_ARGS_ER_2010_HPP</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/int.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/size.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/v2/put/compose/functor/forward_args.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">boost{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">assign{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">v2{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">put_compose_aux{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>I,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exit<sp/>=<sp/>(I<sp/>==<sp/>N)&gt;</highlight></codeline>
<codeline lineno="22" refid="structboost_1_1assign_1_1v2_1_1put__compose__aux_1_1forward__seq__args__caller" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1put__compose__aux_1_1forward__seq__args__caller" kindref="compound">forward_seq_args_caller</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>H&gt;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>call(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>H<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::mpl::int_&lt;I&gt;<sp/>index_;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_args(</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>put_compose_aux::make_args(<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h.sequence_args().static_row(<sp/>index_()<sp/>)<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1assign_1_1v2_1_1put__compose__aux_1_1forward__seq__args__caller" kindref="compound">forward_seq_args_caller&lt;I+1, N&gt;</ref><sp/>next_;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_::call(<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>h<sp/>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>I,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="42" refid="structboost_1_1assign_1_1v2_1_1put__compose__aux_1_1forward__seq__args__caller_3_01_i_00_01_n_00_01true_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1put__compose__aux_1_1forward__seq__args__caller" kindref="compound">forward_seq_args_caller</ref>&lt;I,<sp/>N,<sp/>true&gt;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>H&gt;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>call(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>H<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h){}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>H&gt;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>forward_seq_args(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>H<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1assign_1_1v2_1_1put__compose__aux_1_1forward__seq__args__caller" kindref="compound">put_compose_aux::forward_seq_args_caller</ref>&lt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H::static_sequence_args_size</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>caller_;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caller_::call(<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>h<sp/>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>put_compose_aux</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>v2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>assign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>boost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/forward_seq_args.hpp"/>
  </compounddef>
</doxygen>
