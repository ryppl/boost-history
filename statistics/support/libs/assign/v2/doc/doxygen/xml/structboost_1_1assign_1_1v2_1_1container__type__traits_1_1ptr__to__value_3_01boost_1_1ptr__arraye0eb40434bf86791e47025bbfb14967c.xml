<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value_3_01boost_1_1ptr__arraye0eb40434bf86791e47025bbfb14967c" kind="struct" prot="public">
    <compoundname>boost::assign::v2::container_type_traits::ptr_to_value&lt; boost::ptr_array&lt; T, N, A &gt; &gt;</compoundname>
    <basecompoundref refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1static__array__like" prot="public" virt="non-virtual">boost::assign::v2::container_type_traits::ptr_to_value_aux::static_array_like&lt; boost::ptr_array&lt; T, N, A &gt;, boost::array &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>std::size_t</type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
      <param>
        <type>typename A</type>
      </param>
    </templateparamlist>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="674">
        <label>boost::assign::v2::container_type_traits::ptr_to_value_aux::static_array_like&lt; boost::ptr_array&lt; T, N, A &gt;, boost::array &gt;</label>
        <link refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1static__array__like"/>
      </node>
      <node id="673">
        <label>boost::assign::v2::container_type_traits::ptr_to_value&lt; boost::ptr_array&lt; T, N, A &gt; &gt;</label>
        <link refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value_3_01boost_1_1ptr__arraye0eb40434bf86791e47025bbfb14967c"/>
        <childnode refid="674" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="676">
        <label>boost::assign::v2::container_type_traits::ptr_to_value_aux::static_array_like&lt; boost::ptr_array&lt; T, N, A &gt;, boost::array &gt;</label>
        <link refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1static__array__like"/>
      </node>
      <node id="675">
        <label>boost::assign::v2::container_type_traits::ptr_to_value&lt; boost::ptr_array&lt; T, N, A &gt; &gt;</label>
        <link refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value_3_01boost_1_1ptr__arraye0eb40434bf86791e47025bbfb14967c"/>
        <childnode refid="676" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/container/ptr_to_value.hpp" line="151" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/container/ptr_to_value.hpp" bodystart="146" bodyend="151"/>
    <listofallmembers>
      <member refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1static__array__like_1a6bbc422e89751aff62e794f69da574ae" prot="public" virt="non-virtual"><scope>boost::assign::v2::container_type_traits::ptr_to_value&lt; boost::ptr_array&lt; T, N, A &gt; &gt;</scope><name>container_type</name></member>
      <member refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1static__array__like_1a5c027db4af160e4a6f9415da1f765443" prot="public" virt="non-virtual"><scope>boost::assign::v2::container_type_traits::ptr_to_value&lt; boost::ptr_array&lt; T, N, A &gt; &gt;</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
