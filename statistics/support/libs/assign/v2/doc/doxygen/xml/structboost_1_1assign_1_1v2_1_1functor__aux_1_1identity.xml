<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="structboost_1_1assign_1_1v2_1_1functor__aux_1_1identity" kind="struct" prot="public">
    <compoundname>boost::assign::v2::functor_aux::identity</compoundname>
    <basecompoundref refid="classboost_1_1assign_1_1v2_1_1functor__aux_1_1crtp__unary__and__up" prot="public" virt="non-virtual">boost::assign::v2::functor_aux::crtp_unary_and_up&lt; functor_aux::identity, functor_aux::result_of_identity &gt;</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structboost_1_1assign_1_1v2_1_1functor__aux_1_1identity_1a8bc1de881e4e842eca3789a7a892e0bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::assign::v2::functor_aux::identity::identity</definition>
        <argsstring>()</argsstring>
        <name>identity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/functor/identity.hpp" line="57" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/functor/identity.hpp" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1assign_1_1v2_1_1functor__aux_1_1identity_1aa96402e4344b6d1a767a9a1e79341224" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T&amp; boost::assign::v2::functor_aux::identity::impl</definition>
        <argsstring>(T &amp;t) const </argsstring>
        <name>impl</name>
        <param>
          <type>T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/functor/identity.hpp" line="59" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/functor/identity.hpp" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1assign_1_1v2_1_1functor__aux_1_1identity_1a58d8dcb2e02c5cda38e7fd44d7ab60bb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T const &amp;</type>
        <definition>T const&amp; boost::assign::v2::functor_aux::identity::impl</definition>
        <argsstring>(T const &amp;t) const </argsstring>
        <name>impl</name>
        <param>
          <type>T const &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/functor/identity.hpp" line="60" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/functor/identity.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="415">
        <label>boost::assign::v2::functor_aux::crtp_unary_and_up&lt; functor_aux::identity, functor_aux::result_of_identity &gt;</label>
        <link refid="classboost_1_1assign_1_1v2_1_1functor__aux_1_1crtp__unary__and__up"/>
      </node>
      <node id="414">
        <label>boost::assign::v2::functor_aux::identity</label>
        <link refid="structboost_1_1assign_1_1v2_1_1functor__aux_1_1identity"/>
        <childnode refid="415" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="417">
        <label>boost::assign::v2::functor_aux::crtp_unary_and_up&lt; functor_aux::identity, functor_aux::result_of_identity &gt;</label>
        <link refid="classboost_1_1assign_1_1v2_1_1functor__aux_1_1crtp__unary__and__up"/>
      </node>
      <node id="416">
        <label>boost::assign::v2::functor_aux::identity</label>
        <link refid="structboost_1_1assign_1_1v2_1_1functor__aux_1_1identity"/>
        <childnode refid="417" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/functor/identity.hpp" line="56" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/functor/identity.hpp" bodystart="52" bodyend="62"/>
    <listofallmembers>
      <member refid="classboost_1_1assign_1_1v2_1_1functor__aux_1_1crtp__unary__and__up_1a737c7bc727771b900e07e6fac5659791" prot="public" virt="non-virtual"><scope>boost::assign::v2::functor_aux::identity</scope><name>BOOST_PP_INC</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1functor__aux_1_1crtp__unary__and__up_1aaf120dbd1766ed96fa5bbbde98f196ec" prot="public" virt="non-virtual"><scope>boost::assign::v2::functor_aux::identity</scope><name>BOOST_PP_REPEAT</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1functor__aux_1_1crtp__unary__and__up_1a2a30f86339b81ea9449bb77fee734c10" prot="protected" virt="non-virtual"><scope>boost::assign::v2::functor_aux::identity</scope><name>derived</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1functor__aux_1_1crtp__unary__and__up_1ac36585e7958e9d641cf842aacb080dc6" prot="protected" virt="non-virtual"><scope>boost::assign::v2::functor_aux::identity</scope><name>derived</name></member>
      <member refid="structboost_1_1assign_1_1v2_1_1functor__aux_1_1identity_1a8bc1de881e4e842eca3789a7a892e0bb" prot="public" virt="non-virtual"><scope>boost::assign::v2::functor_aux::identity</scope><name>identity</name></member>
      <member refid="structboost_1_1assign_1_1v2_1_1functor__aux_1_1identity_1aa96402e4344b6d1a767a9a1e79341224" prot="public" virt="non-virtual"><scope>boost::assign::v2::functor_aux::identity</scope><name>impl</name></member>
      <member refid="structboost_1_1assign_1_1v2_1_1functor__aux_1_1identity_1a58d8dcb2e02c5cda38e7fd44d7ab60bb" prot="public" virt="non-virtual"><scope>boost::assign::v2::functor_aux::identity</scope><name>impl</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1functor__aux_1_1crtp__unary__and__up_1a8403470cbea9dabd302b0671b817b92a" prot="public" virt="non-virtual"><scope>boost::assign::v2::functor_aux::identity</scope><name>MACRO</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
