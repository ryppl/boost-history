<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="structboost_1_1assign_1_1v2_1_1ref_1_1unwrap__aux_1_1result__of__unwrap__range" kind="struct" prot="public">
    <compoundname>boost::assign::v2::ref::unwrap_aux::result_of_unwrap_range</compoundname>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>R</declname>
        <defname>R</defname>
      </param>
      <param>
        <type>bool</type>
        <defval><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1unwrap__aux_1_1is__range" kindref="compound">unwrap_aux::is_range</ref>&lt;R&gt;::value</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structboost_1_1assign_1_1v2_1_1ref_1_1unwrap__aux_1_1result__of__unwrap__range_1a1d370d563f6210eca89d780f00a4ee6a" prot="public" static="no">
        <type>boost::range_iterator&lt; R &gt;::type</type>
        <definition>typedef boost::range_iterator&lt;R&gt;::type boost::assign::v2::ref::unwrap_aux::result_of_unwrap_range&lt; R, bool &gt;::base_it_</definition>
        <argsstring></argsstring>
        <name>base_it_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/detail/unwrap/range.hpp" line="47" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/detail/unwrap/range.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structboost_1_1assign_1_1v2_1_1ref_1_1unwrap__aux_1_1result__of__unwrap__range_1a41074229b3a788b3e02bda30ebab493b" prot="public" static="no">
        <type><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1result__of_1_1unwrap__iterator" kindref="compound">result_of::unwrap_iterator</ref>&lt; base_it_ &gt;::type</type>
        <definition>typedef result_of::unwrap_iterator&lt;base_it_&gt;::type boost::assign::v2::ref::unwrap_aux::result_of_unwrap_range&lt; R, bool &gt;::it_</definition>
        <argsstring></argsstring>
        <name>it_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/detail/unwrap/range.hpp" line="48" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/detail/unwrap/range.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structboost_1_1assign_1_1v2_1_1ref_1_1unwrap__aux_1_1result__of__unwrap__range_1ac0b3f8c03d9b3ab1c338f66bb01f23ea" prot="public" static="no">
        <type>boost::iterator_range&lt; <ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1unwrap__aux_1_1iterator" kindref="compound">it_</ref> &gt;</type>
        <definition>typedef boost::iterator_range&lt;it_&gt; boost::assign::v2::ref::unwrap_aux::result_of_unwrap_range&lt; R, bool &gt;::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/detail/unwrap/range.hpp" line="49" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/detail/unwrap/range.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structboost_1_1assign_1_1v2_1_1ref_1_1unwrap__aux_1_1result__of__unwrap__range_1a6a0ebcac1a7c65ccb74c5cf30f2fa994" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>type</type>
        <definition>static type boost::assign::v2::ref::unwrap_aux::result_of_unwrap_range&lt; R, bool &gt;::call</definition>
        <argsstring>(R &amp;r)</argsstring>
        <name>call</name>
        <param>
          <type>R &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/detail/unwrap/range.hpp" line="51" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/detail/unwrap/range.hpp" bodystart="51" bodyend="56"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/detail/unwrap/range.hpp" line="46" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/detail/unwrap/range.hpp" bodystart="45" bodyend="57"/>
    <listofallmembers>
      <member refid="structboost_1_1assign_1_1v2_1_1ref_1_1unwrap__aux_1_1result__of__unwrap__range_1a1d370d563f6210eca89d780f00a4ee6a" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::unwrap_aux::result_of_unwrap_range</scope><name>base_it_</name></member>
      <member refid="structboost_1_1assign_1_1v2_1_1ref_1_1unwrap__aux_1_1result__of__unwrap__range_1a6a0ebcac1a7c65ccb74c5cf30f2fa994" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::unwrap_aux::result_of_unwrap_range</scope><name>call</name></member>
      <member refid="structboost_1_1assign_1_1v2_1_1ref_1_1unwrap__aux_1_1result__of__unwrap__range_1a41074229b3a788b3e02bda30ebab493b" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::unwrap_aux::result_of_unwrap_range</scope><name>it_</name></member>
      <member refid="structboost_1_1assign_1_1v2_1_1ref_1_1unwrap__aux_1_1result__of__unwrap__range_1ac0b3f8c03d9b3ab1c338f66bb01f23ea" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::unwrap_aux::result_of_unwrap_range</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
