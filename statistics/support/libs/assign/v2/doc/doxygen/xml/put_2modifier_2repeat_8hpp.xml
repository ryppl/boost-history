<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="put_2modifier_2repeat_8hpp" kind="file">
    <compoundname>repeat.hpp</compoundname>
    <includes local="no">boost/type_traits/is_base_of.hpp</includes>
    <includes local="no">boost/utility/enable_if.hpp</includes>
    <includes local="no">boost/accumulators/framework/accumulator_base.hpp</includes>
    <includes refid="def_8hpp" local="no">boost/assign/v2/put/modifier/def.hpp</includes>
    <includes refid="put_2generic_2base_8hpp" local="no">boost/assign/v2/put/generic/base.hpp</includes>
    <includes refid="new__modifier_8hpp" local="no">boost/assign/v2/put/generic/new_modifier.hpp</includes>
    <includes refid="ref_2wrapper_2copy_8hpp" local="no">boost/assign/v2/ref/wrapper/copy.hpp</includes>
    <includedby refid="modifier_2modifier_8hpp" local="no">/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/modifier/modifier.hpp</includedby>
    <incdepgraph>
      <node id="7010">
        <label>boost/assign/v2/put/modifier/def.hpp</label>
        <link refid="def_8hpp_source"/>
      </node>
      <node id="7022">
        <label>boost/type_traits/remove_cv.hpp</label>
      </node>
      <node id="7034">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="7013">
        <label>boost/mpl/apply.hpp</label>
      </node>
      <node id="7030">
        <label>boost/assign/v2/ref/wrapper/base.hpp</label>
        <link refid="ref_2wrapper_2base_8hpp_source"/>
        <childnode refid="7031" relation="include">
        </childnode>
        <childnode refid="7032" relation="include">
        </childnode>
      </node>
      <node id="7017">
        <label>boost/typeof/typeof.hpp</label>
      </node>
      <node id="7032">
        <label>boost/type_traits/is_const.hpp</label>
      </node>
      <node id="7035">
        <label>boost/type_traits/add_const.hpp</label>
      </node>
      <node id="7025">
        <label>boost/assign/v2/ref/wrapper/wrapper.hpp</label>
        <link refid="ref_2wrapper_2wrapper_8hpp_source"/>
        <childnode refid="7026" relation="include">
        </childnode>
        <childnode refid="7018" relation="include">
        </childnode>
        <childnode refid="7029" relation="include">
        </childnode>
      </node>
      <node id="7014">
        <label>boost/mpl/void.hpp</label>
      </node>
      <node id="7027">
        <label>boost/mpl/eval_if.hpp</label>
      </node>
      <node id="7018">
        <label>boost/assign/v2/ref/wrapper/copy.hpp</label>
        <link refid="ref_2wrapper_2copy_8hpp_source"/>
        <childnode refid="7019" relation="include">
        </childnode>
        <childnode refid="7020" relation="include">
        </childnode>
        <childnode refid="7021" relation="include">
        </childnode>
        <childnode refid="7022" relation="include">
        </childnode>
        <childnode refid="7023" relation="include">
        </childnode>
        <childnode refid="7030" relation="include">
        </childnode>
        <childnode refid="7033" relation="include">
        </childnode>
      </node>
      <node id="7026">
        <label>boost/assign/v2/ref/wrapper/deduce_assign_tag.hpp</label>
        <link refid="deduce__assign__tag_8hpp_source"/>
        <childnode refid="7027" relation="include">
        </childnode>
        <childnode refid="7028" relation="include">
        </childnode>
        <childnode refid="7015" relation="include">
        </childnode>
      </node>
      <node id="7008">
        <label>boost/utility/enable_if.hpp</label>
      </node>
      <node id="7009">
        <label>boost/accumulators/framework/accumulator_base.hpp</label>
      </node>
      <node id="7016">
        <label>boost/assign/v2/put/generic/result_of_modulo.hpp</label>
        <link refid="result__of__modulo_8hpp_source"/>
        <childnode refid="7013" relation="include">
        </childnode>
        <childnode refid="7017" relation="include">
        </childnode>
      </node>
      <node id="7028">
        <label>boost/mpl/identity.hpp</label>
      </node>
      <node id="7029">
        <label>boost/assign/v2/ref/wrapper/rebind.hpp</label>
        <link refid="rebind_8hpp_source"/>
        <childnode refid="7019" relation="include">
        </childnode>
        <childnode refid="7023" relation="include">
        </childnode>
        <childnode refid="7030" relation="include">
        </childnode>
        <childnode refid="7033" relation="include">
        </childnode>
      </node>
      <node id="7021">
        <label>boost/call_traits.hpp</label>
      </node>
      <node id="7024">
        <label>boost/ref.hpp</label>
      </node>
      <node id="7006">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/modifier/repeat.hpp</label>
        <link refid="put/modifier/repeat.hpp"/>
        <childnode refid="7007" relation="include">
        </childnode>
        <childnode refid="7008" relation="include">
        </childnode>
        <childnode refid="7009" relation="include">
        </childnode>
        <childnode refid="7010" relation="include">
        </childnode>
        <childnode refid="7011" relation="include">
        </childnode>
        <childnode refid="7012" relation="include">
        </childnode>
        <childnode refid="7018" relation="include">
        </childnode>
      </node>
      <node id="7023">
        <label>boost/assign/v2/ref/wrapper/framework.hpp</label>
        <link refid="framework_8hpp_source"/>
        <childnode refid="7020" relation="include">
        </childnode>
        <childnode refid="7024" relation="include">
        </childnode>
        <childnode refid="7025" relation="include">
        </childnode>
      </node>
      <node id="7036">
        <label>boost/operators.hpp</label>
      </node>
      <node id="7031">
        <label>boost/config.hpp</label>
      </node>
      <node id="7007">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="7012">
        <label>boost/assign/v2/put/generic/new_modifier.hpp</label>
        <link refid="new__modifier_8hpp_source"/>
        <childnode refid="7013" relation="include">
        </childnode>
        <childnode refid="7014" relation="include">
        </childnode>
        <childnode refid="7008" relation="include">
        </childnode>
        <childnode refid="7015" relation="include">
        </childnode>
        <childnode refid="7016" relation="include">
        </childnode>
      </node>
      <node id="7019">
        <label>algorithm</label>
      </node>
      <node id="7020">
        <label>boost/mpl/bool.hpp</label>
      </node>
      <node id="7011">
        <label>boost/assign/v2/put/generic/base.hpp</label>
        <link refid="put_2generic_2base_8hpp_source"/>
      </node>
      <node id="7033">
        <label>boost/assign/v2/ref/wrapper/crtp.hpp</label>
        <link refid="ref_2wrapper_2crtp_8hpp_source"/>
        <childnode refid="7008" relation="include">
        </childnode>
        <childnode refid="7015" relation="include">
        </childnode>
        <childnode refid="7034" relation="include">
        </childnode>
        <childnode refid="7035" relation="include">
        </childnode>
        <childnode refid="7021" relation="include">
        </childnode>
        <childnode refid="7036" relation="include">
        </childnode>
      </node>
      <node id="7015">
        <label>boost/type_traits/is_same.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7080">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/lazy_alloc.hpp</label>
        <link refid="static__array_2alloc_2lazy__alloc_8hpp_source"/>
        <childnode refid="7081" relation="include">
        </childnode>
        <childnode refid="7086" relation="include">
        </childnode>
        <childnode refid="7078" relation="include">
        </childnode>
      </node>
      <node id="7084">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/unary.hpp</label>
        <link refid="unary_8hpp_source"/>
        <childnode refid="7074" relation="include">
        </childnode>
      </node>
      <node id="7046">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/sub.hpp</label>
        <link refid="put_2compose_2functor_2sub_8hpp_source"/>
        <childnode refid="7047" relation="include">
        </childnode>
      </node>
      <node id="7055">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/aux_/sub.hpp</label>
        <link refid="chain_2aux___2sub_8hpp_source"/>
        <childnode refid="7056" relation="include">
        </childnode>
        <childnode refid="7061" relation="include">
        </childnode>
      </node>
      <node id="7071">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/csv/forward_seq_arg.hpp</label>
        <link refid="forward__seq__arg_8hpp_source"/>
        <childnode refid="7069" relation="include">
        </childnode>
        <childnode refid="7072" relation="include">
        </childnode>
      </node>
      <node id="7092">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/composer.hpp</label>
        <link refid="functor_2composer_8hpp_source"/>
        <childnode refid="7047" relation="include">
        </childnode>
        <childnode refid="7046" relation="include">
        </childnode>
      </node>
      <node id="7045">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/generic/generic.hpp</label>
        <link refid="put_2generic_2generic_8hpp_source"/>
        <childnode refid="7046" relation="include">
        </childnode>
        <childnode refid="7049" relation="include">
        </childnode>
      </node>
      <node id="7091">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/assign_copy.hpp</label>
        <link refid="fusion_2assign__copy_8hpp_source"/>
        <childnode refid="7070" relation="include">
        </childnode>
        <childnode refid="7092" relation="include">
        </childnode>
        <childnode refid="7088" relation="include">
        </childnode>
      </node>
      <node id="7073">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/csv/csv.hpp</label>
        <link refid="ref_2anon_2csv_2csv_8hpp_source"/>
        <childnode refid="7074" relation="include">
        </childnode>
      </node>
      <node id="7049">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/put.hpp</label>
        <link refid="put_8hpp_source"/>
        <childnode refid="7040" relation="include">
        </childnode>
        <childnode refid="7042" relation="include">
        </childnode>
      </node>
      <node id="7047">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/functor.hpp</label>
        <link refid="put_2compose_2functor_2functor_8hpp_source"/>
        <childnode refid="7048" relation="include">
        </childnode>
      </node>
      <node id="7079">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/static_array.hpp</label>
        <link refid="static__array_8hpp_source"/>
      </node>
      <node id="7050">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/sub/make.hpp</label>
        <link refid="put_2sub_2make_8hpp_source"/>
        <childnode refid="7046" relation="include">
        </childnode>
        <childnode refid="7051" relation="include">
        </childnode>
        <childnode refid="7094" relation="include">
        </childnode>
        <childnode refid="7095" relation="include">
        </childnode>
      </node>
      <node id="7052">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/range/modifier/modifier.hpp</label>
        <link refid="range_2modifier_2modifier_8hpp_source"/>
        <childnode refid="7053" relation="include">
        </childnode>
      </node>
      <node id="7081">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/make.hpp</label>
        <link refid="ref_2anon_2unary_2make_8hpp_source"/>
        <childnode refid="7082" relation="include">
        </childnode>
        <childnode refid="7084" relation="include">
        </childnode>
      </node>
      <node id="7053">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/range/adaptor.hpp</label>
        <link refid="put_2range_2adaptor_8hpp_source"/>
        <childnode refid="7054" relation="include">
        </childnode>
        <childnode refid="7062" relation="include">
        </childnode>
      </node>
      <node id="7086">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/policy.hpp</label>
        <link refid="fusion_2policy_8hpp_source"/>
        <childnode refid="7087" relation="include">
        </childnode>
        <childnode refid="7088" relation="include">
        </childnode>
      </node>
      <node id="7044">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/anon/make.hpp</label>
        <link refid="anon_2make_8hpp_source"/>
        <childnode refid="7041" relation="include">
        </childnode>
        <childnode refid="7043" relation="include">
        </childnode>
      </node>
      <node id="7093">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/assign_rebind.hpp</label>
        <link refid="fusion_2assign__rebind_8hpp_source"/>
        <childnode refid="7088" relation="include">
        </childnode>
      </node>
      <node id="7065">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/csv/pp.hpp</label>
        <link refid="pp_8hpp_source"/>
        <childnode refid="7066" relation="include">
        </childnode>
        <childnode refid="7077" relation="include">
        </childnode>
      </node>
      <node id="7058">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/chain.hpp</label>
        <link refid="chain_8hpp_source"/>
        <childnode refid="7059" relation="include">
        </childnode>
        <childnode refid="7060" relation="include">
        </childnode>
        <childnode refid="7042" relation="include">
        </childnode>
      </node>
      <node id="7069">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/csv/csv.hpp</label>
        <link refid="put_2compose_2csv_2csv_8hpp_source"/>
        <childnode refid="7048" relation="include">
        </childnode>
      </node>
      <node id="7056">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/aux_/bitwise_or.hpp</label>
        <link refid="bitwise__or_8hpp_source"/>
        <childnode refid="7057" relation="include">
        </childnode>
        <childnode refid="7058" relation="include">
        </childnode>
      </node>
      <node id="7040">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/anon/cont.hpp</label>
        <link refid="anon_2cont_8hpp_source"/>
        <childnode refid="7041" relation="include">
        </childnode>
        <childnode refid="7043" relation="include">
        </childnode>
        <childnode refid="7044" relation="include">
        </childnode>
      </node>
      <node id="7074">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/anon.hpp</label>
        <link refid="ref_2anon_2anon_8hpp_source"/>
        <childnode refid="7075" relation="include">
        </childnode>
      </node>
      <node id="7060">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/checking/twin_values.hpp</label>
        <link refid="chain_2checking_2twin__values_8hpp_source"/>
      </node>
      <node id="7077">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/csv/make.hpp</label>
        <link refid="ref_2anon_2csv_2make_8hpp_source"/>
        <childnode refid="7066" relation="include">
        </childnode>
        <childnode refid="7073" relation="include">
        </childnode>
      </node>
      <node id="7051">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/range/modifier/put.hpp</label>
        <link refid="range_2modifier_2put_8hpp_source"/>
        <childnode refid="7052" relation="include">
        </childnode>
      </node>
      <node id="7072">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/csv/sub.hpp</label>
        <link refid="put_2compose_2csv_2sub_8hpp_source"/>
        <childnode refid="7069" relation="include">
        </childnode>
      </node>
      <node id="7042">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/v2.hpp</label>
        <link refid="v2_8hpp_source"/>
      </node>
      <node id="7059">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/checking/distinct_values.hpp</label>
        <link refid="chain_2checking_2distinct__values_8hpp_source"/>
      </node>
      <node id="7043">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/anon/csv.hpp</label>
        <link refid="anon_2csv_8hpp_source"/>
        <childnode refid="7041" relation="include">
        </childnode>
      </node>
      <node id="7062">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/range/range.hpp</label>
        <link refid="put_2range_2range_8hpp_source"/>
        <childnode refid="7040" relation="include">
        </childnode>
        <childnode refid="7049" relation="include">
        </childnode>
      </node>
      <node id="7048">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/compose.hpp</label>
        <link refid="compose_8hpp_source"/>
        <childnode refid="7049" relation="include">
        </childnode>
      </node>
      <node id="7067">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/csv/assign_copy.hpp</label>
        <link refid="anon_2csv_2assign__copy_8hpp_source"/>
        <childnode refid="7068" relation="include">
        </childnode>
        <childnode refid="7070" relation="include">
        </childnode>
        <childnode refid="7073" relation="include">
        </childnode>
      </node>
      <node id="7090">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/assign_xxx.hpp</label>
        <link refid="fusion_2assign__xxx_8hpp_source"/>
        <childnode refid="7091" relation="include">
        </childnode>
        <childnode refid="7093" relation="include">
        </childnode>
      </node>
      <node id="7078">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/alloc.hpp</label>
        <link refid="alloc_8hpp_source"/>
        <childnode refid="7079" relation="include">
        </childnode>
      </node>
      <node id="7066">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/csv/assign_xxx.hpp</label>
        <link refid="anon_2csv_2assign__xxx_8hpp_source"/>
        <childnode refid="7067" relation="include">
        </childnode>
        <childnode refid="7076" relation="include">
        </childnode>
      </node>
      <node id="7083">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/assign_copy.hpp</label>
        <link refid="anon_2unary_2assign__copy_8hpp_source"/>
        <childnode refid="7084" relation="include">
        </childnode>
      </node>
      <node id="7061">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/traits/result.hpp</label>
        <link refid="chain_2traits_2result_8hpp_source"/>
        <childnode refid="7056" relation="include">
        </childnode>
        <childnode refid="7057" relation="include">
        </childnode>
        <childnode refid="7058" relation="include">
        </childnode>
      </node>
      <node id="7064">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/fast_alloc.hpp</label>
        <link refid="static__array_2alloc_2fast__alloc_8hpp_source"/>
        <childnode refid="7065" relation="include">
        </childnode>
        <childnode refid="7078" relation="include">
        </childnode>
      </node>
      <node id="7075">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/ref.hpp</label>
        <link refid="ref_8hpp_source"/>
        <childnode refid="7042" relation="include">
        </childnode>
      </node>
      <node id="7070">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/csv/held.hpp</label>
        <link refid="held_8hpp_source"/>
        <childnode refid="7068" relation="include">
        </childnode>
        <childnode refid="7069" relation="include">
        </childnode>
        <childnode refid="7071" relation="include">
        </childnode>
        <childnode refid="7072" relation="include">
        </childnode>
      </node>
      <node id="7082">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/assign_xxx.hpp</label>
        <link refid="anon_2unary_2assign__xxx_8hpp_source"/>
        <childnode refid="7083" relation="include">
        </childnode>
        <childnode refid="7085" relation="include">
        </childnode>
      </node>
      <node id="7068">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/csv/composer.hpp</label>
        <link refid="csv_2composer_8hpp_source"/>
        <childnode refid="7069" relation="include">
        </childnode>
      </node>
      <node id="7037">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/modifier/repeat.hpp</label>
        <link refid="put/modifier/repeat.hpp"/>
        <childnode refid="7038" relation="include">
        </childnode>
      </node>
      <node id="7085">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/assign_rebind.hpp</label>
        <link refid="anon_2unary_2assign__rebind_8hpp_source"/>
        <childnode refid="7084" relation="include">
        </childnode>
      </node>
      <node id="7039">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/generic/crtp.hpp</label>
        <link refid="put_2generic_2crtp_8hpp_source"/>
        <childnode refid="7040" relation="include">
        </childnode>
        <childnode refid="7045" relation="include">
        </childnode>
        <childnode refid="7050" relation="include">
        </childnode>
      </node>
      <node id="7094">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/sub/csv.hpp</label>
        <link refid="put_2sub_2csv_8hpp_source"/>
        <childnode refid="7095" relation="include">
        </childnode>
      </node>
      <node id="7057">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/aux_/logical_and.hpp</label>
        <link refid="logical__and_8hpp_source"/>
        <childnode refid="7058" relation="include">
        </childnode>
      </node>
      <node id="7054">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/range/convert.hpp</label>
        <link refid="convert_8hpp_source"/>
        <childnode refid="7055" relation="include">
        </childnode>
        <childnode refid="7062" relation="include">
        </childnode>
        <childnode refid="7063" relation="include">
        </childnode>
      </node>
      <node id="7088">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/fusion.hpp</label>
        <link refid="fusion_8hpp_source"/>
        <childnode refid="7075" relation="include">
        </childnode>
      </node>
      <node id="7076">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/csv/assign_rebind.hpp</label>
        <link refid="anon_2csv_2assign__rebind_8hpp_source"/>
        <childnode refid="7073" relation="include">
        </childnode>
      </node>
      <node id="7087">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/container.hpp</label>
        <link refid="ref_2fusion_2container_8hpp_source"/>
        <childnode refid="7088" relation="include">
        </childnode>
        <childnode refid="7089" relation="include">
        </childnode>
      </node>
      <node id="7063">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/interface.hpp</label>
        <link refid="static__array_2interface_8hpp_source"/>
        <childnode refid="7064" relation="include">
        </childnode>
        <childnode refid="7080" relation="include">
        </childnode>
        <childnode refid="7079" relation="include">
        </childnode>
      </node>
      <node id="7041">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/anon/anon.hpp</label>
        <link refid="anon_2anon_8hpp_source"/>
        <childnode refid="7042" relation="include">
        </childnode>
      </node>
      <node id="7038">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/modifier/modifier.hpp</label>
        <link refid="modifier_2modifier_8hpp_source"/>
        <childnode refid="7039" relation="include">
        </childnode>
        <childnode refid="7049" relation="include">
        </childnode>
      </node>
      <node id="7095">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/sub/sub.hpp</label>
        <link refid="put_2sub_2sub_8hpp_source"/>
        <childnode refid="7049" relation="include">
        </childnode>
      </node>
      <node id="7089">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/make.hpp</label>
        <link refid="ref_2fusion_2make_8hpp_source"/>
        <childnode refid="7065" relation="include">
        </childnode>
        <childnode refid="7081" relation="include">
        </childnode>
        <childnode refid="7090" relation="include">
        </childnode>
        <childnode refid="7088" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1modifier__tag_1_1repeat" prot="public">boost::assign::v2::modifier_tag::repeat</innerclass>
    <innerclass refid="classboost_1_1assign_1_1v2_1_1put__aux_1_1modifier_3_01v2_1_1modifier__tag_1_1repeat_3_01_tag_01_4_01_4" prot="public">boost::assign::v2::put_aux::modifier&lt; v2::modifier_tag::repeat&lt; Tag &gt; &gt;</innerclass>
    <innerclass refid="classboost_1_1assign_1_1v2_1_1put__aux_1_1modulo__repeat" prot="public">boost::assign::v2::put_aux::modulo_repeat</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1result__of__modulo_1_1repeat" prot="public">boost::assign::v2::result_of_modulo::repeat</innerclass>
    <innernamespace refid="namespaceboost">boost</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign">boost::assign</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2">boost::assign::v2</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2_1_1modifier__tag">boost::assign::v2::modifier_tag</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2_1_1put__aux">boost::assign::v2::put_aux</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2_1_1result__of__modulo">boost::assign::v2::result_of_modulo</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="2"><highlight class="comment">//<sp/><sp/>Boost.Assign<sp/>v2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2003-2004<sp/>Thorsten<sp/>Ottosen<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2010<sp/>Erwann<sp/>Rogard<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Use,<sp/>modification<sp/>and<sp/>distribution<sp/>are<sp/>subject<sp/>to<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.<sp/>(See<sp/>accompanying<sp/>file<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at<sp/>http://www.boost.org/LICENSE_1_0.txt)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight><highlight class="preprocessor">#ifndef<sp/>BOOST_ASSIGN_V2_PUT_MODIFIER_REPEAT_ER_2010_HPP</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOOST_ASSIGN_V2_PUT_MODIFIER_REPEAT_ER_2010_HPP</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/type_traits/is_base_of.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/utility/enable_if.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/accumulators/framework/accumulator_base.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/v2/put/modifier/def.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/v2/put/generic/base.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/v2/put/generic/new_modifier.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/v2/ref/wrapper/copy.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">boost{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">assign{<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">v2{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">modifier_tag{<sp/></highlight></codeline>
<codeline lineno="24" refid="structboost_1_1assign_1_1v2_1_1modifier__tag_1_1repeat" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tag&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1modifier__tag_1_1repeat" kindref="compound">repeat</ref>{};<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>modifier_tag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">put_aux{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tag&gt;</highlight></codeline>
<codeline lineno="29" refid="classboost_1_1assign_1_1v2_1_1put__aux_1_1modifier_3_01v2_1_1modifier__tag_1_1repeat_3_01_tag_01_4_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1put__aux_1_1modifier" kindref="compound">modifier</ref>&lt;v2::modifier_tag::repeat&lt;Tag&gt;<sp/>&gt;<sp/>:<sp/>v2::ref::wrapper&lt;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v2::ref::assign_tag::copy,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>const</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1assign_1_1v2_1_1put__aux_1_1modifier" kindref="compound">modifier&lt;Tag&gt;</ref><sp/><ref refid="structboost_1_1assign_1_1v2_1_1put__aux_1_1modifier" kindref="compound">inner_</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1wrapper" kindref="compound">v2::ref::wrapper</ref>&lt;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1assign__tag_1_1copy" kindref="compound">v2::ref::assign_tag::copy</ref>,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1wrapper" kindref="compound">super_t</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::size_t<sp/>size_type;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structboost_1_1assign_1_1v2_1_1put__aux_1_1modifier" kindref="compound">modifier</ref>(){}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1assign_1_1v2_1_1put__aux_1_1modifier" kindref="compound">modifier</ref>(<sp/>size_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>n<sp/>):<ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1wrapper" kindref="compound">super_t</ref>(<sp/>n<sp/>){};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>impl(V&amp;<sp/>v,<sp/>T&amp;<sp/>t)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_type<sp/>m<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1wrapper" kindref="compound">super_t</ref><sp/>const&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this).unwrap();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(m--)<sp/>this-&gt;inner.impl(<sp/>v,<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structboost_1_1assign_1_1v2_1_1put__aux_1_1modifier" kindref="compound">inner_</ref><sp/>inner;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classboost_1_1assign_1_1v2_1_1put__aux_1_1modulo__repeat" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classboost_1_1assign_1_1v2_1_1put__aux_1_1modulo__repeat" kindref="compound">modulo_repeat</ref><sp/>:<sp/>v2::ref::wrapper&lt;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v2::ref::assign_tag::copy,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>const</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1wrapper" kindref="compound">v2::ref::wrapper</ref>&lt;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1assign__tag_1_1copy" kindref="compound">v2::ref::assign_tag::copy</ref>,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1wrapper" kindref="compound">super_t</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::size_t<sp/>size_type;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classboost_1_1assign_1_1v2_1_1put__aux_1_1modulo__repeat" kindref="compound">modulo_repeat</ref>(){}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classboost_1_1assign_1_1v2_1_1put__aux_1_1modulo__repeat" kindref="compound">modulo_repeat</ref>(<sp/>size_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>n)<sp/>:<sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1wrapper" kindref="compound">super_t</ref>(<sp/>n<sp/>){}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classboost_1_1assign_1_1v2_1_1put__aux_1_1modulo__repeat" kindref="compound">modulo_repeat</ref><sp/>operator=(<sp/>size_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>n)</highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="75"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classboost_1_1assign_1_1v2_1_1put__aux_1_1modulo__repeat" kindref="compound">modulo_repeat</ref><sp/>result(<sp/>n<sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>unwrap()</highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="81"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1wrapper" kindref="compound">super_t</ref><sp/>const&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this).unwrap();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>put_aux</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">result_of_modulo{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="91" refid="structboost_1_1assign_1_1v2_1_1result__of__modulo_1_1repeat" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1result__of__modulo_1_1repeat" kindref="compound">repeat</ref></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T::modifier_tag<sp/>old_tag_;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1assign_1_1v2_1_1modifier__tag_1_1repeat" kindref="compound">v2::modifier_tag::repeat&lt;old_tag_&gt;</ref><sp/><ref refid="structboost_1_1assign_1_1v2_1_1modifier__tag_1_1repeat" kindref="compound">new_tag_</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1assign_1_1v2_1_1put__aux_1_1modifier" kindref="compound">put_aux::modifier&lt;new_tag_&gt;</ref><sp/><ref refid="structboost_1_1assign_1_1v2_1_1put__aux_1_1modifier" kindref="compound">modifier_</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::mpl::apply1&lt;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structboost_1_1assign_1_1v2_1_1result__of__modulo_1_1new__modifier" kindref="compound">result_of_modulo::new_modifier&lt;T&gt;</ref>,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structboost_1_1assign_1_1v2_1_1modifier__tag_1_1repeat" kindref="compound">new_tag_</ref></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;::type<sp/>type;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>type<sp/>call(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>t,<sp/><ref refid="classboost_1_1assign_1_1v2_1_1put__aux_1_1modulo__repeat" kindref="compound">put_aux::modulo_repeat</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structboost_1_1assign_1_1v2_1_1put__aux_1_1modifier" kindref="compound">modifier_</ref><sp/>m(<sp/>h.unwrap()<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type(<sp/>t.unwrap(),<sp/>t.fun,<sp/>m<sp/>);<sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>result_of_modulo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">put_aux{<sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::lazy_enable_if&lt;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::is_base_of&lt;put_aux::put_base,<sp/>T&gt;,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structboost_1_1assign_1_1v2_1_1result__of__modulo_1_1repeat" kindref="compound">result_of_modulo::repeat&lt;T&gt;</ref></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;::type</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator%(</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>t,<sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classboost_1_1assign_1_1v2_1_1put__aux_1_1modulo__repeat" kindref="compound">put_aux::modulo_repeat</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1assign_1_1v2_1_1result__of__modulo_1_1repeat" kindref="compound">result_of_modulo::repeat&lt;T&gt;</ref><sp/>caller_;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>caller_::call(<sp/>t,<sp/>h<sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>put_aux</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">namespace</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>put_aux::modulo_repeat<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_repeat<sp/>=<sp/>put_aux::modulo_repeat();</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>v2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>assign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>boost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/modifier/repeat.hpp"/>
  </compounddef>
</doxygen>
