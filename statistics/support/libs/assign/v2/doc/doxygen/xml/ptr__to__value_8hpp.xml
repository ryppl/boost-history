<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="ptr__to__value_8hpp" kind="file">
    <compoundname>ptr_to_value.hpp</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">boost/preprocessor/cat.hpp</includes>
    <includes local="no">boost/mpl/bool.hpp</includes>
    <includes local="no">boost/type_traits/remove_reference.hpp</includes>
    <includes refid="ptr__container_8hpp" local="no">boost/assign/v2/detail/fwd/ptr_container.hpp</includes>
    <includes refid="detail_2fwd_2container_8hpp" local="no">boost/assign/v2/detail/fwd/container.hpp</includes>
    <includes refid="static__size_8hpp" local="no">boost/assign/v2/detail/type_traits/container/static_size.hpp</includes>
    <includedby refid="detail_2type__traits_2container_2container_8hpp" local="no">/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/container/container.hpp</includedby>
    <includedby refid="is__ptr__container_8hpp" local="no">/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/container/is_ptr_container.hpp</includedby>
    <incdepgraph>
      <node id="8570">
        <label>boost/assign/v2/detail/type_traits/container/static_size.hpp</label>
        <link refid="static__size_8hpp_source"/>
        <childnode refid="8571" relation="include">
        </childnode>
        <childnode refid="8569" relation="include">
        </childnode>
        <childnode refid="8568" relation="include">
        </childnode>
      </node>
      <node id="8567">
        <label>boost/type_traits/remove_reference.hpp</label>
      </node>
      <node id="8571">
        <label>boost/mpl/size_t.hpp</label>
      </node>
      <node id="8563">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/container/ptr_to_value.hpp</label>
        <link refid="ptr_to_value.hpp"/>
        <childnode refid="8564" relation="include">
        </childnode>
        <childnode refid="8565" relation="include">
        </childnode>
        <childnode refid="8566" relation="include">
        </childnode>
        <childnode refid="8567" relation="include">
        </childnode>
        <childnode refid="8568" relation="include">
        </childnode>
        <childnode refid="8569" relation="include">
        </childnode>
        <childnode refid="8570" relation="include">
        </childnode>
      </node>
      <node id="8569">
        <label>boost/assign/v2/detail/fwd/container.hpp</label>
        <link refid="detail_2fwd_2container_8hpp_source"/>
      </node>
      <node id="8568">
        <label>boost/assign/v2/detail/fwd/ptr_container.hpp</label>
        <link refid="ptr__container_8hpp_source"/>
      </node>
      <node id="8565">
        <label>boost/preprocessor/cat.hpp</label>
      </node>
      <node id="8566">
        <label>boost/mpl/bool.hpp</label>
      </node>
      <node id="8564">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8649">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/container/forward_to_value.hpp</label>
        <link refid="forward__to__value_8hpp_source"/>
        <childnode refid="8573" relation="include">
        </childnode>
        <childnode refid="8578" relation="include">
        </childnode>
        <childnode refid="8584" relation="include">
        </childnode>
        <childnode refid="8586" relation="include">
        </childnode>
        <childnode refid="8646" relation="include">
        </childnode>
        <childnode refid="8650" relation="include">
        </childnode>
        <childnode refid="8652" relation="include">
        </childnode>
        <childnode refid="8654" relation="include">
        </childnode>
      </node>
      <node id="8630">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/lazy_alloc.hpp</label>
        <link refid="static__array_2alloc_2lazy__alloc_8hpp_source"/>
        <childnode refid="8631" relation="include">
        </childnode>
        <childnode refid="8636" relation="include">
        </childnode>
        <childnode refid="8628" relation="include">
        </childnode>
      </node>
      <node id="8634">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/unary.hpp</label>
        <link refid="unary_8hpp_source"/>
        <childnode refid="8624" relation="include">
        </childnode>
      </node>
      <node id="8647">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/container/ptr_to_value_container.hpp</label>
        <link refid="ptr__to__value__container_8hpp_source"/>
        <childnode refid="8573" relation="include">
        </childnode>
        <childnode refid="8648" relation="include">
        </childnode>
      </node>
      <node id="8597">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/sub.hpp</label>
        <link refid="put_2compose_2functor_2sub_8hpp_source"/>
        <childnode refid="8598" relation="include">
        </childnode>
      </node>
      <node id="8587">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/checking/map.hpp</label>
        <link refid="map_8hpp_source"/>
        <childnode refid="8580" relation="include">
        </childnode>
        <childnode refid="8581" relation="include">
        </childnode>
      </node>
      <node id="8606">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/aux_/sub.hpp</label>
        <link refid="chain_2aux___2sub_8hpp_source"/>
        <childnode refid="8607" relation="include">
        </childnode>
        <childnode refid="8611" relation="include">
        </childnode>
      </node>
      <node id="8621">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/csv/forward_seq_arg.hpp</label>
        <link refid="forward__seq__arg_8hpp_source"/>
        <childnode refid="8619" relation="include">
        </childnode>
        <childnode refid="8622" relation="include">
        </childnode>
      </node>
      <node id="8642">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/composer.hpp</label>
        <link refid="functor_2composer_8hpp_source"/>
        <childnode refid="8598" relation="include">
        </childnode>
        <childnode refid="8597" relation="include">
        </childnode>
      </node>
      <node id="8596">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/generic/generic.hpp</label>
        <link refid="put_2generic_2generic_8hpp_source"/>
        <childnode refid="8597" relation="include">
        </childnode>
        <childnode refid="8600" relation="include">
        </childnode>
      </node>
      <node id="8657">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/functor/new.hpp</label>
        <link refid="new_8hpp_source"/>
        <childnode refid="8656" relation="include">
        </childnode>
      </node>
      <node id="8641">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/assign_copy.hpp</label>
        <link refid="fusion_2assign__copy_8hpp_source"/>
        <childnode refid="8620" relation="include">
        </childnode>
        <childnode refid="8642" relation="include">
        </childnode>
        <childnode refid="8638" relation="include">
        </childnode>
      </node>
      <node id="8623">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/csv/csv.hpp</label>
        <link refid="ref_2anon_2csv_2csv_8hpp_source"/>
        <childnode refid="8624" relation="include">
        </childnode>
      </node>
      <node id="8600">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/put.hpp</label>
        <link refid="put_8hpp_source"/>
        <childnode refid="8592" relation="include">
        </childnode>
        <childnode refid="8576" relation="include">
        </childnode>
      </node>
      <node id="8598">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/functor.hpp</label>
        <link refid="put_2compose_2functor_2functor_8hpp_source"/>
        <childnode refid="8599" relation="include">
        </childnode>
      </node>
      <node id="8573">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/container/container.hpp</label>
        <link refid="detail_2type__traits_2container_2container_8hpp_source"/>
        <childnode refid="8574" relation="include">
        </childnode>
      </node>
      <node id="8629">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/static_array.hpp</label>
        <link refid="static__array_8hpp_source"/>
      </node>
      <node id="8646">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/container/is_set.hpp</label>
        <link refid="is__set_8hpp_source"/>
        <childnode refid="8573" relation="include">
        </childnode>
        <childnode refid="8588" relation="include">
        </childnode>
      </node>
      <node id="8601">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/sub/make.hpp</label>
        <link refid="put_2sub_2make_8hpp_source"/>
        <childnode refid="8597" relation="include">
        </childnode>
        <childnode refid="8602" relation="include">
        </childnode>
        <childnode refid="8644" relation="include">
        </childnode>
        <childnode refid="8645" relation="include">
        </childnode>
      </node>
      <node id="8575">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/detail.hpp</label>
        <link refid="detail_8hpp_source"/>
        <childnode refid="8576" relation="include">
        </childnode>
      </node>
      <node id="8583">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/checking/fifo.hpp</label>
        <link refid="fifo_8hpp_source"/>
        <childnode refid="8580" relation="include">
        </childnode>
        <childnode refid="8581" relation="include">
        </childnode>
      </node>
      <node id="8603">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/range/modifier/modifier.hpp</label>
        <link refid="range_2modifier_2modifier_8hpp_source"/>
        <childnode refid="8604" relation="include">
        </childnode>
      </node>
      <node id="8631">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/make.hpp</label>
        <link refid="ref_2anon_2unary_2make_8hpp_source"/>
        <childnode refid="8632" relation="include">
        </childnode>
        <childnode refid="8634" relation="include">
        </childnode>
      </node>
      <node id="8653">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/checking/array.hpp</label>
        <link refid="array_8hpp_source"/>
        <childnode refid="8580" relation="include">
        </childnode>
        <childnode refid="8581" relation="include">
        </childnode>
      </node>
      <node id="8604">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/range/adaptor.hpp</label>
        <link refid="put_2range_2adaptor_8hpp_source"/>
        <childnode refid="8605" relation="include">
        </childnode>
        <childnode refid="8612" relation="include">
        </childnode>
      </node>
      <node id="8636">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/policy.hpp</label>
        <link refid="fusion_2policy_8hpp_source"/>
        <childnode refid="8637" relation="include">
        </childnode>
        <childnode refid="8638" relation="include">
        </childnode>
      </node>
      <node id="8595">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/anon/make.hpp</label>
        <link refid="anon_2make_8hpp_source"/>
        <childnode refid="8593" relation="include">
        </childnode>
        <childnode refid="8594" relation="include">
        </childnode>
      </node>
      <node id="8643">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/assign_rebind.hpp</label>
        <link refid="fusion_2assign__rebind_8hpp_source"/>
        <childnode refid="8638" relation="include">
        </childnode>
      </node>
      <node id="8615">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/csv/pp.hpp</label>
        <link refid="pp_8hpp_source"/>
        <childnode refid="8616" relation="include">
        </childnode>
        <childnode refid="8627" relation="include">
        </childnode>
      </node>
      <node id="8609">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/chain.hpp</label>
        <link refid="chain_8hpp_source"/>
        <childnode refid="8582" relation="include">
        </childnode>
        <childnode refid="8610" relation="include">
        </childnode>
        <childnode refid="8576" relation="include">
        </childnode>
      </node>
      <node id="8656">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/functor/functor.hpp</label>
        <link refid="detail_2functor_2functor_8hpp_source"/>
        <childnode refid="8575" relation="include">
        </childnode>
        <childnode refid="8591" relation="include">
        </childnode>
      </node>
      <node id="8619">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/csv/csv.hpp</label>
        <link refid="put_2compose_2csv_2csv_8hpp_source"/>
        <childnode refid="8599" relation="include">
        </childnode>
      </node>
      <node id="8579">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/checking/deduce_check.hpp</label>
        <link refid="deduce__check_8hpp_source"/>
        <childnode refid="8580" relation="include">
        </childnode>
        <childnode refid="8581" relation="include">
        </childnode>
      </node>
      <node id="8607">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/aux_/bitwise_or.hpp</label>
        <link refid="bitwise__or_8hpp_source"/>
        <childnode refid="8608" relation="include">
        </childnode>
        <childnode refid="8609" relation="include">
        </childnode>
      </node>
      <node id="8581">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/checking/container.hpp</label>
        <link refid="detail_2checking_2container_8hpp_source"/>
        <childnode refid="8582" relation="include">
        </childnode>
        <childnode refid="8580" relation="include">
        </childnode>
      </node>
      <node id="8588">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/container/is_associative.hpp</label>
        <link refid="is__associative_8hpp_source"/>
        <childnode refid="8573" relation="include">
        </childnode>
        <childnode refid="8589" relation="include">
        </childnode>
      </node>
      <node id="8592">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/anon/cont.hpp</label>
        <link refid="anon_2cont_8hpp_source"/>
        <childnode refid="8593" relation="include">
        </childnode>
        <childnode refid="8594" relation="include">
        </childnode>
        <childnode refid="8595" relation="include">
        </childnode>
      </node>
      <node id="8624">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/anon.hpp</label>
        <link refid="ref_2anon_2anon_8hpp_source"/>
        <childnode refid="8625" relation="include">
        </childnode>
      </node>
      <node id="8610">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/checking/twin_values.hpp</label>
        <link refid="chain_2checking_2twin__values_8hpp_source"/>
      </node>
      <node id="8627">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/csv/make.hpp</label>
        <link refid="ref_2anon_2csv_2make_8hpp_source"/>
        <childnode refid="8616" relation="include">
        </childnode>
        <childnode refid="8623" relation="include">
        </childnode>
      </node>
      <node id="8602">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/range/modifier/put.hpp</label>
        <link refid="range_2modifier_2put_8hpp_source"/>
        <childnode refid="8603" relation="include">
        </childnode>
      </node>
      <node id="8574">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/type_traits.hpp</label>
        <link refid="type__traits_8hpp_source"/>
        <childnode refid="8575" relation="include">
        </childnode>
      </node>
      <node id="8622">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/csv/sub.hpp</label>
        <link refid="put_2compose_2csv_2sub_8hpp_source"/>
        <childnode refid="8619" relation="include">
        </childnode>
      </node>
      <node id="8586">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/container/is_map.hpp</label>
        <link refid="is__map_8hpp_source"/>
        <childnode refid="8579" relation="include">
        </childnode>
        <childnode refid="8587" relation="include">
        </childnode>
        <childnode refid="8573" relation="include">
        </childnode>
        <childnode refid="8588" relation="include">
        </childnode>
      </node>
      <node id="8576">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/v2.hpp</label>
        <link refid="v2_8hpp_source"/>
      </node>
      <node id="8582">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/checking/distinct_values.hpp</label>
        <link refid="chain_2checking_2distinct__values_8hpp_source"/>
      </node>
      <node id="8594">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/anon/csv.hpp</label>
        <link refid="anon_2csv_8hpp_source"/>
        <childnode refid="8593" relation="include">
        </childnode>
      </node>
      <node id="8612">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/range/range.hpp</label>
        <link refid="put_2range_2range_8hpp_source"/>
        <childnode refid="8592" relation="include">
        </childnode>
        <childnode refid="8600" relation="include">
        </childnode>
      </node>
      <node id="8650">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/container/is_sorted.hpp</label>
        <link refid="is__sorted_8hpp_source"/>
        <childnode refid="8579" relation="include">
        </childnode>
        <childnode refid="8651" relation="include">
        </childnode>
        <childnode refid="8573" relation="include">
        </childnode>
      </node>
      <node id="8652">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/container/is_static_array.hpp</label>
        <link refid="is__static__array_8hpp_source"/>
        <childnode refid="8653" relation="include">
        </childnode>
        <childnode refid="8579" relation="include">
        </childnode>
        <childnode refid="8573" relation="include">
        </childnode>
        <childnode refid="8589" relation="include">
        </childnode>
      </node>
      <node id="8572">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/container/ptr_to_value.hpp</label>
        <link refid="ptr_to_value.hpp"/>
        <childnode refid="8573" relation="include">
        </childnode>
        <childnode refid="8577" relation="include">
        </childnode>
      </node>
      <node id="8589">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/modifier/deduce.hpp</label>
        <link refid="put_2modifier_2deduce_8hpp_source"/>
        <childnode refid="8590" relation="include">
        </childnode>
      </node>
      <node id="8599">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/compose.hpp</label>
        <link refid="compose_8hpp_source"/>
        <childnode refid="8600" relation="include">
        </childnode>
      </node>
      <node id="8658">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/container/has_push.hpp</label>
        <link refid="has__push_8hpp_source"/>
        <childnode refid="8573" relation="include">
        </childnode>
        <childnode refid="8589" relation="include">
        </childnode>
        <childnode refid="8659" relation="include">
        </childnode>
      </node>
      <node id="8648">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/container/value_container.hpp</label>
        <link refid="value__container_8hpp_source"/>
        <childnode refid="8573" relation="include">
        </childnode>
        <childnode refid="8649" relation="include">
        </childnode>
      </node>
      <node id="8617">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/csv/assign_copy.hpp</label>
        <link refid="anon_2csv_2assign__copy_8hpp_source"/>
        <childnode refid="8618" relation="include">
        </childnode>
        <childnode refid="8620" relation="include">
        </childnode>
        <childnode refid="8623" relation="include">
        </childnode>
      </node>
      <node id="8640">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/assign_xxx.hpp</label>
        <link refid="fusion_2assign__xxx_8hpp_source"/>
        <childnode refid="8641" relation="include">
        </childnode>
        <childnode refid="8643" relation="include">
        </childnode>
      </node>
      <node id="8628">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/alloc.hpp</label>
        <link refid="alloc_8hpp_source"/>
        <childnode refid="8629" relation="include">
        </childnode>
      </node>
      <node id="8616">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/csv/assign_xxx.hpp</label>
        <link refid="anon_2csv_2assign__xxx_8hpp_source"/>
        <childnode refid="8617" relation="include">
        </childnode>
        <childnode refid="8626" relation="include">
        </childnode>
      </node>
      <node id="8633">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/assign_copy.hpp</label>
        <link refid="anon_2unary_2assign__copy_8hpp_source"/>
        <childnode refid="8634" relation="include">
        </childnode>
      </node>
      <node id="8611">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/traits/result.hpp</label>
        <link refid="chain_2traits_2result_8hpp_source"/>
        <childnode refid="8607" relation="include">
        </childnode>
        <childnode refid="8608" relation="include">
        </childnode>
        <childnode refid="8609" relation="include">
        </childnode>
      </node>
      <node id="8614">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/fast_alloc.hpp</label>
        <link refid="static__array_2alloc_2fast__alloc_8hpp_source"/>
        <childnode refid="8615" relation="include">
        </childnode>
        <childnode refid="8628" relation="include">
        </childnode>
      </node>
      <node id="8625">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/ref.hpp</label>
        <link refid="ref_8hpp_source"/>
        <childnode refid="8576" relation="include">
        </childnode>
      </node>
      <node id="8620">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/csv/held.hpp</label>
        <link refid="held_8hpp_source"/>
        <childnode refid="8618" relation="include">
        </childnode>
        <childnode refid="8619" relation="include">
        </childnode>
        <childnode refid="8621" relation="include">
        </childnode>
        <childnode refid="8622" relation="include">
        </childnode>
      </node>
      <node id="8632">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/assign_xxx.hpp</label>
        <link refid="anon_2unary_2assign__xxx_8hpp_source"/>
        <childnode refid="8633" relation="include">
        </childnode>
        <childnode refid="8635" relation="include">
        </childnode>
      </node>
      <node id="8618">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/csv/composer.hpp</label>
        <link refid="csv_2composer_8hpp_source"/>
        <childnode refid="8619" relation="include">
        </childnode>
      </node>
      <node id="8585">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/checking/lifo.hpp</label>
        <link refid="lifo_8hpp_source"/>
        <childnode refid="8580" relation="include">
        </childnode>
        <childnode refid="8581" relation="include">
        </childnode>
      </node>
      <node id="8635">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/assign_rebind.hpp</label>
        <link refid="anon_2unary_2assign__rebind_8hpp_source"/>
        <childnode refid="8634" relation="include">
        </childnode>
      </node>
      <node id="8651">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/checking/range.hpp</label>
        <link refid="detail_2checking_2range_8hpp_source"/>
        <childnode refid="8610" relation="include">
        </childnode>
        <childnode refid="8580" relation="include">
        </childnode>
        <childnode refid="8581" relation="include">
        </childnode>
      </node>
      <node id="8591">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/generic/crtp.hpp</label>
        <link refid="put_2generic_2crtp_8hpp_source"/>
        <childnode refid="8592" relation="include">
        </childnode>
        <childnode refid="8596" relation="include">
        </childnode>
        <childnode refid="8601" relation="include">
        </childnode>
      </node>
      <node id="8644">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/sub/csv.hpp</label>
        <link refid="put_2sub_2csv_8hpp_source"/>
        <childnode refid="8645" relation="include">
        </childnode>
      </node>
      <node id="8584">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/container/is_lifo.hpp</label>
        <link refid="is__lifo_8hpp_source"/>
        <childnode refid="8579" relation="include">
        </childnode>
        <childnode refid="8585" relation="include">
        </childnode>
        <childnode refid="8573" relation="include">
        </childnode>
      </node>
      <node id="8608">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/aux_/logical_and.hpp</label>
        <link refid="logical__and_8hpp_source"/>
        <childnode refid="8609" relation="include">
        </childnode>
      </node>
      <node id="8605">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/range/convert.hpp</label>
        <link refid="convert_8hpp_source"/>
        <childnode refid="8606" relation="include">
        </childnode>
        <childnode refid="8612" relation="include">
        </childnode>
        <childnode refid="8613" relation="include">
        </childnode>
      </node>
      <node id="8638">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/fusion.hpp</label>
        <link refid="fusion_8hpp_source"/>
        <childnode refid="8625" relation="include">
        </childnode>
      </node>
      <node id="8580">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/checking/checking.hpp</label>
        <link refid="detail_2checking_2checking_8hpp_source"/>
        <childnode refid="8575" relation="include">
        </childnode>
      </node>
      <node id="8659">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/range/modifier/deduce.hpp</label>
        <link refid="put_2range_2modifier_2deduce_8hpp_source"/>
        <childnode refid="8603" relation="include">
        </childnode>
      </node>
      <node id="8626">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/csv/assign_rebind.hpp</label>
        <link refid="anon_2csv_2assign__rebind_8hpp_source"/>
        <childnode refid="8623" relation="include">
        </childnode>
      </node>
      <node id="8578">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/container/is_fifo.hpp</label>
        <link refid="is__fifo_8hpp_source"/>
        <childnode refid="8579" relation="include">
        </childnode>
        <childnode refid="8583" relation="include">
        </childnode>
        <childnode refid="8573" relation="include">
        </childnode>
      </node>
      <node id="8637">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/container.hpp</label>
        <link refid="ref_2fusion_2container_8hpp_source"/>
        <childnode refid="8638" relation="include">
        </childnode>
        <childnode refid="8639" relation="include">
        </childnode>
      </node>
      <node id="8654">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/container/value.hpp</label>
        <link refid="container_2value_8hpp_source"/>
        <childnode refid="8655" relation="include">
        </childnode>
        <childnode refid="8657" relation="include">
        </childnode>
        <childnode refid="8573" relation="include">
        </childnode>
        <childnode refid="8658" relation="include">
        </childnode>
        <childnode refid="8644" relation="include">
        </childnode>
      </node>
      <node id="8577">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/container/is_ptr_container.hpp</label>
        <link refid="is__ptr__container_8hpp_source"/>
        <childnode refid="8573" relation="include">
        </childnode>
        <childnode refid="8578" relation="include">
        </childnode>
        <childnode refid="8584" relation="include">
        </childnode>
        <childnode refid="8586" relation="include">
        </childnode>
        <childnode refid="8646" relation="include">
        </childnode>
        <childnode refid="8647" relation="include">
        </childnode>
        <childnode refid="8648" relation="include">
        </childnode>
        <childnode refid="8591" relation="include">
        </childnode>
      </node>
      <node id="8655">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/functor/constructor.hpp</label>
        <link refid="constructor_8hpp_source"/>
        <childnode refid="8656" relation="include">
        </childnode>
      </node>
      <node id="8613">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/interface.hpp</label>
        <link refid="static__array_2interface_8hpp_source"/>
        <childnode refid="8614" relation="include">
        </childnode>
        <childnode refid="8630" relation="include">
        </childnode>
        <childnode refid="8629" relation="include">
        </childnode>
      </node>
      <node id="8593">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/anon/anon.hpp</label>
        <link refid="anon_2anon_8hpp_source"/>
        <childnode refid="8576" relation="include">
        </childnode>
      </node>
      <node id="8590">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/modifier/modifier.hpp</label>
        <link refid="modifier_2modifier_8hpp_source"/>
        <childnode refid="8591" relation="include">
        </childnode>
        <childnode refid="8600" relation="include">
        </childnode>
      </node>
      <node id="8645">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/sub/sub.hpp</label>
        <link refid="put_2sub_2sub_8hpp_source"/>
        <childnode refid="8600" relation="include">
        </childnode>
      </node>
      <node id="8639">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/make.hpp</label>
        <link refid="ref_2fusion_2make_8hpp_source"/>
        <childnode refid="8615" relation="include">
        </childnode>
        <childnode refid="8631" relation="include">
        </childnode>
        <childnode refid="8640" relation="include">
        </childnode>
        <childnode refid="8638" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value" prot="public">boost::assign::v2::container_type_traits::ptr_to_value</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value_1_1is__applicable" prot="public">boost::assign::v2::container_type_traits::ptr_to_value::is_applicable</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1allocator" prot="public">boost::assign::v2::container_type_traits::ptr_to_value_aux::allocator</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1allocator_3_01sa163bb1e6ea1ab72649f6b61f3056dd0" prot="public">boost::assign::v2::container_type_traits::ptr_to_value_aux::allocator&lt; std::allocator&lt; void * &gt;, T &gt;</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1common" prot="public">boost::assign::v2::container_type_traits::ptr_to_value_aux::common</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1common_1_1is__applicable" prot="public">boost::assign::v2::container_type_traits::ptr_to_value_aux::common::is_applicable</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1static__array__like" prot="public">boost::assign::v2::container_type_traits::ptr_to_value_aux::static_array_like</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1static__array__like_1_1is__applicable" prot="public">boost::assign::v2::container_type_traits::ptr_to_value_aux::static_array_like::is_applicable</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1seq__like" prot="public">boost::assign::v2::container_type_traits::ptr_to_value_aux::seq_like</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1map__like" prot="public">boost::assign::v2::container_type_traits::ptr_to_value_aux::map_like</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1set__like" prot="public">boost::assign::v2::container_type_traits::ptr_to_value_aux::set_like</innerclass>
    <innerclass refid="classboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1unordered__map__like" prot="public">boost::assign::v2::container_type_traits::ptr_to_value_aux::unordered_map_like</innerclass>
    <innerclass refid="classboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1unordered__set__like" prot="public">boost::assign::v2::container_type_traits::ptr_to_value_aux::unordered_set_like</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value_3_01boost_1_1ptr__arraye0eb40434bf86791e47025bbfb14967c" prot="public">boost::assign::v2::container_type_traits::ptr_to_value&lt; boost::ptr_array&lt; T, N, A &gt; &gt;</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value_3_01boost_1_1ptr__deque99eff50c839444d1f41b55d354c6c38e" prot="public">boost::assign::v2::container_type_traits::ptr_to_value&lt; boost::ptr_deque&lt; T, C, A &gt; &gt;</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value_3_01boost_1_1ptr__list_d27ac01a9fd7f371120e92ae03b685d6" prot="public">boost::assign::v2::container_type_traits::ptr_to_value&lt; boost::ptr_list&lt; T, C, A &gt; &gt;</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value_3_01boost_1_1ptr__vectoab165915a61073a82301b017e69f8da1" prot="public">boost::assign::v2::container_type_traits::ptr_to_value&lt; boost::ptr_vector&lt; T, C, A &gt; &gt;</innerclass>
    <innernamespace refid="namespaceboost">boost</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign">boost::assign</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2">boost::assign::v2</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2_1_1container__type__traits">boost::assign::v2::container_type_traits</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux">boost::assign::v2::container_type_traits::ptr_to_value_aux</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="2"><highlight class="comment">//<sp/><sp/>Boost.Assign<sp/>v2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2003-2004<sp/>Thorsten<sp/>Ottosen<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2010<sp/>Erwann<sp/>Rogard<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Use,<sp/>modification<sp/>and<sp/>distribution<sp/>are<sp/>subject<sp/>to<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.<sp/>(See<sp/>accompanying<sp/>file<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at<sp/>http://www.boost.org/LICENSE_1_0.txt)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight><highlight class="preprocessor">#ifndef<sp/>BOOST_ASSIGN_V2_TYPE_TRAITS_CONTAINER_PTR_TO_VALUE_ER_2010_HPP</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOOST_ASSIGN_V2_TYPE_TRAITS_CONTAINER_PTR_TO_VALUE_ER_2010_HPP</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>std::allocator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/preprocessor/cat.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/bool.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/type_traits/remove_reference.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/v2/detail/fwd/ptr_container.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/v2/detail/fwd/container.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/v2/detail/type_traits/container/static_size.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">boost{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">assign{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">v2{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">container_type_traits{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="26" refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value" kindref="compound">ptr_to_value</ref>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28" refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value_1_1is__applicable" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value_1_1is__applicable" kindref="compound">is_applicable</ref><sp/>:<sp/>boost::mpl::<ref refid="classboost_1_1mpl_1_1false__" kindref="compound">false_</ref>{};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ptr_to_value_aux{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1allocator" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1allocator" kindref="compound">allocator</ref>{};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="37" refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1allocator_3_01sa163bb1e6ea1ab72649f6b61f3056dd0" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1allocator" kindref="compound">allocator</ref>&lt;std::<ref refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1allocator" kindref="compound">allocator</ref>&lt;void*&gt;,<sp/>T&gt;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::allocator&lt;T&gt;<sp/>type;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="43" refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1common" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1common" kindref="compound">common</ref></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1common_1_1is__applicable" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1common_1_1is__applicable" kindref="compound">is_applicable</ref><sp/>:<sp/>boost::mpl::true_{};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::remove_reference&lt;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V::reference</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;::type<sp/>value_type;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1allocator" kindref="compound">ptr_to_value_aux::allocator</ref>&lt;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V::allocator_type,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_type</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;::type<sp/>allocator_type;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V,</highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F&gt;</highlight></codeline>
<codeline lineno="59" refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1static__array__like" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1static__array__like" kindref="compound">static_array_like</ref>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>there<sp/>is<sp/>no<sp/>allocator,<sp/>hence<sp/>can&apos;t<sp/>derive<sp/>from<sp/>common&lt;V&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1static__array__like_1_1is__applicable" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1static__array__like_1_1is__applicable" kindref="compound">is_applicable</ref><sp/>:<sp/>boost::mpl::true_{};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::remove_reference&lt;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V::reference</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;::type<sp/>value_type;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>F&lt;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>static_array_like::value_type,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1static__size" kindref="compound">container_type_traits::static_size&lt;V&gt;::value</ref><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>container_type;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V,</highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,</highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F&gt;</highlight></codeline>
<codeline lineno="77" refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1seq__like" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1seq__like" kindref="compound">seq_like</ref><sp/>:<sp/>ptr_to_value_aux::<ref refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1common" kindref="compound">common</ref>&lt;V&gt;{<sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>F&lt;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>seq_like::value_type,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>seq_like::allocator_type</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>container_type;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V,</highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,</highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F&gt;</highlight></codeline>
<codeline lineno="87" refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1map__like" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1map__like" kindref="compound">map_like</ref><sp/>:<sp/>ptr_to_value_aux::<ref refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1common" kindref="compound">common</ref>&lt;V&gt;{<sp/><sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>F&lt;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V::key_type,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>map_like::value_type,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V::key_compare,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>map_like::allocator_type</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>container_type;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V,</highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,</highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F&gt;</highlight></codeline>
<codeline lineno="99" refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1set__like" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1set__like" kindref="compound">set_like</ref><sp/>:<sp/>ptr_to_value_aux::<ref refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1common" kindref="compound">common</ref>&lt;V&gt;{<sp/><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>F&lt;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V::key_type,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V::key_compare,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>set_like::allocator_type</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>container_type;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,</highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F&gt;</highlight></codeline>
<codeline lineno="111" refid="classboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1unordered__map__like" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1unordered__map__like" kindref="compound">unordered_map_like</ref><sp/>:<sp/>ptr_to_value_aux::<ref refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1common" kindref="compound">common</ref>&lt;V&gt;{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>F&lt;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V::key_type,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>unordered_map_like::value_type,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V::hasher,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V::key_equal,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>unordered_map_like::allocator_type</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>container_type;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,</highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F&gt;</highlight></codeline>
<codeline lineno="125" refid="classboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1unordered__set__like" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1unordered__set__like" kindref="compound">unordered_set_like</ref><sp/>:<sp/>ptr_to_value_aux::<ref refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value__aux_1_1common" kindref="compound">common</ref>&lt;V&gt;{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>F&lt;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V::key_type,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V::hasher,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V::key_equal,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>unordered_set_like::allocator_type</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>container_type;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>ptr_to_value_aux</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>N,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;<sp/></highlight></codeline>
<codeline lineno="146" refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value_3_01boost_1_1ptr__arraye0eb40434bf86791e47025bbfb14967c" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value" kindref="compound">ptr_to_value</ref>&lt;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::ptr_array&lt;T,N,A&gt;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;<sp/>:<sp/>ptr_to_value_aux::static_array_like&lt;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::ptr_array&lt;T,N,A&gt;,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::array</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;{};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;<sp/></highlight></codeline>
<codeline lineno="160" refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value_3_01boost_1_1ptr__deque99eff50c839444d1f41b55d354c6c38e" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value" kindref="compound">ptr_to_value</ref>&lt;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::ptr_deque&lt;T,C,A&gt;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;<sp/>:<sp/>ptr_to_value_aux::seq_like&lt;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::ptr_deque&lt;T,C,A&gt;,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::deque</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;{};</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;<sp/></highlight></codeline>
<codeline lineno="172" refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value_3_01boost_1_1ptr__list_d27ac01a9fd7f371120e92ae03b685d6" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value" kindref="compound">ptr_to_value</ref>&lt;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::ptr_list&lt;T,C,A&gt;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;<sp/>:<sp/>ptr_to_value_aux::seq_like&lt;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::ptr_list&lt;T,C,A&gt;,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::list</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;{};</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;<sp/></highlight></codeline>
<codeline lineno="184" refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value_3_01boost_1_1ptr__vectoab165915a61073a82301b017e69f8da1" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1container__type__traits_1_1ptr__to__value" kindref="compound">ptr_to_value</ref>&lt;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::ptr_vector&lt;T,C,A&gt;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;<sp/>:<sp/>ptr_to_value_aux::seq_like&lt;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::ptr_vector&lt;T,C,A&gt;,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;{};</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>container_type_traits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>v2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>assign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>boost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/container/ptr_to_value.hpp"/>
  </compounddef>
</doxygen>
