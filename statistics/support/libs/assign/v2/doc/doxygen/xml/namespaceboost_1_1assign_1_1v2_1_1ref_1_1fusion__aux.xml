<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="namespaceboost_1_1assign_1_1v2_1_1ref_1_1fusion__aux" kind="namespace">
    <compoundname>boost::assign::v2::ref::fusion_aux</compoundname>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__aux_1_1interface" prot="public">boost::assign::v2::ref::fusion_aux::interface</innerclass>
    <innerclass refid="classboost_1_1assign_1_1v2_1_1ref_1_1fusion__aux_1_1container" prot="public">boost::assign::v2::ref::fusion_aux::container</innerclass>
    <innerclass refid="classboost_1_1assign_1_1v2_1_1ref_1_1fusion__aux_1_1head__holder" prot="public">boost::assign::v2::ref::fusion_aux::head_holder</innerclass>
    <innerclass refid="classboost_1_1assign_1_1v2_1_1ref_1_1fusion__aux_1_1head__holder_3_01_tag_00_01_t_00_01true_01_4" prot="public">boost::assign::v2::ref::fusion_aux::head_holder&lt; Tag, T, true &gt;</innerclass>
    <innerclass refid="classboost_1_1assign_1_1v2_1_1ref_1_1fusion__aux_1_1link__holder" prot="public">boost::assign::v2::ref::fusion_aux::link_holder</innerclass>
    <innerclass refid="classboost_1_1assign_1_1v2_1_1ref_1_1fusion__aux_1_1link__holder_3_01_l_00_01true_01_4" prot="public">boost::assign::v2::ref::fusion_aux::link_holder&lt; L, true &gt;</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__aux_1_1most__const" prot="public">boost::assign::v2::ref::fusion_aux::most_const</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__aux_1_1most__const_3_01fusion__aux_1_1root__type_00_01_t_01_4" prot="public">boost::assign::v2::ref::fusion_aux::most_const&lt; fusion_aux::root_type, T &gt;</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__aux_1_1empty" prot="public">boost::assign::v2::ref::fusion_aux::empty</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__aux_1_1nth__result" prot="public">boost::assign::v2::ref::fusion_aux::nth_result</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__aux_1_1policy" prot="public">boost::assign::v2::ref::fusion_aux::policy</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__aux_1_1policy_3_01boost_1_1use__default_01_4" prot="public">boost::assign::v2::ref::fusion_aux::policy&lt; boost::use_default &gt;</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__aux_1_1policy_3_01alloc__tag_1_1lazy__alloc_01_4" prot="public">boost::assign::v2::ref::fusion_aux::policy&lt; alloc_tag::lazy_alloc &gt;</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespaceboost_1_1assign_1_1v2_1_1ref_1_1fusion__aux_1a1823b0659ca7770f359dcc2859c0f764" prot="public" static="no">
        <type>boost::mpl::void_</type>
        <definition>typedef boost::mpl::void_ boost::assign::v2::ref::fusion_aux::nil_arg_type</definition>
        <argsstring></argsstring>
        <name>nil_arg_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/nil_arg.hpp" line="21" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/nil_arg.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceboost_1_1assign_1_1v2_1_1ref_1_1fusion__aux_1a9e9743603fbc501ca7ce31fd513951d4" prot="public" static="no">
        <type>boost::mpl::void_</type>
        <definition>typedef boost::mpl::void_ boost::assign::v2::ref::fusion_aux::root_type</definition>
        <argsstring></argsstring>
        <name>root_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/root.hpp" line="20" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/root.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceboost_1_1assign_1_1v2_1_1ref_1_1fusion__aux_1a3d4f6a68764b080e955bb407857dfa8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>K</declname>
            <defname>K</defname>
          </param>
          <param>
            <type>typename A</type>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type>typename L</type>
          </param>
          <param>
            <type>typename Tag1</type>
          </param>
          <param>
            <type>typename Tag2</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::assign::v2::ref::fusion_aux::assign_array</definition>
        <argsstring>(boost::mpl::true_, A &amp;a, const fusion_aux::container&lt; N, L, Tag1, Tag2, T &gt; &amp;f)</argsstring>
        <name>assign_array</name>
        <param>
          <type>boost::mpl::true_</type>
        </param>
        <param>
          <type>A &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1fusion__aux_1_1container" kindref="compound">fusion_aux::container</ref>&lt; N, L, Tag1, Tag2, T &gt; &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/assign_array.hpp" line="36" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/assign_array.hpp" bodystart="31" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1assign_1_1v2_1_1ref_1_1fusion__aux_1afeb72fdd9175b43a0323fc8baa459b5e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>K</declname>
            <defname>K</defname>
          </param>
          <param>
            <type>typename A</type>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type>typename L</type>
          </param>
          <param>
            <type>typename Tag1</type>
          </param>
          <param>
            <type>typename Tag2</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::assign::v2::ref::fusion_aux::assign_array</definition>
        <argsstring>(boost::mpl::false_, A &amp;a, const fusion_aux::container&lt; N, L, Tag1, Tag2, T &gt; &amp;f)</argsstring>
        <name>assign_array</name>
        <param>
          <type>boost::mpl::false_</type>
        </param>
        <param>
          <type>A &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1fusion__aux_1_1container" kindref="compound">fusion_aux::container</ref>&lt; N, L, Tag1, Tag2, T &gt; &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/assign_array.hpp" line="49" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/assign_array.hpp" bodystart="44" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1assign_1_1v2_1_1ref_1_1fusion__aux_1a75b023fe4d1fa0316405f29313ee34f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename A</type>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type>typename L</type>
          </param>
          <param>
            <type>typename Tag1</type>
          </param>
          <param>
            <type>typename Tag2</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::assign::v2::ref::fusion_aux::assign_array</definition>
        <argsstring>(A &amp;a, fusion_aux::container&lt; N, L, Tag1, Tag2, T &gt; const &amp;f)</argsstring>
        <name>assign_array</name>
        <param>
          <type>A &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1fusion__aux_1_1container" kindref="compound">fusion_aux::container</ref>&lt; N, L, Tag1, Tag2, T &gt; const &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/assign_array.hpp" line="65"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/assign_array.hpp" line="23"/>
  </compounddef>
</doxygen>
