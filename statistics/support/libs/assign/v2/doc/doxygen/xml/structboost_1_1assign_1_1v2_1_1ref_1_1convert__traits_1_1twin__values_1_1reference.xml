<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="structboost_1_1assign_1_1v2_1_1ref_1_1convert__traits_1_1twin__values_1_1reference" kind="struct" prot="public">
    <compoundname>boost::assign::v2::ref::convert_traits::twin_values::reference</compoundname>
    <templateparamlist>
      <param>
        <type>typename V</type>
      </param>
      <param>
        <type>bool</type>
        <declname>or_const</declname>
        <defname>or_const</defname>
      </param>
      <param>
        <type>bool</type>
        <declname>and_ref</declname>
        <defname>and_ref</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structboost_1_1assign_1_1v2_1_1ref_1_1convert__traits_1_1twin__values_1_1reference_1a38fad3e1c87b3499d733cf3541efa3b2" prot="public" static="no">
        <type><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1convert__traits_1_1add__const" kindref="compound">convert_traits::add_const</ref>&lt; V, or_const &gt;::type</type>
        <definition>typedef convert_traits::add_const&lt;V,or_const&gt;::type boost::assign::v2::ref::convert_traits::twin_values::reference&lt; V, or_const, and_ref &gt;::c_</definition>
        <argsstring></argsstring>
        <name>c_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/detail/convert_traits/twin_values.hpp" line="27" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/detail/convert_traits/twin_values.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structboost_1_1assign_1_1v2_1_1ref_1_1convert__traits_1_1twin__values_1_1reference_1a60bdda38be4b39e8c192f2345c14939a" prot="public" static="no">
        <type>boost::mpl::eval_if_c&lt; and_ref, boost::add_reference&lt; c_ &gt;, boost::mpl::identity&lt; c_ &gt; &gt;::type</type>
        <definition>typedef boost::mpl::eval_if_c&lt; and_ref, boost::add_reference&lt;c_&gt;, boost::mpl::identity&lt;c_&gt; &gt;::type boost::assign::v2::ref::convert_traits::twin_values::reference&lt; V, or_const, and_ref &gt;::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/detail/convert_traits/twin_values.hpp" line="32" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/detail/convert_traits/twin_values.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/detail/convert_traits/twin_values.hpp" line="26" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/detail/convert_traits/twin_values.hpp" bodystart="25" bodyend="33"/>
    <listofallmembers>
      <member refid="structboost_1_1assign_1_1v2_1_1ref_1_1convert__traits_1_1twin__values_1_1reference_1a38fad3e1c87b3499d733cf3541efa3b2" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::convert_traits::twin_values::reference</scope><name>c_</name></member>
      <member refid="structboost_1_1assign_1_1v2_1_1ref_1_1convert__traits_1_1twin__values_1_1reference_1a60bdda38be4b39e8c192f2345c14939a" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::convert_traits::twin_values::reference</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
