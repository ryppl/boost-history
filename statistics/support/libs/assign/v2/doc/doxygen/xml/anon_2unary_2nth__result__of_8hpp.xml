<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="anon_2unary_2nth__result__of_8hpp" kind="file">
    <compoundname>nth_result_of.hpp</compoundname>
    <includes refid="tag2_8hpp" local="no">boost/assign/v2/ref/anon/unary/tag2.hpp</includes>
    <includes refid="fusion_2nth__result__of_8hpp" local="no">boost/assign/v2/ref/fusion/nth_result_of.hpp</includes>
    <includedby refid="ref_2anon_2unary_2make_8hpp" local="no">/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/make.hpp</includedby>
    <includedby refid="unary_8hpp" local="no">/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/unary.hpp</includedby>
    <incdepgraph>
      <node id="14373">
        <label>boost/assign/v2/ref/fusion/root.hpp</label>
        <link refid="root_8hpp_source"/>
        <childnode refid="14364" relation="include">
        </childnode>
      </node>
      <node id="14365">
        <label>boost/mpl/vector.hpp</label>
      </node>
      <node id="14366">
        <label>boost/mpl/fold.hpp</label>
      </node>
      <node id="14361">
        <label>boost/assign/v2/ref/anon/unary/tag2.hpp</label>
        <link refid="tag2_8hpp_source"/>
        <childnode refid="14362" relation="include">
        </childnode>
      </node>
      <node id="14364">
        <label>boost/mpl/void.hpp</label>
      </node>
      <node id="14360">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/nth_result_of.hpp</label>
        <link refid="anon/unary/nth_result_of.hpp"/>
        <childnode refid="14361" relation="include">
        </childnode>
        <childnode refid="14363" relation="include">
        </childnode>
      </node>
      <node id="14368">
        <label>boost/mpl/eval_if.hpp</label>
      </node>
      <node id="14371">
        <label>boost/assign/v2/ref/wrapper/deduce_assign_tag.hpp</label>
        <link refid="deduce__assign__tag_8hpp_source"/>
        <childnode refid="14368" relation="include">
        </childnode>
        <childnode refid="14369" relation="include">
        </childnode>
        <childnode refid="14370" relation="include">
        </childnode>
      </node>
      <node id="14367">
        <label>boost/mpl/placeholders.hpp</label>
      </node>
      <node id="14369">
        <label>boost/mpl/identity.hpp</label>
      </node>
      <node id="14372">
        <label>boost/assign/v2/ref/fusion/fwd.hpp</label>
        <link refid="ref_2fusion_2fwd_8hpp_source"/>
      </node>
      <node id="14374">
        <label>boost/assign/v2/ref/fusion/nil_arg.hpp</label>
        <link refid="nil__arg_8hpp_source"/>
        <childnode refid="14364" relation="include">
        </childnode>
      </node>
      <node id="14363">
        <label>boost/assign/v2/ref/fusion/nth_result_of.hpp</label>
        <link refid="fusion_2nth__result__of_8hpp_source"/>
        <childnode refid="14364" relation="include">
        </childnode>
        <childnode refid="14365" relation="include">
        </childnode>
        <childnode refid="14366" relation="include">
        </childnode>
        <childnode refid="14367" relation="include">
        </childnode>
        <childnode refid="14368" relation="include">
        </childnode>
        <childnode refid="14369" relation="include">
        </childnode>
        <childnode refid="14370" relation="include">
        </childnode>
        <childnode refid="14371" relation="include">
        </childnode>
        <childnode refid="14372" relation="include">
        </childnode>
        <childnode refid="14373" relation="include">
        </childnode>
        <childnode refid="14374" relation="include">
        </childnode>
      </node>
      <node id="14362">
        <label>boost/assign/v2/ref/static_array/alloc/lazy_alloc_fwd.hpp</label>
        <link refid="static__array_2alloc_2lazy__alloc__fwd_8hpp_source"/>
      </node>
      <node id="14370">
        <label>boost/type_traits/is_same.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="14379">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/unary.hpp</label>
        <link refid="unary_8hpp_source"/>
        <childnode refid="14380" relation="include">
        </childnode>
      </node>
      <node id="14376">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/make.hpp</label>
        <link refid="ref_2anon_2unary_2make_8hpp_source"/>
        <childnode refid="14377" relation="include">
        </childnode>
        <childnode refid="14379" relation="include">
        </childnode>
      </node>
      <node id="14375">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/nth_result_of.hpp</label>
        <link refid="anon/unary/nth_result_of.hpp"/>
        <childnode refid="14376" relation="include">
        </childnode>
        <childnode refid="14379" relation="include">
        </childnode>
      </node>
      <node id="14380">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/anon.hpp</label>
        <link refid="ref_2anon_2anon_8hpp_source"/>
        <childnode refid="14381" relation="include">
        </childnode>
      </node>
      <node id="14382">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/v2.hpp</label>
        <link refid="v2_8hpp_source"/>
      </node>
      <node id="14378">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/assign_copy.hpp</label>
        <link refid="anon_2unary_2assign__copy_8hpp_source"/>
        <childnode refid="14379" relation="include">
        </childnode>
      </node>
      <node id="14381">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/ref.hpp</label>
        <link refid="ref_8hpp_source"/>
        <childnode refid="14382" relation="include">
        </childnode>
      </node>
      <node id="14377">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/assign_xxx.hpp</label>
        <link refid="anon_2unary_2assign__xxx_8hpp_source"/>
        <childnode refid="14378" relation="include">
        </childnode>
        <childnode refid="14383" relation="include">
        </childnode>
      </node>
      <node id="14383">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/assign_rebind.hpp</label>
        <link refid="anon_2unary_2assign__rebind_8hpp_source"/>
        <childnode refid="14379" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1ref_1_1anon__aux_1_1empty__anon" prot="public">boost::assign::v2::ref::anon_aux::empty_anon</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1ref_1_1anon__aux_1_1recursive__result" prot="public">boost::assign::v2::ref::anon_aux::recursive_result</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1ref_1_1anon__aux_1_1recursive__result_3_010_00_01_tag1_00_01_t_01_4" prot="public">boost::assign::v2::ref::anon_aux::recursive_result&lt; 0, Tag1, T &gt;</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1ref_1_1nth__result__of_1_1anon" prot="public">boost::assign::v2::ref::nth_result_of::anon</innerclass>
    <innernamespace refid="namespaceboost">boost</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign">boost::assign</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2">boost::assign::v2</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2_1_1ref">boost::assign::v2::ref</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2_1_1ref_1_1anon__aux">boost::assign::v2::ref::anon_aux</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2_1_1ref_1_1nth__result__of">boost::assign::v2::ref::nth_result_of</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="2"><highlight class="comment">//<sp/><sp/>Boost.Assign<sp/>v2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2003-2004<sp/>Thorsten<sp/>Ottosen<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2010<sp/>Erwann<sp/>Rogard<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Use,<sp/>modification<sp/>and<sp/>distribution<sp/>are<sp/>subject<sp/>to<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.<sp/>(See<sp/>accompanying<sp/>file<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at<sp/>http://www.boost.org/LICENSE_1_0.txt)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight><highlight class="preprocessor">#ifndef<sp/>BOOST_ASSIGN_V2_REF_ANON_UNARY_NTH_RESULT_OF2_ER_2010_HPP</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOOST_ASSIGN_V2_REF_ANON_UNARY_NTH_RESULT_OF2_ER_2010_HPP</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/v2/ref/anon/unary/tag2.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/v2/ref/fusion/nth_result_of.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">boost{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">assign{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">v2{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ref{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">anon_aux{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tag1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="22" refid="structboost_1_1assign_1_1v2_1_1ref_1_1anon__aux_1_1empty__anon" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1anon__aux_1_1empty__anon" kindref="compound">empty_anon</ref><sp/>:<sp/>fusion_aux::empty&lt;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tag1,<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anon_aux::unary_tag2_,<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;{};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tag1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="29" refid="structboost_1_1assign_1_1v2_1_1ref_1_1anon__aux_1_1recursive__result" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1anon__aux_1_1recursive__result" kindref="compound">recursive_result</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1anon__aux_1_1recursive__result" kindref="compound">recursive_result</ref>&lt;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N-1,<sp/>Tag1,<sp/>T</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;::type<sp/>previous_;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>previous_::template<sp/>result&lt;T&gt;::type<sp/>type;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tag1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="38" refid="structboost_1_1assign_1_1v2_1_1ref_1_1anon__aux_1_1recursive__result_3_010_00_01_tag1_00_01_t_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1anon__aux_1_1recursive__result" kindref="compound">recursive_result</ref>&lt;0,<sp/>Tag1,<sp/>T&gt;<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1anon__aux_1_1empty__anon" kindref="compound">empty_anon</ref>&lt;Tag1,<sp/>T&gt;{};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>anon_aux</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">nth_result_of{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tag1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="45" refid="structboost_1_1assign_1_1v2_1_1ref_1_1nth__result__of_1_1anon" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1nth__result__of_1_1anon" kindref="compound">anon</ref><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>anon_aux::recursive_result&lt;N,<sp/>Tag1,<sp/>T&gt;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>nth_result_of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>ref</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>v2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>assign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>boost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/nth_result_of.hpp"/>
  </compounddef>
</doxygen>
