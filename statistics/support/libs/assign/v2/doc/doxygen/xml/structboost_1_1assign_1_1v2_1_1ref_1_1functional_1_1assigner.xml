<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="structboost_1_1assign_1_1v2_1_1ref_1_1functional_1_1assigner" kind="struct" prot="public">
    <compoundname>boost::assign::v2::ref::functional::assigner</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structboost_1_1assign_1_1v2_1_1ref_1_1functional_1_1assigner_1a48a1fdce9d49f76741f635f41ac24132" prot="public" static="no">
        <type>boost::remove_const&lt; T &gt;::type</type>
        <definition>typedef boost::remove_const&lt;T&gt;::type boost::assign::v2::ref::functional::assigner&lt; T &gt;::lvalue_</definition>
        <argsstring></argsstring>
        <name>lvalue_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/wrapper/crtp.hpp" line="117" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/wrapper/crtp.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structboost_1_1assign_1_1v2_1_1ref_1_1functional_1_1assigner_1abc856b51585b9843af63e4e08aae79d3" prot="public" static="no">
        <type>boost::add_const&lt; T &gt;::type</type>
        <definition>typedef boost::add_const&lt;T&gt;::type boost::assign::v2::ref::functional::assigner&lt; T &gt;::rvalue_</definition>
        <argsstring></argsstring>
        <name>rvalue_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/wrapper/crtp.hpp" line="118" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/wrapper/crtp.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structboost_1_1assign_1_1v2_1_1ref_1_1functional_1_1assigner_1a3484c74231e16b6ab7d2a4fa35d2e7b2" prot="public" static="no">
        <type>void</type>
        <definition>typedef void boost::assign::v2::ref::functional::assigner&lt; T &gt;::result_type</definition>
        <argsstring></argsstring>
        <name>result_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/wrapper/crtp.hpp" line="120" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/wrapper/crtp.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structboost_1_1assign_1_1v2_1_1ref_1_1functional_1_1assigner_1a93004840b41b9811bcbc6daa5ef7da65" prot="private" static="no" mutable="yes">
        <type>T &amp;</type>
        <definition>T&amp; boost::assign::v2::ref::functional::assigner&lt; T &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/wrapper/crtp.hpp" line="140" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/wrapper/crtp.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structboost_1_1assign_1_1v2_1_1ref_1_1functional_1_1assigner_1a018959685231aa0e71796f35210e089b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::assign::v2::ref::functional::assigner&lt; T &gt;::assigner</definition>
        <argsstring>(T &amp;val)</argsstring>
        <name>assigner</name>
        <param>
          <type>T &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/wrapper/crtp.hpp" line="115" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/wrapper/crtp.hpp" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1assign_1_1v2_1_1ref_1_1functional_1_1assigner_1a8ef5a7930ab441644f7fae67e2cce6e4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::assign::v2::ref::functional::assigner&lt; T &gt;::operator()</definition>
        <argsstring>(wrapper_crtp&lt; D, lvalue_ &gt; &amp;w) const </argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1wrapper__crtp" kindref="compound">wrapper_crtp</ref>&lt; D, lvalue_ &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/wrapper/crtp.hpp" line="123" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/wrapper/crtp.hpp" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1assign_1_1v2_1_1ref_1_1functional_1_1assigner_1a6b8a2d374eb8a43303bb07aec8bcf8bd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::assign::v2::ref::functional::assigner&lt; T &gt;::operator()</definition>
        <argsstring>(wrapper_crtp&lt; D, rvalue_ &gt; &amp;w) const </argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1wrapper__crtp" kindref="compound">wrapper_crtp</ref>&lt; D, rvalue_ &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/wrapper/crtp.hpp" line="128" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/wrapper/crtp.hpp" bodystart="127" bodyend="130"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structboost_1_1assign_1_1v2_1_1ref_1_1functional_1_1assigner_1ab0708cb8d5989dc7d9422c2ad066af57" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::assign::v2::ref::functional::assigner&lt; T &gt;::impl</definition>
        <argsstring>(wrapper_crtp&lt; D, U &gt; &amp;w) const </argsstring>
        <name>impl</name>
        <param>
          <type><ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1wrapper__crtp" kindref="compound">wrapper_crtp</ref>&lt; D, U &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/wrapper/crtp.hpp" line="135" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/wrapper/crtp.hpp" bodystart="134" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1assign_1_1v2_1_1ref_1_1functional_1_1assigner_1a7c5aad0580873d921d7017757a97a0f7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>boost::assign::v2::ref::functional::assigner&lt; T &gt;::assigner</definition>
        <argsstring>()</argsstring>
        <name>assigner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/wrapper/crtp.hpp" line="139"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/wrapper/crtp.hpp" line="114" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/wrapper/crtp.hpp" bodystart="113" bodyend="141"/>
    <listofallmembers>
      <member refid="structboost_1_1assign_1_1v2_1_1ref_1_1functional_1_1assigner_1a018959685231aa0e71796f35210e089b" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::functional::assigner</scope><name>assigner</name></member>
      <member refid="structboost_1_1assign_1_1v2_1_1ref_1_1functional_1_1assigner_1a7c5aad0580873d921d7017757a97a0f7" prot="private" virt="non-virtual"><scope>boost::assign::v2::ref::functional::assigner</scope><name>assigner</name></member>
      <member refid="structboost_1_1assign_1_1v2_1_1ref_1_1functional_1_1assigner_1ab0708cb8d5989dc7d9422c2ad066af57" prot="private" virt="non-virtual"><scope>boost::assign::v2::ref::functional::assigner</scope><name>impl</name></member>
      <member refid="structboost_1_1assign_1_1v2_1_1ref_1_1functional_1_1assigner_1a48a1fdce9d49f76741f635f41ac24132" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::functional::assigner</scope><name>lvalue_</name></member>
      <member refid="structboost_1_1assign_1_1v2_1_1ref_1_1functional_1_1assigner_1a8ef5a7930ab441644f7fae67e2cce6e4" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::functional::assigner</scope><name>operator()</name></member>
      <member refid="structboost_1_1assign_1_1v2_1_1ref_1_1functional_1_1assigner_1a6b8a2d374eb8a43303bb07aec8bcf8bd" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::functional::assigner</scope><name>operator()</name></member>
      <member refid="structboost_1_1assign_1_1v2_1_1ref_1_1functional_1_1assigner_1a3484c74231e16b6ab7d2a4fa35d2e7b2" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::functional::assigner</scope><name>result_type</name></member>
      <member refid="structboost_1_1assign_1_1v2_1_1ref_1_1functional_1_1assigner_1abc856b51585b9843af63e4e08aae79d3" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::functional::assigner</scope><name>rvalue_</name></member>
      <member refid="structboost_1_1assign_1_1v2_1_1ref_1_1functional_1_1assigner_1a93004840b41b9811bcbc6daa5ef7da65" prot="private" virt="non-virtual"><scope>boost::assign::v2::ref::functional::assigner</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
