<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="static__array_2interface_8hpp" kind="file">
    <compoundname>interface.hpp</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">boost/mpl/bool.hpp</includes>
    <includes local="no">boost/mpl/int.hpp</includes>
    <includes local="no">boost/utility/enable_if.hpp</includes>
    <includes local="no">boost/type_traits/is_same.hpp</includes>
    <includes local="no">boost/type_traits/remove_const.hpp</includes>
    <includes local="no">boost/type_traits/add_const.hpp</includes>
    <includes local="no">boost/array.hpp</includes>
    <includes local="no">boost/range.hpp</includes>
    <includes local="no">boost/call_traits.hpp</includes>
    <includes local="no">boost/range/algorithm/for_each.hpp</includes>
    <includes local="no">boost/range/iterator_range.hpp</includes>
    <includes refid="framework_8hpp" local="no">boost/assign/v2/ref/wrapper/framework.hpp</includes>
    <includes refid="ref_2wrapper_2crtp_8hpp" local="no">boost/assign/v2/ref/wrapper/crtp.hpp</includes>
    <includes refid="ref_2detail_2unwrap_2range_8hpp" local="no">boost/assign/v2/ref/detail/unwrap/range.hpp</includes>
    <includes refid="relational__op_2relational__op_8hpp" local="no">boost/assign/v2/detail/relational_op/relational_op.hpp</includes>
    <includes refid="convert_8hpp" local="no">boost/assign/v2/put/range/convert.hpp</includes>
    <includedby refid="static__array_2alloc_2fast__alloc_8hpp" local="no">/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/fast_alloc.hpp</includedby>
    <includedby refid="static__array_2alloc_2lazy__alloc_8hpp" local="no">/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/lazy_alloc.hpp</includedby>
    <includedby refid="static__array_8hpp" local="no">/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/static_array.hpp</includedby>
    <incdepgraph>
      <node id="14974">
        <label>boost/assign/v2/put/modifier/def.hpp</label>
        <link refid="def_8hpp_source"/>
      </node>
      <node id="14966">
        <label>boost/mpl/size.hpp</label>
      </node>
      <node id="14890">
        <label>boost/type_traits/remove_cv.hpp</label>
      </node>
      <node id="14960">
        <label>boost/assign/v2/detail/type_traits/container/forward_to_value.hpp</label>
        <link refid="forward__to__value_8hpp_source"/>
        <childnode refid="14961" relation="include">
        </childnode>
      </node>
      <node id="14926">
        <label>boost/mpl/always.hpp</label>
      </node>
      <node id="14962">
        <label>boost/assign/v2/detail/type_traits/container/ptr_to_value_container.hpp</label>
        <link refid="ptr__to__value__container_8hpp_source"/>
        <childnode refid="14931" relation="include">
        </childnode>
      </node>
      <node id="14876">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="14944">
        <label>boost/mpl/vector.hpp</label>
      </node>
      <node id="14929">
        <label>boost/assign/v2/detail/config/limit_arity.hpp</label>
        <link refid="limit__arity_8hpp_source"/>
        <childnode refid="14921" relation="include">
        </childnode>
        <childnode refid="14930" relation="include">
        </childnode>
      </node>
      <node id="14927">
        <label>boost/mpl/apply.hpp</label>
      </node>
      <node id="14891">
        <label>boost/assign/v2/ref/wrapper/base.hpp</label>
        <link refid="ref_2wrapper_2base_8hpp_source"/>
        <childnode refid="14892" relation="include">
        </childnode>
        <childnode refid="14893" relation="include">
        </childnode>
      </node>
      <node id="14967">
        <label>boost/assign/v2/detail/functor/new.hpp</label>
        <link refid="new_8hpp_source"/>
        <childnode refid="14933" relation="include">
        </childnode>
        <childnode refid="14940" relation="include">
        </childnode>
        <childnode refid="14923" relation="include">
        </childnode>
        <childnode refid="14924" relation="include">
        </childnode>
        <childnode refid="14910" relation="include">
        </childnode>
        <childnode refid="14890" relation="include">
        </childnode>
        <childnode refid="14926" relation="include">
        </childnode>
        <childnode refid="14957" relation="include">
        </childnode>
        <childnode refid="14929" relation="include">
        </childnode>
        <childnode refid="14939" relation="include">
        </childnode>
      </node>
      <node id="14909">
        <label>boost/type_traits/is_reference.hpp</label>
      </node>
      <node id="14940">
        <label>boost/preprocessor/repetition/repeat_from_to.hpp</label>
      </node>
      <node id="14900">
        <label>boost/range/end.hpp</label>
      </node>
      <node id="14955">
        <label>boost/preprocessor/tuple/to_seq.hpp</label>
      </node>
      <node id="14978">
        <label>boost/typeof/typeof.hpp</label>
      </node>
      <node id="14901">
        <label>boost/range/iterator.hpp</label>
      </node>
      <node id="14989">
        <label>boost/assign/v2/detail/type_traits/container/is_set.hpp</label>
        <link refid="is__set_8hpp_source"/>
        <childnode refid="14872" relation="include">
        </childnode>
        <childnode refid="14890" relation="include">
        </childnode>
        <childnode refid="14935" relation="include">
        </childnode>
        <childnode refid="14931" relation="include">
        </childnode>
        <childnode refid="14960" relation="include">
        </childnode>
      </node>
      <node id="14918">
        <label>boost/assign/v2/put/sub/make.hpp</label>
        <link refid="put_2sub_2make_8hpp_source"/>
        <childnode refid="14889" relation="include">
        </childnode>
        <childnode refid="14919" relation="include">
        </childnode>
        <childnode refid="14977" relation="include">
        </childnode>
      </node>
      <node id="14928">
        <label>boost/assign/v2/detail/config/limit_csv_arity.hpp</label>
        <link refid="limit__csv__arity_8hpp_source"/>
      </node>
      <node id="14893">
        <label>boost/type_traits/is_const.hpp</label>
      </node>
      <node id="14968">
        <label>boost/assign/v2/detail/keyword/keyword.hpp</label>
        <link refid="detail_2keyword_2keyword_8hpp_source"/>
        <childnode refid="14969" relation="include">
        </childnode>
        <childnode refid="14970" relation="include">
        </childnode>
      </node>
      <node id="15006">
        <label>boost/range/algorithm/copy.hpp</label>
      </node>
      <node id="14948">
        <label>boost/assign/v2/detail/pp/args.hpp</label>
        <link refid="args_8hpp_source"/>
        <childnode refid="14922" relation="include">
        </childnode>
        <childnode refid="14949" relation="include">
        </childnode>
        <childnode refid="14923" relation="include">
        </childnode>
        <childnode refid="14950" relation="include">
        </childnode>
        <childnode refid="14951" relation="include">
        </childnode>
      </node>
      <node id="14916">
        <label>boost/assign/v2/put/range/modifier/modifier.hpp</label>
        <link refid="range_2modifier_2modifier_8hpp_source"/>
        <childnode refid="14917" relation="include">
        </childnode>
        <childnode refid="15001" relation="include">
        </childnode>
        <childnode refid="15007" relation="include">
        </childnode>
        <childnode refid="15008" relation="include">
        </childnode>
      </node>
      <node id="14899">
        <label>boost/range/begin.hpp</label>
      </node>
      <node id="15003">
        <label>stdexcept</label>
      </node>
      <node id="14915">
        <label>boost/assign/v2/put/range/adaptor.hpp</label>
        <link refid="put_2range_2adaptor_8hpp_source"/>
        <childnode refid="14916" relation="include">
        </childnode>
      </node>
      <node id="14906">
        <label>boost/iterator/iterator_adaptor.hpp</label>
      </node>
      <node id="14877">
        <label>boost/type_traits/add_const.hpp</label>
      </node>
      <node id="14885">
        <label>boost/assign/v2/ref/wrapper/wrapper.hpp</label>
        <link refid="ref_2wrapper_2wrapper_8hpp_source"/>
        <childnode refid="14886" relation="include">
        </childnode>
        <childnode refid="14889" relation="include">
        </childnode>
        <childnode refid="14896" relation="include">
        </childnode>
      </node>
      <node id="15004">
        <label>boost/throw_exception.hpp</label>
      </node>
      <node id="15002">
        <label>string</label>
      </node>
      <node id="14965">
        <label>boost/mpl/at.hpp</label>
      </node>
      <node id="14903">
        <label>boost/mpl/assert.hpp</label>
      </node>
      <node id="14938">
        <label>boost/assign/v2/detail/functor/functor.hpp</label>
        <link refid="detail_2functor_2functor_8hpp_source"/>
        <childnode refid="14939" relation="include">
        </childnode>
        <childnode refid="14956" relation="include">
        </childnode>
        <childnode refid="14963" relation="include">
        </childnode>
        <childnode refid="14967" relation="include">
        </childnode>
      </node>
      <node id="14921">
        <label>boost/preprocessor/arithmetic/inc.hpp</label>
      </node>
      <node id="14912">
        <label>boost/assign/v2/detail/relational_op/crtp.hpp</label>
        <link refid="detail_2relational__op_2crtp_8hpp_source"/>
        <childnode refid="14874" relation="include">
        </childnode>
        <childnode refid="14913" relation="include">
        </childnode>
      </node>
      <node id="14936">
        <label>boost/assign/v2/detail/type_traits/container/static_size.hpp</label>
        <link refid="static__size_8hpp_source"/>
        <childnode refid="14937" relation="include">
        </childnode>
        <childnode refid="14935" relation="include">
        </childnode>
        <childnode refid="14934" relation="include">
        </childnode>
      </node>
      <node id="14905">
        <label>boost/type_traits/remove_reference.hpp</label>
      </node>
      <node id="14986">
        <label>boost/assign/v2/detail/type_traits/container/is_associative.hpp</label>
        <link refid="is__associative_8hpp_source"/>
        <childnode refid="14987" relation="include">
        </childnode>
        <childnode refid="14988" relation="include">
        </childnode>
        <childnode refid="14989" relation="include">
        </childnode>
      </node>
      <node id="14976">
        <label>boost/mpl/void.hpp</label>
      </node>
      <node id="14985">
        <label>boost/type_traits/detail/yes_no_type.hpp</label>
      </node>
      <node id="14937">
        <label>boost/mpl/size_t.hpp</label>
      </node>
      <node id="14917">
        <label>boost/assign/v2/put/range/modifier/put.hpp</label>
        <link refid="range_2modifier_2put_8hpp_source"/>
        <childnode refid="14881" relation="include">
        </childnode>
        <childnode refid="14918" relation="include">
        </childnode>
      </node>
      <node id="15007">
        <label>boost/assign/v2/put/range/modifier/range.hpp</label>
        <link refid="put_2range_2modifier_2range_8hpp_source"/>
        <childnode refid="14899" relation="include">
        </childnode>
        <childnode refid="14900" relation="include">
        </childnode>
      </node>
      <node id="14887">
        <label>boost/mpl/eval_if.hpp</label>
      </node>
      <node id="14999">
        <label>boost/assign/v2/put/generic/expose_modifier.hpp</label>
        <link refid="expose__modifier_8hpp_source"/>
        <childnode refid="14974" relation="include">
        </childnode>
      </node>
      <node id="14988">
        <label>boost/assign/v2/detail/type_traits/container/is_map.hpp</label>
        <link refid="is__map_8hpp_source"/>
        <childnode refid="14872" relation="include">
        </childnode>
        <childnode refid="14890" relation="include">
        </childnode>
        <childnode refid="14935" relation="include">
        </childnode>
        <childnode refid="14931" relation="include">
        </childnode>
        <childnode refid="14960" relation="include">
        </childnode>
      </node>
      <node id="14889">
        <label>boost/assign/v2/ref/wrapper/copy.hpp</label>
        <link refid="ref_2wrapper_2copy_8hpp_source"/>
        <childnode refid="14871" relation="include">
        </childnode>
        <childnode refid="14872" relation="include">
        </childnode>
        <childnode refid="14880" relation="include">
        </childnode>
        <childnode refid="14890" relation="include">
        </childnode>
        <childnode refid="14883" relation="include">
        </childnode>
        <childnode refid="14891" relation="include">
        </childnode>
        <childnode refid="14894" relation="include">
        </childnode>
      </node>
      <node id="14954">
        <label>boost/assign/v2/detail/pp/seq.hpp</label>
        <link refid="seq_8hpp_source"/>
        <childnode refid="14955" relation="include">
        </childnode>
      </node>
      <node id="14910">
        <label>boost/range/reference.hpp</label>
      </node>
      <node id="14886">
        <label>boost/assign/v2/ref/wrapper/deduce_assign_tag.hpp</label>
        <link refid="deduce__assign__tag_8hpp_source"/>
        <childnode refid="14887" relation="include">
        </childnode>
        <childnode refid="14888" relation="include">
        </childnode>
        <childnode refid="14875" relation="include">
        </childnode>
      </node>
      <node id="14995">
        <label>boost/assign/v2/put/modifier/push_back.hpp</label>
        <link refid="push__back_8hpp_source"/>
        <childnode refid="14993" relation="include">
        </childnode>
      </node>
      <node id="14951">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="15000">
        <label>boost/assign/v2/put/generic/expose_fun.hpp</label>
        <link refid="expose__fun_8hpp_source"/>
      </node>
      <node id="14994">
        <label>boost/assign/v2/put/modifier/push.hpp</label>
        <link refid="push_8hpp_source"/>
        <childnode refid="14993" relation="include">
        </childnode>
      </node>
      <node id="14902">
        <label>boost/assign/v2/ref/detail/unwrap/iterator.hpp</label>
        <link refid="ref_2detail_2unwrap_2iterator_8hpp_source"/>
        <childnode refid="14903" relation="include">
        </childnode>
        <childnode refid="14872" relation="include">
        </childnode>
        <childnode refid="14904" relation="include">
        </childnode>
        <childnode refid="14890" relation="include">
        </childnode>
        <childnode refid="14905" relation="include">
        </childnode>
        <childnode refid="14877" relation="include">
        </childnode>
        <childnode refid="14906" relation="include">
        </childnode>
        <childnode refid="14907" relation="include">
        </childnode>
      </node>
      <node id="14920">
        <label>boost/preprocessor/arithmetic/add.hpp</label>
      </node>
      <node id="14970">
        <label>boost/assign/v2/detail/keyword/unwrap.hpp</label>
        <link refid="unwrap_8hpp_source"/>
      </node>
      <node id="14879">
        <label>boost/range.hpp</label>
      </node>
      <node id="14991">
        <label>boost/assign/v2/put/generic/new_fun.hpp</label>
        <link refid="new__fun_8hpp_source"/>
        <childnode refid="14927" relation="include">
        </childnode>
        <childnode refid="14976" relation="include">
        </childnode>
        <childnode refid="14874" relation="include">
        </childnode>
        <childnode refid="14875" relation="include">
        </childnode>
        <childnode refid="14977" relation="include">
        </childnode>
      </node>
      <node id="14996">
        <label>boost/assign/v2/put/modifier/push_front.hpp</label>
        <link refid="push__front_8hpp_source"/>
        <childnode refid="14993" relation="include">
        </childnode>
      </node>
      <node id="14982">
        <label>boost/assign/v2/detail/type_traits/container/is_static_array.hpp</label>
        <link refid="is__static__array_8hpp_source"/>
        <childnode refid="14890" relation="include">
        </childnode>
        <childnode refid="14983" relation="include">
        </childnode>
        <childnode refid="14960" relation="include">
        </childnode>
      </node>
      <node id="14874">
        <label>boost/utility/enable_if.hpp</label>
      </node>
      <node id="14932">
        <label>boost/assign/v2/detail/type_traits/container/ptr_to_value.hpp</label>
        <link refid="ptr__to__value_8hpp_source"/>
        <childnode refid="14933" relation="include">
        </childnode>
        <childnode refid="14922" relation="include">
        </childnode>
        <childnode refid="14872" relation="include">
        </childnode>
        <childnode refid="14905" relation="include">
        </childnode>
        <childnode refid="14934" relation="include">
        </childnode>
        <childnode refid="14935" relation="include">
        </childnode>
        <childnode refid="14936" relation="include">
        </childnode>
      </node>
      <node id="14935">
        <label>boost/assign/v2/detail/fwd/container.hpp</label>
        <link refid="detail_2fwd_2container_8hpp_source"/>
      </node>
      <node id="14979">
        <label>boost/assign/v2/put/modifier/deduce.hpp</label>
        <link refid="put_2modifier_2deduce_8hpp_source"/>
        <childnode refid="14887" relation="include">
        </childnode>
        <childnode refid="14875" relation="include">
        </childnode>
        <childnode refid="14888" relation="include">
        </childnode>
        <childnode refid="14980" relation="include">
        </childnode>
        <childnode refid="14982" relation="include">
        </childnode>
        <childnode refid="14984" relation="include">
        </childnode>
        <childnode refid="14986" relation="include">
        </childnode>
      </node>
      <node id="14981">
        <label>boost/mpl/placeholders.hpp</label>
      </node>
      <node id="14945">
        <label>boost/assign/v2/detail/config/limit_lvalue_const_arity.hpp</label>
        <link refid="limit__lvalue__const__arity_8hpp_source"/>
        <childnode refid="14921" relation="include">
        </childnode>
        <childnode refid="14930" relation="include">
        </childnode>
        <childnode refid="14929" relation="include">
        </childnode>
      </node>
      <node id="14923">
        <label>boost/preprocessor/repetition/enum_params.hpp</label>
      </node>
      <node id="14984">
        <label>boost/assign/v2/detail/type_traits/container/has_push.hpp</label>
        <link refid="has__push_8hpp_source"/>
        <childnode refid="14872" relation="include">
        </childnode>
        <childnode refid="14877" relation="include">
        </childnode>
        <childnode refid="14892" relation="include">
        </childnode>
        <childnode refid="14985" relation="include">
        </childnode>
        <childnode refid="14957" relation="include">
        </childnode>
      </node>
      <node id="14961">
        <label>boost/assign/v2/detail/type_traits/container/value_container.hpp</label>
        <link refid="value__container_8hpp_source"/>
        <childnode refid="14888" relation="include">
        </childnode>
        <childnode refid="14887" relation="include">
        </childnode>
        <childnode refid="14931" relation="include">
        </childnode>
        <childnode refid="14962" relation="include">
        </childnode>
      </node>
      <node id="14973">
        <label>boost/accumulators/framework/accumulator_base.hpp</label>
      </node>
      <node id="14897">
        <label>boost/assign/v2/ref/detail/unwrap/range.hpp</label>
        <link refid="ref_2detail_2unwrap_2range_8hpp_source"/>
        <childnode refid="14898" relation="include">
        </childnode>
        <childnode refid="14899" relation="include">
        </childnode>
        <childnode refid="14900" relation="include">
        </childnode>
        <childnode refid="14901" relation="include">
        </childnode>
        <childnode refid="14882" relation="include">
        </childnode>
        <childnode refid="14902" relation="include">
        </childnode>
      </node>
      <node id="14969">
        <label>boost/assign/v2/detail/keyword/nil.hpp</label>
        <link refid="nil_8hpp_source"/>
      </node>
      <node id="14977">
        <label>boost/assign/v2/put/generic/result_of_modulo.hpp</label>
        <link refid="result__of__modulo_8hpp_source"/>
        <childnode refid="14927" relation="include">
        </childnode>
        <childnode refid="14978" relation="include">
        </childnode>
      </node>
      <node id="14934">
        <label>boost/assign/v2/detail/fwd/ptr_container.hpp</label>
        <link refid="ptr__container_8hpp_source"/>
      </node>
      <node id="14873">
        <label>boost/mpl/int.hpp</label>
      </node>
      <node id="14904">
        <label>boost/type_traits/is_convertible.hpp</label>
      </node>
      <node id="15001">
        <label>boost/assign/v2/put/range/modifier/copy.hpp</label>
        <link refid="put_2range_2modifier_2copy_8hpp_source"/>
        <childnode refid="15002" relation="include">
        </childnode>
        <childnode refid="15003" relation="include">
        </childnode>
        <childnode refid="15004" relation="include">
        </childnode>
        <childnode refid="14899" relation="include">
        </childnode>
        <childnode refid="15005" relation="include">
        </childnode>
        <childnode refid="15006" relation="include">
        </childnode>
      </node>
      <node id="14924">
        <label>boost/preprocessor/repetition/enum_binary_params.hpp</label>
      </node>
      <node id="14888">
        <label>boost/mpl/identity.hpp</label>
      </node>
      <node id="14896">
        <label>boost/assign/v2/ref/wrapper/rebind.hpp</label>
        <link refid="rebind_8hpp_source"/>
        <childnode refid="14871" relation="include">
        </childnode>
        <childnode refid="14883" relation="include">
        </childnode>
        <childnode refid="14891" relation="include">
        </childnode>
        <childnode refid="14894" relation="include">
        </childnode>
      </node>
      <node id="14880">
        <label>boost/call_traits.hpp</label>
      </node>
      <node id="14911">
        <label>boost/assign/v2/detail/relational_op/relational_op.hpp</label>
        <link refid="relational__op_2relational__op_8hpp_source"/>
        <childnode refid="14912" relation="include">
        </childnode>
      </node>
      <node id="14942">
        <label>boost/preprocessor/seq/for_each_product.hpp</label>
      </node>
      <node id="14882">
        <label>boost/range/iterator_range.hpp</label>
      </node>
      <node id="14990">
        <label>boost/assign/v2/put/modifier/incr_lookup.hpp</label>
        <link refid="incr__lookup_8hpp_source"/>
        <childnode refid="14927" relation="include">
        </childnode>
        <childnode refid="14973" relation="include">
        </childnode>
        <childnode refid="14974" relation="include">
        </childnode>
        <childnode refid="14959" relation="include">
        </childnode>
        <childnode refid="14963" relation="include">
        </childnode>
        <childnode refid="14991" relation="include">
        </childnode>
        <childnode refid="14975" relation="include">
        </childnode>
        <childnode refid="14977" relation="include">
        </childnode>
      </node>
      <node id="14884">
        <label>boost/ref.hpp</label>
      </node>
      <node id="14987">
        <label>boost/mpl/or.hpp</label>
      </node>
      <node id="14925">
        <label>boost/preprocessor/repeat_from_to.hpp</label>
      </node>
      <node id="14939">
        <label>boost/assign/v2/detail/functor/crtp_unary_and_up.hpp</label>
        <link refid="crtp__unary__and__up_8hpp_source"/>
        <childnode refid="14921" relation="include">
        </childnode>
        <childnode refid="14940" relation="include">
        </childnode>
        <childnode refid="14924" relation="include">
        </childnode>
        <childnode refid="14923" relation="include">
        </childnode>
        <childnode refid="14941" relation="include">
        </childnode>
        <childnode refid="14942" relation="include">
        </childnode>
        <childnode refid="14943" relation="include">
        </childnode>
        <childnode refid="14927" relation="include">
        </childnode>
        <childnode refid="14944" relation="include">
        </childnode>
        <childnode refid="14874" relation="include">
        </childnode>
        <childnode refid="14929" relation="include">
        </childnode>
        <childnode refid="14945" relation="include">
        </childnode>
        <childnode refid="14946" relation="include">
        </childnode>
        <childnode refid="14948" relation="include">
        </childnode>
        <childnode refid="14952" relation="include">
        </childnode>
        <childnode refid="14954" relation="include">
        </childnode>
      </node>
      <node id="14993">
        <label>boost/assign/v2/put/modifier/xxx.hpp</label>
        <link refid="xxx_8hpp_source"/>
        <childnode refid="14922" relation="include">
        </childnode>
        <childnode refid="14973" relation="include">
        </childnode>
        <childnode refid="14974" relation="include">
        </childnode>
        <childnode refid="14975" relation="include">
        </childnode>
      </node>
      <node id="14941">
        <label>boost/preprocessor/repetition/repeat.hpp</label>
      </node>
      <node id="14997">
        <label>boost/assign/v2/put/modifier/repeat.hpp</label>
        <link refid="put_2modifier_2repeat_8hpp_source"/>
        <childnode refid="14913" relation="include">
        </childnode>
        <childnode refid="14874" relation="include">
        </childnode>
        <childnode refid="14973" relation="include">
        </childnode>
        <childnode refid="14974" relation="include">
        </childnode>
        <childnode refid="14998" relation="include">
        </childnode>
        <childnode refid="14975" relation="include">
        </childnode>
        <childnode refid="14889" relation="include">
        </childnode>
      </node>
      <node id="14883">
        <label>boost/assign/v2/ref/wrapper/framework.hpp</label>
        <link refid="framework_8hpp_source"/>
        <childnode refid="14872" relation="include">
        </childnode>
        <childnode refid="14884" relation="include">
        </childnode>
        <childnode refid="14885" relation="include">
        </childnode>
      </node>
      <node id="14963">
        <label>boost/assign/v2/detail/functor/identity.hpp</label>
        <link refid="identity_8hpp_source"/>
        <childnode refid="14964" relation="include">
        </childnode>
        <childnode refid="14965" relation="include">
        </childnode>
        <childnode refid="14873" relation="include">
        </childnode>
        <childnode refid="14966" relation="include">
        </childnode>
        <childnode refid="14887" relation="include">
        </childnode>
        <childnode refid="14898" relation="include">
        </childnode>
        <childnode refid="14939" relation="include">
        </childnode>
      </node>
      <node id="14959">
        <label>boost/assign/v2/detail/type_traits/value.hpp</label>
        <link refid="value_8hpp_source"/>
        <childnode refid="14890" relation="include">
        </childnode>
        <childnode refid="14888" relation="include">
        </childnode>
      </node>
      <node id="14919">
        <label>boost/assign/v2/put/generic/crtp.hpp</label>
        <link refid="put_2generic_2crtp_8hpp_source"/>
        <childnode refid="14920" relation="include">
        </childnode>
        <childnode refid="14921" relation="include">
        </childnode>
        <childnode refid="14922" relation="include">
        </childnode>
        <childnode refid="14923" relation="include">
        </childnode>
        <childnode refid="14924" relation="include">
        </childnode>
        <childnode refid="14925" relation="include">
        </childnode>
        <childnode refid="14926" relation="include">
        </childnode>
        <childnode refid="14927" relation="include">
        </childnode>
        <childnode refid="14887" relation="include">
        </childnode>
        <childnode refid="14890" relation="include">
        </childnode>
        <childnode refid="14910" relation="include">
        </childnode>
        <childnode refid="14928" relation="include">
        </childnode>
        <childnode refid="14929" relation="include">
        </childnode>
        <childnode refid="14931" relation="include">
        </childnode>
        <childnode refid="14938" relation="include">
        </childnode>
        <childnode refid="14968" relation="include">
        </childnode>
        <childnode refid="14946" relation="include">
        </childnode>
        <childnode refid="14971" relation="include">
        </childnode>
        <childnode refid="14977" relation="include">
        </childnode>
        <childnode refid="14999" relation="include">
        </childnode>
        <childnode refid="15000" relation="include">
        </childnode>
        <childnode refid="14998" relation="include">
        </childnode>
      </node>
      <node id="14922">
        <label>boost/preprocessor/cat.hpp</label>
      </node>
      <node id="14943">
        <label>boost/preprocessor/seq/first_n.hpp</label>
      </node>
      <node id="14953">
        <label>boost/preprocessor/seq/enum.hpp</label>
      </node>
      <node id="14930">
        <label>boost/mpl/limits/arity.hpp</label>
      </node>
      <node id="14914">
        <label>boost/assign/v2/put/range/convert.hpp</label>
        <link refid="convert_8hpp_source"/>
        <childnode refid="14915" relation="include">
        </childnode>
      </node>
      <node id="14895">
        <label>boost/operators.hpp</label>
      </node>
      <node id="14892">
        <label>boost/config.hpp</label>
      </node>
      <node id="14907">
        <label>boost/assign/v2/ref/detail/unwrap/reference.hpp</label>
        <link refid="reference_8hpp_source"/>
        <childnode refid="14903" relation="include">
        </childnode>
        <childnode refid="14887" relation="include">
        </childnode>
        <childnode refid="14888" relation="include">
        </childnode>
        <childnode refid="14908" relation="include">
        </childnode>
        <childnode refid="14909" relation="include">
        </childnode>
        <childnode refid="14898" relation="include">
        </childnode>
        <childnode refid="14905" relation="include">
        </childnode>
        <childnode refid="14910" relation="include">
        </childnode>
        <childnode refid="14883" relation="include">
        </childnode>
      </node>
      <node id="14878">
        <label>boost/array.hpp</label>
      </node>
      <node id="14950">
        <label>boost/preprocessor/seq/for_each_i.hpp</label>
      </node>
      <node id="14913">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
      <node id="14972">
        <label>boost/assign/v2/put/modifier/at_next.hpp</label>
        <link refid="at__next_8hpp_source"/>
        <childnode refid="14973" relation="include">
        </childnode>
        <childnode refid="14974" relation="include">
        </childnode>
        <childnode refid="14975" relation="include">
        </childnode>
        <childnode refid="14959" relation="include">
        </childnode>
      </node>
      <node id="15008">
        <label>boost/assign/v2/put/range/modifier/deduce.hpp</label>
        <link refid="put_2range_2modifier_2deduce_8hpp_source"/>
        <childnode refid="14983" relation="include">
        </childnode>
        <childnode refid="14984" relation="include">
        </childnode>
        <childnode refid="14980" relation="include">
        </childnode>
      </node>
      <node id="14947">
        <label>boost/preprocessor/logical/and.hpp</label>
      </node>
      <node id="14992">
        <label>boost/assign/v2/put/modifier/insert.hpp</label>
        <link refid="insert_8hpp_source"/>
        <childnode refid="14993" relation="include">
        </childnode>
      </node>
      <node id="14881">
        <label>boost/range/algorithm/for_each.hpp</label>
      </node>
      <node id="15005">
        <label>boost/range/size.hpp</label>
      </node>
      <node id="14975">
        <label>boost/assign/v2/put/generic/new_modifier.hpp</label>
        <link refid="new__modifier_8hpp_source"/>
        <childnode refid="14927" relation="include">
        </childnode>
        <childnode refid="14976" relation="include">
        </childnode>
        <childnode refid="14874" relation="include">
        </childnode>
        <childnode refid="14875" relation="include">
        </childnode>
        <childnode refid="14977" relation="include">
        </childnode>
      </node>
      <node id="14908">
        <label>boost/iterator/iterator_traits.hpp</label>
      </node>
      <node id="14957">
        <label>boost/assign/v2/detail/type_traits/container/value.hpp</label>
        <link refid="container_2value_8hpp_source"/>
        <childnode refid="14887" relation="include">
        </childnode>
        <childnode refid="14888" relation="include">
        </childnode>
        <childnode refid="14958" relation="include">
        </childnode>
        <childnode refid="14959" relation="include">
        </childnode>
        <childnode refid="14960" relation="include">
        </childnode>
      </node>
      <node id="14871">
        <label>algorithm</label>
      </node>
      <node id="14958">
        <label>boost/type_traits/remove_pointer.hpp</label>
      </node>
      <node id="14931">
        <label>boost/assign/v2/detail/type_traits/container/is_ptr_container.hpp</label>
        <link refid="is__ptr__container_8hpp_source"/>
        <childnode refid="14888" relation="include">
        </childnode>
        <childnode refid="14887" relation="include">
        </childnode>
        <childnode refid="14932" relation="include">
        </childnode>
      </node>
      <node id="14956">
        <label>boost/assign/v2/detail/functor/constructor.hpp</label>
        <link refid="constructor_8hpp_source"/>
        <childnode refid="14940" relation="include">
        </childnode>
        <childnode refid="14923" relation="include">
        </childnode>
        <childnode refid="14924" relation="include">
        </childnode>
        <childnode refid="14910" relation="include">
        </childnode>
        <childnode refid="14890" relation="include">
        </childnode>
        <childnode refid="14926" relation="include">
        </childnode>
        <childnode refid="14957" relation="include">
        </childnode>
        <childnode refid="14929" relation="include">
        </childnode>
        <childnode refid="14939" relation="include">
        </childnode>
      </node>
      <node id="14980">
        <label>boost/assign/v2/detail/mpl/switch.hpp</label>
        <link refid="switch_8hpp_source"/>
        <childnode refid="14872" relation="include">
        </childnode>
        <childnode refid="14887" relation="include">
        </childnode>
        <childnode refid="14888" relation="include">
        </childnode>
        <childnode refid="14927" relation="include">
        </childnode>
        <childnode refid="14926" relation="include">
        </childnode>
        <childnode refid="14981" relation="include">
        </childnode>
      </node>
      <node id="14898">
        <label>boost/type_traits/add_reference.hpp</label>
      </node>
      <node id="14872">
        <label>boost/mpl/bool.hpp</label>
      </node>
      <node id="14952">
        <label>boost/assign/v2/detail/pp/params.hpp</label>
        <link refid="params_8hpp_source"/>
        <childnode refid="14951" relation="include">
        </childnode>
        <childnode refid="14953" relation="include">
        </childnode>
      </node>
      <node id="14870">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/interface.hpp</label>
        <link refid="static_array/interface.hpp"/>
        <childnode refid="14871" relation="include">
        </childnode>
        <childnode refid="14872" relation="include">
        </childnode>
        <childnode refid="14873" relation="include">
        </childnode>
        <childnode refid="14874" relation="include">
        </childnode>
        <childnode refid="14875" relation="include">
        </childnode>
        <childnode refid="14876" relation="include">
        </childnode>
        <childnode refid="14877" relation="include">
        </childnode>
        <childnode refid="14878" relation="include">
        </childnode>
        <childnode refid="14879" relation="include">
        </childnode>
        <childnode refid="14880" relation="include">
        </childnode>
        <childnode refid="14881" relation="include">
        </childnode>
        <childnode refid="14882" relation="include">
        </childnode>
        <childnode refid="14883" relation="include">
        </childnode>
        <childnode refid="14894" relation="include">
        </childnode>
        <childnode refid="14897" relation="include">
        </childnode>
        <childnode refid="14911" relation="include">
        </childnode>
        <childnode refid="14914" relation="include">
        </childnode>
      </node>
      <node id="14998">
        <label>boost/assign/v2/put/generic/base.hpp</label>
        <link refid="put_2generic_2base_8hpp_source"/>
      </node>
      <node id="14949">
        <label>boost/preprocessor/comma_if.hpp</label>
      </node>
      <node id="14894">
        <label>boost/assign/v2/ref/wrapper/crtp.hpp</label>
        <link refid="ref_2wrapper_2crtp_8hpp_source"/>
        <childnode refid="14874" relation="include">
        </childnode>
        <childnode refid="14875" relation="include">
        </childnode>
        <childnode refid="14876" relation="include">
        </childnode>
        <childnode refid="14877" relation="include">
        </childnode>
        <childnode refid="14880" relation="include">
        </childnode>
        <childnode refid="14895" relation="include">
        </childnode>
      </node>
      <node id="14933">
        <label>memory</label>
      </node>
      <node id="14946">
        <label>boost/assign/v2/detail/config/enable_cpp0x.hpp</label>
        <link refid="enable__cpp0x_8hpp_source"/>
        <childnode refid="14947" relation="include">
        </childnode>
      </node>
      <node id="14971">
        <label>boost/assign/v2/put/modifier/modifier.hpp</label>
        <link refid="modifier_2modifier_8hpp_source"/>
        <childnode refid="14972" relation="include">
        </childnode>
        <childnode refid="14979" relation="include">
        </childnode>
        <childnode refid="14990" relation="include">
        </childnode>
        <childnode refid="14992" relation="include">
        </childnode>
        <childnode refid="14994" relation="include">
        </childnode>
        <childnode refid="14995" relation="include">
        </childnode>
        <childnode refid="14996" relation="include">
        </childnode>
        <childnode refid="14997" relation="include">
        </childnode>
      </node>
      <node id="14875">
        <label>boost/type_traits/is_same.hpp</label>
      </node>
      <node id="14983">
        <label>boost/assign/v2/detail/type_traits/container/has_static_size.hpp</label>
        <link refid="has__static__size_8hpp_source"/>
        <childnode refid="14934" relation="include">
        </childnode>
        <childnode refid="14872" relation="include">
        </childnode>
      </node>
      <node id="14964">
        <label>boost/mpl/equal_to.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="15033">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/lazy_alloc.hpp</label>
        <link refid="static__array_2alloc_2lazy__alloc_8hpp_source"/>
        <childnode refid="15034" relation="include">
        </childnode>
        <childnode refid="15039" relation="include">
        </childnode>
        <childnode refid="15031" relation="include">
        </childnode>
      </node>
      <node id="15037">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/unary.hpp</label>
        <link refid="unary_8hpp_source"/>
        <childnode refid="15027" relation="include">
        </childnode>
      </node>
      <node id="15047">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/sub.hpp</label>
        <link refid="put_2compose_2functor_2sub_8hpp_source"/>
        <childnode refid="15046" relation="include">
        </childnode>
      </node>
      <node id="15024">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/csv/forward_seq_arg.hpp</label>
        <link refid="forward__seq__arg_8hpp_source"/>
        <childnode refid="15015" relation="include">
        </childnode>
        <childnode refid="15025" relation="include">
        </childnode>
      </node>
      <node id="15045">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/composer.hpp</label>
        <link refid="functor_2composer_8hpp_source"/>
        <childnode refid="15046" relation="include">
        </childnode>
        <childnode refid="15047" relation="include">
        </childnode>
      </node>
      <node id="15044">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/assign_copy.hpp</label>
        <link refid="fusion_2assign__copy_8hpp_source"/>
        <childnode refid="15023" relation="include">
        </childnode>
        <childnode refid="15045" relation="include">
        </childnode>
        <childnode refid="15041" relation="include">
        </childnode>
      </node>
      <node id="15026">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/csv/csv.hpp</label>
        <link refid="ref_2anon_2csv_2csv_8hpp_source"/>
        <childnode refid="15027" relation="include">
        </childnode>
      </node>
      <node id="15017">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/put.hpp</label>
        <link refid="put_8hpp_source"/>
        <childnode refid="15018" relation="include">
        </childnode>
        <childnode refid="15020" relation="include">
        </childnode>
      </node>
      <node id="15046">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/functor.hpp</label>
        <link refid="put_2compose_2functor_2functor_8hpp_source"/>
        <childnode refid="15016" relation="include">
        </childnode>
      </node>
      <node id="15032">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/static_array.hpp</label>
        <link refid="static__array_8hpp_source"/>
      </node>
      <node id="15034">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/make.hpp</label>
        <link refid="ref_2anon_2unary_2make_8hpp_source"/>
        <childnode refid="15035" relation="include">
        </childnode>
        <childnode refid="15037" relation="include">
        </childnode>
      </node>
      <node id="15039">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/policy.hpp</label>
        <link refid="fusion_2policy_8hpp_source"/>
        <childnode refid="15040" relation="include">
        </childnode>
        <childnode refid="15041" relation="include">
        </childnode>
      </node>
      <node id="15022">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/anon/make.hpp</label>
        <link refid="anon_2make_8hpp_source"/>
        <childnode refid="15019" relation="include">
        </childnode>
        <childnode refid="15021" relation="include">
        </childnode>
      </node>
      <node id="15048">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/assign_rebind.hpp</label>
        <link refid="fusion_2assign__rebind_8hpp_source"/>
        <childnode refid="15041" relation="include">
        </childnode>
      </node>
      <node id="15011">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/csv/pp.hpp</label>
        <link refid="pp_8hpp_source"/>
        <childnode refid="15012" relation="include">
        </childnode>
        <childnode refid="15030" relation="include">
        </childnode>
      </node>
      <node id="15015">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/csv/csv.hpp</label>
        <link refid="put_2compose_2csv_2csv_8hpp_source"/>
        <childnode refid="15016" relation="include">
        </childnode>
      </node>
      <node id="15018">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/anon/cont.hpp</label>
        <link refid="anon_2cont_8hpp_source"/>
        <childnode refid="15019" relation="include">
        </childnode>
        <childnode refid="15021" relation="include">
        </childnode>
        <childnode refid="15022" relation="include">
        </childnode>
      </node>
      <node id="15027">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/anon.hpp</label>
        <link refid="ref_2anon_2anon_8hpp_source"/>
        <childnode refid="15028" relation="include">
        </childnode>
      </node>
      <node id="15030">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/csv/make.hpp</label>
        <link refid="ref_2anon_2csv_2make_8hpp_source"/>
        <childnode refid="15012" relation="include">
        </childnode>
        <childnode refid="15026" relation="include">
        </childnode>
      </node>
      <node id="15025">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/csv/sub.hpp</label>
        <link refid="put_2compose_2csv_2sub_8hpp_source"/>
        <childnode refid="15015" relation="include">
        </childnode>
      </node>
      <node id="15020">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/v2.hpp</label>
        <link refid="v2_8hpp_source"/>
      </node>
      <node id="15021">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/anon/csv.hpp</label>
        <link refid="anon_2csv_8hpp_source"/>
        <childnode refid="15019" relation="include">
        </childnode>
      </node>
      <node id="15016">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/compose.hpp</label>
        <link refid="compose_8hpp_source"/>
        <childnode refid="15017" relation="include">
        </childnode>
      </node>
      <node id="15013">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/csv/assign_copy.hpp</label>
        <link refid="anon_2csv_2assign__copy_8hpp_source"/>
        <childnode refid="15014" relation="include">
        </childnode>
        <childnode refid="15023" relation="include">
        </childnode>
        <childnode refid="15026" relation="include">
        </childnode>
      </node>
      <node id="15043">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/assign_xxx.hpp</label>
        <link refid="fusion_2assign__xxx_8hpp_source"/>
        <childnode refid="15044" relation="include">
        </childnode>
        <childnode refid="15048" relation="include">
        </childnode>
      </node>
      <node id="15031">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/alloc.hpp</label>
        <link refid="alloc_8hpp_source"/>
        <childnode refid="15032" relation="include">
        </childnode>
      </node>
      <node id="15012">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/csv/assign_xxx.hpp</label>
        <link refid="anon_2csv_2assign__xxx_8hpp_source"/>
        <childnode refid="15013" relation="include">
        </childnode>
        <childnode refid="15029" relation="include">
        </childnode>
      </node>
      <node id="15036">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/assign_copy.hpp</label>
        <link refid="anon_2unary_2assign__copy_8hpp_source"/>
        <childnode refid="15037" relation="include">
        </childnode>
      </node>
      <node id="15010">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/fast_alloc.hpp</label>
        <link refid="static__array_2alloc_2fast__alloc_8hpp_source"/>
        <childnode refid="15011" relation="include">
        </childnode>
        <childnode refid="15031" relation="include">
        </childnode>
      </node>
      <node id="15028">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/ref.hpp</label>
        <link refid="ref_8hpp_source"/>
        <childnode refid="15020" relation="include">
        </childnode>
      </node>
      <node id="15023">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/csv/held.hpp</label>
        <link refid="held_8hpp_source"/>
        <childnode refid="15014" relation="include">
        </childnode>
        <childnode refid="15015" relation="include">
        </childnode>
        <childnode refid="15024" relation="include">
        </childnode>
        <childnode refid="15025" relation="include">
        </childnode>
      </node>
      <node id="15035">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/assign_xxx.hpp</label>
        <link refid="anon_2unary_2assign__xxx_8hpp_source"/>
        <childnode refid="15036" relation="include">
        </childnode>
        <childnode refid="15038" relation="include">
        </childnode>
      </node>
      <node id="15014">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/csv/composer.hpp</label>
        <link refid="csv_2composer_8hpp_source"/>
        <childnode refid="15015" relation="include">
        </childnode>
      </node>
      <node id="15038">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/assign_rebind.hpp</label>
        <link refid="anon_2unary_2assign__rebind_8hpp_source"/>
        <childnode refid="15037" relation="include">
        </childnode>
      </node>
      <node id="15041">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/fusion.hpp</label>
        <link refid="fusion_8hpp_source"/>
        <childnode refid="15028" relation="include">
        </childnode>
      </node>
      <node id="15029">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/csv/assign_rebind.hpp</label>
        <link refid="anon_2csv_2assign__rebind_8hpp_source"/>
        <childnode refid="15026" relation="include">
        </childnode>
      </node>
      <node id="15040">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/container.hpp</label>
        <link refid="ref_2fusion_2container_8hpp_source"/>
        <childnode refid="15041" relation="include">
        </childnode>
        <childnode refid="15042" relation="include">
        </childnode>
      </node>
      <node id="15009">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/interface.hpp</label>
        <link refid="static_array/interface.hpp"/>
        <childnode refid="15010" relation="include">
        </childnode>
        <childnode refid="15033" relation="include">
        </childnode>
        <childnode refid="15032" relation="include">
        </childnode>
      </node>
      <node id="15019">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/anon/anon.hpp</label>
        <link refid="anon_2anon_8hpp_source"/>
        <childnode refid="15020" relation="include">
        </childnode>
      </node>
      <node id="15042">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/make.hpp</label>
        <link refid="ref_2fusion_2make_8hpp_source"/>
        <childnode refid="15011" relation="include">
        </childnode>
        <childnode refid="15034" relation="include">
        </childnode>
        <childnode refid="15043" relation="include">
        </childnode>
        <childnode refid="15041" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface__traits" prot="public">boost::assign::v2::ref::static_array_aux::interface_traits</innerclass>
    <innerclass refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface" prot="public">boost::assign::v2::ref::static_array_aux::interface</innerclass>
    <innernamespace refid="namespaceboost">boost</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign">boost::assign</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2">boost::assign::v2</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2_1_1ref">boost::assign::v2::ref</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux">boost::assign::v2::ref::static_array_aux</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2_1_1ref_1_1container__type__traits">boost::assign::v2::ref::container_type_traits</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="2"><highlight class="comment">//<sp/><sp/>Boost.Assign<sp/>v2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2003-2004<sp/>Thorsten<sp/>Ottosen<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2010<sp/>Erwann<sp/>Rogard<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Use,<sp/>modification<sp/>and<sp/>distribution<sp/>are<sp/>subject<sp/>to<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.<sp/>(See<sp/>accompanying<sp/>file<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at<sp/>http://www.boost.org/LICENSE_1_0.txt)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight><highlight class="preprocessor">#ifndef<sp/>BOOST_ASSIGN_V2_REF_STATIC_ARRAY_INTERFACE_ER_2010_HPP</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOOST_ASSIGN_V2_REF_STATIC_ARRAY_INTERFACE_ER_2010_HPP</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/bool.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/int.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/utility/enable_if.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/type_traits/is_same.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/type_traits/remove_const.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/type_traits/add_const.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/array.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/range.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/call_traits.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/range/algorithm/for_each.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/range/iterator_range.hpp&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//iterator_range_detail::</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/v2/ref/wrapper/framework.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/v2/ref/wrapper/crtp.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/v2/ref/detail/unwrap/range.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/v2/detail/relational_op/relational_op.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/v2/put/range/convert.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">boost{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">assign{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">v2{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ref{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">static_array_aux{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="40" refid="structboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface__traits" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface__traits" kindref="compound">interface_traits</ref>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Tag<sp/>assign_tag_;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1wrapper" kindref="compound">ref::wrapper&lt;assign_tag_,T&gt;</ref><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1wrapper" kindref="compound">wrapper_</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::array&lt;wrapper_,N&gt;<sp/>impl_;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1result__of_1_1unwrap__range" kindref="compound">ref::result_of::unwrap_range&lt;impl_&gt;::type</ref><sp/>range_;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1result__of_1_1unwrap__range" kindref="compound">ref::result_of::unwrap_range</ref>&lt;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>impl_<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&gt;::type<sp/>range_c_;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::unwrap_reference&lt;T&gt;::type<sp/>value_type;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::add_reference&lt;value_type&gt;::type<sp/>reference;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::call_traits&lt;reference&gt;::const_reference<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_reference;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::range_iterator&lt;range_&gt;::type<sp/>iterator;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::range_iterator&lt;range_c_&gt;::type<sp/>const_iterator;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wrappers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>BOOST_MSVC</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::range_size&lt;impl_&gt;::type<sp/>size_type;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>BOOST_MSVC<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::size_t<sp/>size_type;<sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::range_difference&lt;range_&gt;::type<sp/>difference_type;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Requirements:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>D.impl()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>an<sp/>array<sp/>of<sp/>ref-wrappers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>D.impl()const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>a<sp/>const<sp/>array<sp/>of<sp/>ref-wrappers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tag,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D&gt;</highlight></codeline>
<codeline lineno="70" refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface" kindref="compound">interface</ref><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>relational_op_aux::crtp&lt;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interface&lt;N,<sp/>Tag,<sp/>T,<sp/>D&gt;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface__traits" kindref="compound">interface_traits&lt;N, Tag, T&gt;</ref><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface__traits" kindref="compound">traits_</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1wrapper" kindref="compound">traits_::wrapper_</ref><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1wrapper" kindref="compound">wrapper_</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>traits_::impl_<sp/>impl_;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface" kindref="compound">interface&lt;N, T, Tag, D&gt;</ref><sp/><ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface" kindref="compound">this_</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::remove_const&lt;T&gt;::type<sp/>lvalue_;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::add_const&lt;T&gt;::type<sp/>rvalue_;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1wrapper" kindref="compound">wrapper_</ref><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1wrapper" kindref="compound">wrapper_type</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>traits_::value_type<sp/>value_type;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>traits_::iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>traits_::const_iterator<sp/>const_iterator;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>traits_::size_type<sp/>size_type;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>traits_::difference_type<sp/>difference_type;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>traits_::reference<sp/>reference;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>traits_::const_reference<sp/>const_reference;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_STATIC_CONSTANT(size_type,<sp/>static_size<sp/>=<sp/>N);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/>begin()<sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::begin(<sp/>this-&gt;unwrap()<sp/>);<sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/>end()<sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::end(<sp/>this-&gt;unwrap()<sp/>);<sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_iterator<sp/>begin()</highlight><highlight class="keyword">const<sp/></highlight></codeline>
<codeline lineno="105"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::begin(<sp/>this-&gt;unwrap()<sp/>);<sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_iterator<sp/>end()</highlight><highlight class="keyword">const<sp/></highlight></codeline>
<codeline lineno="109"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::end(<sp/>this-&gt;unwrap()<sp/>);<sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_type<sp/>size()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="114"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;impl().size();<sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>empty()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="118"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;impl().empty();<sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1wrapper" kindref="compound">wrapper_</ref>&amp;<sp/>get_wrapper(size_type<sp/>i)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this-&gt;impl())[i];</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1wrapper" kindref="compound">wrapper_</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>get_wrapper(size_type<sp/>i)</highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="128"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this-&gt;impl())[i];</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference<sp/>operator[](size_type<sp/>i)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this-&gt;impl())[i].unwrap();<sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_reference<sp/>operator[](size_type<sp/>i)</highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="137"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this-&gt;impl())[i].unwrap();<sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference<sp/>front()</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this-&gt;impl()).front().unwrap();<sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_reference<sp/>front()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="146"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this-&gt;impl()).front().unwrap();<sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference<sp/>back()</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this-&gt;impl()).back().unwrap();<sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_reference<sp/>back()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="154"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this-&gt;impl()).back().unwrap();<sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swap(<ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface" kindref="compound">interface</ref>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::mpl::int_&lt;N&gt;<sp/>int_n_;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;swap_impl(other,int_n_());</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assign(lvalue_&amp;<sp/>val){<sp/>this-&gt;assign_impl&lt;lvalue_&gt;(<sp/>val<sp/>);<sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assign(rvalue_&amp;<sp/>val){<sp/>this-&gt;assign_impl&lt;rvalue_&gt;(<sp/>val<sp/>);<sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_ASSIGN_V2_CONVERT_CONVERT_MF</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_ASSIGN_V2_CONVERT_OPERATOR_MF</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Relational<sp/>op</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>equal_to(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>R&amp;<sp/>r)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::boost::iterator_range_detail::equal(<sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/>r<sp/>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>less_than(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>R&amp;<sp/>r)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>::boost::iterator_range_detail::less_than(<sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/>r<sp/>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::mpl::false_<sp/>false_;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::mpl::true_<sp/>true_;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swap_impl(<ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface" kindref="compound">interface</ref>&amp;<sp/>other,<sp/>boost::mpl::int_&lt;0&gt;){}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N1&gt;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swap_impl(<ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface" kindref="compound">interface</ref>&amp;<sp/>other,<sp/>boost::mpl::int_&lt;N1&gt;)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference<sp/>lhs<sp/>=<sp/>(*this)[N1-1];</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference<sp/>rhs<sp/>=<sp/>(other)[N1-1];</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lhs.swap(rhs);<sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::mpl::int_&lt;N1-1&gt;<sp/>next_int_;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;swap_impl(<sp/>other,<sp/>next_int_()<sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>traits_::range_<sp/>unwrap()</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ref::unwrap_range(<sp/>this-&gt;impl()<sp/>);<sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>traits_::range_c_<sp/>unwrap()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ref::unwrap_range(<sp/>this-&gt;impl()<sp/>);<sp/></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>impl_&amp;<sp/>impl(){<sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">D&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this).impl();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>impl_<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>impl()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">D&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this).impl();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assign_impl(U&amp;<sp/>val)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>impl_&amp;<sp/>ra<sp/>=<sp/>this-&gt;impl();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::for_each(</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ra,<sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1functional_1_1assigner" kindref="compound">functional::assigner&lt;U&gt;</ref>(<sp/>val<sp/>)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>static_array_aux</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">container_type_traits{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>template&lt;typename<sp/>T,std::size_t<sp/>sz&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>struct<sp/>is_static_array&lt;boost::array&lt;T,<sp/>sz&gt;<sp/>&gt;<sp/>:<sp/>boost::mpl::true_{};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>container_type_traits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>ref</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>v2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>assign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>boost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/interface.hpp"/>
  </compounddef>
</doxygen>
