<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1lazy__alloc" kind="class" prot="public">
    <compoundname>boost::assign::v2::ref::static_array_aux::lazy_alloc</compoundname>
    <basecompoundref refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface" prot="public" virt="non-virtual">boost::assign::v2::ref::static_array_aux::interface&lt; N, Tag, T, lazy_alloc&lt; N, Tag, T, D &gt; &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>std::size_t</type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
      <param>
        <type>typename Tag</type>
      </param>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename D</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1lazy__alloc_1ae4f30d44f363fb844ccb0c7e0665ff0b" prot="private" static="no">
        <type>Tag</type>
        <definition>typedef Tag boost::assign::v2::ref::static_array_aux::lazy_alloc&lt; N, Tag, T, D &gt;::assign_tag_</definition>
        <argsstring></argsstring>
        <name>assign_tag_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/lazy_alloc.hpp" line="32" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/lazy_alloc.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1lazy__alloc_1a6a883a9048aedae4f9e26ae04f45dc39" prot="private" static="no">
        <type><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1wrapper" kindref="compound">ref::wrapper</ref>&lt; assign_tag_, T &gt;</type>
        <definition>typedef ref::wrapper&lt;assign_tag_,T&gt; boost::assign::v2::ref::static_array_aux::lazy_alloc&lt; N, Tag, T, D &gt;::wrapper_</definition>
        <argsstring></argsstring>
        <name>wrapper_</name>
        <reimplements refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1a92e8e47f5f115227422557a7685896d7">wrapper_</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/lazy_alloc.hpp" line="33" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/lazy_alloc.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1lazy__alloc_1ae68f301c29f9653be0b2998fa51ad13a" prot="private" static="no">
        <type>boost::array&lt; <ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1wrapper" kindref="compound">wrapper_</ref>, N &gt;</type>
        <definition>typedef boost::array&lt;wrapper_,N&gt; boost::assign::v2::ref::static_array_aux::lazy_alloc&lt; N, Tag, T, D &gt;::array_</definition>
        <argsstring></argsstring>
        <name>array_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/lazy_alloc.hpp" line="34" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/lazy_alloc.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1lazy__alloc_1a94a6e8dbe8b51ee0b36b2838f764a3b5" prot="private" static="no">
        <type>boost::mpl::int_&lt; N &gt;</type>
        <definition>typedef boost::mpl::int_&lt;N&gt; boost::assign::v2::ref::static_array_aux::lazy_alloc&lt; N, Tag, T, D &gt;::size_</definition>
        <argsstring></argsstring>
        <name>size_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/lazy_alloc.hpp" line="36" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/lazy_alloc.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1lazy__alloc_1a6e985a550f9507b160de7e9f323b29d3" prot="private" static="no">
        <type><ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface" kindref="compound">static_array_aux::interface</ref>&lt; N, Tag, T, <ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1lazy__alloc" kindref="compound">lazy_alloc</ref> &gt;</type>
        <definition>typedef static_array_aux::interface&lt; N, Tag, T, lazy_alloc &gt; boost::assign::v2::ref::static_array_aux::lazy_alloc&lt; N, Tag, T, D &gt;::super_t</definition>
        <argsstring></argsstring>
        <name>super_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/lazy_alloc.hpp" line="54" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/lazy_alloc.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1lazy__alloc_1ae892ae9f92294343895c9556588b6c27" prot="private" static="no">
        <type>boost::shared_ptr&lt; array_ &gt;</type>
        <definition>typedef boost::shared_ptr&lt;array_&gt; boost::assign::v2::ref::static_array_aux::lazy_alloc&lt; N, Tag, T, D &gt;::smart_ptr_</definition>
        <argsstring></argsstring>
        <name>smart_ptr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/lazy_alloc.hpp" line="72" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/lazy_alloc.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1lazy__alloc_1a9b5cb8ff7761a43686329625ef3ea408" prot="private" static="no" mutable="yes">
        <type>smart_ptr_</type>
        <definition>smart_ptr_ boost::assign::v2::ref::static_array_aux::lazy_alloc&lt; N, Tag, T, D &gt;::ptr</definition>
        <argsstring></argsstring>
        <name>ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/lazy_alloc.hpp" line="73" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/lazy_alloc.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1lazy__alloc_1a755f651f79a7047907d725190cb4f232" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void boost::assign::v2::ref::static_array_aux::lazy_alloc&lt; N, Tag, T, D &gt;::alloc_if</definition>
        <argsstring>() const </argsstring>
        <name>alloc_if</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/lazy_alloc.hpp" line="38" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/lazy_alloc.hpp" bodystart="38" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1lazy__alloc_1a2701bd2c36fed7dbda47551dd0999d9a" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void boost::assign::v2::ref::static_array_aux::lazy_alloc&lt; N, Tag, T, D &gt;::alloc</definition>
        <argsstring>() const </argsstring>
        <name>alloc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/lazy_alloc.hpp" line="44" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/lazy_alloc.hpp" bodystart="44" bodyend="50"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1lazy__alloc_1aca44c43a77b9a72ebbb5ac8588fb3893" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>array_ &amp;</type>
        <definition>array_&amp; boost::assign::v2::ref::static_array_aux::lazy_alloc&lt; N, Tag, T, D &gt;::impl</definition>
        <argsstring>()</argsstring>
        <name>impl</name>
        <reimplements refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1a9923fac5fc74908bed04121acb459263">impl</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/lazy_alloc.hpp" line="58" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/lazy_alloc.hpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1lazy__alloc_1a39f667f511001c667e7cab1532a56243" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>array_ const &amp;</type>
        <definition>array_ const&amp; boost::assign::v2::ref::static_array_aux::lazy_alloc&lt; N, Tag, T, D &gt;::impl</definition>
        <argsstring>() const </argsstring>
        <name>impl</name>
        <reimplements refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1a70e079a9aa0402262297640566f41a1c">impl</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/lazy_alloc.hpp" line="63" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/lazy_alloc.hpp" bodystart="63" bodyend="66"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="578">
        <label>boost::assign::v2::relational_op_aux::crtp&lt; interface&lt; N, Tag, T, lazy_alloc&lt; N, Tag, T, D &gt; &gt; &gt;</label>
        <link refid="structboost_1_1assign_1_1v2_1_1relational__op__aux_1_1crtp"/>
      </node>
      <node id="577">
        <label>boost::assign::v2::ref::static_array_aux::interface&lt; N, Tag, T, lazy_alloc&lt; N, Tag, T, D &gt; &gt;</label>
        <link refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface"/>
        <childnode refid="578" relation="public-inheritance">
        </childnode>
      </node>
      <node id="576">
        <label>boost::assign::v2::ref::static_array_aux::lazy_alloc&lt; N, Tag, T, D &gt;</label>
        <link refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1lazy__alloc"/>
        <childnode refid="577" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="581">
        <label>boost::assign::v2::relational_op_aux::crtp&lt; interface&lt; N, Tag, T, lazy_alloc&lt; N, Tag, T, D &gt; &gt; &gt;</label>
        <link refid="structboost_1_1assign_1_1v2_1_1relational__op__aux_1_1crtp"/>
      </node>
      <node id="580">
        <label>boost::assign::v2::ref::static_array_aux::interface&lt; N, Tag, T, lazy_alloc&lt; N, Tag, T, D &gt; &gt;</label>
        <link refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface"/>
        <childnode refid="581" relation="public-inheritance">
        </childnode>
      </node>
      <node id="579">
        <label>boost::assign::v2::ref::static_array_aux::lazy_alloc&lt; N, Tag, T, D &gt;</label>
        <link refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1lazy__alloc"/>
        <childnode refid="580" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/lazy_alloc.hpp" line="31" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/lazy_alloc.hpp" bodystart="28" bodyend="75"/>
    <listofallmembers>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1lazy__alloc_1a2701bd2c36fed7dbda47551dd0999d9a" prot="private" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>alloc</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1lazy__alloc_1a755f651f79a7047907d725190cb4f232" prot="private" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>alloc_if</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1lazy__alloc_1ae68f301c29f9653be0b2998fa51ad13a" prot="private" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>array_</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1afe6a1ec2c0b9756178673cb0ed542563" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>assign</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1a5febfd4249331afeff7df58e8f52e015" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>assign</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1ac44c2d3f50267e9b0fb0c9a73d78080e" prot="protected" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>assign_impl</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1lazy__alloc_1ae4f30d44f363fb844ccb0c7e0665ff0b" prot="private" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>assign_tag_</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1a925d4b50f7fe6293daf23c9045db5daa" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>back</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1a627ae13bfb2c1862d81db8805a341e16" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>back</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1a6c20c4f5096c604d68bc2c824ef06cda" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>begin</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1a5ab32435ab78bfa4619e8cfcb7905dbe" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>begin</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1ad58b36417ce6a55a7b021bb2435e2e93" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>BOOST_STATIC_CONSTANT</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1a3992ddd1bfde93fab8d83487d869fbd2" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>const_iterator</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1a70053a33d096efb4e689cdabeda021b1" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>const_reference</name></member>
      <member refid="structboost_1_1assign_1_1v2_1_1relational__op__aux_1_1crtp_1a15a823411135acf4876b72c60c8c363b" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>derived</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1a7de6c7e8e8521fc49571704f8fc2354e" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>difference_type</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1a7e2505d458b383e7a71b8ed45331d419" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>empty</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1af89f91039e8e2819459090a7f6a91256" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>end</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1a03238d668c3e158d4cb422dca2d1d112" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>end</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1afbe34dff6c1903df3879de3fd4ffabdb" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>equal_to</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1a484548538930b82ed79e6204c2d90c78" prot="protected" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>false_</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1ad72fc282fd47d02fa1581f9daaf4457f" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>front</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1acb0a3aaf6b89c45cc852883f19e6c79a" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>front</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1a296b4bb660149b281038f486ca232bef" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>get_wrapper</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1acf488d043b7bf9256471235e9418c075" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>get_wrapper</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1lazy__alloc_1aca44c43a77b9a72ebbb5ac8588fb3893" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>impl</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1lazy__alloc_1a39f667f511001c667e7cab1532a56243" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>impl</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1aac7a8a03e995d3f4bece0194ae26e28d" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>iterator</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1ad59844555a9c23ad029e9126b5312220" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>less_than</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1acf5e312410cb3a5ade5187b51e410ca1" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>operator[]</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1adb880aba6173a6be1a47a3db6838dfa3" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>operator[]</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1lazy__alloc_1a9b5cb8ff7761a43686329625ef3ea408" prot="private" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>ptr</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1a65fc102c086aadf21abf6028da7e67d0" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>reference</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1a94544e8654ab2aa1067e7aeabe586bcd" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>size</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1lazy__alloc_1a94a6e8dbe8b51ee0b36b2838f764a3b5" prot="private" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>size_</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1af226150d8ad187f9913a7397f40216fe" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>size_type</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1lazy__alloc_1ae892ae9f92294343895c9556588b6c27" prot="private" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>smart_ptr_</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1lazy__alloc_1a6e985a550f9507b160de7e9f323b29d3" prot="private" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>super_t</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1a3342b2d379e66ff0c8c561416d3a2e81" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>swap</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1a68a218e864409098042f6a500b46a97d" prot="protected" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>swap_impl</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1adfac998a98c85294c1a4b60ec2190783" prot="protected" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>swap_impl</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1a01c2d510d9499dbdae9f197e7d3360c1" prot="protected" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>true_</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1a760153526a9abf66b6989f2fecea9ab2" prot="protected" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>unwrap</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1a3d2ada6aa20dbbd03f733d3171e364f6" prot="protected" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>unwrap</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1ac42859540e886707d3d3b3a7f1f908ff" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>value_type</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1lazy__alloc_1a6a883a9048aedae4f9e26ae04f45dc39" prot="private" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>wrapper_</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1ref_1_1static__array__aux_1_1interface_1ad2a554426ba36d6a353543ef04a54229" prot="public" virt="non-virtual"><scope>boost::assign::v2::ref::static_array_aux::lazy_alloc</scope><name>wrapper_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
