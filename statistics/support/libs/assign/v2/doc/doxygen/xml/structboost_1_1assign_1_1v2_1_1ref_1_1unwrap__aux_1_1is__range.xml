<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="structboost_1_1assign_1_1v2_1_1ref_1_1unwrap__aux_1_1is__range" kind="struct" prot="public">
    <compoundname>boost::assign::v2::ref::unwrap_aux::is_range</compoundname>
    <basecompoundref refid="structboost_1_1assign_1_1v2_1_1ref_1_1is__unwrapped__iterator" prot="public" virt="non-virtual">boost::assign::v2::ref::is_unwrapped_iterator&lt; boost::range_iterator&lt; R &gt;::type &gt;</basecompoundref>
    <derivedcompoundref refid="structboost_1_1assign_1_1v2_1_1ref_1_1is__unwrapped__range" prot="public" virt="non-virtual">boost::assign::v2::ref::is_unwrapped_range&lt; R &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>typename R</type>
      </param>
    </templateparamlist>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="501">
        <label>boost::assign::v2::ref::unwrap_aux::is_iterator&lt; boost::remove_cv&lt; boost::range_iterator&lt; R &gt;::type &gt;::type &gt;</label>
        <link refid="structboost_1_1assign_1_1v2_1_1ref_1_1unwrap__aux_1_1is__iterator"/>
        <childnode refid="502" relation="public-inheritance">
        </childnode>
      </node>
      <node id="502">
        <label>boost::mpl::false_</label>
        <link refid="classboost_1_1mpl_1_1false__"/>
      </node>
      <node id="503">
        <label>boost::assign::v2::ref::is_unwrapped_range&lt; R &gt;</label>
        <link refid="structboost_1_1assign_1_1v2_1_1ref_1_1is__unwrapped__range"/>
        <childnode refid="499" relation="public-inheritance">
        </childnode>
      </node>
      <node id="499">
        <label>boost::assign::v2::ref::unwrap_aux::is_range&lt; R &gt;</label>
        <link refid="structboost_1_1assign_1_1v2_1_1ref_1_1unwrap__aux_1_1is__range"/>
        <childnode refid="500" relation="public-inheritance">
        </childnode>
      </node>
      <node id="500">
        <label>boost::assign::v2::ref::is_unwrapped_iterator&lt; boost::range_iterator&lt; R &gt;::type &gt;</label>
        <link refid="structboost_1_1assign_1_1v2_1_1ref_1_1is__unwrapped__iterator"/>
        <childnode refid="501" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="506">
        <label>boost::assign::v2::ref::unwrap_aux::is_iterator&lt; boost::remove_cv&lt; boost::range_iterator&lt; R &gt;::type &gt;::type &gt;</label>
        <link refid="structboost_1_1assign_1_1v2_1_1ref_1_1unwrap__aux_1_1is__iterator"/>
        <childnode refid="507" relation="public-inheritance">
        </childnode>
      </node>
      <node id="507">
        <label>boost::mpl::false_</label>
        <link refid="classboost_1_1mpl_1_1false__"/>
      </node>
      <node id="504">
        <label>boost::assign::v2::ref::unwrap_aux::is_range&lt; R &gt;</label>
        <link refid="structboost_1_1assign_1_1v2_1_1ref_1_1unwrap__aux_1_1is__range"/>
        <childnode refid="505" relation="public-inheritance">
        </childnode>
      </node>
      <node id="505">
        <label>boost::assign::v2::ref::is_unwrapped_iterator&lt; boost::range_iterator&lt; R &gt;::type &gt;</label>
        <link refid="structboost_1_1assign_1_1v2_1_1ref_1_1is__unwrapped__iterator"/>
        <childnode refid="506" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/detail/unwrap/range.hpp" line="34" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/detail/unwrap/range.hpp" bodystart="32" bodyend="34"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
