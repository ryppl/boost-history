<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="structboost_1_1assign_1_1v2_1_1type__traits_1_1has__value__type" kind="struct" prot="public">
    <compoundname>boost::assign::v2::type_traits::has_value_type</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structboost_1_1assign_1_1v2_1_1type__traits_1_1has__value__type_1a13b3059e69b45f1b6d6658b3f4db450c" prot="public" static="no">
        <type>boost::type_traits::yes_type</type>
        <definition>typedef boost::type_traits::yes_type boost::assign::v2::type_traits::has_value_type&lt; T &gt;::yes_</definition>
        <argsstring></argsstring>
        <name>yes_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/has_value_type.hpp" line="24" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/has_value_type.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structboost_1_1assign_1_1v2_1_1type__traits_1_1has__value__type_1afab0fa57fc4d3c2bdecccbd83f5243a8" prot="public" static="no">
        <type>boost::type_traits::no_type</type>
        <definition>typedef boost::type_traits::no_type boost::assign::v2::type_traits::has_value_type&lt; T &gt;::no_</definition>
        <argsstring></argsstring>
        <name>no_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/has_value_type.hpp" line="25" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/has_value_type.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structboost_1_1assign_1_1v2_1_1type__traits_1_1has__value__type_1af637949058c5c13f186f81306d491620" prot="public" static="no">
        <type>boost::mpl::bool_&lt; <ref refid="structboost_1_1assign_1_1v2_1_1type__traits_1_1value" kindref="compound">value</ref> &gt;</type>
        <definition>typedef boost::mpl::bool_&lt;value&gt; boost::assign::v2::type_traits::has_value_type&lt; T &gt;::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/has_value_type.hpp" line="36" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/has_value_type.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structboost_1_1assign_1_1v2_1_1type__traits_1_1has__value__type_1a26185030c291dbdd1e064eca103b5bde" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>yes_</type>
        <definition>static yes_ boost::assign::v2::type_traits::has_value_type&lt; T &gt;::test</definition>
        <argsstring>(U *, typename U::value_type *p=0)</argsstring>
        <name>test</name>
        <param>
          <type>U *</type>
        </param>
        <param>
          <type>typename U::value_type *</type>
          <declname>p</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/has_value_type.hpp" line="29"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1assign_1_1v2_1_1type__traits_1_1has__value__type_1ab464c40e96f63d314b9a9fc70ef9f040" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>no_</type>
        <definition>static no_ boost::assign::v2::type_traits::has_value_type&lt; T &gt;::test</definition>
        <argsstring>(...)</argsstring>
        <name>test</name>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/has_value_type.hpp" line="30"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structboost_1_1assign_1_1v2_1_1type__traits_1_1has__value__type_1a7c3055355bedc18cbcb8453086abf9c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>boost::assign::v2::type_traits::has_value_type&lt; T &gt;::BOOST_STATIC_CONSTANT</definition>
        <argsstring>(bool, value=sizeof(test((T *) 0))==sizeof(yes_))</argsstring>
        <name>BOOST_STATIC_CONSTANT</name>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type><ref refid="structboost_1_1assign_1_1v2_1_1type__traits_1_1value" kindref="compound">value</ref></type>
          <defval>sizeof(test((T *) 0))==sizeof(yes_)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/has_value_type.hpp" line="35"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/has_value_type.hpp" line="22" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/has_value_type.hpp" bodystart="22" bodyend="37"/>
    <listofallmembers>
      <member refid="structboost_1_1assign_1_1v2_1_1type__traits_1_1has__value__type_1a7c3055355bedc18cbcb8453086abf9c3" prot="public" virt="non-virtual"><scope>boost::assign::v2::type_traits::has_value_type</scope><name>BOOST_STATIC_CONSTANT</name></member>
      <member refid="structboost_1_1assign_1_1v2_1_1type__traits_1_1has__value__type_1afab0fa57fc4d3c2bdecccbd83f5243a8" prot="public" virt="non-virtual"><scope>boost::assign::v2::type_traits::has_value_type</scope><name>no_</name></member>
      <member refid="structboost_1_1assign_1_1v2_1_1type__traits_1_1has__value__type_1a26185030c291dbdd1e064eca103b5bde" prot="public" virt="non-virtual"><scope>boost::assign::v2::type_traits::has_value_type</scope><name>test</name></member>
      <member refid="structboost_1_1assign_1_1v2_1_1type__traits_1_1has__value__type_1ab464c40e96f63d314b9a9fc70ef9f040" prot="public" virt="non-virtual"><scope>boost::assign::v2::type_traits::has_value_type</scope><name>test</name></member>
      <member refid="structboost_1_1assign_1_1v2_1_1type__traits_1_1has__value__type_1af637949058c5c13f186f81306d491620" prot="public" virt="non-virtual"><scope>boost::assign::v2::type_traits::has_value_type</scope><name>type</name></member>
      <member refid="structboost_1_1assign_1_1v2_1_1type__traits_1_1has__value__type_1a13b3059e69b45f1b6d6658b3f4db450c" prot="public" virt="non-virtual"><scope>boost::assign::v2::type_traits::has_value_type</scope><name>yes_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
