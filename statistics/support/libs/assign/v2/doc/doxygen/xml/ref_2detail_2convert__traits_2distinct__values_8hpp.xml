<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="ref_2detail_2convert__traits_2distinct__values_8hpp" kind="file">
    <compoundname>distinct_values.hpp</compoundname>
    <includes local="no">boost/numeric/conversion/conversion_traits.hpp</includes>
    <includes local="no">boost/mpl/eval_if.hpp</includes>
    <includes local="no">boost/mpl/identity.hpp</includes>
    <includes local="no">boost/mpl/and.hpp</includes>
    <includes local="no">boost/type_traits/is_convertible.hpp</includes>
    <includes local="no">boost/type_traits/is_arithmetic.hpp</includes>
    <includes refid="add__const_8hpp" local="no">boost/assign/v2/ref/detail/convert_traits/add_const.hpp</includes>
    <includedby refid="ref_2detail_2convert__traits_2result_8hpp" local="no">/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/detail/convert_traits/result.hpp</includedby>
    <incdepgraph>
      <node id="3723">
        <label>boost/type_traits/add_const.hpp</label>
      </node>
      <node id="3722">
        <label>boost/assign/v2/ref/detail/convert_traits/add_const.hpp</label>
        <link refid="add__const_8hpp_source"/>
        <childnode refid="3717" relation="include">
        </childnode>
        <childnode refid="3718" relation="include">
        </childnode>
        <childnode refid="3723" relation="include">
        </childnode>
      </node>
      <node id="3717">
        <label>boost/mpl/eval_if.hpp</label>
      </node>
      <node id="3721">
        <label>boost/type_traits/is_arithmetic.hpp</label>
      </node>
      <node id="3716">
        <label>boost/numeric/conversion/conversion_traits.hpp</label>
      </node>
      <node id="3720">
        <label>boost/type_traits/is_convertible.hpp</label>
      </node>
      <node id="3718">
        <label>boost/mpl/identity.hpp</label>
      </node>
      <node id="3719">
        <label>boost/mpl/and.hpp</label>
      </node>
      <node id="3715">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/detail/convert_traits/distinct_values.hpp</label>
        <link refid="ref/detail/convert_traits/distinct_values.hpp"/>
        <childnode refid="3716" relation="include">
        </childnode>
        <childnode refid="3717" relation="include">
        </childnode>
        <childnode refid="3718" relation="include">
        </childnode>
        <childnode refid="3719" relation="include">
        </childnode>
        <childnode refid="3720" relation="include">
        </childnode>
        <childnode refid="3721" relation="include">
        </childnode>
        <childnode refid="3722" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3737">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/detail.hpp</label>
        <link refid="detail_8hpp_source"/>
        <childnode refid="3735" relation="include">
        </childnode>
      </node>
      <node id="3732">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/chain.hpp</label>
        <link refid="chain_8hpp_source"/>
        <childnode refid="3733" relation="include">
        </childnode>
        <childnode refid="3734" relation="include">
        </childnode>
        <childnode refid="3735" relation="include">
        </childnode>
      </node>
      <node id="3730">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/aux_/bitwise_or.hpp</label>
        <link refid="bitwise__or_8hpp_source"/>
        <childnode refid="3731" relation="include">
        </childnode>
        <childnode refid="3732" relation="include">
        </childnode>
      </node>
      <node id="3734">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/checking/twin_values.hpp</label>
        <link refid="chain_2checking_2twin__values_8hpp_source"/>
      </node>
      <node id="3736">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/type_traits.hpp</label>
        <link refid="type__traits_8hpp_source"/>
        <childnode refid="3737" relation="include">
        </childnode>
      </node>
      <node id="3735">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/v2.hpp</label>
        <link refid="v2_8hpp_source"/>
      </node>
      <node id="3733">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/checking/distinct_values.hpp</label>
        <link refid="chain_2checking_2distinct__values_8hpp_source"/>
      </node>
      <node id="3725">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/detail/convert_traits/result.hpp</label>
        <link refid="ref_2detail_2convert__traits_2result_8hpp_source"/>
        <childnode refid="3726" relation="include">
        </childnode>
        <childnode refid="3738" relation="include">
        </childnode>
      </node>
      <node id="3738">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/detail/convert_traits/checking.hpp</label>
        <link refid="ref_2detail_2convert__traits_2checking_8hpp_source"/>
      </node>
      <node id="3726">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/type_traits/meta_convert.hpp</label>
        <link refid="meta__convert_8hpp_source"/>
        <childnode refid="3727" relation="include">
        </childnode>
        <childnode refid="3736" relation="include">
        </childnode>
      </node>
      <node id="3727">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/traits/iterator.hpp</label>
        <link refid="chain_2traits_2iterator_8hpp_source"/>
        <childnode refid="3728" relation="include">
        </childnode>
      </node>
      <node id="3729">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/traits/result.hpp</label>
        <link refid="chain_2traits_2result_8hpp_source"/>
        <childnode refid="3730" relation="include">
        </childnode>
        <childnode refid="3731" relation="include">
        </childnode>
        <childnode refid="3732" relation="include">
        </childnode>
      </node>
      <node id="3731">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/aux_/logical_and.hpp</label>
        <link refid="logical__and_8hpp_source"/>
        <childnode refid="3732" relation="include">
        </childnode>
      </node>
      <node id="3728">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/traits/range.hpp</label>
        <link refid="chain_2traits_2range_8hpp_source"/>
        <childnode refid="3729" relation="include">
        </childnode>
      </node>
      <node id="3724">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/detail/convert_traits/distinct_values.hpp</label>
        <link refid="ref/detail/convert_traits/distinct_values.hpp"/>
        <childnode refid="3725" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1ref_1_1convert__traits_1_1distinct__values_1_1value" prot="public">boost::assign::v2::ref::convert_traits::distinct_values::value</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1ref_1_1convert__traits_1_1distinct__values_1_1value_1_1arithmetic" prot="public">boost::assign::v2::ref::convert_traits::distinct_values::value::arithmetic</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1ref_1_1convert__traits_1_1distinct__values_1_1value_1_1non__arithmetic" prot="public">boost::assign::v2::ref::convert_traits::distinct_values::value::non_arithmetic</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1ref_1_1convert__traits_1_1distinct__values_1_1reference" prot="public">boost::assign::v2::ref::convert_traits::distinct_values::reference</innerclass>
    <innernamespace refid="namespaceboost">boost</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign">boost::assign</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2">boost::assign::v2</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2_1_1ref">boost::assign::v2::ref</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2_1_1ref_1_1convert__traits">boost::assign::v2::ref::convert_traits</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2_1_1ref_1_1convert__traits_1_1distinct__values">boost::assign::v2::ref::convert_traits::distinct_values</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="2"><highlight class="comment">//<sp/><sp/>Boost.Assign<sp/>v2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2003-2004<sp/>Thorsten<sp/>Ottosen<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2010<sp/>Erwann<sp/>Rogard<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Use,<sp/>modification<sp/>and<sp/>distribution<sp/>are<sp/>subject<sp/>to<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.<sp/>(See<sp/>accompanying<sp/>file<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at<sp/>http://www.boost.org/LICENSE_1_0.txt)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight><highlight class="preprocessor">#ifndef<sp/>BOOST_ASSIGN_V2_REF_CONVERT_TRAITS_DISTINCT_VALUES_ER_2010_HPP</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOOST_ASSIGN_V2_REF_CONVERT_TRAITS_DISTINCT_VALUES_ER_2010_HPP</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/numeric/conversion/conversion_traits.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/eval_if.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/identity.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/and.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/type_traits/is_convertible.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/type_traits/is_arithmetic.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/v2/ref/detail/convert_traits/add_const.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">boost{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">assign{<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">v2{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ref{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">convert_traits{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">distinct_values{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V2&gt;</highlight></codeline>
<codeline lineno="28" refid="structboost_1_1assign_1_1v2_1_1ref_1_1convert__traits_1_1distinct__values_1_1value" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1convert__traits_1_1distinct__values_1_1value" kindref="compound">value</ref>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30" refid="structboost_1_1assign_1_1v2_1_1ref_1_1convert__traits_1_1distinct__values_1_1value_1_1arithmetic" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1convert__traits_1_1distinct__values_1_1value_1_1arithmetic" kindref="compound">arithmetic</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::numeric::conversion_traits&lt;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V1,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V2</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;::supertype<sp/>type;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39" refid="structboost_1_1assign_1_1v2_1_1ref_1_1convert__traits_1_1distinct__values_1_1value_1_1non__arithmetic" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1convert__traits_1_1distinct__values_1_1value_1_1non__arithmetic" kindref="compound">non_arithmetic</ref><sp/>:<sp/>boost::mpl::<ref refid="classboost_1_1mpl_1_1eval__if" kindref="compound">eval_if</ref>&lt;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::is_convertible&lt;V1,V2&gt;,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::mpl::identity&lt;V2&gt;,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::mpl::identity&lt;V1&gt;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;{};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::is_arithmetic&lt;V1&gt;<sp/>is_ari1_;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::is_arithmetic&lt;V2&gt;<sp/>is_ari2_;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::mpl::and_&lt;is_ari1_,is_ari2_&gt;<sp/>is_ari_;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::mpl::eval_if&lt;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_ari_,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1convert__traits_1_1distinct__values_1_1value_1_1arithmetic" kindref="compound">arithmetic</ref>,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1convert__traits_1_1distinct__values_1_1value_1_1non__arithmetic" kindref="compound">non_arithmetic</ref></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;::type<sp/>type;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>can<sp/>be<sp/>no<sp/>reference<sp/>if<sp/>V1<sp/>!=<sp/>V2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V1,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V2,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>or_const,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>and_ref&gt;</highlight></codeline>
<codeline lineno="58" refid="structboost_1_1assign_1_1v2_1_1ref_1_1convert__traits_1_1distinct__values_1_1reference" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1convert__traits_1_1distinct__values_1_1reference" kindref="compound">reference</ref><sp/>:<sp/><sp/>convert_traits::<ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1convert__traits_1_1add__const" kindref="compound">add_const</ref>&lt;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>distinct_values::value&lt;V1,V2&gt;::type,<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or_const</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;{};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>distinct_values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>convert_traits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>ref</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>v2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>assign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>boost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/detail/convert_traits/distinct_values.hpp"/>
  </compounddef>
</doxygen>
