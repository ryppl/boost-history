<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="classboost_1_1assign_1_1v2_1_1put__compose__aux_1_1args" kind="class" prot="public">
    <compoundname>boost::assign::v2::put_compose_aux::args</compoundname>
    <basecompoundref refid="structboost_1_1assign_1_1v2_1_1ref_1_1wrapper" prot="private" virt="non-virtual">boost::assign::v2::ref::wrapper&lt; ref::assign_tag::copy, ref::fusion_matrix_aux::container&lt; N, L, Tag1, Tag2, &gt; const  &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>std::size_t</type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
      <param>
        <type>typename L</type>
      </param>
      <param>
        <type>typename Tag1</type>
      </param>
      <param>
        <type>typename Tag2</type>
      </param>
      <param>
        <type>BOOST_PP_ENUM_PARAMS_WITH_A_DEFAULT(BOOST_ASSIGN_V2_LIMIT_ARITY,typename T,boost::mpl::na)</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classboost_1_1assign_1_1v2_1_1put__compose__aux_1_1args_1a4cfdbe84175db2a212f6ab82ad83ed52" prot="private" static="no">
        <type><ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container" kindref="compound">ref::fusion_matrix_aux::container</ref>&lt; N, L, Tag1, Tag2, &gt;</type>
        <definition>typedef ref::fusion_matrix_aux::container&lt;N, L, Tag1, Tag2, &gt; boost::assign::v2::put_compose_aux::args&lt; N, L, Tag1, Tag2, &gt;::value_</definition>
        <argsstring></argsstring>
        <name>value_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/forward_args.hpp" line="51" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/forward_args.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classboost_1_1assign_1_1v2_1_1put__compose__aux_1_1args_1acd80d896429edfeb3c27ca40bd1ec2a3" prot="private" static="no">
        <type><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1assign__tag_1_1copy" kindref="compound">ref::assign_tag::copy</ref></type>
        <definition>typedef ref::assign_tag::copy boost::assign::v2::put_compose_aux::args&lt; N, L, Tag1, Tag2, &gt;::assign_tag_</definition>
        <argsstring></argsstring>
        <name>assign_tag_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/forward_args.hpp" line="52" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/forward_args.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classboost_1_1assign_1_1v2_1_1put__compose__aux_1_1args_1a97b59711ccf34e8d5e4f486658e3742a" prot="private" static="no">
        <type><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1wrapper" kindref="compound">ref::wrapper</ref>&lt; <ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1assign__tag_1_1copy" kindref="compound">assign_tag_</ref>, <ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container" kindref="compound">value_</ref> const  &gt;</type>
        <definition>typedef ref::wrapper&lt;assign_tag_, value_ const&gt; boost::assign::v2::put_compose_aux::args&lt; N, L, Tag1, Tag2, &gt;::super_t</definition>
        <argsstring></argsstring>
        <name>super_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/forward_args.hpp" line="53" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/forward_args.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classboost_1_1assign_1_1v2_1_1put__compose__aux_1_1args_1a63ddcb90f955e8472271773831f131d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::assign::v2::put_compose_aux::args&lt; N, L, Tag1, Tag2, &gt;::args</definition>
        <argsstring>()</argsstring>
        <name>args</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/forward_args.hpp" line="57" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/forward_args.hpp" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1assign_1_1v2_1_1put__compose__aux_1_1args_1a87cc931a35e24f9bf4070e5ed24159e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::assign::v2::put_compose_aux::args&lt; N, L, Tag1, Tag2, &gt;::args</definition>
        <argsstring>(value_ const &amp;v)</argsstring>
        <name>args</name>
        <param>
          <type><ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container" kindref="compound">value_</ref> const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/forward_args.hpp" line="59" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/forward_args.hpp" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1assign_1_1v2_1_1put__compose__aux_1_1args_1a6ee2431d169e7139d0e78aef0a608f84" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container" kindref="compound">value_</ref> const &amp;</type>
        <definition>value_ const&amp; boost::assign::v2::put_compose_aux::args&lt; N, L, Tag1, Tag2, &gt;::value</definition>
        <argsstring>() const </argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/forward_args.hpp" line="61" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/forward_args.hpp" bodystart="61" bodyend="61"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="85">
        <label>boost::assign::v2::ref::wrapper&lt; ref::assign_tag::copy, ref::fusion_matrix_aux::container&lt; N, L, Tag1, Tag2, &gt; const  &gt;</label>
        <link refid="structboost_1_1assign_1_1v2_1_1ref_1_1wrapper"/>
      </node>
      <node id="84">
        <label>boost::assign::v2::put_compose_aux::args&lt; N, L, Tag1, Tag2, &gt;</label>
        <link refid="classboost_1_1assign_1_1v2_1_1put__compose__aux_1_1args"/>
        <childnode refid="85" relation="private-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="87">
        <label>boost::assign::v2::ref::wrapper&lt; ref::assign_tag::copy, ref::fusion_matrix_aux::container&lt; N, L, Tag1, Tag2, &gt; const  &gt;</label>
        <link refid="structboost_1_1assign_1_1v2_1_1ref_1_1wrapper"/>
      </node>
      <node id="86">
        <label>boost::assign::v2::put_compose_aux::args&lt; N, L, Tag1, Tag2, &gt;</label>
        <link refid="classboost_1_1assign_1_1v2_1_1put__compose__aux_1_1args"/>
        <childnode refid="87" relation="private-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/forward_args.hpp" line="48" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/forward_args.hpp" bodystart="42" bodyend="63"/>
    <listofallmembers>
      <member refid="classboost_1_1assign_1_1v2_1_1put__compose__aux_1_1args_1a63ddcb90f955e8472271773831f131d7" prot="public" virt="non-virtual"><scope>boost::assign::v2::put_compose_aux::args</scope><name>args</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1put__compose__aux_1_1args_1a87cc931a35e24f9bf4070e5ed24159e2" prot="public" virt="non-virtual"><scope>boost::assign::v2::put_compose_aux::args</scope><name>args</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1put__compose__aux_1_1args_1acd80d896429edfeb3c27ca40bd1ec2a3" prot="private" virt="non-virtual"><scope>boost::assign::v2::put_compose_aux::args</scope><name>assign_tag_</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1put__compose__aux_1_1args_1a97b59711ccf34e8d5e4f486658e3742a" prot="private" virt="non-virtual"><scope>boost::assign::v2::put_compose_aux::args</scope><name>super_t</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1put__compose__aux_1_1args_1a6ee2431d169e7139d0e78aef0a608f84" prot="public" virt="non-virtual"><scope>boost::assign::v2::put_compose_aux::args</scope><name>value</name></member>
      <member refid="classboost_1_1assign_1_1v2_1_1put__compose__aux_1_1args_1a4cfdbe84175db2a212f6ab82ad83ed52" prot="private" virt="non-virtual"><scope>boost::assign::v2::put_compose_aux::args</scope><name>value_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
