<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="detail_2relational__op_2crtp_8hpp" kind="file">
    <compoundname>crtp.hpp</compoundname>
    <includes local="no">boost/utility/enable_if.hpp</includes>
    <includes local="no">boost/type_traits/is_base_of.hpp</includes>
    <includedby refid="relational__op_2relational__op_8hpp" local="no">/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/relational_op/relational_op.hpp</includedby>
    <incdepgraph>
      <node id="7476">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/relational_op/crtp.hpp</label>
        <link refid="detail/relational_op/crtp.hpp"/>
        <childnode refid="7477" relation="include">
        </childnode>
        <childnode refid="7478" relation="include">
        </childnode>
      </node>
      <node id="7477">
        <label>boost/utility/enable_if.hpp</label>
      </node>
      <node id="7478">
        <label>boost/type_traits/is_base_of.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7513">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/lazy_alloc.hpp</label>
        <link refid="static__array_2alloc_2lazy__alloc_8hpp_source"/>
        <childnode refid="7514" relation="include">
        </childnode>
        <childnode refid="7519" relation="include">
        </childnode>
        <childnode refid="7511" relation="include">
        </childnode>
      </node>
      <node id="7517">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/unary.hpp</label>
        <link refid="unary_8hpp_source"/>
        <childnode refid="7507" relation="include">
        </childnode>
      </node>
      <node id="7527">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/sub.hpp</label>
        <link refid="put_2compose_2functor_2sub_8hpp_source"/>
        <childnode refid="7526" relation="include">
        </childnode>
      </node>
      <node id="7486">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/aux_/sub.hpp</label>
        <link refid="chain_2aux___2sub_8hpp_source"/>
        <childnode refid="7487" relation="include">
        </childnode>
        <childnode refid="7492" relation="include">
        </childnode>
      </node>
      <node id="7504">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/csv/forward_seq_arg.hpp</label>
        <link refid="forward__seq__arg_8hpp_source"/>
        <childnode refid="7500" relation="include">
        </childnode>
        <childnode refid="7505" relation="include">
        </childnode>
      </node>
      <node id="7525">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/composer.hpp</label>
        <link refid="functor_2composer_8hpp_source"/>
        <childnode refid="7526" relation="include">
        </childnode>
        <childnode refid="7527" relation="include">
        </childnode>
      </node>
      <node id="7524">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/assign_copy.hpp</label>
        <link refid="fusion_2assign__copy_8hpp_source"/>
        <childnode refid="7503" relation="include">
        </childnode>
        <childnode refid="7525" relation="include">
        </childnode>
        <childnode refid="7521" relation="include">
        </childnode>
      </node>
      <node id="7506">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/csv/csv.hpp</label>
        <link refid="ref_2anon_2csv_2csv_8hpp_source"/>
        <childnode refid="7507" relation="include">
        </childnode>
      </node>
      <node id="7502">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/put.hpp</label>
        <link refid="put_8hpp_source"/>
        <childnode refid="7481" relation="include">
        </childnode>
        <childnode refid="7483" relation="include">
        </childnode>
      </node>
      <node id="7526">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/functor.hpp</label>
        <link refid="put_2compose_2functor_2functor_8hpp_source"/>
        <childnode refid="7501" relation="include">
        </childnode>
      </node>
      <node id="7512">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/static_array.hpp</label>
        <link refid="static__array_8hpp_source"/>
      </node>
      <node id="7493">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/detail.hpp</label>
        <link refid="detail_8hpp_source"/>
        <childnode refid="7483" relation="include">
        </childnode>
      </node>
      <node id="7514">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/make.hpp</label>
        <link refid="ref_2anon_2unary_2make_8hpp_source"/>
        <childnode refid="7515" relation="include">
        </childnode>
        <childnode refid="7517" relation="include">
        </childnode>
      </node>
      <node id="7519">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/policy.hpp</label>
        <link refid="fusion_2policy_8hpp_source"/>
        <childnode refid="7520" relation="include">
        </childnode>
        <childnode refid="7521" relation="include">
        </childnode>
      </node>
      <node id="7485">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/anon/make.hpp</label>
        <link refid="anon_2make_8hpp_source"/>
        <childnode refid="7482" relation="include">
        </childnode>
        <childnode refid="7484" relation="include">
        </childnode>
      </node>
      <node id="7528">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/assign_rebind.hpp</label>
        <link refid="fusion_2assign__rebind_8hpp_source"/>
        <childnode refid="7521" relation="include">
        </childnode>
      </node>
      <node id="7496">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/csv/pp.hpp</label>
        <link refid="pp_8hpp_source"/>
        <childnode refid="7497" relation="include">
        </childnode>
        <childnode refid="7510" relation="include">
        </childnode>
      </node>
      <node id="7489">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/chain.hpp</label>
        <link refid="chain_8hpp_source"/>
        <childnode refid="7490" relation="include">
        </childnode>
        <childnode refid="7491" relation="include">
        </childnode>
        <childnode refid="7483" relation="include">
        </childnode>
      </node>
      <node id="7500">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/csv/csv.hpp</label>
        <link refid="put_2compose_2csv_2csv_8hpp_source"/>
        <childnode refid="7501" relation="include">
        </childnode>
      </node>
      <node id="7479">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/relational_op/crtp.hpp</label>
        <link refid="detail/relational_op/crtp.hpp"/>
        <childnode refid="7480" relation="include">
        </childnode>
      </node>
      <node id="7487">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/aux_/bitwise_or.hpp</label>
        <link refid="bitwise__or_8hpp_source"/>
        <childnode refid="7488" relation="include">
        </childnode>
        <childnode refid="7489" relation="include">
        </childnode>
      </node>
      <node id="7481">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/anon/cont.hpp</label>
        <link refid="anon_2cont_8hpp_source"/>
        <childnode refid="7482" relation="include">
        </childnode>
        <childnode refid="7484" relation="include">
        </childnode>
        <childnode refid="7485" relation="include">
        </childnode>
      </node>
      <node id="7507">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/anon.hpp</label>
        <link refid="ref_2anon_2anon_8hpp_source"/>
        <childnode refid="7508" relation="include">
        </childnode>
      </node>
      <node id="7491">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/checking/twin_values.hpp</label>
        <link refid="chain_2checking_2twin__values_8hpp_source"/>
      </node>
      <node id="7510">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/csv/make.hpp</label>
        <link refid="ref_2anon_2csv_2make_8hpp_source"/>
        <childnode refid="7497" relation="include">
        </childnode>
        <childnode refid="7506" relation="include">
        </childnode>
      </node>
      <node id="7505">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/csv/sub.hpp</label>
        <link refid="put_2compose_2csv_2sub_8hpp_source"/>
        <childnode refid="7500" relation="include">
        </childnode>
      </node>
      <node id="7483">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/v2.hpp</label>
        <link refid="v2_8hpp_source"/>
      </node>
      <node id="7490">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/checking/distinct_values.hpp</label>
        <link refid="chain_2checking_2distinct__values_8hpp_source"/>
      </node>
      <node id="7484">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/anon/csv.hpp</label>
        <link refid="anon_2csv_8hpp_source"/>
        <childnode refid="7482" relation="include">
        </childnode>
      </node>
      <node id="7501">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/compose.hpp</label>
        <link refid="compose_8hpp_source"/>
        <childnode refid="7502" relation="include">
        </childnode>
      </node>
      <node id="7498">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/csv/assign_copy.hpp</label>
        <link refid="anon_2csv_2assign__copy_8hpp_source"/>
        <childnode refid="7499" relation="include">
        </childnode>
        <childnode refid="7503" relation="include">
        </childnode>
        <childnode refid="7506" relation="include">
        </childnode>
      </node>
      <node id="7523">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/assign_xxx.hpp</label>
        <link refid="fusion_2assign__xxx_8hpp_source"/>
        <childnode refid="7524" relation="include">
        </childnode>
        <childnode refid="7528" relation="include">
        </childnode>
      </node>
      <node id="7511">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/alloc.hpp</label>
        <link refid="alloc_8hpp_source"/>
        <childnode refid="7512" relation="include">
        </childnode>
      </node>
      <node id="7497">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/csv/assign_xxx.hpp</label>
        <link refid="anon_2csv_2assign__xxx_8hpp_source"/>
        <childnode refid="7498" relation="include">
        </childnode>
        <childnode refid="7509" relation="include">
        </childnode>
      </node>
      <node id="7480">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/relational_op/relational_op.hpp</label>
        <link refid="relational__op_2relational__op_8hpp_source"/>
        <childnode refid="7481" relation="include">
        </childnode>
        <childnode refid="7486" relation="include">
        </childnode>
        <childnode refid="7493" relation="include">
        </childnode>
        <childnode refid="7494" relation="include">
        </childnode>
      </node>
      <node id="7516">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/assign_copy.hpp</label>
        <link refid="anon_2unary_2assign__copy_8hpp_source"/>
        <childnode refid="7517" relation="include">
        </childnode>
      </node>
      <node id="7492">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/traits/result.hpp</label>
        <link refid="chain_2traits_2result_8hpp_source"/>
        <childnode refid="7487" relation="include">
        </childnode>
        <childnode refid="7488" relation="include">
        </childnode>
        <childnode refid="7489" relation="include">
        </childnode>
      </node>
      <node id="7495">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/alloc/fast_alloc.hpp</label>
        <link refid="static__array_2alloc_2fast__alloc_8hpp_source"/>
        <childnode refid="7496" relation="include">
        </childnode>
        <childnode refid="7511" relation="include">
        </childnode>
      </node>
      <node id="7508">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/ref.hpp</label>
        <link refid="ref_8hpp_source"/>
        <childnode refid="7483" relation="include">
        </childnode>
      </node>
      <node id="7503">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/csv/held.hpp</label>
        <link refid="held_8hpp_source"/>
        <childnode refid="7499" relation="include">
        </childnode>
        <childnode refid="7500" relation="include">
        </childnode>
        <childnode refid="7504" relation="include">
        </childnode>
        <childnode refid="7505" relation="include">
        </childnode>
      </node>
      <node id="7515">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/assign_xxx.hpp</label>
        <link refid="anon_2unary_2assign__xxx_8hpp_source"/>
        <childnode refid="7516" relation="include">
        </childnode>
        <childnode refid="7518" relation="include">
        </childnode>
      </node>
      <node id="7499">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/csv/composer.hpp</label>
        <link refid="csv_2composer_8hpp_source"/>
        <childnode refid="7500" relation="include">
        </childnode>
      </node>
      <node id="7518">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/unary/assign_rebind.hpp</label>
        <link refid="anon_2unary_2assign__rebind_8hpp_source"/>
        <childnode refid="7517" relation="include">
        </childnode>
      </node>
      <node id="7488">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/chain/aux_/logical_and.hpp</label>
        <link refid="logical__and_8hpp_source"/>
        <childnode refid="7489" relation="include">
        </childnode>
      </node>
      <node id="7521">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/fusion.hpp</label>
        <link refid="fusion_8hpp_source"/>
        <childnode refid="7508" relation="include">
        </childnode>
      </node>
      <node id="7509">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/anon/csv/assign_rebind.hpp</label>
        <link refid="anon_2csv_2assign__rebind_8hpp_source"/>
        <childnode refid="7506" relation="include">
        </childnode>
      </node>
      <node id="7520">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/container.hpp</label>
        <link refid="ref_2fusion_2container_8hpp_source"/>
        <childnode refid="7521" relation="include">
        </childnode>
        <childnode refid="7522" relation="include">
        </childnode>
      </node>
      <node id="7494">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/static_array/interface.hpp</label>
        <link refid="static__array_2interface_8hpp_source"/>
        <childnode refid="7495" relation="include">
        </childnode>
        <childnode refid="7513" relation="include">
        </childnode>
        <childnode refid="7512" relation="include">
        </childnode>
      </node>
      <node id="7482">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/anon/anon.hpp</label>
        <link refid="anon_2anon_8hpp_source"/>
        <childnode refid="7483" relation="include">
        </childnode>
      </node>
      <node id="7522">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion/make.hpp</label>
        <link refid="ref_2fusion_2make_8hpp_source"/>
        <childnode refid="7496" relation="include">
        </childnode>
        <childnode refid="7514" relation="include">
        </childnode>
        <childnode refid="7523" relation="include">
        </childnode>
        <childnode refid="7521" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1relational__op__aux_1_1base" prot="public">boost::assign::v2::relational_op_aux::base</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1relational__op__aux_1_1crtp" prot="public">boost::assign::v2::relational_op_aux::crtp</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1relational__op__aux_1_1is__relational" prot="public">boost::assign::v2::relational_op_aux::is_relational</innerclass>
    <innernamespace refid="namespaceboost">boost</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign">boost::assign</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2">boost::assign::v2</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2_1_1relational__op__aux">boost::assign::v2::relational_op_aux</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="detail_2relational__op_2crtp_8hpp_1accec647f5b65cf36c778dd53e6f39d86" prot="public" static="no">
        <name>MACRO</name>
        <param><defname>symb</defname></param>
        <param><defname>expr</defname></param>
        <initializer>template&lt; typename A ,typename B&gt; \
    typename boost::disable_if&lt; \
    	boost::is_base_of&lt;base,A&gt;, \
        bool \
    &gt;::type \
    operator symb ( A const&amp; a, crtp&lt; B &gt; const&amp; b) \
	{ \
		return expr; \
	} \
 	\
	template&lt; typename A ,typename B&gt; \
	bool operator symb ( crtp&lt; A &gt; const&amp; a, B const&amp; b ) \
	{ \
		return expr; \
	} \</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/relational_op/crtp.hpp" line="91" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/relational_op/crtp.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="2"><highlight class="comment">//<sp/><sp/>Boost.Assign<sp/>v2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2003-2004<sp/>Thorsten<sp/>Ottosen<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2010<sp/>Erwann<sp/>Rogard<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Use,<sp/>modification<sp/>and<sp/>distribution<sp/>are<sp/>subject<sp/>to<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.<sp/>(See<sp/>accompanying<sp/>file<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at<sp/>http://www.boost.org/LICENSE_1_0.txt)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight><highlight class="preprocessor">#ifndef<sp/>BOOST_ASSIGN_V2_DETAIL_RELATIONAL_OP_CRTP_ER_2010_HPP</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOOST_ASSIGN_V2_DETAIL_RELATIONAL_OP_CRTP_ER_2010_HPP</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/utility/enable_if.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/type_traits/is_base_of.hpp&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">boost{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">assign{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">v2{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">relational_op_aux{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>solution<sp/>with<sp/>3<sp/>overloads<sp/>was<sp/>proposed<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://groups.google.com/group/comp.lang.c++.moderated/browse_thread/thread/389d8fe278ef0b13#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>overloads<sp/>seem<sp/>to<sp/>suffice,<sp/>however,<sp/>as<sp/>implemented<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="structboost_1_1assign_1_1v2_1_1relational__op__aux_1_1base" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1relational__op__aux_1_1base" kindref="compound">base</ref>{};</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>D<sp/>must<sp/>implement:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>bool<sp/>equal_to(const<sp/>T&amp;)const;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>bool<sp/>less_than(const<sp/>T&amp;)const;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D&gt;</highlight></codeline>
<codeline lineno="30" refid="structboost_1_1assign_1_1v2_1_1relational__op__aux_1_1crtp" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1relational__op__aux_1_1crtp" kindref="compound">crtp</ref>{</highlight><highlight class="comment">//<sp/>:<sp/>base{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>derived()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">D<sp/>const&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this);<sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="37" refid="structboost_1_1assign_1_1v2_1_1relational__op__aux_1_1is__relational" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1relational__op__aux_1_1is__relational" kindref="compound">is_relational</ref><sp/>:<sp/>boost::is_base_of&lt;crtp&lt;T&gt;,T&gt;{};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A<sp/>,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>B&gt;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::disable_if&lt;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structboost_1_1assign_1_1v2_1_1relational__op__aux_1_1is__relational" kindref="compound">relational_op_aux::is_relational&lt;A&gt;</ref>,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>boost::is_base_of&lt;base,A&gt;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;::type</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>operator==(<sp/>A<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a,<sp/><ref refid="structboost_1_1assign_1_1v2_1_1relational__op__aux_1_1crtp" kindref="compound">crtp&lt; B &gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>b)<sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b.derived().equal_to(<sp/>a<sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A<sp/>,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>B&gt;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(<sp/>crtp&lt;<sp/>A<sp/>&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a,<sp/>B<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>b<sp/>)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b<sp/>==<sp/>a;<sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A<sp/>,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>B&gt;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::disable_if&lt;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>boost::is_base_of&lt;base,A&gt;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>relational_op_aux::is_relational&lt;A&gt;,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;::type</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>operator&lt;(<sp/>A<sp/>const&amp;<sp/>a,<sp/>crtp&lt;<sp/>B<sp/>&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>b)<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<sp/>(<sp/>(a<sp/>==<sp/>b)<sp/>||<sp/>(b<sp/>&lt;<sp/>a)<sp/>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A<sp/>,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>B&gt;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;(<sp/>crtp&lt;<sp/>A<sp/>&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a,<sp/>B<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>b<sp/>)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.derived().less_than(<sp/>b<sp/>);<sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Deduced</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MACRO(symb,expr)\</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template&lt;<sp/>typename<sp/>A<sp/>,typename<sp/>B&gt;<sp/>\</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typename<sp/>boost::disable_if&lt;<sp/>\</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::is_base_of&lt;base,A&gt;,<sp/>\</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>\</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&gt;::type<sp/>\</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>operator<sp/>symb<sp/>(<sp/>A<sp/>const&amp;<sp/>a,<sp/>crtp&lt;<sp/>B<sp/>&gt;<sp/>const&amp;<sp/>b)<sp/>\</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>expr;<sp/>\</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template&lt;<sp/>typename<sp/>A<sp/>,typename<sp/>B&gt;<sp/>\</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>operator<sp/>symb<sp/>(<sp/>crtp&lt;<sp/>A<sp/>&gt;<sp/>const&amp;<sp/>a,<sp/>B<sp/>const&amp;<sp/>b<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>expr;<sp/>\</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MACRO(<sp/>!=,<sp/><sp/>!(a<sp/>==<sp/>b)<sp/><sp/>)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MACRO(<sp/>&lt;=,<sp/><sp/>(a<sp/>&lt;<sp/>b)<sp/>||<sp/>(a<sp/>==<sp/>b)<sp/><sp/>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MACRO(<sp/>&gt;,<sp/><sp/><sp/>!(a<sp/>&lt;=<sp/>b)<sp/>)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MACRO(<sp/>&gt;=,<sp/><sp/>(a<sp/>&gt;<sp/>b)<sp/>||<sp/>(a<sp/>==<sp/>b)<sp/>)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MACRO</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>relational_op_aux</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>v2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>assign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>boost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/detail/relational_op/crtp.hpp"/>
  </compounddef>
</doxygen>
