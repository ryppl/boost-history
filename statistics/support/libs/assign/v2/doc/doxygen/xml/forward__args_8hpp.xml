<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="forward__args_8hpp" kind="file">
    <compoundname>forward_args.hpp</compoundname>
    <includes local="no">boost/preprocessor/arithmetic/inc.hpp</includes>
    <includes local="no">boost/preprocessor/control/expr_if.hpp</includes>
    <includes local="no">boost/preprocessor/punctuation/comma_if.hpp</includes>
    <includes local="no">boost/preprocessor/repetition/enum_params.hpp</includes>
    <includes local="no">boost/preprocessor/repetition/enum_params_with_a_default.hpp</includes>
    <includes local="no">boost/preprocessor/repetition/enum_trailing_params.hpp</includes>
    <includes local="no">boost/preprocessor/repetition/repeat.hpp</includes>
    <includes local="no">boost/mpl/aux_/na.hpp</includes>
    <includes local="no">boost/mpl/int.hpp</includes>
    <includes refid="limit__arity_8hpp" local="no">boost/assign/v2/detail/config/limit_arity.hpp</includes>
    <includes refid="ref_2fusion__matrix_2container_8hpp" local="no">boost/assign/v2/ref/fusion_matrix/container.hpp</includes>
    <includes refid="framework_8hpp" local="no">boost/assign/v2/ref/wrapper/framework.hpp</includes>
    <includes refid="ref_2wrapper_2copy_8hpp" local="no">boost/assign/v2/ref/wrapper/copy.hpp</includes>
    <includedby refid="forward__seq__args_8hpp" local="no">/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/forward_seq_args.hpp</includedby>
    <includedby refid="put_2compose_2functor_2functor_8hpp" local="no">/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/functor.hpp</includedby>
    <incdepgraph>
      <node id="10276">
        <label>boost/mpl/unpack_args.hpp</label>
      </node>
      <node id="10278">
        <label>boost/mpl/size.hpp</label>
      </node>
      <node id="10306">
        <label>boost/type_traits/remove_cv.hpp</label>
      </node>
      <node id="10311">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="10279">
        <label>boost/mpl/vector.hpp</label>
      </node>
      <node id="10265">
        <label>boost/assign/v2/detail/config/limit_arity.hpp</label>
        <link refid="limit__arity_8hpp_source"/>
        <childnode refid="10256" relation="include">
        </childnode>
        <childnode refid="10266" relation="include">
        </childnode>
      </node>
      <node id="10275">
        <label>boost/mpl/apply.hpp</label>
      </node>
      <node id="10307">
        <label>boost/assign/v2/ref/wrapper/base.hpp</label>
        <link refid="ref_2wrapper_2base_8hpp_source"/>
        <childnode refid="10308" relation="include">
        </childnode>
        <childnode refid="10309" relation="include">
        </childnode>
      </node>
      <node id="10274">
        <label>boost/preprocessor/repetition/repeat_from_to.hpp</label>
      </node>
      <node id="10316">
        <label>boost/assign/v2/ref/fusion_matrix/fwd.hpp</label>
        <link refid="ref_2fusion__matrix_2fwd_8hpp_source"/>
        <childnode refid="10268" relation="include">
        </childnode>
        <childnode refid="10260" relation="include">
        </childnode>
        <childnode refid="10263" relation="include">
        </childnode>
        <childnode refid="10265" relation="include">
        </childnode>
      </node>
      <node id="10294">
        <label>boost/preprocessor/tuple/to_seq.hpp</label>
      </node>
      <node id="10273">
        <label>boost/preprocessor/repetition/enum_trailing.hpp</label>
      </node>
      <node id="10309">
        <label>boost/type_traits/is_const.hpp</label>
      </node>
      <node id="10287">
        <label>boost/assign/v2/detail/pp/args.hpp</label>
        <link refid="args_8hpp_source"/>
        <childnode refid="10269" relation="include">
        </childnode>
        <childnode refid="10288" relation="include">
        </childnode>
        <childnode refid="10259" relation="include">
        </childnode>
        <childnode refid="10289" relation="include">
        </childnode>
        <childnode refid="10290" relation="include">
        </childnode>
      </node>
      <node id="10312">
        <label>boost/type_traits/add_const.hpp</label>
      </node>
      <node id="10298">
        <label>boost/assign/v2/ref/wrapper/wrapper.hpp</label>
        <link refid="ref_2wrapper_2wrapper_8hpp_source"/>
        <childnode refid="10299" relation="include">
        </childnode>
        <childnode refid="10303" relation="include">
        </childnode>
        <childnode refid="10314" relation="include">
        </childnode>
      </node>
      <node id="10270">
        <label>boost/preprocessor/punctuation/comma.hpp</label>
      </node>
      <node id="10256">
        <label>boost/preprocessor/arithmetic/inc.hpp</label>
      </node>
      <node id="10260">
        <label>boost/preprocessor/repetition/enum_params_with_a_default.hpp</label>
      </node>
      <node id="10300">
        <label>boost/mpl/eval_if.hpp</label>
      </node>
      <node id="10303">
        <label>boost/assign/v2/ref/wrapper/copy.hpp</label>
        <link refid="ref_2wrapper_2copy_8hpp_source"/>
        <childnode refid="10304" relation="include">
        </childnode>
        <childnode refid="10296" relation="include">
        </childnode>
        <childnode refid="10305" relation="include">
        </childnode>
        <childnode refid="10306" relation="include">
        </childnode>
        <childnode refid="10295" relation="include">
        </childnode>
        <childnode refid="10307" relation="include">
        </childnode>
        <childnode refid="10310" relation="include">
        </childnode>
      </node>
      <node id="10299">
        <label>boost/assign/v2/ref/wrapper/deduce_assign_tag.hpp</label>
        <link refid="deduce__assign__tag_8hpp_source"/>
        <childnode refid="10300" relation="include">
        </childnode>
        <childnode refid="10301" relation="include">
        </childnode>
        <childnode refid="10302" relation="include">
        </childnode>
      </node>
      <node id="10293">
        <label>boost/assign/v2/detail/pp/seq.hpp</label>
        <link refid="seq_8hpp_source"/>
        <childnode refid="10294" relation="include">
        </childnode>
      </node>
      <node id="10290">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="10268">
        <label>boost/preprocessor/arithmetic/dec.hpp</label>
      </node>
      <node id="10280">
        <label>boost/utility/enable_if.hpp</label>
      </node>
      <node id="10263">
        <label>boost/mpl/aux_/na.hpp</label>
      </node>
      <node id="10267">
        <label>boost/assign/v2/ref/fusion_matrix/container.hpp</label>
        <link refid="ref_2fusion__matrix_2container_8hpp_source"/>
        <childnode refid="10268" relation="include">
        </childnode>
        <childnode refid="10269" relation="include">
        </childnode>
        <childnode refid="10270" relation="include">
        </childnode>
        <childnode refid="10258" relation="include">
        </childnode>
        <childnode refid="10271" relation="include">
        </childnode>
        <childnode refid="10272" relation="include">
        </childnode>
        <childnode refid="10259" relation="include">
        </childnode>
        <childnode refid="10260" relation="include">
        </childnode>
        <childnode refid="10273" relation="include">
        </childnode>
        <childnode refid="10261" relation="include">
        </childnode>
        <childnode refid="10262" relation="include">
        </childnode>
        <childnode refid="10274" relation="include">
        </childnode>
        <childnode refid="10275" relation="include">
        </childnode>
        <childnode refid="10276" relation="include">
        </childnode>
        <childnode refid="10263" relation="include">
        </childnode>
        <childnode refid="10264" relation="include">
        </childnode>
        <childnode refid="10277" relation="include">
        </childnode>
        <childnode refid="10278" relation="include">
        </childnode>
        <childnode refid="10279" relation="include">
        </childnode>
        <childnode refid="10280" relation="include">
        </childnode>
        <childnode refid="10265" relation="include">
        </childnode>
        <childnode refid="10281" relation="include">
        </childnode>
        <childnode refid="10295" relation="include">
        </childnode>
        <childnode refid="10315" relation="include">
        </childnode>
        <childnode refid="10316" relation="include">
        </childnode>
      </node>
      <node id="10315">
        <label>boost/assign/v2/ref/fusion/link_holder.hpp</label>
        <link refid="link__holder_8hpp_source"/>
        <childnode refid="10264" relation="include">
        </childnode>
        <childnode refid="10295" relation="include">
        </childnode>
        <childnode refid="10303" relation="include">
        </childnode>
      </node>
      <node id="10284">
        <label>boost/assign/v2/detail/config/limit_lvalue_const_arity.hpp</label>
        <link refid="limit__lvalue__const__arity_8hpp_source"/>
        <childnode refid="10256" relation="include">
        </childnode>
        <childnode refid="10266" relation="include">
        </childnode>
        <childnode refid="10265" relation="include">
        </childnode>
      </node>
      <node id="10259">
        <label>boost/preprocessor/repetition/enum_params.hpp</label>
      </node>
      <node id="10255">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/forward_args.hpp</label>
        <link refid="forward_args.hpp"/>
        <childnode refid="10256" relation="include">
        </childnode>
        <childnode refid="10257" relation="include">
        </childnode>
        <childnode refid="10258" relation="include">
        </childnode>
        <childnode refid="10259" relation="include">
        </childnode>
        <childnode refid="10260" relation="include">
        </childnode>
        <childnode refid="10261" relation="include">
        </childnode>
        <childnode refid="10262" relation="include">
        </childnode>
        <childnode refid="10263" relation="include">
        </childnode>
        <childnode refid="10264" relation="include">
        </childnode>
        <childnode refid="10265" relation="include">
        </childnode>
        <childnode refid="10267" relation="include">
        </childnode>
        <childnode refid="10295" relation="include">
        </childnode>
        <childnode refid="10303" relation="include">
        </childnode>
      </node>
      <node id="10264">
        <label>boost/mpl/int.hpp</label>
      </node>
      <node id="10277">
        <label>boost/mpl/minus.hpp</label>
      </node>
      <node id="10271">
        <label>boost/preprocessor/repetition/enum_binary_params.hpp</label>
      </node>
      <node id="10301">
        <label>boost/mpl/identity.hpp</label>
      </node>
      <node id="10314">
        <label>boost/assign/v2/ref/wrapper/rebind.hpp</label>
        <link refid="rebind_8hpp_source"/>
        <childnode refid="10304" relation="include">
        </childnode>
        <childnode refid="10295" relation="include">
        </childnode>
        <childnode refid="10307" relation="include">
        </childnode>
        <childnode refid="10310" relation="include">
        </childnode>
      </node>
      <node id="10305">
        <label>boost/call_traits.hpp</label>
      </node>
      <node id="10258">
        <label>boost/preprocessor/punctuation/comma_if.hpp</label>
      </node>
      <node id="10282">
        <label>boost/preprocessor/seq/for_each_product.hpp</label>
      </node>
      <node id="10297">
        <label>boost/ref.hpp</label>
      </node>
      <node id="10281">
        <label>boost/assign/v2/detail/functor/crtp_unary_and_up.hpp</label>
        <link refid="crtp__unary__and__up_8hpp_source"/>
        <childnode refid="10256" relation="include">
        </childnode>
        <childnode refid="10274" relation="include">
        </childnode>
        <childnode refid="10271" relation="include">
        </childnode>
        <childnode refid="10259" relation="include">
        </childnode>
        <childnode refid="10262" relation="include">
        </childnode>
        <childnode refid="10282" relation="include">
        </childnode>
        <childnode refid="10283" relation="include">
        </childnode>
        <childnode refid="10275" relation="include">
        </childnode>
        <childnode refid="10279" relation="include">
        </childnode>
        <childnode refid="10280" relation="include">
        </childnode>
        <childnode refid="10265" relation="include">
        </childnode>
        <childnode refid="10284" relation="include">
        </childnode>
        <childnode refid="10285" relation="include">
        </childnode>
        <childnode refid="10287" relation="include">
        </childnode>
        <childnode refid="10291" relation="include">
        </childnode>
        <childnode refid="10293" relation="include">
        </childnode>
      </node>
      <node id="10262">
        <label>boost/preprocessor/repetition/repeat.hpp</label>
      </node>
      <node id="10295">
        <label>boost/assign/v2/ref/wrapper/framework.hpp</label>
        <link refid="framework_8hpp_source"/>
        <childnode refid="10296" relation="include">
        </childnode>
        <childnode refid="10297" relation="include">
        </childnode>
        <childnode refid="10298" relation="include">
        </childnode>
      </node>
      <node id="10269">
        <label>boost/preprocessor/cat.hpp</label>
      </node>
      <node id="10283">
        <label>boost/preprocessor/seq/first_n.hpp</label>
      </node>
      <node id="10292">
        <label>boost/preprocessor/seq/enum.hpp</label>
      </node>
      <node id="10257">
        <label>boost/preprocessor/control/expr_if.hpp</label>
      </node>
      <node id="10266">
        <label>boost/mpl/limits/arity.hpp</label>
      </node>
      <node id="10313">
        <label>boost/operators.hpp</label>
      </node>
      <node id="10308">
        <label>boost/config.hpp</label>
      </node>
      <node id="10272">
        <label>boost/preprocessor/repetition/enum.hpp</label>
      </node>
      <node id="10289">
        <label>boost/preprocessor/seq/for_each_i.hpp</label>
      </node>
      <node id="10286">
        <label>boost/preprocessor/logical/and.hpp</label>
      </node>
      <node id="10261">
        <label>boost/preprocessor/repetition/enum_trailing_params.hpp</label>
      </node>
      <node id="10304">
        <label>algorithm</label>
      </node>
      <node id="10296">
        <label>boost/mpl/bool.hpp</label>
      </node>
      <node id="10291">
        <label>boost/assign/v2/detail/pp/params.hpp</label>
        <link refid="params_8hpp_source"/>
        <childnode refid="10290" relation="include">
        </childnode>
        <childnode refid="10292" relation="include">
        </childnode>
      </node>
      <node id="10288">
        <label>boost/preprocessor/comma_if.hpp</label>
      </node>
      <node id="10310">
        <label>boost/assign/v2/ref/wrapper/crtp.hpp</label>
        <link refid="ref_2wrapper_2crtp_8hpp_source"/>
        <childnode refid="10280" relation="include">
        </childnode>
        <childnode refid="10302" relation="include">
        </childnode>
        <childnode refid="10311" relation="include">
        </childnode>
        <childnode refid="10312" relation="include">
        </childnode>
        <childnode refid="10305" relation="include">
        </childnode>
        <childnode refid="10313" relation="include">
        </childnode>
      </node>
      <node id="10285">
        <label>boost/assign/v2/detail/config/enable_cpp0x.hpp</label>
        <link refid="enable__cpp0x_8hpp_source"/>
        <childnode refid="10286" relation="include">
        </childnode>
      </node>
      <node id="10302">
        <label>boost/type_traits/is_same.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="10327">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/sub.hpp</label>
        <link refid="put_2compose_2functor_2sub_8hpp_source"/>
        <childnode refid="10319" relation="include">
        </childnode>
      </node>
      <node id="10321">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/put.hpp</label>
        <link refid="put_8hpp_source"/>
        <childnode refid="10322" relation="include">
        </childnode>
        <childnode refid="10324" relation="include">
        </childnode>
      </node>
      <node id="10319">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/functor.hpp</label>
        <link refid="put_2compose_2functor_2functor_8hpp_source"/>
        <childnode refid="10320" relation="include">
        </childnode>
      </node>
      <node id="10326">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/anon/make.hpp</label>
        <link refid="anon_2make_8hpp_source"/>
        <childnode refid="10323" relation="include">
        </childnode>
        <childnode refid="10325" relation="include">
        </childnode>
      </node>
      <node id="10322">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/anon/cont.hpp</label>
        <link refid="anon_2cont_8hpp_source"/>
        <childnode refid="10323" relation="include">
        </childnode>
        <childnode refid="10325" relation="include">
        </childnode>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10324">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/v2.hpp</label>
        <link refid="v2_8hpp_source"/>
      </node>
      <node id="10325">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/anon/csv.hpp</label>
        <link refid="anon_2csv_8hpp_source"/>
        <childnode refid="10323" relation="include">
        </childnode>
      </node>
      <node id="10320">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/compose.hpp</label>
        <link refid="compose_8hpp_source"/>
        <childnode refid="10321" relation="include">
        </childnode>
      </node>
      <node id="10317">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/forward_args.hpp</label>
        <link refid="forward_args.hpp"/>
        <childnode refid="10318" relation="include">
        </childnode>
        <childnode refid="10319" relation="include">
        </childnode>
      </node>
      <node id="10318">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/forward_seq_args.hpp</label>
        <link refid="forward__seq__args_8hpp_source"/>
        <childnode refid="10319" relation="include">
        </childnode>
        <childnode refid="10327" relation="include">
        </childnode>
      </node>
      <node id="10323">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/anon/anon.hpp</label>
        <link refid="anon_2anon_8hpp_source"/>
        <childnode refid="10324" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classboost_1_1assign_1_1v2_1_1put__compose__aux_1_1args" prot="public">boost::assign::v2::put_compose_aux::args</innerclass>
    <innernamespace refid="namespaceboost">boost</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign">boost::assign</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2">boost::assign::v2</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2_1_1put__compose__aux">boost::assign::v2::put_compose_aux</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="forward__args_8hpp_1a7b8324829621687a57dabfcc9db4f8a4" prot="public" static="no">
        <name>MACRO1</name>
        <param><defname>z</defname></param>
        <param><defname>n</defname></param>
        <param><defname>data</defname></param>
        <initializer>BOOST_PP_COMMA_IF(n)\
	input.value().static_column(\
    	boost::mpl::int_&lt;n&gt;()\
    )\</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/forward_args.hpp" line="88" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/forward_args.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="forward__args_8hpp_1afe42d758b18ea5cf0b4420545f9ff374" prot="public" static="no">
        <name>MACRO2</name>
        <param><defname>z</defname></param>
        <param><defname>K</defname></param>
        <param><defname>data</defname></param>
        <initializer>template&lt;\
    	typename O,\
    	std::size_t N, typename L,typename Tag1, typename Tag2\
        BOOST_PP_ENUM_TRAILING_PARAMS(K, typename T)\
    &gt;\
    O const&amp;\
	forward_args(\
    	O const&amp; object,\
        put_compose_aux::args&lt;N, L, Tag1, Tag2 \
        	BOOST_PP_ENUM_TRAILING_PARAMS(K, T)\
        &gt; const&amp; input\
	)\
    {\
    	return object(\
            BOOST_PP_REPEAT(K, MACRO1, ~)\
        );\
	}\</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/forward_args.hpp" line="108" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/forward_args.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="2"><highlight class="comment">//<sp/><sp/>Boost.Assign<sp/>v2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2003-2004<sp/>Thorsten<sp/>Ottosen<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2010<sp/>Erwann<sp/>Rogard<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Use,<sp/>modification<sp/>and<sp/>distribution<sp/>are<sp/>subject<sp/>to<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.<sp/>(See<sp/>accompanying<sp/>file<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at<sp/>http://www.boost.org/LICENSE_1_0.txt)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight><highlight class="preprocessor">#ifndef<sp/>BOOST_ASSIGN_V2_PUT_COMPOSE_FORWARD_ARGS_ER_2010_HPP</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOOST_ASSIGN_V2_PUT_COMPOSE_FORWARD_ARGS_ER_2010_HPP</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/preprocessor/arithmetic/inc.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/preprocessor/control/expr_if.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/preprocessor/punctuation/comma_if.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/preprocessor/repetition/enum_params.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/preprocessor/repetition/enum_params_with_a_default.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/preprocessor/repetition/enum_trailing_params.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/preprocessor/repetition/repeat.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/aux_/na.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/int.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;boost/assign/v2/detail/keyword/default.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/v2/detail/config/limit_arity.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/v2/ref/fusion_matrix/container.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/v2/ref/wrapper/framework.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/v2/ref/wrapper/copy.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">boost{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">assign{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">v2{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">put_compose_aux{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tag1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tag2,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_PP_ENUM_PARAMS_WITH_A_DEFAULT(<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_ASSIGN_V2_LIMIT_ARITY,<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::mpl::na</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;</highlight></codeline>
<codeline lineno="42" refid="classboost_1_1assign_1_1v2_1_1put__compose__aux_1_1args" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classboost_1_1assign_1_1v2_1_1put__compose__aux_1_1args" kindref="compound">args</ref><sp/>:<sp/>ref::wrapper&lt;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref::assign_tag::copy,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ref::fusion_matrix_aux::container&lt;N,<sp/>L,<sp/>Tag1,<sp/>Tag2,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_PP_ENUM_PARAMS(BOOST_ASSIGN_V2_LIMIT_ARITY,<sp/>T)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>const</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container" kindref="compound">ref::fusion_matrix_aux::container</ref>&lt;N,<sp/>L,<sp/>Tag1,<sp/>Tag2,<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_PP_ENUM_PARAMS(BOOST_ASSIGN_V2_LIMIT_ARITY,<sp/>T)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/><ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container" kindref="compound">value_</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1assign__tag_1_1copy" kindref="compound">ref::assign_tag::copy</ref><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1assign__tag_1_1copy" kindref="compound">assign_tag_</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1wrapper" kindref="compound">ref::wrapper&lt;assign_tag_, value_ const&gt;</ref><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1wrapper" kindref="compound">super_t</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classboost_1_1assign_1_1v2_1_1put__compose__aux_1_1args" kindref="compound">args</ref>(){};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classboost_1_1assign_1_1v2_1_1put__compose__aux_1_1args" kindref="compound">args</ref>(<ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container" kindref="compound">value_</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v)<sp/>:<sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1wrapper" kindref="compound">super_t</ref>(<sp/>v<sp/>){}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container" kindref="compound">value_</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>value()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;unwrap();<sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tag1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tag2,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_PP_ENUM_PARAMS(BOOST_ASSIGN_V2_LIMIT_ARITY,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classboost_1_1assign_1_1v2_1_1put__compose__aux_1_1args" kindref="compound">args</ref>&lt;N,<sp/>L,<sp/>Tag1,<sp/>Tag2,<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_PP_ENUM_PARAMS(BOOST_ASSIGN_V2_LIMIT_ARITY,<sp/>T)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>make_args(</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container" kindref="compound">ref::fusion_matrix_aux::container</ref>&lt;N,L,Tag1,<sp/>Tag2,<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_PP_ENUM_PARAMS(BOOST_ASSIGN_V2_LIMIT_ARITY,<sp/>T)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>){</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classboost_1_1assign_1_1v2_1_1put__compose__aux_1_1args" kindref="compound">args</ref>&lt;N,L,Tag1,<sp/>Tag2,<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_PP_ENUM_PARAMS(BOOST_ASSIGN_V2_LIMIT_ARITY,<sp/>T)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>result_;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result_(<sp/>v<sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MACRO1(z,<sp/>n,<sp/>data)<sp/>\</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_PP_COMMA_IF(n)\</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input.value().static_column(\</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::mpl::int_&lt;n&gt;()\</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>)\</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MACRO2(z,<sp/>K,<sp/>data)\</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template&lt;\</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>O,\</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>N,<sp/>typename<sp/>L,typename<sp/>Tag1,<sp/>typename<sp/>Tag2\</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_PP_ENUM_TRAILING_PARAMS(K,<sp/>typename<sp/>T)\</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&gt;\</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>O<sp/>const&amp;\</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forward_args(\</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>O<sp/>const&amp;<sp/>object,\</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>put_compose_aux::args&lt;N,<sp/>L,<sp/>Tag1,<sp/>Tag2<sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_PP_ENUM_TRAILING_PARAMS(K,<sp/>T)\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>const&amp;<sp/>input\</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)\</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>object(\</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_PP_REPEAT(K,<sp/>MACRO1,<sp/>~)\</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);\</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal">BOOST_PP_REPEAT(</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_PP_INC(BOOST_ASSIGN_V2_LIMIT_ARITY),</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>MACRO2,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>~</highlight></codeline>
<codeline lineno="115"><highlight class="normal">)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MACRO1</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>MACRO2</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>put_compose_aux</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>v2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>assign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>boost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/forward_args.hpp"/>
  </compounddef>
</doxygen>
