<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="ref_2fusion__matrix_2container_8hpp" kind="file">
    <compoundname>container.hpp</compoundname>
    <includes local="no">boost/preprocessor/arithmetic/dec.hpp</includes>
    <includes local="no">boost/preprocessor/cat.hpp</includes>
    <includes local="no">boost/preprocessor/punctuation/comma.hpp</includes>
    <includes local="no">boost/preprocessor/punctuation/comma_if.hpp</includes>
    <includes local="no">boost/preprocessor/repetition/enum_binary_params.hpp</includes>
    <includes local="no">boost/preprocessor/repetition/enum.hpp</includes>
    <includes local="no">boost/preprocessor/repetition/enum_params.hpp</includes>
    <includes local="no">boost/preprocessor/repetition/enum_params_with_a_default.hpp</includes>
    <includes local="no">boost/preprocessor/repetition/enum_trailing.hpp</includes>
    <includes local="no">boost/preprocessor/repetition/enum_trailing_params.hpp</includes>
    <includes local="no">boost/preprocessor/repetition/repeat.hpp</includes>
    <includes local="no">boost/preprocessor/repetition/repeat_from_to.hpp</includes>
    <includes local="no">boost/mpl/apply.hpp</includes>
    <includes local="no">boost/mpl/unpack_args.hpp</includes>
    <includes local="no">boost/mpl/aux_/na.hpp</includes>
    <includes local="no">boost/mpl/int.hpp</includes>
    <includes local="no">boost/mpl/minus.hpp</includes>
    <includes local="no">boost/mpl/size.hpp</includes>
    <includes local="no">boost/mpl/vector.hpp</includes>
    <includes local="no">boost/utility/enable_if.hpp</includes>
    <includes refid="limit__arity_8hpp" local="no">boost/assign/v2/detail/config/limit_arity.hpp</includes>
    <includes refid="crtp__unary__and__up_8hpp" local="no">boost/assign/v2/detail/functor/crtp_unary_and_up.hpp</includes>
    <includes refid="framework_8hpp" local="no">boost/assign/v2/ref/wrapper/framework.hpp</includes>
    <includes refid="link__holder_8hpp" local="no">boost/assign/v2/ref/fusion/link_holder.hpp</includes>
    <includes refid="ref_2fusion__matrix_2fwd_8hpp" local="no">boost/assign/v2/ref/fusion_matrix/fwd.hpp</includes>
    <includedby refid="functor_2composer_8hpp" local="no">/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/composer.hpp</includedby>
    <includedby refid="forward__args_8hpp" local="no">/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/forward_args.hpp</includedby>
    <includedby refid="fusion__matrix_8hpp" local="no">/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion_matrix/fusion_matrix.hpp</includedby>
    <incdepgraph>
      <node id="5148">
        <label>boost/mpl/unpack_args.hpp</label>
      </node>
      <node id="5152">
        <label>boost/mpl/size.hpp</label>
      </node>
      <node id="5183">
        <label>boost/type_traits/remove_cv.hpp</label>
      </node>
      <node id="5188">
        <label>boost/type_traits/remove_const.hpp</label>
      </node>
      <node id="5155">
        <label>boost/assign/v2/detail/config/limit_arity.hpp</label>
        <link refid="limit__arity_8hpp_source"/>
        <childnode refid="5156" relation="include">
        </childnode>
        <childnode refid="5157" relation="include">
        </childnode>
      </node>
      <node id="5153">
        <label>boost/mpl/vector.hpp</label>
      </node>
      <node id="5147">
        <label>boost/mpl/apply.hpp</label>
      </node>
      <node id="5184">
        <label>boost/assign/v2/ref/wrapper/base.hpp</label>
        <link refid="ref_2wrapper_2base_8hpp_source"/>
        <childnode refid="5185" relation="include">
        </childnode>
        <childnode refid="5186" relation="include">
        </childnode>
      </node>
      <node id="5146">
        <label>boost/preprocessor/repetition/repeat_from_to.hpp</label>
      </node>
      <node id="5193">
        <label>boost/assign/v2/ref/fusion_matrix/fwd.hpp</label>
        <link refid="ref_2fusion__matrix_2fwd_8hpp_source"/>
        <childnode refid="5135" relation="include">
        </childnode>
        <childnode refid="5142" relation="include">
        </childnode>
        <childnode refid="5149" relation="include">
        </childnode>
        <childnode refid="5155" relation="include">
        </childnode>
      </node>
      <node id="5171">
        <label>boost/preprocessor/tuple/to_seq.hpp</label>
      </node>
      <node id="5143">
        <label>boost/preprocessor/repetition/enum_trailing.hpp</label>
      </node>
      <node id="5186">
        <label>boost/type_traits/is_const.hpp</label>
      </node>
      <node id="5164">
        <label>boost/assign/v2/detail/pp/args.hpp</label>
        <link refid="args_8hpp_source"/>
        <childnode refid="5136" relation="include">
        </childnode>
        <childnode refid="5165" relation="include">
        </childnode>
        <childnode refid="5141" relation="include">
        </childnode>
        <childnode refid="5166" relation="include">
        </childnode>
        <childnode refid="5167" relation="include">
        </childnode>
      </node>
      <node id="5189">
        <label>boost/type_traits/add_const.hpp</label>
      </node>
      <node id="5175">
        <label>boost/assign/v2/ref/wrapper/wrapper.hpp</label>
        <link refid="ref_2wrapper_2wrapper_8hpp_source"/>
        <childnode refid="5176" relation="include">
        </childnode>
        <childnode refid="5180" relation="include">
        </childnode>
        <childnode refid="5191" relation="include">
        </childnode>
      </node>
      <node id="5137">
        <label>boost/preprocessor/punctuation/comma.hpp</label>
      </node>
      <node id="5156">
        <label>boost/preprocessor/arithmetic/inc.hpp</label>
      </node>
      <node id="5142">
        <label>boost/preprocessor/repetition/enum_params_with_a_default.hpp</label>
      </node>
      <node id="5177">
        <label>boost/mpl/eval_if.hpp</label>
      </node>
      <node id="5180">
        <label>boost/assign/v2/ref/wrapper/copy.hpp</label>
        <link refid="ref_2wrapper_2copy_8hpp_source"/>
        <childnode refid="5181" relation="include">
        </childnode>
        <childnode refid="5173" relation="include">
        </childnode>
        <childnode refid="5182" relation="include">
        </childnode>
        <childnode refid="5183" relation="include">
        </childnode>
        <childnode refid="5172" relation="include">
        </childnode>
        <childnode refid="5184" relation="include">
        </childnode>
        <childnode refid="5187" relation="include">
        </childnode>
      </node>
      <node id="5176">
        <label>boost/assign/v2/ref/wrapper/deduce_assign_tag.hpp</label>
        <link refid="deduce__assign__tag_8hpp_source"/>
        <childnode refid="5177" relation="include">
        </childnode>
        <childnode refid="5178" relation="include">
        </childnode>
        <childnode refid="5179" relation="include">
        </childnode>
      </node>
      <node id="5170">
        <label>boost/assign/v2/detail/pp/seq.hpp</label>
        <link refid="seq_8hpp_source"/>
        <childnode refid="5171" relation="include">
        </childnode>
      </node>
      <node id="5167">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="5135">
        <label>boost/preprocessor/arithmetic/dec.hpp</label>
      </node>
      <node id="5154">
        <label>boost/utility/enable_if.hpp</label>
      </node>
      <node id="5149">
        <label>boost/mpl/aux_/na.hpp</label>
      </node>
      <node id="5134">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion_matrix/container.hpp</label>
        <link refid="ref/fusion_matrix/container.hpp"/>
        <childnode refid="5135" relation="include">
        </childnode>
        <childnode refid="5136" relation="include">
        </childnode>
        <childnode refid="5137" relation="include">
        </childnode>
        <childnode refid="5138" relation="include">
        </childnode>
        <childnode refid="5139" relation="include">
        </childnode>
        <childnode refid="5140" relation="include">
        </childnode>
        <childnode refid="5141" relation="include">
        </childnode>
        <childnode refid="5142" relation="include">
        </childnode>
        <childnode refid="5143" relation="include">
        </childnode>
        <childnode refid="5144" relation="include">
        </childnode>
        <childnode refid="5145" relation="include">
        </childnode>
        <childnode refid="5146" relation="include">
        </childnode>
        <childnode refid="5147" relation="include">
        </childnode>
        <childnode refid="5148" relation="include">
        </childnode>
        <childnode refid="5149" relation="include">
        </childnode>
        <childnode refid="5150" relation="include">
        </childnode>
        <childnode refid="5151" relation="include">
        </childnode>
        <childnode refid="5152" relation="include">
        </childnode>
        <childnode refid="5153" relation="include">
        </childnode>
        <childnode refid="5154" relation="include">
        </childnode>
        <childnode refid="5155" relation="include">
        </childnode>
        <childnode refid="5158" relation="include">
        </childnode>
        <childnode refid="5172" relation="include">
        </childnode>
        <childnode refid="5192" relation="include">
        </childnode>
        <childnode refid="5193" relation="include">
        </childnode>
      </node>
      <node id="5192">
        <label>boost/assign/v2/ref/fusion/link_holder.hpp</label>
        <link refid="link__holder_8hpp_source"/>
        <childnode refid="5150" relation="include">
        </childnode>
        <childnode refid="5172" relation="include">
        </childnode>
        <childnode refid="5180" relation="include">
        </childnode>
      </node>
      <node id="5161">
        <label>boost/assign/v2/detail/config/limit_lvalue_const_arity.hpp</label>
        <link refid="limit__lvalue__const__arity_8hpp_source"/>
        <childnode refid="5156" relation="include">
        </childnode>
        <childnode refid="5157" relation="include">
        </childnode>
        <childnode refid="5155" relation="include">
        </childnode>
      </node>
      <node id="5141">
        <label>boost/preprocessor/repetition/enum_params.hpp</label>
      </node>
      <node id="5150">
        <label>boost/mpl/int.hpp</label>
      </node>
      <node id="5151">
        <label>boost/mpl/minus.hpp</label>
      </node>
      <node id="5139">
        <label>boost/preprocessor/repetition/enum_binary_params.hpp</label>
      </node>
      <node id="5178">
        <label>boost/mpl/identity.hpp</label>
      </node>
      <node id="5191">
        <label>boost/assign/v2/ref/wrapper/rebind.hpp</label>
        <link refid="rebind_8hpp_source"/>
        <childnode refid="5181" relation="include">
        </childnode>
        <childnode refid="5172" relation="include">
        </childnode>
        <childnode refid="5184" relation="include">
        </childnode>
        <childnode refid="5187" relation="include">
        </childnode>
      </node>
      <node id="5182">
        <label>boost/call_traits.hpp</label>
      </node>
      <node id="5138">
        <label>boost/preprocessor/punctuation/comma_if.hpp</label>
      </node>
      <node id="5159">
        <label>boost/preprocessor/seq/for_each_product.hpp</label>
      </node>
      <node id="5174">
        <label>boost/ref.hpp</label>
      </node>
      <node id="5158">
        <label>boost/assign/v2/detail/functor/crtp_unary_and_up.hpp</label>
        <link refid="crtp__unary__and__up_8hpp_source"/>
        <childnode refid="5156" relation="include">
        </childnode>
        <childnode refid="5146" relation="include">
        </childnode>
        <childnode refid="5139" relation="include">
        </childnode>
        <childnode refid="5141" relation="include">
        </childnode>
        <childnode refid="5145" relation="include">
        </childnode>
        <childnode refid="5159" relation="include">
        </childnode>
        <childnode refid="5160" relation="include">
        </childnode>
        <childnode refid="5147" relation="include">
        </childnode>
        <childnode refid="5153" relation="include">
        </childnode>
        <childnode refid="5154" relation="include">
        </childnode>
        <childnode refid="5155" relation="include">
        </childnode>
        <childnode refid="5161" relation="include">
        </childnode>
        <childnode refid="5162" relation="include">
        </childnode>
        <childnode refid="5164" relation="include">
        </childnode>
        <childnode refid="5168" relation="include">
        </childnode>
        <childnode refid="5170" relation="include">
        </childnode>
      </node>
      <node id="5145">
        <label>boost/preprocessor/repetition/repeat.hpp</label>
      </node>
      <node id="5172">
        <label>boost/assign/v2/ref/wrapper/framework.hpp</label>
        <link refid="framework_8hpp_source"/>
        <childnode refid="5173" relation="include">
        </childnode>
        <childnode refid="5174" relation="include">
        </childnode>
        <childnode refid="5175" relation="include">
        </childnode>
      </node>
      <node id="5136">
        <label>boost/preprocessor/cat.hpp</label>
      </node>
      <node id="5160">
        <label>boost/preprocessor/seq/first_n.hpp</label>
      </node>
      <node id="5169">
        <label>boost/preprocessor/seq/enum.hpp</label>
      </node>
      <node id="5157">
        <label>boost/mpl/limits/arity.hpp</label>
      </node>
      <node id="5190">
        <label>boost/operators.hpp</label>
      </node>
      <node id="5185">
        <label>boost/config.hpp</label>
      </node>
      <node id="5140">
        <label>boost/preprocessor/repetition/enum.hpp</label>
      </node>
      <node id="5166">
        <label>boost/preprocessor/seq/for_each_i.hpp</label>
      </node>
      <node id="5163">
        <label>boost/preprocessor/logical/and.hpp</label>
      </node>
      <node id="5144">
        <label>boost/preprocessor/repetition/enum_trailing_params.hpp</label>
      </node>
      <node id="5181">
        <label>algorithm</label>
      </node>
      <node id="5173">
        <label>boost/mpl/bool.hpp</label>
      </node>
      <node id="5168">
        <label>boost/assign/v2/detail/pp/params.hpp</label>
        <link refid="params_8hpp_source"/>
        <childnode refid="5167" relation="include">
        </childnode>
        <childnode refid="5169" relation="include">
        </childnode>
      </node>
      <node id="5165">
        <label>boost/preprocessor/comma_if.hpp</label>
      </node>
      <node id="5187">
        <label>boost/assign/v2/ref/wrapper/crtp.hpp</label>
        <link refid="ref_2wrapper_2crtp_8hpp_source"/>
        <childnode refid="5154" relation="include">
        </childnode>
        <childnode refid="5179" relation="include">
        </childnode>
        <childnode refid="5188" relation="include">
        </childnode>
        <childnode refid="5189" relation="include">
        </childnode>
        <childnode refid="5182" relation="include">
        </childnode>
        <childnode refid="5190" relation="include">
        </childnode>
      </node>
      <node id="5162">
        <label>boost/assign/v2/detail/config/enable_cpp0x.hpp</label>
        <link refid="enable__cpp0x_8hpp_source"/>
        <childnode refid="5163" relation="include">
        </childnode>
      </node>
      <node id="5179">
        <label>boost/type_traits/is_same.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5204">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/sub.hpp</label>
        <link refid="put_2compose_2functor_2sub_8hpp_source"/>
        <childnode refid="5196" relation="include">
        </childnode>
      </node>
      <node id="5195">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/composer.hpp</label>
        <link refid="functor_2composer_8hpp_source"/>
        <childnode refid="5196" relation="include">
        </childnode>
        <childnode refid="5204" relation="include">
        </childnode>
      </node>
      <node id="5198">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/put.hpp</label>
        <link refid="put_8hpp_source"/>
        <childnode refid="5199" relation="include">
        </childnode>
        <childnode refid="5201" relation="include">
        </childnode>
      </node>
      <node id="5196">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/functor.hpp</label>
        <link refid="put_2compose_2functor_2functor_8hpp_source"/>
        <childnode refid="5197" relation="include">
        </childnode>
      </node>
      <node id="5203">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/anon/make.hpp</label>
        <link refid="anon_2make_8hpp_source"/>
        <childnode refid="5200" relation="include">
        </childnode>
        <childnode refid="5202" relation="include">
        </childnode>
      </node>
      <node id="5199">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/anon/cont.hpp</label>
        <link refid="anon_2cont_8hpp_source"/>
        <childnode refid="5200" relation="include">
        </childnode>
        <childnode refid="5202" relation="include">
        </childnode>
        <childnode refid="5203" relation="include">
        </childnode>
      </node>
      <node id="5201">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/v2.hpp</label>
        <link refid="v2_8hpp_source"/>
      </node>
      <node id="5202">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/anon/csv.hpp</label>
        <link refid="anon_2csv_8hpp_source"/>
        <childnode refid="5200" relation="include">
        </childnode>
      </node>
      <node id="5207">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion_matrix/fusion_matrix.hpp</label>
        <link refid="fusion__matrix_8hpp_source"/>
        <childnode refid="5208" relation="include">
        </childnode>
      </node>
      <node id="5194">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion_matrix/container.hpp</label>
        <link refid="ref/fusion_matrix/container.hpp"/>
        <childnode refid="5195" relation="include">
        </childnode>
        <childnode refid="5205" relation="include">
        </childnode>
        <childnode refid="5207" relation="include">
        </childnode>
      </node>
      <node id="5197">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/compose.hpp</label>
        <link refid="compose_8hpp_source"/>
        <childnode refid="5198" relation="include">
        </childnode>
      </node>
      <node id="5205">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/forward_args.hpp</label>
        <link refid="forward__args_8hpp_source"/>
        <childnode refid="5206" relation="include">
        </childnode>
        <childnode refid="5196" relation="include">
        </childnode>
      </node>
      <node id="5208">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/ref.hpp</label>
        <link refid="ref_8hpp_source"/>
        <childnode refid="5201" relation="include">
        </childnode>
      </node>
      <node id="5206">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/put/compose/functor/forward_seq_args.hpp</label>
        <link refid="forward__seq__args_8hpp_source"/>
        <childnode refid="5196" relation="include">
        </childnode>
        <childnode refid="5204" relation="include">
        </childnode>
      </node>
      <node id="5200">
        <label>/Users/erwann/sandbox/statistics/support/boost/assign/v2/anon/anon.hpp</label>
        <link refid="anon_2anon_8hpp_source"/>
        <childnode refid="5201" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1meta__result" prot="public">boost::assign::v2::ref::fusion_matrix_aux::meta_result</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1meta__result_1_1apply" prot="public">boost::assign::v2::ref::fusion_matrix_aux::meta_result::apply</innerclass>
    <innerclass refid="classboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container" prot="public">boost::assign::v2::ref::fusion_matrix_aux::container</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container_1_1wrapper" prot="private">boost::assign::v2::ref::fusion_matrix_aux::container::wrapper</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container_1_1result" prot="public">boost::assign::v2::ref::fusion_matrix_aux::container::result</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container_1_1link__result__static__row" prot="public">boost::assign::v2::ref::fusion_matrix_aux::container::link_result_static_row</innerclass>
    <innerclass refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container_1_1result__static__row" prot="public">boost::assign::v2::ref::fusion_matrix_aux::container::result_static_row</innerclass>
    <innernamespace refid="namespaceboost">boost</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign">boost::assign</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2">boost::assign::v2</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2_1_1ref">boost::assign::v2::ref</innernamespace>
    <innernamespace refid="namespaceboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux">boost::assign::v2::ref::fusion_matrix_aux</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="ref_2fusion__matrix_2container_8hpp_1a7b8324829621687a57dabfcc9db4f8a4" prot="public" static="no">
        <name>MACRO1</name>
        <param><defname>z</defname></param>
        <param><defname>n</defname></param>
        <param><defname>data</defname></param>
        <initializer>BOOST_PP_CAT(w, n) ( BOOST_PP_CAT(_, n) )\</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion_matrix/container.hpp" line="156" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion_matrix/container.hpp" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ref_2fusion__matrix_2container_8hpp_1a538cb95ff4b450e57852ca2290d0c732" prot="public" static="no">
        <name>MACRO2</name>
        <param><defname>z</defname></param>
        <param><defname>n</defname></param>
        <param><defname>data</defname></param>
        <initializer>explicit container( \
    	const L&amp; l BOOST_PP_COMMA_IF(n) \
        BOOST_PP_ENUM_BINARY_PARAMS(n, T, &amp; _) \
    ) : link_( l )\
          BOOST_PP_ENUM_TRAILING(n, MACRO1, ~)\
    {}\</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion_matrix/container.hpp" line="164" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion_matrix/container.hpp" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ref_2fusion__matrix_2container_8hpp_1a7b8324829621687a57dabfcc9db4f8a4" prot="public" static="no">
        <name>MACRO1</name>
        <param><defname>z</defname></param>
        <param><defname>n</defname></param>
        <param><defname>data</defname></param>
        <initializer>( BOOST_PP_CAT(_,n) ) \</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion_matrix/container.hpp" line="202" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion_matrix/container.hpp" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ref_2fusion__matrix_2container_8hpp_1ae706af08977ba16430e307cbce7ab487" prot="public" static="no">
        <name>MACRO2</name>
        <param><defname>z</defname></param>
        <param><defname>N1</defname></param>
        <param><defname>data</defname></param>
        <initializer>template&lt;BOOST_PP_ENUM_PARAMS(N1, typename U)&gt; \
    typename result&lt;BOOST_PP_ENUM_PARAMS(N1, U)&gt;::type \
    impl( BOOST_PP_ENUM_BINARY_PARAMS(N1, U, &amp;_) )const{ \
        typedef typename result&lt;BOOST_PP_ENUM_PARAMS(N1, U)&gt;::type result_; \
        return result_( *this BOOST_PP_ENUM_TRAILING_PARAMS(N1, _) );\
    } \</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion_matrix/container.hpp" line="211" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion_matrix/container.hpp" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ref_2fusion__matrix_2container_8hpp_1a787a0f9406198eb9e78df54f3584d6ef" prot="public" static="no">
        <name>MACRO</name>
        <param><defname>z</defname></param>
        <param><defname>n</defname></param>
        <param><defname>data</defname></param>
        <initializer>private: \
        typename wrapper&lt;BOOST_PP_CAT(T,n)&gt;::type BOOST_PP_CAT(w,n); \
    public: \
    BOOST_PP_CAT(T,n)&amp; static_column(boost::mpl::int_&lt;n&gt;)const\
    {\
        return this-&gt;BOOST_PP_CAT(w,n).unwrap(); \
    }\</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion_matrix/container.hpp" line="271" bodyfile="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion_matrix/container.hpp" bodystart="263" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="2"><highlight class="comment">//<sp/><sp/>Boost.Assign<sp/>v2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2003-2004<sp/>Thorsten<sp/>Ottosen<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2010<sp/>Erwann<sp/>Rogard<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Use,<sp/>modification<sp/>and<sp/>distribution<sp/>are<sp/>subject<sp/>to<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.<sp/>(See<sp/>accompanying<sp/>file<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at<sp/>http://www.boost.org/LICENSE_1_0.txt)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight><highlight class="preprocessor">#ifndef<sp/>BOOST_ASSIGN_V2_REF_FUSION_MATRIX_CONTAINER_ER_2010_HPP</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOOST_ASSIGN_V2_REF_FUSION_MATRIX_CONTAINER_ER_2010_HPP</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/preprocessor/arithmetic/dec.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/preprocessor/cat.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/preprocessor/punctuation/comma.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/preprocessor/punctuation/comma_if.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/preprocessor/repetition/enum_binary_params.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/preprocessor/repetition/enum.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/preprocessor/repetition/enum_params.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/preprocessor/repetition/enum_params_with_a_default.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/preprocessor/repetition/enum_trailing.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/preprocessor/repetition/enum_trailing_params.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/preprocessor/repetition/repeat.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/preprocessor/repetition/repeat_from_to.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/apply.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/unpack_args.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/aux_/na.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/int.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/minus.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/size.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/mpl/vector.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/utility/enable_if.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/v2/detail/config/limit_arity.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/v2/detail/functor/crtp_unary_and_up.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/v2/ref/wrapper/framework.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/v2/ref/fusion/link_holder.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/assign/v2/ref/fusion_matrix/fwd.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">boost{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">use_default;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">assign{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">v2{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ref{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fusion_matrix_aux{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tag1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tag2,<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_PP_ENUM_PARAMS_WITH_A_DEFAULT(</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_ASSIGN_V2_LIMIT_ARITY,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::mpl::na</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;</highlight></codeline>
<codeline lineno="56" refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1meta__result" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1meta__result" kindref="compound">meta_result</ref>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container" kindref="compound">fusion_matrix_aux::container</ref>&lt;N,<sp/>L,<sp/>Tag1,<sp/>Tag2,<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_PP_ENUM_PARAMS(BOOST_ASSIGN_V2_LIMIT_ARITY,<sp/>T)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/><ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container" kindref="compound">this_</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_PP_ENUM_PARAMS_WITH_A_DEFAULT(</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_ASSIGN_V2_LIMIT_ARITY,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::mpl::na</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;</highlight></codeline>
<codeline lineno="70" refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1meta__result_1_1apply" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1meta__result_1_1apply" kindref="compound">apply</ref></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container" kindref="compound">fusion_matrix_aux::container</ref>&lt;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N+1,<sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container" kindref="compound">this_</ref>,<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tag1,<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tag2,<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_PP_ENUM_PARAMS(</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_ASSIGN_V2_LIMIT_ARITY,<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/><ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container" kindref="compound">type</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tag1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tag2,<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_PP_ENUM_PARAMS(</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_ASSIGN_V2_LIMIT_ARITY,<sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;</highlight></codeline>
<codeline lineno="95" refid="classboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container" kindref="compound">container</ref><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>fusion_aux::link_holder&lt;L,<sp/>N<sp/>==<sp/>0&gt;,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>functor_aux::crtp_unary_and_up&lt;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fusion_matrix_aux::container&lt;N,<sp/>L,<sp/>Tag1,<sp/>Tag2,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_PP_ENUM_PARAMS(</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_ASSIGN_V2_LIMIT_ARITY,<sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::mpl::unpack_args&lt;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fusion_matrix_aux::meta_result&lt;N,<sp/>L,<sp/>Tag1,<sp/>Tag2,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_PP_ENUM_PARAMS(</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_ASSIGN_V2_LIMIT_ARITY,<sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::mpl::int_&lt;0&gt;<sp/>int0_;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::mpl::int_&lt;1&gt;<sp/>int1_;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::mpl::int_&lt;N&gt;<sp/>size_;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::mpl::minus&lt;size_,int1_&gt;::type<sp/>index_;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Tag1<sp/>assign_tag_;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">wrapper{<sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1wrapper" kindref="compound">ref::wrapper&lt;assign_tag_,T&gt;</ref><sp/>type;<sp/>};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1fusion__aux_1_1link__holder" kindref="compound">fusion_aux::link_holder&lt;L, N == 0&gt;</ref><sp/><ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1fusion__aux_1_1link__holder" kindref="compound">link_</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1meta__result" kindref="compound">fusion_matrix_aux::meta_result</ref>&lt;N,<sp/>L,<sp/>Tag1,<sp/>Tag2,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_PP_ENUM_PARAMS(</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_ASSIGN_V2_LIMIT_ARITY,<sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1meta__result" kindref="compound">meta_result_</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classboost_1_1assign_1_1v2_1_1functor__aux_1_1crtp__unary__and__up" kindref="compound">functor_aux::crtp_unary_and_up</ref>&lt;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container" kindref="compound">container</ref>,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::mpl::unpack_args&lt;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1meta__result" kindref="compound">meta_result_</ref></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/><ref refid="classboost_1_1assign_1_1v2_1_1functor__aux_1_1crtp__unary__and__up" kindref="compound">super_t</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::mpl::vector&lt;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_PP_ENUM_PARAMS(BOOST_ASSIGN_V2_LIMIT_ARITY,<sp/>T)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>vec_;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::size_t<sp/>size_type;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_STATIC_CONSTANT(size_type,<sp/>static_row_size<sp/>=<sp/>N);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_STATIC_CONSTANT(size_type,<sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_column_size<sp/>=<sp/>boost::mpl::size&lt;vec_&gt;::value</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container" kindref="compound">container</ref>(){}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MACRO1(z,<sp/>n,<sp/>data)\</highlight></codeline>
<codeline lineno="155"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>BOOST_PP_CAT(w,<sp/>n)<sp/>(<sp/>BOOST_PP_CAT(_,<sp/>n)<sp/>)\</highlight></codeline>
<codeline lineno="156"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>MACRO2(z,<sp/>n,<sp/>data)<sp/>\</highlight></codeline>
<codeline lineno="158"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>explicit<sp/>container(<sp/>\</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>L&amp;<sp/>l<sp/>BOOST_PP_COMMA_IF(n)<sp/>\</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_PP_ENUM_BINARY_PARAMS(n,<sp/>T,<sp/>&amp;<sp/>_)<sp/>\</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>)<sp/>:<sp/>link_(<sp/>l<sp/>)\</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_PP_ENUM_TRAILING(n,<sp/>MACRO1,<sp/>~)\</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{}\</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"></highlight><highlight class="normal">BOOST_PP_REPEAT(</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_ASSIGN_V2_LIMIT_ARITY,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>MACRO2,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>~</highlight></codeline>
<codeline lineno="169"><highlight class="normal">)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MACRO1</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>MACRO2</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>------<sp/>operator()<sp/>-----<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>adds<sp/>a<sp/>row<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-----------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_PP_ENUM_PARAMS_WITH_A_DEFAULT(</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_PP_INC(BOOST_ASSIGN_V2_LIMIT_ARITY),</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::mpl::na</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;</highlight></codeline>
<codeline lineno="184" refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container_1_1result" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container_1_1result" kindref="compound">result</ref><sp/>:<sp/>boost::mpl::apply&lt;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meta_result_,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_PP_ENUM_PARAMS(</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_ASSIGN_V2_LIMIT_ARITY,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;{};</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>super_t::operator();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container_1_1result" kindref="compound">result&lt;&gt;::type</ref></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator()()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container_1_1result" kindref="compound">result&lt;&gt;::type</ref><sp/>result_;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result_(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MACRO1(<sp/>z,<sp/>n,<sp/>data<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="201"><highlight class="preprocessor"><sp/>(<sp/>BOOST_PP_CAT(_,n)<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MACRO2(z,<sp/>N1,<sp/>data)<sp/>\</highlight></codeline>
<codeline lineno="205"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template&lt;BOOST_PP_ENUM_PARAMS(N1,<sp/>typename<sp/>U)&gt;<sp/>\</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typename<sp/>result&lt;BOOST_PP_ENUM_PARAMS(N1,<sp/>U)&gt;::type<sp/>\</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>impl(<sp/>BOOST_PP_ENUM_BINARY_PARAMS(N1,<sp/>U,<sp/>&amp;_)<sp/>)const{<sp/>\</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>result&lt;BOOST_PP_ENUM_PARAMS(N1,<sp/>U)&gt;::type<sp/>result_;<sp/>\</highlight></codeline>
<codeline lineno="209"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>result_(<sp/>*this<sp/>BOOST_PP_ENUM_TRAILING_PARAMS(N1,<sp/>_)<sp/>);\</highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor"></highlight><highlight class="normal">BOOST_PP_REPEAT_FROM_TO(</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_PP_INC(BOOST_ASSIGN_V2_LIMIT_ARITY),</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>MACRO2,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>~</highlight></codeline>
<codeline lineno="217"><highlight class="normal">)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MACRO1</highlight></codeline>
<codeline lineno="219"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>MACRO2</highlight></codeline>
<codeline lineno="220"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Row<sp/>extraction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">is_head<sp/>:<sp/>boost::mpl::bool_&lt;<sp/>I<sp/>+<sp/>1<sp/>==<sp/>N<sp/>&gt;{};</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="227" refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container_1_1link__result__static__row" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container_1_1link__result__static__row" kindref="compound">link_result_static_row</ref><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>L::template<sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container_1_1result__static__row" kindref="compound">result_static_row</ref>&lt;I&gt;{};</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="231" refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container_1_1result__static__row" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container_1_1result__static__row" kindref="compound">result_static_row</ref><sp/>:<sp/>boost::mpl::<ref refid="classboost_1_1mpl_1_1eval__if" kindref="compound">eval_if</ref>&lt;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_head&lt;I&gt;,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::mpl::identity&lt;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container<sp/>const&amp;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>link_result_static_row&lt;I&gt;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;{};</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::lazy_enable_if&lt;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_head&lt;I&gt;,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structboost_1_1assign_1_1v2_1_1ref_1_1fusion__matrix__aux_1_1container_1_1result__static__row" kindref="compound">result_static_row&lt;I&gt;</ref></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;::type</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_row(boost::mpl::int_&lt;I&gt;<sp/>index)</highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="245"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::lazy_disable_if&lt;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_head&lt;I&gt;,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_static_row&lt;I&gt;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;::type</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_row(<sp/>boost::mpl::int_&lt;I&gt;<sp/>index<sp/>)</highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="255"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">link_<sp/>const&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*this<sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>).link().static_row(<sp/>index<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Column<sp/>extraction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MACRO(z,<sp/>n,<sp/>data)\</highlight></codeline>
<codeline lineno="264"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>private:<sp/>\</highlight></codeline>
<codeline lineno="265"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>wrapper&lt;BOOST_PP_CAT(T,n)&gt;::type<sp/>BOOST_PP_CAT(w,n);<sp/>\</highlight></codeline>
<codeline lineno="266"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>public:<sp/>\</highlight></codeline>
<codeline lineno="267"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>BOOST_PP_CAT(T,n)&amp;<sp/>static_column(boost::mpl::int_&lt;n&gt;)const\</highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="269"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>this-&gt;BOOST_PP_CAT(w,n).unwrap();<sp/>\</highlight></codeline>
<codeline lineno="270"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="271"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="272"><highlight class="preprocessor"></highlight><highlight class="normal">BOOST_PP_REPEAT(</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_ASSIGN_V2_LIMIT_ARITY,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>MACRO,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>~</highlight></codeline>
<codeline lineno="276"><highlight class="normal">)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>MACRO</highlight></codeline>
<codeline lineno="278"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>fusion_matrix_aux</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>ref</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>v2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>assign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>boost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="288"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/erwann/sandbox/statistics/support/boost/assign/v2/ref/fusion_matrix/container.hpp"/>
  </compounddef>
</doxygen>
