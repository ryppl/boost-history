[/
  (C) Copyright 2008-2009 Vicente J. Botet Escriba
  Distributed under the Boost Software License, Version 1.0.
  (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt).
]

[/==========================================================================================]
[section:detach_all_hpp Header `<boost/interthreads/algorithm/detach_all.hpp>`]
[/==========================================================================================]

Defines a free function __detach_all__ which detach all the __ACT__ in the sequence passed as parameter.

    namespace boost { namespace interthreads {
        namespace fct {
            struct detach {
                typedef void result_type;
                template<typename ACT>
                void operator()(ACT& act) const;
            };
        }

        namespace result_of {
            template <typename Sequence>
            struct detach_all {
                typedef typename fusion::result_of::for_each<Sequence, fct::detach>::type type;
            };
        }

        template <typename Sequence>
        void detach_all(Sequence& t);
    }}

[endsect]

