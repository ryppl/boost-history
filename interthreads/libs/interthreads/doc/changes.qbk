[/
  (C) Copyright 2008-2009 Vicente J Botet Escriba.
  Distributed under the Boost Software License, Version 1.0.
  (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt).
]

[section:changes  Appendix A: History]

[section [*Version 0.1.3, Mars 29, 2009] Extraction of the Asynchonous Executor framework]

[*New Features:]

* Extraction of the Asynchonous Executor framework

[endsect]

[section [*Version 0.1.2, February 8, 2009] Bug fixes]

[*Fixed Bugs:]

[*v0.3.1#1: keep alive mechanism crash when setting `set_on_dead_thread()` before enabling the mechanism.]
This was due to the fact that there were no default data for the backup.

[*v0.3.1#2: keep alive mechanism do not detect dead threads.]
We need to reset the counters only when the period is 0.

[*v0.3.1#3: The `set_on_dead_thread()` setting is not recovered by embeeding kep_alive enablers/disablers.]
The problem is that the `on_dead()` the function and the thread pointer were stored on the backup. It is enough to store
them on the `thread_keep_alive_ctx` and make the functions thread_safe.

[endsect]


[section [*Version 0.1.1, January 14, 2009] Bug fixes and test on more toolsets]

[*Toolsets:]

* Tested on Linux gcc 3.4.6.
* Tested on Linux gcc 4.1.2.
* Modification helping Windows (not tested)

[*Fixed Bugs:]

[*v0.1#1: basic_keep_alive example do not link.]

[endsect]

[section [*Version 0.1.0, November 30, 2008] ['Announcement of Interthreads]]

[*Features:]

* `thread_decorator` setup/cleanup thread decorator,
* thread specific shared pointer,
* thread keep alive mechanism,
* thread tuples, set_once synchonizer, thread_tuple_once and thread_group_once.

[endsect]

[section [*Bugs]]

[heading [*Open Bugs:]]


[heading [*Fixed Bugs:]]

[*v0.1.1#1: keep alive mechanism crash when setting set_on_dead_thread before enabling the mechanism.]
This was due to the fact that there were no default data for the backup.

[*v0.1.1#2: keep alive mechanism do not detect dead threads.]
We need to reste the counters only when the period is 0.

[*v0.1.1#3: The set_on_dead_thread setting is not recovered by embeeding enablers/disablers.]
The problem is that the on_dead  and th thread pointer were stored on the backup. It is enough to store them on the

[*v0.1#1: basic_keep_alive example do not link.]

[endsect]

[endsect]
