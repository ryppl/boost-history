#  (C) Copyright William E. Kempf 2001. 
#  (C) Copyright 2007 Anthony Williams. 
#  (C) Copyright 2007 Vicente Botet Escriba. 
#  Distributed under the Boost Software License, Version 1.0. (See accompanying 
#  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#
# Boost.InterThreads test Jamfile
#
# Additional configuration variables used:
#   1. PTW32 may be used on Win32 platforms to specify that the pthreads-win32
#      library should be used instead of "native" threads. This feature is
#      mostly used for testing and it's generally recommended you use the
#      native threading libraries instead. PTW32 should be set to be a list
#      of two strings, the first specifying the installation path of the
#      pthreads-win32 library and the second specifying which library
#      variant to link against (see the pthreads-win32 documentation).
#      Example: jam -sPTW32="c:\pthreads-win32 pthreadVCE.lib"

# bring in rules for testing
import testing ;

project
    : requirements <library>/boost/test//boost_unit_test_framework/<link>static
    <library>../build//boost_interthreads
            
      <include>.
      <include>../../..
      <threading>multi
      <target-os>cygwin
      <threadapi>pthread
      <variant>debug
      <define>BOOST_THREAD_HAS_THREAD_ATTR

    ;

rule interthreads-run ( sources * )
{
    return 
    [ run $(sources)  :  :  : <link>static ]
#    [ run $(sources)  ../../../../libs/thread/build//boost_thread  :  :  :              : $(sources[1]:B)_lib ]
    ;
}    



{
    test-suite "tests"
        : 
          [ interthreads-run test_basic_threader.cpp ]
          [ interthreads-run test_launcher.cpp ]
          [ interthreads-run test_threader.cpp ]
          [ interthreads-run test_thread_decorator.cpp ]
          [ interthreads-run test_thread_shared_ptr.cpp ]
    ;
    test-suite "example"
        : 
          [ interthreads-run ../example/hello_world.cpp ]
          [ interthreads-run ../example/mono_thread_id.cpp ]
          [ interthreads-run ../example/basic_keep_alive.cpp ../example/async_ostream.cpp ]
          [ interthreads-run ../example/multiple_algorithms.cpp ]
          
          
    ;
}
