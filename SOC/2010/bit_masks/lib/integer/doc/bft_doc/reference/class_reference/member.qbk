[/
Copyright (c) 2010 Brian Bartman

Distributed under the Boost Software License, Version 1.0. (See accompanying
file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
]
[section member]

[h4 Description]
`member` is used for specifying different bitfields within a `bitfield_tuple`. A
`member` is meant to look like a bitfield when it is declared within a `class` or
`struct`. A `member` is the most basic type of bitfield that can be used for a
`bitfield_tuple`. When other templates used to specify a `bitfield_tuple` are
noted as members, it means they have storage space as a bitfield within the
`bitfield_tuple`.


[h4 Template Signature]
``
namespace boost { namespace bitfields {
template <typename ReturnType, typename NameType, std::size_t Width> struct member;
}}
``


[h4 Template Parameters]
[table
    [[template Parameter][Explanation]]
    [
        [`ReturnType`]
        [The type that the value is to be returned from the get function as.You 
may supply a signed type for a member but please note that a singed bit will be
stored within the width you specify, so if you don't need negative values you
should not store them.]
    ]
    [
        [`NameType`]
        [This is a type which is associated with the bitfield which is
represented by this member template. All names supplied to a `bitfield_tuple`
can only be used one per `bitfield_tuple`. The is enforced as a precondition.]
    ]
    [
        [`Width`]
        [The number of bits you would like associated with the field represented
by the `member` template.]
    ]
]

[h3 Preconditions]
[table
    [
        [Precondition]
        [Description]
        [Enforcement]
    ]
    [
        [ `Width != 0` ]
        [ The `Width` template parameter must not be zero. ]
        [ Enforced by static assert. ]
    ]
    [
        [ `Width <= bit_width<ReturnType>::value` ]
        [ The `Width` parameter of `member` must not exceed the width in bits
of `ReturnType` template parameter.]
        [ Enforced by static assert. ]
    ]
    [
        [ `NameType` must be unique. ]
        [ The `NameType` template parameter can only be supplied once per
`bitfield_tuple`. ]
        [ Enforced by static assert. ]
    ]
]



[h4 Header file Location]
This header file is included with the <boost/integer/bitfield_tuple.hpp> header
file.
``
#include <boost/integer/details/bft/member.hpp>
``
[h4 Example]
``
#include <boost/integer/bitfield_tuple.hpp>

using namespace boost::bitfields;

struct red;
struct green;
struct salmon;

typedef bitfield_tuple<
    member<char,red,4>,
    member<unsigned char, green,5>,
    member<int, salmon, 16>
> color_tuple;
``
The `member`s specified in `color_tuple` above are used to specify the different
bitfields within the `bitfield_tuple`.
[endsect]
