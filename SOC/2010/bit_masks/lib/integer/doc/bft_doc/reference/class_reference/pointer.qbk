[/
Copyright (c) 2010 Brian Bartman

Distributed under the Boost Software License, Version 1.0. (See accompanying
file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
]
[section `struct pointer`]
[h4 Description]
The pointer member is a member of a bitfield_tuple which allows the user to 
use a bitfield to store a pointer. This is useful when a user has allocated
an object on a DWORD boundry, when that happens the last two bits of a pointer
are 0. Because the last to bits of the pointer are zero two boolean values can
be stored within those two bits effectivly saving 2 bytes per pointer. There are
other types of space optimizations which can be preformed when you know how
a perticular object is going to be allocated. Another example of what the
pointer member can be used for stuffing bits into the leading bits of the
pointer. This can be done in a valid manner if the address of the pointer is
at a lower value.

[h4 Template Signature]
``
namespace boost { namespace bitfields {
template <
    typename ReturnType,
    typename Name,
    typename Mask = implementation defined
    >
>
struct pointer;
}} // end boost::bitfields
``




[h4 Header file Locaton]
This header file is included with the <boost/integer/bitfield_tuple.hpp> header
file.
``
#include <boost/integer/details/bft/pointer.hpp>
``
[h4 Example]
``
``
[endsect]
