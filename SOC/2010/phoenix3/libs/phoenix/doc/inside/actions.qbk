[/==============================================================================
    Copyright (C) 2001-2010 Joel de Guzman
    Copyright (C) 2001-2005 Dan Marsden
    Copyright (C) 2001-2010 Thomas Heller

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
===============================================================================/]

[section:actions More on Actions]

As you know from the [link phoenix.inside.actor Actors in Detail] section,
Actions are what brings live to a Phoenix expression tree.

When dealing with a Phoenix expression tree, it gets evaluated top-down.
Example:

    _1 + 3 * _2

Can be visualized in an AST as following:

[$images/simple_ast.png]

In terms of actions this means:

* rule::plus is matched
* evaluate left:
 * rule::placeholder is matched
* evaluate right:
 * rule::multiplies is matched
  * evaluate left:
    * rule::value is matched
  * evaluate right:
    * rule::placeholder is matched

Every time a rule is matched, an action will be called. The action determines
how the Phoenix AST will be traversed.


[variablelist Predefined Rules
 [
  [rule::value]
  [...]
 ]
 [
  [rule::custom_terminal]
  [...]
 ]
 [
  [rule::placeholder]
  [...]
 ]
 [
  [rule::nothing]
  [...]
 ]
 [
  [rule::function]
  [...]
 ]
 [
  [rule::nothing]
  [...]
 ]
]

[endsect]
