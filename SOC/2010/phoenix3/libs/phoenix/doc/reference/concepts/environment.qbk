[/==============================================================================
    Copyright (C) 2001-2010 Joel de Guzman
    Copyright (C) 2001-2005 Dan Marsden
    Copyright (C) 2001-2010 Thomas Heller

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
===============================================================================/]

[section Environment]

[heading Description]

On an actor function call, before evaluating the actors expression, the actor
creates an environment. Basically, the environment packages the arguments in a
tuple.

[variablelist Notation
	[[`Env`] [A type fulfilling this concept]]
	[[`env`] [Object of type Env]]
	[[`N`] [A __boost_mpl_int__]]
	[[`M`] [A positive Integer index]]
]

[heading Valid Expressions]

[table
	[[Expression] [Return Type] [Runtime Complexity]]
	[[`get_environment_argument<N>(env)`] [Any Type] [Constant]]
	[[`get_environment_argument_c<M>(env)`] [Any Type] [Constant]]
]

[heading Result Type Expressions]

[table
	[[Expression] [Result Type] [Compiletime Complexity]]
	[[`result_of::get_environment_argument<N, Env>::type`] [Any Type] [Constant]]
	[[`result_of::get_environment_argument_c<M, Env>::type`] [Any Type] [Constant]]
]

[heading Expression Semantics]

[table
	[[Expression] [Semantics]]
	[[`get_environment_argument<N>(env)`] [Returns the `N::value`-th argument passed to the enclosed evaluation context]]
	[[`get_environment_argument_c<M>(env)`] [Returns the `M`th argument passed to the enclosed evaluation context]]
]

[heading Models]

* [link phoenix.reference.modules.core.basic_environment `boost::phoenix::basic_environment`]
* [link phoenix.reference.modules.scope.scope_environment `boost::phoenix::scoped_environment`]

[endsect]

