/*==============================================================================
    Copyright (c) 2005-2010 Joel de Guzman
    Copyright (c) 2010 Thomas Heller

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================*/
     
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<0> size
              , mpl::false_
            ) const
            {
                
                switch(eval(cond, env))
                {
                    
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<0> size
              , mpl::true_
            ) const
            {
                
                mpl::int_<0>
                    idx0;
                switch(eval(cond, env))
                {
                    
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx0
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<1> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<1> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<1> size
              , mpl::true_
            ) const
            {
                
                mpl::int_<0>
                    idx0;
                switch(eval(cond, env))
                {
                    
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx0
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<2> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<2> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<2> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<2> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<2> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0;
                mpl::int_<1>
                    idx1;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx1
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<3> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<3> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<3> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<3> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<3> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<3> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<3> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1;
                mpl::int_<2>
                    idx2;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx2
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<4> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<4> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<4> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<4> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<4> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<4> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<4> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<4> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<4> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2;
                mpl::int_<3>
                    idx3;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx3
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<5> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<5> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<5> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<5> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<5> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<5> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<5> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<5> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<5> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<5> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<5> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3;
                mpl::int_<4>
                    idx4;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx4
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<6> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<6> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<6> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<6> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<6> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<6> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<6> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<6> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<6> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<6> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<6> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<6> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<6> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4;
                mpl::int_<5>
                    idx5;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx5
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<7> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<7> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<7> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<7> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<7> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<7> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<7> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<7> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<7> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<7> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<7> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<7> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<7> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<7> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<7> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5;
                mpl::int_<6>
                    idx6;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx6
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<8> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<8> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<8> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<8> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<8> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<8> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<8> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<8> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<8> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<8> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<8> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<8> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<8> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<8> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<8> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<8> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<8> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6;
                mpl::int_<7>
                    idx7;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx7
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<9> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<9> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<9> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<9> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<9> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<9> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<9> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<9> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<9> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<9> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<9> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<9> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<9> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<9> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<9> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<9> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<9> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<9> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<9> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7;
                mpl::int_<8>
                    idx8;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx8
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<10> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<10> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<10> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<10> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<10> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<10> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<10> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<10> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<10> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<10> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<10> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<10> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<10> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<10> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<10> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<10> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<10> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<10> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<10> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<10> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<10> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8;
                mpl::int_<9>
                    idx9;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx9
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<11> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<11> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<11> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<11> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<11> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<11> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<11> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<11> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<11> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<11> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<11> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<11> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<11> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<11> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<11> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<11> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<11> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<11> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<11> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<11> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<11> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<11> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<11> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9;
                mpl::int_<10>
                    idx10;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx10
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<12> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<12> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<12> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<12> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<12> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<12> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<12> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<12> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<12> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<12> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<12> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<12> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<12> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<12> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<12> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<12> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<12> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<12> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<12> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<12> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<12> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<12> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<12> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<12> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<12> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10;
                mpl::int_<11>
                    idx11;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx11
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<13> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<13> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<13> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<13> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<13> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<13> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<13> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<13> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<13> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<13> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<13> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<13> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<13> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<13> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<13> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<13> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<13> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<13> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<13> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<13> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<13> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<13> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<13> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<13> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<13> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<13> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<13> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11;
                mpl::int_<12>
                    idx12;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx12
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<14> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<14> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<14> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<14> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<14> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<14> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<14> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<14> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<14> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<14> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<14> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<14> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<14> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<14> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<14> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<14> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<14> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<14> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<14> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<14> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<14> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<14> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<14> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<14> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<14> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<14> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<14> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<14> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<14> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12;
                mpl::int_<13>
                    idx13;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx13
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<15> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<15> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<15> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<15> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<15> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<15> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<15> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<15> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<15> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<15> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<15> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<15> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<15> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<15> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<15> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<15> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<15> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<15> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<15> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<15> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<15> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<15> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<15> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<15> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<15> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<15> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<15> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<15> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<15> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<15> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<15> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13;
                mpl::int_<14>
                    idx14;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx14
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<16> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<16> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<16> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<16> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<16> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<16> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<16> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<16> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<16> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<16> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<16> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<16> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<16> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<16> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<16> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<16> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<16> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<16> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<16> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<16> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<16> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<16> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<16> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<16> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<16> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<16> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<16> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<16> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<16> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<16> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<16> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<16> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<16> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14;
                mpl::int_<15>
                    idx15;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx15
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<17> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<17> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<17> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<17> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<17> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<17> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<17> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<17> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<17> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<17> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<17> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<17> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<17> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<17> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<17> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<17> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<17> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<17> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<17> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<17> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<17> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<17> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<17> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<17> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<17> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<17> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<17> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<17> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<17> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<17> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<17> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<17> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<17> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<17> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<17> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15;
                mpl::int_<16>
                    idx16;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx16
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<18> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<18> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<18> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<18> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<18> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<18> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<18> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<18> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<18> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<18> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<18> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<18> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<18> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<18> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<18> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<18> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<18> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<18> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<18> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<18> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<18> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<18> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<18> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<18> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<18> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<18> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<18> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<18> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<18> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<18> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<18> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<18> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<18> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<18> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<18> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<18> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<18> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16;
                mpl::int_<17>
                    idx17;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx17
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<19> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<19> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<19> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<19> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<19> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<19> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<19> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<19> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<19> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<19> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<19> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<19> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<19> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<19> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<19> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<19> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<19> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<19> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<19> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<19> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<19> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<19> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<19> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<19> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<19> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<19> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<19> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<19> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<19> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<19> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<19> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<19> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<19> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<19> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<19> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<19> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<19> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<19> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<19> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17;
                mpl::int_<18>
                    idx18;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx18
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<20> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<20> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<20> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<20> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<20> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<20> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<20> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<20> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<20> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<20> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<20> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<20> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<20> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<20> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<20> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<20> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<20> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<20> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<20> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<20> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<20> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<20> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<20> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<20> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<20> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<20> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<20> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<20> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<20> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<20> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<20> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<20> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<20> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<20> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<20> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<20> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<20> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<20> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<20> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<20> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<20> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18;
                mpl::int_<19>
                    idx19;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx19
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<21> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<21> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<21> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<21> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<21> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<21> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<21> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<21> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<21> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<21> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<21> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<21> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<21> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<21> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<21> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<21> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<21> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<21> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<21> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<21> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<21> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<21> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<21> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<21> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<21> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<21> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<21> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<21> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<21> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<21> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<21> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<21> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<21> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<21> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<21> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<21> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<21> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<21> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<21> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<21> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<21> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<21> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<21> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19;
                mpl::int_<20>
                    idx20;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx20
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<22> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<22> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<22> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<22> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<22> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<22> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<22> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<22> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<22> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<22> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<22> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<22> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<22> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<22> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<22> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<22> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<22> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<22> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<22> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<22> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<22> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<22> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<22> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<22> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<22> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<22> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<22> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<22> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<22> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<22> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<22> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<22> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<22> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<22> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<22> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<22> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<22> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<22> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<22> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<22> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<22> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<22> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<22> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<22> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<22> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20;
                mpl::int_<21>
                    idx21;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx21
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<23> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<23> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<23> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<23> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<23> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<23> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<23> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<23> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<23> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<23> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<23> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<23> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<23> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<23> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<23> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<23> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<23> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<23> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<23> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<23> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<23> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<23> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<23> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<23> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<23> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<23> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<23> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<23> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<23> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<23> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<23> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<23> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<23> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<23> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<23> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<23> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<23> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<23> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<23> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<23> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<23> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<23> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<23> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<23> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<23> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<23> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<23> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21;
                mpl::int_<22>
                    idx22;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx22
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<24> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<24> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<24> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<24> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<24> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<24> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<24> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<24> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<24> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<24> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<24> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<24> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<24> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<24> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<24> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<24> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<24> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<24> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<24> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<24> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<24> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<24> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<24> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<24> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<24> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<24> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<24> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<24> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<24> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<24> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<24> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<24> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<24> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<24> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<24> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<24> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<24> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<24> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<24> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<24> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<24> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<24> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<24> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<24> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<24> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<24> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<24> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<24> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<24> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22;
                mpl::int_<23>
                    idx23;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx23
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<25> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<25> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<25> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<25> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<25> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<25> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<25> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<25> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<25> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<25> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<25> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<25> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<25> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<25> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<25> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<25> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<25> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<25> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<25> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<25> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<25> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<25> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<25> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<25> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<25> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<25> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<25> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<25> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<25> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<25> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<25> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<25> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<25> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<25> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<25> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<25> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<25> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<25> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<25> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<25> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<25> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<25> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<25> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<25> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<25> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<25> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<25> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<25> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<25> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<25> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<25> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23;
                mpl::int_<24>
                    idx24;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx24
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<26> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<26> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<26> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<26> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<26> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<26> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<26> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<26> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<26> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<26> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<26> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<26> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<26> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<26> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<26> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<26> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<26> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<26> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<26> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<26> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<26> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<26> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<26> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<26> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<26> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<26> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<26> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<26> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<26> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<26> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<26> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<26> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<26> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<26> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<26> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<26> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<26> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<26> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<26> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<26> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<26> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<26> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<26> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<26> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<26> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<26> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<26> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<26> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<26> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<26> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<26> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<26> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<26> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24;
                mpl::int_<25>
                    idx25;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx25
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<27> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<27> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<27> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<27> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<27> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<27> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<27> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<27> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<27> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<27> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<27> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<27> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<27> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<27> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<27> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<27> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<27> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<27> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<27> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<27> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<27> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<27> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<27> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<27> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<27> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<27> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<27> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<27> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<27> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<27> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<27> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<27> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<27> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<27> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<27> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<27> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<27> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<27> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<27> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<27> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<27> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<27> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<27> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<27> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<27> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<27> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<27> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<27> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<27> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<27> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<27> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<27> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<27> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<27> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<27> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25;
                mpl::int_<26>
                    idx26;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx26
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<28> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<28> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<28> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<28> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<28> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<28> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<28> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<28> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<28> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<28> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<28> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<28> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<28> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<28> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<28> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<28> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<28> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<28> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<28> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<28> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<28> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<28> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<28> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<28> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<28> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<28> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<28> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<28> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<28> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<28> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<28> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<28> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<28> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<28> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<28> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<28> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<28> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<28> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<28> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<28> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<28> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<28> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<28> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<28> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<28> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<28> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<28> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<28> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<28> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<28> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<28> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<28> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<28> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<28> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<28> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<28> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<28> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26;
                mpl::int_<27>
                    idx27;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx27
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<29> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<29> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<29> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<29> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<29> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<29> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<29> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<29> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<29> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<29> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<29> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<29> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<29> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<29> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<29> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<29> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<29> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<29> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<29> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<29> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<29> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<29> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<29> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<29> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<29> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<29> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<29> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<29> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<29> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<29> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<29> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<29> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<29> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<29> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<29> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<29> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<29> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<29> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<29> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<29> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<29> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<29> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<29> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<29> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<29> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<29> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<29> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<29> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<29> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<29> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<29> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<29> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<29> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<29> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<29> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<29> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<29> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<29> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<29> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27;
                mpl::int_<28>
                    idx28;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx28
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<30> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<30> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<30> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<30> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<30> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<30> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<30> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<30> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<30> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<30> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<30> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<30> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<30> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<30> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<30> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<30> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<30> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<30> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<30> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<30> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<30> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<30> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<30> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<30> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<30> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<30> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<30> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<30> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<30> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<30> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<30> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<30> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<30> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<30> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<30> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<30> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<30> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<30> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<30> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<30> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<30> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<30> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<30> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<30> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<30> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<30> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<30> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<30> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<30> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<30> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<30> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<30> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<30> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<30> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<30> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<30> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<30> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<30> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<30> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<30> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<30> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28;
                mpl::int_<29>
                    idx29;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx29
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<31> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<31> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<31> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<31> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<31> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<31> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<31> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<31> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<31> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<31> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<31> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<31> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<31> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<31> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<31> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<31> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<31> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<31> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<31> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<31> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<31> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<31> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<31> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<31> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<31> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<31> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<31> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<31> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<31> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<31> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<31> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<31> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<31> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<31> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<31> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<31> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<31> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<31> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<31> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<31> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<31> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<31> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<31> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<31> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<31> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<31> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<31> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<31> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<31> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<31> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<31> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<31> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<31> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<31> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<31> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<31> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<31> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<31> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<31> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<31> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<31> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<31> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<31> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29;
                mpl::int_<30>
                    idx30;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx30
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<32> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<32> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<32> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<32> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<32> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<32> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<32> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<32> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<32> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<32> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<32> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<32> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<32> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<32> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<32> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<32> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<32> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<32> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<32> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<32> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<32> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<32> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<32> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<32> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<32> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<32> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<32> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<32> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<32> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<32> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<32> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<32> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<32> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<32> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<32> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<32> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<32> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<32> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<32> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<32> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<32> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<32> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<32> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<32> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<32> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<32> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<32> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<32> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<32> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<32> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<32> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<32> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<32> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<32> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<32> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<32> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<32> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<32> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<32> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<32> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<32> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<32> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<32> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<32> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<32> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30;
                mpl::int_<31>
                    idx31;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx31
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<33> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<33> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<33> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<33> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<33> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<33> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<33> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<33> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<33> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<33> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<33> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<33> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<33> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<33> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<33> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<33> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<33> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<33> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<33> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<33> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<33> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<33> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<33> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<33> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<33> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<33> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<33> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<33> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<33> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<33> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<33> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<33> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<33> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<33> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<33> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<33> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<33> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<33> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<33> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<33> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<33> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<33> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<33> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<33> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<33> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<33> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<33> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<33> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<33> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<33> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<33> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<33> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<33> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<33> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<33> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<33> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<33> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<33> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<33> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<33> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<33> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<33> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<33> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<33> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<33> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<33> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<33> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31;
                mpl::int_<32>
                    idx32;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx32
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<34> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<34> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<34> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<34> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<34> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<34> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<34> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<34> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<34> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<34> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<34> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<34> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<34> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<34> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<34> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<34> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<34> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<34> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<34> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<34> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<34> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<34> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<34> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<34> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<34> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<34> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<34> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<34> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<34> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<34> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<34> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<34> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<34> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<34> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<34> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<34> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<34> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<34> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<34> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<34> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<34> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<34> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<34> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<34> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<34> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<34> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<34> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<34> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<34> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<34> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<34> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<34> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<34> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<34> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<34> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<34> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<34> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<34> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<34> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<34> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<34> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<34> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<34> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<34> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<34> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<34> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<34> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<34> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<34> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32;
                mpl::int_<33>
                    idx33;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx33
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<35> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<35> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<35> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<35> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<35> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<35> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<35> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<35> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<35> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<35> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<35> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<35> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<35> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<35> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<35> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<35> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<35> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<35> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<35> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<35> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<35> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<35> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<35> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<35> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<35> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<35> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<35> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<35> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<35> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<35> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<35> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<35> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<35> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<35> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<35> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<35> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<35> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<35> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<35> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<35> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<35> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<35> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<35> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<35> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<35> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<35> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<35> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<35> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<35> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<35> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<35> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<35> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<35> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<35> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<35> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<35> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<35> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<35> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<35> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<35> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<35> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<35> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<35> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<35> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<35> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<35> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<35> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<35> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<35> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<35> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<35> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33;
                mpl::int_<34>
                    idx34;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx34
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<36> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<36> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<36> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<36> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<36> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<36> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<36> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<36> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<36> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<36> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<36> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<36> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<36> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<36> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<36> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<36> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<36> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<36> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<36> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<36> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<36> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<36> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<36> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<36> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<36> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<36> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<36> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<36> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<36> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<36> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<36> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<36> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<36> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<36> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<36> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<36> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<35> , mpl::int_<36> ) >::type case35; typedef typename proto::result_of::value< typename proto::result_of::child_c< case35 , 0 >::type >::type case_label35; mpl::int_<35> idx35;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break; case case_label35::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx35, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<36> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<36> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<36> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<36> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<36> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<36> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<36> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<36> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<36> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<36> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<36> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<36> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<36> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<36> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<36> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<36> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<36> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<36> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<36> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<36> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<36> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<36> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<36> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<36> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<36> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<36> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<36> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<36> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<36> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<36> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<36> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<36> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<36> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<36> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<36> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<36> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34;
                mpl::int_<35>
                    idx35;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx35
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<37> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<37> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<37> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<37> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<37> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<37> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<37> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<37> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<37> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<37> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<37> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<37> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<37> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<37> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<37> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<37> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<37> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<37> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<37> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<37> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<37> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<37> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<37> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<37> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<37> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<37> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<37> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<37> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<37> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<37> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<37> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<37> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<37> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<37> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<37> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<37> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<35> , mpl::int_<37> ) >::type case35; typedef typename proto::result_of::value< typename proto::result_of::child_c< case35 , 0 >::type >::type case_label35; mpl::int_<35> idx35; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<36> , mpl::int_<37> ) >::type case36; typedef typename proto::result_of::value< typename proto::result_of::child_c< case36 , 0 >::type >::type case_label36; mpl::int_<36> idx36;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break; case case_label35::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx35, size ) ) , env ); break; case case_label36::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx36, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<37> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<37> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<37> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<37> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<37> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<37> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<37> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<37> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<37> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<37> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<37> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<37> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<37> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<37> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<37> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<37> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<37> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<37> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<37> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<37> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<37> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<37> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<37> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<37> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<37> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<37> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<37> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<37> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<37> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<37> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<37> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<37> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<37> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<37> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<37> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<37> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<35> , mpl::int_<37> ) >::type case35; typedef typename proto::result_of::value< typename proto::result_of::child_c< case35 , 0 >::type >::type case_label35; mpl::int_<35> idx35;
                mpl::int_<36>
                    idx36;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break; case case_label35::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx35, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx36
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<38> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<38> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<38> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<38> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<38> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<38> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<38> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<38> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<38> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<38> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<38> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<38> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<38> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<38> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<38> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<38> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<38> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<38> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<38> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<38> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<38> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<38> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<38> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<38> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<38> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<38> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<38> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<38> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<38> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<38> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<38> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<38> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<38> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<38> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<38> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<38> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<35> , mpl::int_<38> ) >::type case35; typedef typename proto::result_of::value< typename proto::result_of::child_c< case35 , 0 >::type >::type case_label35; mpl::int_<35> idx35; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<36> , mpl::int_<38> ) >::type case36; typedef typename proto::result_of::value< typename proto::result_of::child_c< case36 , 0 >::type >::type case_label36; mpl::int_<36> idx36; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<37> , mpl::int_<38> ) >::type case37; typedef typename proto::result_of::value< typename proto::result_of::child_c< case37 , 0 >::type >::type case_label37; mpl::int_<37> idx37;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break; case case_label35::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx35, size ) ) , env ); break; case case_label36::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx36, size ) ) , env ); break; case case_label37::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx37, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<38> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<38> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<38> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<38> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<38> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<38> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<38> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<38> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<38> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<38> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<38> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<38> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<38> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<38> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<38> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<38> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<38> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<38> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<38> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<38> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<38> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<38> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<38> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<38> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<38> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<38> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<38> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<38> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<38> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<38> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<38> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<38> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<38> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<38> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<38> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<38> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<35> , mpl::int_<38> ) >::type case35; typedef typename proto::result_of::value< typename proto::result_of::child_c< case35 , 0 >::type >::type case_label35; mpl::int_<35> idx35; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<36> , mpl::int_<38> ) >::type case36; typedef typename proto::result_of::value< typename proto::result_of::child_c< case36 , 0 >::type >::type case_label36; mpl::int_<36> idx36;
                mpl::int_<37>
                    idx37;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break; case case_label35::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx35, size ) ) , env ); break; case case_label36::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx36, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx37
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<39> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<39> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<39> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<39> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<39> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<39> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<39> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<39> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<39> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<39> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<39> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<39> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<39> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<39> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<39> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<39> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<39> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<39> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<39> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<39> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<39> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<39> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<39> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<39> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<39> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<39> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<39> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<39> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<39> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<39> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<39> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<39> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<39> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<39> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<39> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<39> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<35> , mpl::int_<39> ) >::type case35; typedef typename proto::result_of::value< typename proto::result_of::child_c< case35 , 0 >::type >::type case_label35; mpl::int_<35> idx35; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<36> , mpl::int_<39> ) >::type case36; typedef typename proto::result_of::value< typename proto::result_of::child_c< case36 , 0 >::type >::type case_label36; mpl::int_<36> idx36; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<37> , mpl::int_<39> ) >::type case37; typedef typename proto::result_of::value< typename proto::result_of::child_c< case37 , 0 >::type >::type case_label37; mpl::int_<37> idx37; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<38> , mpl::int_<39> ) >::type case38; typedef typename proto::result_of::value< typename proto::result_of::child_c< case38 , 0 >::type >::type case_label38; mpl::int_<38> idx38;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break; case case_label35::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx35, size ) ) , env ); break; case case_label36::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx36, size ) ) , env ); break; case case_label37::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx37, size ) ) , env ); break; case case_label38::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx38, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<39> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<39> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<39> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<39> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<39> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<39> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<39> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<39> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<39> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<39> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<39> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<39> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<39> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<39> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<39> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<39> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<39> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<39> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<39> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<39> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<39> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<39> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<39> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<39> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<39> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<39> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<39> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<39> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<39> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<39> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<39> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<39> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<39> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<39> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<39> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<39> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<35> , mpl::int_<39> ) >::type case35; typedef typename proto::result_of::value< typename proto::result_of::child_c< case35 , 0 >::type >::type case_label35; mpl::int_<35> idx35; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<36> , mpl::int_<39> ) >::type case36; typedef typename proto::result_of::value< typename proto::result_of::child_c< case36 , 0 >::type >::type case_label36; mpl::int_<36> idx36; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<37> , mpl::int_<39> ) >::type case37; typedef typename proto::result_of::value< typename proto::result_of::child_c< case37 , 0 >::type >::type case_label37; mpl::int_<37> idx37;
                mpl::int_<38>
                    idx38;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break; case case_label35::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx35, size ) ) , env ); break; case case_label36::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx36, size ) ) , env ); break; case case_label37::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx37, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx38
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<40> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<40> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<40> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<40> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<40> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<40> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<40> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<40> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<40> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<40> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<40> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<40> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<40> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<40> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<40> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<40> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<40> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<40> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<40> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<40> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<40> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<40> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<40> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<40> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<40> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<40> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<40> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<40> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<40> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<40> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<40> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<40> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<40> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<40> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<40> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<40> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<35> , mpl::int_<40> ) >::type case35; typedef typename proto::result_of::value< typename proto::result_of::child_c< case35 , 0 >::type >::type case_label35; mpl::int_<35> idx35; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<36> , mpl::int_<40> ) >::type case36; typedef typename proto::result_of::value< typename proto::result_of::child_c< case36 , 0 >::type >::type case_label36; mpl::int_<36> idx36; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<37> , mpl::int_<40> ) >::type case37; typedef typename proto::result_of::value< typename proto::result_of::child_c< case37 , 0 >::type >::type case_label37; mpl::int_<37> idx37; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<38> , mpl::int_<40> ) >::type case38; typedef typename proto::result_of::value< typename proto::result_of::child_c< case38 , 0 >::type >::type case_label38; mpl::int_<38> idx38; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<39> , mpl::int_<40> ) >::type case39; typedef typename proto::result_of::value< typename proto::result_of::child_c< case39 , 0 >::type >::type case_label39; mpl::int_<39> idx39;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break; case case_label35::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx35, size ) ) , env ); break; case case_label36::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx36, size ) ) , env ); break; case case_label37::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx37, size ) ) , env ); break; case case_label38::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx38, size ) ) , env ); break; case case_label39::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx39, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<40> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<40> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<40> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<40> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<40> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<40> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<40> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<40> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<40> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<40> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<40> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<40> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<40> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<40> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<40> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<40> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<40> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<40> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<40> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<40> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<40> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<40> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<40> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<40> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<40> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<40> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<40> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<40> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<40> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<40> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<40> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<40> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<40> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<40> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<40> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<40> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<35> , mpl::int_<40> ) >::type case35; typedef typename proto::result_of::value< typename proto::result_of::child_c< case35 , 0 >::type >::type case_label35; mpl::int_<35> idx35; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<36> , mpl::int_<40> ) >::type case36; typedef typename proto::result_of::value< typename proto::result_of::child_c< case36 , 0 >::type >::type case_label36; mpl::int_<36> idx36; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<37> , mpl::int_<40> ) >::type case37; typedef typename proto::result_of::value< typename proto::result_of::child_c< case37 , 0 >::type >::type case_label37; mpl::int_<37> idx37; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<38> , mpl::int_<40> ) >::type case38; typedef typename proto::result_of::value< typename proto::result_of::child_c< case38 , 0 >::type >::type case_label38; mpl::int_<38> idx38;
                mpl::int_<39>
                    idx39;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break; case case_label35::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx35, size ) ) , env ); break; case case_label36::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx36, size ) ) , env ); break; case case_label37::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx37, size ) ) , env ); break; case case_label38::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx38, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx39
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<41> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<41> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<41> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<41> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<41> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<41> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<41> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<41> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<41> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<41> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<41> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<41> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<41> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<41> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<41> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<41> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<41> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<41> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<41> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<41> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<41> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<41> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<41> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<41> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<41> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<41> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<41> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<41> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<41> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<41> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<41> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<41> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<41> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<41> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<41> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<41> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<35> , mpl::int_<41> ) >::type case35; typedef typename proto::result_of::value< typename proto::result_of::child_c< case35 , 0 >::type >::type case_label35; mpl::int_<35> idx35; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<36> , mpl::int_<41> ) >::type case36; typedef typename proto::result_of::value< typename proto::result_of::child_c< case36 , 0 >::type >::type case_label36; mpl::int_<36> idx36; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<37> , mpl::int_<41> ) >::type case37; typedef typename proto::result_of::value< typename proto::result_of::child_c< case37 , 0 >::type >::type case_label37; mpl::int_<37> idx37; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<38> , mpl::int_<41> ) >::type case38; typedef typename proto::result_of::value< typename proto::result_of::child_c< case38 , 0 >::type >::type case_label38; mpl::int_<38> idx38; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<39> , mpl::int_<41> ) >::type case39; typedef typename proto::result_of::value< typename proto::result_of::child_c< case39 , 0 >::type >::type case_label39; mpl::int_<39> idx39; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<40> , mpl::int_<41> ) >::type case40; typedef typename proto::result_of::value< typename proto::result_of::child_c< case40 , 0 >::type >::type case_label40; mpl::int_<40> idx40;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break; case case_label35::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx35, size ) ) , env ); break; case case_label36::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx36, size ) ) , env ); break; case case_label37::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx37, size ) ) , env ); break; case case_label38::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx38, size ) ) , env ); break; case case_label39::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx39, size ) ) , env ); break; case case_label40::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx40, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<41> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<41> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<41> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<41> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<41> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<41> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<41> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<41> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<41> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<41> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<41> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<41> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<41> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<41> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<41> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<41> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<41> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<41> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<41> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<41> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<41> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<41> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<41> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<41> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<41> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<41> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<41> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<41> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<41> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<41> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<41> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<41> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<41> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<41> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<41> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<41> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<35> , mpl::int_<41> ) >::type case35; typedef typename proto::result_of::value< typename proto::result_of::child_c< case35 , 0 >::type >::type case_label35; mpl::int_<35> idx35; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<36> , mpl::int_<41> ) >::type case36; typedef typename proto::result_of::value< typename proto::result_of::child_c< case36 , 0 >::type >::type case_label36; mpl::int_<36> idx36; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<37> , mpl::int_<41> ) >::type case37; typedef typename proto::result_of::value< typename proto::result_of::child_c< case37 , 0 >::type >::type case_label37; mpl::int_<37> idx37; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<38> , mpl::int_<41> ) >::type case38; typedef typename proto::result_of::value< typename proto::result_of::child_c< case38 , 0 >::type >::type case_label38; mpl::int_<38> idx38; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<39> , mpl::int_<41> ) >::type case39; typedef typename proto::result_of::value< typename proto::result_of::child_c< case39 , 0 >::type >::type case_label39; mpl::int_<39> idx39;
                mpl::int_<40>
                    idx40;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break; case case_label35::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx35, size ) ) , env ); break; case case_label36::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx36, size ) ) , env ); break; case case_label37::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx37, size ) ) , env ); break; case case_label38::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx38, size ) ) , env ); break; case case_label39::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx39, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx40
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<42> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<42> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<42> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<42> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<42> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<42> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<42> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<42> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<42> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<42> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<42> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<42> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<42> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<42> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<42> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<42> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<42> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<42> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<42> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<42> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<42> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<42> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<42> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<42> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<42> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<42> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<42> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<42> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<42> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<42> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<42> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<42> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<42> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<42> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<42> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<42> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<35> , mpl::int_<42> ) >::type case35; typedef typename proto::result_of::value< typename proto::result_of::child_c< case35 , 0 >::type >::type case_label35; mpl::int_<35> idx35; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<36> , mpl::int_<42> ) >::type case36; typedef typename proto::result_of::value< typename proto::result_of::child_c< case36 , 0 >::type >::type case_label36; mpl::int_<36> idx36; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<37> , mpl::int_<42> ) >::type case37; typedef typename proto::result_of::value< typename proto::result_of::child_c< case37 , 0 >::type >::type case_label37; mpl::int_<37> idx37; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<38> , mpl::int_<42> ) >::type case38; typedef typename proto::result_of::value< typename proto::result_of::child_c< case38 , 0 >::type >::type case_label38; mpl::int_<38> idx38; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<39> , mpl::int_<42> ) >::type case39; typedef typename proto::result_of::value< typename proto::result_of::child_c< case39 , 0 >::type >::type case_label39; mpl::int_<39> idx39; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<40> , mpl::int_<42> ) >::type case40; typedef typename proto::result_of::value< typename proto::result_of::child_c< case40 , 0 >::type >::type case_label40; mpl::int_<40> idx40; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<41> , mpl::int_<42> ) >::type case41; typedef typename proto::result_of::value< typename proto::result_of::child_c< case41 , 0 >::type >::type case_label41; mpl::int_<41> idx41;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break; case case_label35::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx35, size ) ) , env ); break; case case_label36::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx36, size ) ) , env ); break; case case_label37::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx37, size ) ) , env ); break; case case_label38::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx38, size ) ) , env ); break; case case_label39::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx39, size ) ) , env ); break; case case_label40::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx40, size ) ) , env ); break; case case_label41::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx41, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<42> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<42> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<42> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<42> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<42> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<42> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<42> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<42> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<42> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<42> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<42> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<42> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<42> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<42> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<42> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<42> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<42> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<42> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<42> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<42> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<42> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<42> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<42> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<42> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<42> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<42> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<42> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<42> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<42> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<42> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<42> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<42> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<42> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<42> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<42> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<42> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<35> , mpl::int_<42> ) >::type case35; typedef typename proto::result_of::value< typename proto::result_of::child_c< case35 , 0 >::type >::type case_label35; mpl::int_<35> idx35; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<36> , mpl::int_<42> ) >::type case36; typedef typename proto::result_of::value< typename proto::result_of::child_c< case36 , 0 >::type >::type case_label36; mpl::int_<36> idx36; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<37> , mpl::int_<42> ) >::type case37; typedef typename proto::result_of::value< typename proto::result_of::child_c< case37 , 0 >::type >::type case_label37; mpl::int_<37> idx37; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<38> , mpl::int_<42> ) >::type case38; typedef typename proto::result_of::value< typename proto::result_of::child_c< case38 , 0 >::type >::type case_label38; mpl::int_<38> idx38; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<39> , mpl::int_<42> ) >::type case39; typedef typename proto::result_of::value< typename proto::result_of::child_c< case39 , 0 >::type >::type case_label39; mpl::int_<39> idx39; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<40> , mpl::int_<42> ) >::type case40; typedef typename proto::result_of::value< typename proto::result_of::child_c< case40 , 0 >::type >::type case_label40; mpl::int_<40> idx40;
                mpl::int_<41>
                    idx41;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break; case case_label35::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx35, size ) ) , env ); break; case case_label36::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx36, size ) ) , env ); break; case case_label37::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx37, size ) ) , env ); break; case case_label38::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx38, size ) ) , env ); break; case case_label39::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx39, size ) ) , env ); break; case case_label40::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx40, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx41
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<43> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<43> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<43> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<43> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<43> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<43> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<43> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<43> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<43> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<43> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<43> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<43> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<43> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<43> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<43> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<43> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<43> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<43> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<43> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<43> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<43> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<43> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<43> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<43> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<43> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<43> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<43> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<43> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<43> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<43> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<43> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<43> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<43> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<43> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<43> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<43> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<35> , mpl::int_<43> ) >::type case35; typedef typename proto::result_of::value< typename proto::result_of::child_c< case35 , 0 >::type >::type case_label35; mpl::int_<35> idx35; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<36> , mpl::int_<43> ) >::type case36; typedef typename proto::result_of::value< typename proto::result_of::child_c< case36 , 0 >::type >::type case_label36; mpl::int_<36> idx36; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<37> , mpl::int_<43> ) >::type case37; typedef typename proto::result_of::value< typename proto::result_of::child_c< case37 , 0 >::type >::type case_label37; mpl::int_<37> idx37; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<38> , mpl::int_<43> ) >::type case38; typedef typename proto::result_of::value< typename proto::result_of::child_c< case38 , 0 >::type >::type case_label38; mpl::int_<38> idx38; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<39> , mpl::int_<43> ) >::type case39; typedef typename proto::result_of::value< typename proto::result_of::child_c< case39 , 0 >::type >::type case_label39; mpl::int_<39> idx39; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<40> , mpl::int_<43> ) >::type case40; typedef typename proto::result_of::value< typename proto::result_of::child_c< case40 , 0 >::type >::type case_label40; mpl::int_<40> idx40; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<41> , mpl::int_<43> ) >::type case41; typedef typename proto::result_of::value< typename proto::result_of::child_c< case41 , 0 >::type >::type case_label41; mpl::int_<41> idx41; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<42> , mpl::int_<43> ) >::type case42; typedef typename proto::result_of::value< typename proto::result_of::child_c< case42 , 0 >::type >::type case_label42; mpl::int_<42> idx42;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break; case case_label35::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx35, size ) ) , env ); break; case case_label36::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx36, size ) ) , env ); break; case case_label37::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx37, size ) ) , env ); break; case case_label38::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx38, size ) ) , env ); break; case case_label39::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx39, size ) ) , env ); break; case case_label40::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx40, size ) ) , env ); break; case case_label41::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx41, size ) ) , env ); break; case case_label42::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx42, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<43> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<43> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<43> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<43> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<43> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<43> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<43> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<43> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<43> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<43> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<43> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<43> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<43> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<43> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<43> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<43> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<43> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<43> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<43> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<43> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<43> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<43> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<43> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<43> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<43> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<43> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<43> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<43> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<43> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<43> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<43> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<43> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<43> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<43> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<43> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<43> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<35> , mpl::int_<43> ) >::type case35; typedef typename proto::result_of::value< typename proto::result_of::child_c< case35 , 0 >::type >::type case_label35; mpl::int_<35> idx35; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<36> , mpl::int_<43> ) >::type case36; typedef typename proto::result_of::value< typename proto::result_of::child_c< case36 , 0 >::type >::type case_label36; mpl::int_<36> idx36; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<37> , mpl::int_<43> ) >::type case37; typedef typename proto::result_of::value< typename proto::result_of::child_c< case37 , 0 >::type >::type case_label37; mpl::int_<37> idx37; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<38> , mpl::int_<43> ) >::type case38; typedef typename proto::result_of::value< typename proto::result_of::child_c< case38 , 0 >::type >::type case_label38; mpl::int_<38> idx38; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<39> , mpl::int_<43> ) >::type case39; typedef typename proto::result_of::value< typename proto::result_of::child_c< case39 , 0 >::type >::type case_label39; mpl::int_<39> idx39; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<40> , mpl::int_<43> ) >::type case40; typedef typename proto::result_of::value< typename proto::result_of::child_c< case40 , 0 >::type >::type case_label40; mpl::int_<40> idx40; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<41> , mpl::int_<43> ) >::type case41; typedef typename proto::result_of::value< typename proto::result_of::child_c< case41 , 0 >::type >::type case_label41; mpl::int_<41> idx41;
                mpl::int_<42>
                    idx42;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break; case case_label35::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx35, size ) ) , env ); break; case case_label36::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx36, size ) ) , env ); break; case case_label37::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx37, size ) ) , env ); break; case case_label38::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx38, size ) ) , env ); break; case case_label39::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx39, size ) ) , env ); break; case case_label40::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx40, size ) ) , env ); break; case case_label41::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx41, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx42
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<44> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<44> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<44> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<44> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<44> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<44> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<44> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<44> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<44> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<44> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<44> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<44> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<44> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<44> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<44> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<44> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<44> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<44> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<44> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<44> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<44> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<44> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<44> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<44> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<44> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<44> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<44> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<44> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<44> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<44> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<44> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<44> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<44> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<44> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<44> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<44> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<35> , mpl::int_<44> ) >::type case35; typedef typename proto::result_of::value< typename proto::result_of::child_c< case35 , 0 >::type >::type case_label35; mpl::int_<35> idx35; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<36> , mpl::int_<44> ) >::type case36; typedef typename proto::result_of::value< typename proto::result_of::child_c< case36 , 0 >::type >::type case_label36; mpl::int_<36> idx36; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<37> , mpl::int_<44> ) >::type case37; typedef typename proto::result_of::value< typename proto::result_of::child_c< case37 , 0 >::type >::type case_label37; mpl::int_<37> idx37; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<38> , mpl::int_<44> ) >::type case38; typedef typename proto::result_of::value< typename proto::result_of::child_c< case38 , 0 >::type >::type case_label38; mpl::int_<38> idx38; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<39> , mpl::int_<44> ) >::type case39; typedef typename proto::result_of::value< typename proto::result_of::child_c< case39 , 0 >::type >::type case_label39; mpl::int_<39> idx39; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<40> , mpl::int_<44> ) >::type case40; typedef typename proto::result_of::value< typename proto::result_of::child_c< case40 , 0 >::type >::type case_label40; mpl::int_<40> idx40; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<41> , mpl::int_<44> ) >::type case41; typedef typename proto::result_of::value< typename proto::result_of::child_c< case41 , 0 >::type >::type case_label41; mpl::int_<41> idx41; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<42> , mpl::int_<44> ) >::type case42; typedef typename proto::result_of::value< typename proto::result_of::child_c< case42 , 0 >::type >::type case_label42; mpl::int_<42> idx42; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<43> , mpl::int_<44> ) >::type case43; typedef typename proto::result_of::value< typename proto::result_of::child_c< case43 , 0 >::type >::type case_label43; mpl::int_<43> idx43;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break; case case_label35::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx35, size ) ) , env ); break; case case_label36::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx36, size ) ) , env ); break; case case_label37::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx37, size ) ) , env ); break; case case_label38::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx38, size ) ) , env ); break; case case_label39::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx39, size ) ) , env ); break; case case_label40::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx40, size ) ) , env ); break; case case_label41::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx41, size ) ) , env ); break; case case_label42::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx42, size ) ) , env ); break; case case_label43::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx43, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<44> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<44> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<44> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<44> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<44> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<44> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<44> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<44> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<44> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<44> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<44> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<44> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<44> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<44> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<44> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<44> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<44> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<44> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<44> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<44> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<44> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<44> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<44> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<44> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<44> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<44> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<44> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<44> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<44> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<44> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<44> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<44> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<44> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<44> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<44> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<44> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<35> , mpl::int_<44> ) >::type case35; typedef typename proto::result_of::value< typename proto::result_of::child_c< case35 , 0 >::type >::type case_label35; mpl::int_<35> idx35; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<36> , mpl::int_<44> ) >::type case36; typedef typename proto::result_of::value< typename proto::result_of::child_c< case36 , 0 >::type >::type case_label36; mpl::int_<36> idx36; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<37> , mpl::int_<44> ) >::type case37; typedef typename proto::result_of::value< typename proto::result_of::child_c< case37 , 0 >::type >::type case_label37; mpl::int_<37> idx37; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<38> , mpl::int_<44> ) >::type case38; typedef typename proto::result_of::value< typename proto::result_of::child_c< case38 , 0 >::type >::type case_label38; mpl::int_<38> idx38; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<39> , mpl::int_<44> ) >::type case39; typedef typename proto::result_of::value< typename proto::result_of::child_c< case39 , 0 >::type >::type case_label39; mpl::int_<39> idx39; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<40> , mpl::int_<44> ) >::type case40; typedef typename proto::result_of::value< typename proto::result_of::child_c< case40 , 0 >::type >::type case_label40; mpl::int_<40> idx40; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<41> , mpl::int_<44> ) >::type case41; typedef typename proto::result_of::value< typename proto::result_of::child_c< case41 , 0 >::type >::type case_label41; mpl::int_<41> idx41; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<42> , mpl::int_<44> ) >::type case42; typedef typename proto::result_of::value< typename proto::result_of::child_c< case42 , 0 >::type >::type case_label42; mpl::int_<42> idx42;
                mpl::int_<43>
                    idx43;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break; case case_label35::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx35, size ) ) , env ); break; case case_label36::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx36, size ) ) , env ); break; case case_label37::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx37, size ) ) , env ); break; case case_label38::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx38, size ) ) , env ); break; case case_label39::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx39, size ) ) , env ); break; case case_label40::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx40, size ) ) , env ); break; case case_label41::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx41, size ) ) , env ); break; case case_label42::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx42, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx43
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<45> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<45> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<45> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<45> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<45> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<45> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<45> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<45> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<45> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<45> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<45> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<45> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<45> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<45> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<45> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<45> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<45> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<45> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<45> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<45> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<45> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<45> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<45> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<45> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<45> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<45> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<45> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<45> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<45> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<45> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<45> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<45> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<45> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<45> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<45> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<45> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<35> , mpl::int_<45> ) >::type case35; typedef typename proto::result_of::value< typename proto::result_of::child_c< case35 , 0 >::type >::type case_label35; mpl::int_<35> idx35; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<36> , mpl::int_<45> ) >::type case36; typedef typename proto::result_of::value< typename proto::result_of::child_c< case36 , 0 >::type >::type case_label36; mpl::int_<36> idx36; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<37> , mpl::int_<45> ) >::type case37; typedef typename proto::result_of::value< typename proto::result_of::child_c< case37 , 0 >::type >::type case_label37; mpl::int_<37> idx37; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<38> , mpl::int_<45> ) >::type case38; typedef typename proto::result_of::value< typename proto::result_of::child_c< case38 , 0 >::type >::type case_label38; mpl::int_<38> idx38; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<39> , mpl::int_<45> ) >::type case39; typedef typename proto::result_of::value< typename proto::result_of::child_c< case39 , 0 >::type >::type case_label39; mpl::int_<39> idx39; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<40> , mpl::int_<45> ) >::type case40; typedef typename proto::result_of::value< typename proto::result_of::child_c< case40 , 0 >::type >::type case_label40; mpl::int_<40> idx40; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<41> , mpl::int_<45> ) >::type case41; typedef typename proto::result_of::value< typename proto::result_of::child_c< case41 , 0 >::type >::type case_label41; mpl::int_<41> idx41; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<42> , mpl::int_<45> ) >::type case42; typedef typename proto::result_of::value< typename proto::result_of::child_c< case42 , 0 >::type >::type case_label42; mpl::int_<42> idx42; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<43> , mpl::int_<45> ) >::type case43; typedef typename proto::result_of::value< typename proto::result_of::child_c< case43 , 0 >::type >::type case_label43; mpl::int_<43> idx43; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<44> , mpl::int_<45> ) >::type case44; typedef typename proto::result_of::value< typename proto::result_of::child_c< case44 , 0 >::type >::type case_label44; mpl::int_<44> idx44;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break; case case_label35::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx35, size ) ) , env ); break; case case_label36::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx36, size ) ) , env ); break; case case_label37::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx37, size ) ) , env ); break; case case_label38::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx38, size ) ) , env ); break; case case_label39::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx39, size ) ) , env ); break; case case_label40::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx40, size ) ) , env ); break; case case_label41::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx41, size ) ) , env ); break; case case_label42::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx42, size ) ) , env ); break; case case_label43::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx43, size ) ) , env ); break; case case_label44::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx44, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<45> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<45> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<45> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<45> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<45> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<45> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<45> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<45> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<45> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<45> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<45> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<45> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<45> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<45> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<45> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<45> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<45> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<45> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<45> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<45> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<45> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<45> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<45> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<45> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<45> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<45> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<45> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<45> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<45> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<45> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<45> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<45> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<45> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<45> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<45> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<45> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<35> , mpl::int_<45> ) >::type case35; typedef typename proto::result_of::value< typename proto::result_of::child_c< case35 , 0 >::type >::type case_label35; mpl::int_<35> idx35; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<36> , mpl::int_<45> ) >::type case36; typedef typename proto::result_of::value< typename proto::result_of::child_c< case36 , 0 >::type >::type case_label36; mpl::int_<36> idx36; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<37> , mpl::int_<45> ) >::type case37; typedef typename proto::result_of::value< typename proto::result_of::child_c< case37 , 0 >::type >::type case_label37; mpl::int_<37> idx37; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<38> , mpl::int_<45> ) >::type case38; typedef typename proto::result_of::value< typename proto::result_of::child_c< case38 , 0 >::type >::type case_label38; mpl::int_<38> idx38; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<39> , mpl::int_<45> ) >::type case39; typedef typename proto::result_of::value< typename proto::result_of::child_c< case39 , 0 >::type >::type case_label39; mpl::int_<39> idx39; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<40> , mpl::int_<45> ) >::type case40; typedef typename proto::result_of::value< typename proto::result_of::child_c< case40 , 0 >::type >::type case_label40; mpl::int_<40> idx40; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<41> , mpl::int_<45> ) >::type case41; typedef typename proto::result_of::value< typename proto::result_of::child_c< case41 , 0 >::type >::type case_label41; mpl::int_<41> idx41; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<42> , mpl::int_<45> ) >::type case42; typedef typename proto::result_of::value< typename proto::result_of::child_c< case42 , 0 >::type >::type case_label42; mpl::int_<42> idx42; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<43> , mpl::int_<45> ) >::type case43; typedef typename proto::result_of::value< typename proto::result_of::child_c< case43 , 0 >::type >::type case_label43; mpl::int_<43> idx43;
                mpl::int_<44>
                    idx44;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break; case case_label35::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx35, size ) ) , env ); break; case case_label36::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx36, size ) ) , env ); break; case case_label37::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx37, size ) ) , env ); break; case case_label38::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx38, size ) ) , env ); break; case case_label39::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx39, size ) ) , env ); break; case case_label40::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx40, size ) ) , env ); break; case case_label41::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx41, size ) ) , env ); break; case case_label42::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx42, size ) ) , env ); break; case case_label43::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx43, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx44
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<46> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<46> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<46> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<46> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<46> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<46> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<46> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<46> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<46> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<46> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<46> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<46> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<46> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<46> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<46> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<46> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<46> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<46> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<46> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<46> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<46> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<46> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<46> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<46> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<46> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<46> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<46> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<46> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<46> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<46> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<46> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<46> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<46> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<46> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<46> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<46> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<35> , mpl::int_<46> ) >::type case35; typedef typename proto::result_of::value< typename proto::result_of::child_c< case35 , 0 >::type >::type case_label35; mpl::int_<35> idx35; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<36> , mpl::int_<46> ) >::type case36; typedef typename proto::result_of::value< typename proto::result_of::child_c< case36 , 0 >::type >::type case_label36; mpl::int_<36> idx36; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<37> , mpl::int_<46> ) >::type case37; typedef typename proto::result_of::value< typename proto::result_of::child_c< case37 , 0 >::type >::type case_label37; mpl::int_<37> idx37; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<38> , mpl::int_<46> ) >::type case38; typedef typename proto::result_of::value< typename proto::result_of::child_c< case38 , 0 >::type >::type case_label38; mpl::int_<38> idx38; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<39> , mpl::int_<46> ) >::type case39; typedef typename proto::result_of::value< typename proto::result_of::child_c< case39 , 0 >::type >::type case_label39; mpl::int_<39> idx39; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<40> , mpl::int_<46> ) >::type case40; typedef typename proto::result_of::value< typename proto::result_of::child_c< case40 , 0 >::type >::type case_label40; mpl::int_<40> idx40; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<41> , mpl::int_<46> ) >::type case41; typedef typename proto::result_of::value< typename proto::result_of::child_c< case41 , 0 >::type >::type case_label41; mpl::int_<41> idx41; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<42> , mpl::int_<46> ) >::type case42; typedef typename proto::result_of::value< typename proto::result_of::child_c< case42 , 0 >::type >::type case_label42; mpl::int_<42> idx42; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<43> , mpl::int_<46> ) >::type case43; typedef typename proto::result_of::value< typename proto::result_of::child_c< case43 , 0 >::type >::type case_label43; mpl::int_<43> idx43; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<44> , mpl::int_<46> ) >::type case44; typedef typename proto::result_of::value< typename proto::result_of::child_c< case44 , 0 >::type >::type case_label44; mpl::int_<44> idx44; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<45> , mpl::int_<46> ) >::type case45; typedef typename proto::result_of::value< typename proto::result_of::child_c< case45 , 0 >::type >::type case_label45; mpl::int_<45> idx45;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break; case case_label35::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx35, size ) ) , env ); break; case case_label36::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx36, size ) ) , env ); break; case case_label37::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx37, size ) ) , env ); break; case case_label38::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx38, size ) ) , env ); break; case case_label39::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx39, size ) ) , env ); break; case case_label40::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx40, size ) ) , env ); break; case case_label41::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx41, size ) ) , env ); break; case case_label42::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx42, size ) ) , env ); break; case case_label43::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx43, size ) ) , env ); break; case case_label44::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx44, size ) ) , env ); break; case case_label45::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx45, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<46> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<46> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<46> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<46> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<46> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<46> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<46> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<46> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<46> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<46> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<46> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<46> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<46> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<46> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<46> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<46> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<46> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<46> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<46> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<46> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<46> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<46> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<46> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<46> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<46> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<46> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<46> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<46> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<46> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<46> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<46> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<46> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<46> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<46> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<46> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<46> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<35> , mpl::int_<46> ) >::type case35; typedef typename proto::result_of::value< typename proto::result_of::child_c< case35 , 0 >::type >::type case_label35; mpl::int_<35> idx35; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<36> , mpl::int_<46> ) >::type case36; typedef typename proto::result_of::value< typename proto::result_of::child_c< case36 , 0 >::type >::type case_label36; mpl::int_<36> idx36; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<37> , mpl::int_<46> ) >::type case37; typedef typename proto::result_of::value< typename proto::result_of::child_c< case37 , 0 >::type >::type case_label37; mpl::int_<37> idx37; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<38> , mpl::int_<46> ) >::type case38; typedef typename proto::result_of::value< typename proto::result_of::child_c< case38 , 0 >::type >::type case_label38; mpl::int_<38> idx38; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<39> , mpl::int_<46> ) >::type case39; typedef typename proto::result_of::value< typename proto::result_of::child_c< case39 , 0 >::type >::type case_label39; mpl::int_<39> idx39; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<40> , mpl::int_<46> ) >::type case40; typedef typename proto::result_of::value< typename proto::result_of::child_c< case40 , 0 >::type >::type case_label40; mpl::int_<40> idx40; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<41> , mpl::int_<46> ) >::type case41; typedef typename proto::result_of::value< typename proto::result_of::child_c< case41 , 0 >::type >::type case_label41; mpl::int_<41> idx41; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<42> , mpl::int_<46> ) >::type case42; typedef typename proto::result_of::value< typename proto::result_of::child_c< case42 , 0 >::type >::type case_label42; mpl::int_<42> idx42; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<43> , mpl::int_<46> ) >::type case43; typedef typename proto::result_of::value< typename proto::result_of::child_c< case43 , 0 >::type >::type case_label43; mpl::int_<43> idx43; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<44> , mpl::int_<46> ) >::type case44; typedef typename proto::result_of::value< typename proto::result_of::child_c< case44 , 0 >::type >::type case_label44; mpl::int_<44> idx44;
                mpl::int_<45>
                    idx45;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break; case case_label35::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx35, size ) ) , env ); break; case case_label36::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx36, size ) ) , env ); break; case case_label37::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx37, size ) ) , env ); break; case case_label38::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx38, size ) ) , env ); break; case case_label39::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx39, size ) ) , env ); break; case case_label40::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx40, size ) ) , env ); break; case case_label41::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx41, size ) ) , env ); break; case case_label42::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx42, size ) ) , env ); break; case case_label43::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx43, size ) ) , env ); break; case case_label44::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx44, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx45
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<47> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<47> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<47> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<47> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<47> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<47> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<47> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<47> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<47> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<47> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<47> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<47> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<47> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<47> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<47> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<47> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<47> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<47> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<47> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<47> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<47> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<47> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<47> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<47> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<47> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<47> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<47> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<47> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<47> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<47> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<47> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<47> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<47> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<47> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<47> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<47> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<35> , mpl::int_<47> ) >::type case35; typedef typename proto::result_of::value< typename proto::result_of::child_c< case35 , 0 >::type >::type case_label35; mpl::int_<35> idx35; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<36> , mpl::int_<47> ) >::type case36; typedef typename proto::result_of::value< typename proto::result_of::child_c< case36 , 0 >::type >::type case_label36; mpl::int_<36> idx36; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<37> , mpl::int_<47> ) >::type case37; typedef typename proto::result_of::value< typename proto::result_of::child_c< case37 , 0 >::type >::type case_label37; mpl::int_<37> idx37; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<38> , mpl::int_<47> ) >::type case38; typedef typename proto::result_of::value< typename proto::result_of::child_c< case38 , 0 >::type >::type case_label38; mpl::int_<38> idx38; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<39> , mpl::int_<47> ) >::type case39; typedef typename proto::result_of::value< typename proto::result_of::child_c< case39 , 0 >::type >::type case_label39; mpl::int_<39> idx39; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<40> , mpl::int_<47> ) >::type case40; typedef typename proto::result_of::value< typename proto::result_of::child_c< case40 , 0 >::type >::type case_label40; mpl::int_<40> idx40; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<41> , mpl::int_<47> ) >::type case41; typedef typename proto::result_of::value< typename proto::result_of::child_c< case41 , 0 >::type >::type case_label41; mpl::int_<41> idx41; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<42> , mpl::int_<47> ) >::type case42; typedef typename proto::result_of::value< typename proto::result_of::child_c< case42 , 0 >::type >::type case_label42; mpl::int_<42> idx42; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<43> , mpl::int_<47> ) >::type case43; typedef typename proto::result_of::value< typename proto::result_of::child_c< case43 , 0 >::type >::type case_label43; mpl::int_<43> idx43; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<44> , mpl::int_<47> ) >::type case44; typedef typename proto::result_of::value< typename proto::result_of::child_c< case44 , 0 >::type >::type case_label44; mpl::int_<44> idx44; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<45> , mpl::int_<47> ) >::type case45; typedef typename proto::result_of::value< typename proto::result_of::child_c< case45 , 0 >::type >::type case_label45; mpl::int_<45> idx45; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<46> , mpl::int_<47> ) >::type case46; typedef typename proto::result_of::value< typename proto::result_of::child_c< case46 , 0 >::type >::type case_label46; mpl::int_<46> idx46;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break; case case_label35::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx35, size ) ) , env ); break; case case_label36::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx36, size ) ) , env ); break; case case_label37::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx37, size ) ) , env ); break; case case_label38::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx38, size ) ) , env ); break; case case_label39::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx39, size ) ) , env ); break; case case_label40::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx40, size ) ) , env ); break; case case_label41::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx41, size ) ) , env ); break; case case_label42::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx42, size ) ) , env ); break; case case_label43::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx43, size ) ) , env ); break; case case_label44::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx44, size ) ) , env ); break; case case_label45::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx45, size ) ) , env ); break; case case_label46::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx46, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<47> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<47> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<47> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<47> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<47> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<47> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<47> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<47> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<47> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<47> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<47> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<47> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<47> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<47> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<47> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<47> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<47> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<47> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<47> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<47> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<47> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<47> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<47> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<47> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<47> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<47> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<47> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<47> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<47> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<47> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<47> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<47> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<47> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<47> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<47> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<47> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<35> , mpl::int_<47> ) >::type case35; typedef typename proto::result_of::value< typename proto::result_of::child_c< case35 , 0 >::type >::type case_label35; mpl::int_<35> idx35; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<36> , mpl::int_<47> ) >::type case36; typedef typename proto::result_of::value< typename proto::result_of::child_c< case36 , 0 >::type >::type case_label36; mpl::int_<36> idx36; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<37> , mpl::int_<47> ) >::type case37; typedef typename proto::result_of::value< typename proto::result_of::child_c< case37 , 0 >::type >::type case_label37; mpl::int_<37> idx37; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<38> , mpl::int_<47> ) >::type case38; typedef typename proto::result_of::value< typename proto::result_of::child_c< case38 , 0 >::type >::type case_label38; mpl::int_<38> idx38; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<39> , mpl::int_<47> ) >::type case39; typedef typename proto::result_of::value< typename proto::result_of::child_c< case39 , 0 >::type >::type case_label39; mpl::int_<39> idx39; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<40> , mpl::int_<47> ) >::type case40; typedef typename proto::result_of::value< typename proto::result_of::child_c< case40 , 0 >::type >::type case_label40; mpl::int_<40> idx40; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<41> , mpl::int_<47> ) >::type case41; typedef typename proto::result_of::value< typename proto::result_of::child_c< case41 , 0 >::type >::type case_label41; mpl::int_<41> idx41; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<42> , mpl::int_<47> ) >::type case42; typedef typename proto::result_of::value< typename proto::result_of::child_c< case42 , 0 >::type >::type case_label42; mpl::int_<42> idx42; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<43> , mpl::int_<47> ) >::type case43; typedef typename proto::result_of::value< typename proto::result_of::child_c< case43 , 0 >::type >::type case_label43; mpl::int_<43> idx43; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<44> , mpl::int_<47> ) >::type case44; typedef typename proto::result_of::value< typename proto::result_of::child_c< case44 , 0 >::type >::type case_label44; mpl::int_<44> idx44; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<45> , mpl::int_<47> ) >::type case45; typedef typename proto::result_of::value< typename proto::result_of::child_c< case45 , 0 >::type >::type case_label45; mpl::int_<45> idx45;
                mpl::int_<46>
                    idx46;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break; case case_label35::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx35, size ) ) , env ); break; case case_label36::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx36, size ) ) , env ); break; case case_label37::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx37, size ) ) , env ); break; case case_label38::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx38, size ) ) , env ); break; case case_label39::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx39, size ) ) , env ); break; case case_label40::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx40, size ) ) , env ); break; case case_label41::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx41, size ) ) , env ); break; case case_label42::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx42, size ) ) , env ); break; case case_label43::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx43, size ) ) , env ); break; case case_label44::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx44, size ) ) , env ); break; case case_label45::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx45, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx46
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<48> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<48> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<48> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<48> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<48> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<48> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<48> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<48> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<48> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<48> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<48> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<48> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<48> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<48> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<48> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<48> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<48> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<48> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<48> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<48> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<48> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<48> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<48> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<48> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<48> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<48> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<48> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<48> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<48> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<48> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<48> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<48> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<48> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<48> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<48> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<48> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<35> , mpl::int_<48> ) >::type case35; typedef typename proto::result_of::value< typename proto::result_of::child_c< case35 , 0 >::type >::type case_label35; mpl::int_<35> idx35; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<36> , mpl::int_<48> ) >::type case36; typedef typename proto::result_of::value< typename proto::result_of::child_c< case36 , 0 >::type >::type case_label36; mpl::int_<36> idx36; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<37> , mpl::int_<48> ) >::type case37; typedef typename proto::result_of::value< typename proto::result_of::child_c< case37 , 0 >::type >::type case_label37; mpl::int_<37> idx37; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<38> , mpl::int_<48> ) >::type case38; typedef typename proto::result_of::value< typename proto::result_of::child_c< case38 , 0 >::type >::type case_label38; mpl::int_<38> idx38; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<39> , mpl::int_<48> ) >::type case39; typedef typename proto::result_of::value< typename proto::result_of::child_c< case39 , 0 >::type >::type case_label39; mpl::int_<39> idx39; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<40> , mpl::int_<48> ) >::type case40; typedef typename proto::result_of::value< typename proto::result_of::child_c< case40 , 0 >::type >::type case_label40; mpl::int_<40> idx40; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<41> , mpl::int_<48> ) >::type case41; typedef typename proto::result_of::value< typename proto::result_of::child_c< case41 , 0 >::type >::type case_label41; mpl::int_<41> idx41; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<42> , mpl::int_<48> ) >::type case42; typedef typename proto::result_of::value< typename proto::result_of::child_c< case42 , 0 >::type >::type case_label42; mpl::int_<42> idx42; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<43> , mpl::int_<48> ) >::type case43; typedef typename proto::result_of::value< typename proto::result_of::child_c< case43 , 0 >::type >::type case_label43; mpl::int_<43> idx43; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<44> , mpl::int_<48> ) >::type case44; typedef typename proto::result_of::value< typename proto::result_of::child_c< case44 , 0 >::type >::type case_label44; mpl::int_<44> idx44; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<45> , mpl::int_<48> ) >::type case45; typedef typename proto::result_of::value< typename proto::result_of::child_c< case45 , 0 >::type >::type case_label45; mpl::int_<45> idx45; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<46> , mpl::int_<48> ) >::type case46; typedef typename proto::result_of::value< typename proto::result_of::child_c< case46 , 0 >::type >::type case_label46; mpl::int_<46> idx46; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<47> , mpl::int_<48> ) >::type case47; typedef typename proto::result_of::value< typename proto::result_of::child_c< case47 , 0 >::type >::type case_label47; mpl::int_<47> idx47;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break; case case_label35::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx35, size ) ) , env ); break; case case_label36::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx36, size ) ) , env ); break; case case_label37::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx37, size ) ) , env ); break; case case_label38::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx38, size ) ) , env ); break; case case_label39::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx39, size ) ) , env ); break; case case_label40::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx40, size ) ) , env ); break; case case_label41::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx41, size ) ) , env ); break; case case_label42::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx42, size ) ) , env ); break; case case_label43::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx43, size ) ) , env ); break; case case_label44::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx44, size ) ) , env ); break; case case_label45::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx45, size ) ) , env ); break; case case_label46::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx46, size ) ) , env ); break; case case_label47::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx47, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<48> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<48> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<48> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<48> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<48> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<48> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<48> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<48> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<48> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<48> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<48> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<48> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<48> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<48> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<48> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<48> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<48> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<48> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<48> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<48> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<48> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<48> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<48> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<48> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<48> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<48> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<48> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<48> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<48> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<48> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<48> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<48> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<48> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<48> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<48> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<48> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<35> , mpl::int_<48> ) >::type case35; typedef typename proto::result_of::value< typename proto::result_of::child_c< case35 , 0 >::type >::type case_label35; mpl::int_<35> idx35; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<36> , mpl::int_<48> ) >::type case36; typedef typename proto::result_of::value< typename proto::result_of::child_c< case36 , 0 >::type >::type case_label36; mpl::int_<36> idx36; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<37> , mpl::int_<48> ) >::type case37; typedef typename proto::result_of::value< typename proto::result_of::child_c< case37 , 0 >::type >::type case_label37; mpl::int_<37> idx37; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<38> , mpl::int_<48> ) >::type case38; typedef typename proto::result_of::value< typename proto::result_of::child_c< case38 , 0 >::type >::type case_label38; mpl::int_<38> idx38; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<39> , mpl::int_<48> ) >::type case39; typedef typename proto::result_of::value< typename proto::result_of::child_c< case39 , 0 >::type >::type case_label39; mpl::int_<39> idx39; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<40> , mpl::int_<48> ) >::type case40; typedef typename proto::result_of::value< typename proto::result_of::child_c< case40 , 0 >::type >::type case_label40; mpl::int_<40> idx40; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<41> , mpl::int_<48> ) >::type case41; typedef typename proto::result_of::value< typename proto::result_of::child_c< case41 , 0 >::type >::type case_label41; mpl::int_<41> idx41; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<42> , mpl::int_<48> ) >::type case42; typedef typename proto::result_of::value< typename proto::result_of::child_c< case42 , 0 >::type >::type case_label42; mpl::int_<42> idx42; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<43> , mpl::int_<48> ) >::type case43; typedef typename proto::result_of::value< typename proto::result_of::child_c< case43 , 0 >::type >::type case_label43; mpl::int_<43> idx43; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<44> , mpl::int_<48> ) >::type case44; typedef typename proto::result_of::value< typename proto::result_of::child_c< case44 , 0 >::type >::type case_label44; mpl::int_<44> idx44; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<45> , mpl::int_<48> ) >::type case45; typedef typename proto::result_of::value< typename proto::result_of::child_c< case45 , 0 >::type >::type case_label45; mpl::int_<45> idx45; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<46> , mpl::int_<48> ) >::type case46; typedef typename proto::result_of::value< typename proto::result_of::child_c< case46 , 0 >::type >::type case_label46; mpl::int_<46> idx46;
                mpl::int_<47>
                    idx47;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break; case case_label35::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx35, size ) ) , env ); break; case case_label36::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx36, size ) ) , env ); break; case case_label37::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx37, size ) ) , env ); break; case case_label38::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx38, size ) ) , env ); break; case case_label39::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx39, size ) ) , env ); break; case case_label40::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx40, size ) ) , env ); break; case case_label41::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx41, size ) ) , env ); break; case case_label42::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx42, size ) ) , env ); break; case case_label43::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx43, size ) ) , env ); break; case case_label44::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx44, size ) ) , env ); break; case case_label45::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx45, size ) ) , env ); break; case case_label46::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx46, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx47
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<49> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<49> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<49> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<49> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<49> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<49> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<49> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<49> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<49> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<49> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<49> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<49> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<49> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<49> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<49> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<49> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<49> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<49> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<49> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<49> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<49> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<49> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<49> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<49> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<49> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<49> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<49> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<49> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<49> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<49> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<49> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<49> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<49> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<49> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<49> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<49> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<35> , mpl::int_<49> ) >::type case35; typedef typename proto::result_of::value< typename proto::result_of::child_c< case35 , 0 >::type >::type case_label35; mpl::int_<35> idx35; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<36> , mpl::int_<49> ) >::type case36; typedef typename proto::result_of::value< typename proto::result_of::child_c< case36 , 0 >::type >::type case_label36; mpl::int_<36> idx36; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<37> , mpl::int_<49> ) >::type case37; typedef typename proto::result_of::value< typename proto::result_of::child_c< case37 , 0 >::type >::type case_label37; mpl::int_<37> idx37; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<38> , mpl::int_<49> ) >::type case38; typedef typename proto::result_of::value< typename proto::result_of::child_c< case38 , 0 >::type >::type case_label38; mpl::int_<38> idx38; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<39> , mpl::int_<49> ) >::type case39; typedef typename proto::result_of::value< typename proto::result_of::child_c< case39 , 0 >::type >::type case_label39; mpl::int_<39> idx39; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<40> , mpl::int_<49> ) >::type case40; typedef typename proto::result_of::value< typename proto::result_of::child_c< case40 , 0 >::type >::type case_label40; mpl::int_<40> idx40; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<41> , mpl::int_<49> ) >::type case41; typedef typename proto::result_of::value< typename proto::result_of::child_c< case41 , 0 >::type >::type case_label41; mpl::int_<41> idx41; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<42> , mpl::int_<49> ) >::type case42; typedef typename proto::result_of::value< typename proto::result_of::child_c< case42 , 0 >::type >::type case_label42; mpl::int_<42> idx42; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<43> , mpl::int_<49> ) >::type case43; typedef typename proto::result_of::value< typename proto::result_of::child_c< case43 , 0 >::type >::type case_label43; mpl::int_<43> idx43; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<44> , mpl::int_<49> ) >::type case44; typedef typename proto::result_of::value< typename proto::result_of::child_c< case44 , 0 >::type >::type case_label44; mpl::int_<44> idx44; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<45> , mpl::int_<49> ) >::type case45; typedef typename proto::result_of::value< typename proto::result_of::child_c< case45 , 0 >::type >::type case_label45; mpl::int_<45> idx45; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<46> , mpl::int_<49> ) >::type case46; typedef typename proto::result_of::value< typename proto::result_of::child_c< case46 , 0 >::type >::type case_label46; mpl::int_<46> idx46; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<47> , mpl::int_<49> ) >::type case47; typedef typename proto::result_of::value< typename proto::result_of::child_c< case47 , 0 >::type >::type case_label47; mpl::int_<47> idx47; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<48> , mpl::int_<49> ) >::type case48; typedef typename proto::result_of::value< typename proto::result_of::child_c< case48 , 0 >::type >::type case_label48; mpl::int_<48> idx48;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break; case case_label35::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx35, size ) ) , env ); break; case case_label36::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx36, size ) ) , env ); break; case case_label37::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx37, size ) ) , env ); break; case case_label38::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx38, size ) ) , env ); break; case case_label39::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx39, size ) ) , env ); break; case case_label40::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx40, size ) ) , env ); break; case case_label41::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx41, size ) ) , env ); break; case case_label42::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx42, size ) ) , env ); break; case case_label43::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx43, size ) ) , env ); break; case case_label44::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx44, size ) ) , env ); break; case case_label45::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx45, size ) ) , env ); break; case case_label46::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx46, size ) ) , env ); break; case case_label47::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx47, size ) ) , env ); break; case case_label48::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx48, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<49> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<49> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<49> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<49> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<49> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<49> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<49> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<49> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<49> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<49> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<49> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<49> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<49> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<49> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<49> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<49> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<49> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<49> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<49> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<49> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<49> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<49> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<49> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<49> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<49> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<49> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<49> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<49> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<49> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<49> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<49> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<49> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<49> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<49> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<49> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<49> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<35> , mpl::int_<49> ) >::type case35; typedef typename proto::result_of::value< typename proto::result_of::child_c< case35 , 0 >::type >::type case_label35; mpl::int_<35> idx35; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<36> , mpl::int_<49> ) >::type case36; typedef typename proto::result_of::value< typename proto::result_of::child_c< case36 , 0 >::type >::type case_label36; mpl::int_<36> idx36; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<37> , mpl::int_<49> ) >::type case37; typedef typename proto::result_of::value< typename proto::result_of::child_c< case37 , 0 >::type >::type case_label37; mpl::int_<37> idx37; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<38> , mpl::int_<49> ) >::type case38; typedef typename proto::result_of::value< typename proto::result_of::child_c< case38 , 0 >::type >::type case_label38; mpl::int_<38> idx38; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<39> , mpl::int_<49> ) >::type case39; typedef typename proto::result_of::value< typename proto::result_of::child_c< case39 , 0 >::type >::type case_label39; mpl::int_<39> idx39; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<40> , mpl::int_<49> ) >::type case40; typedef typename proto::result_of::value< typename proto::result_of::child_c< case40 , 0 >::type >::type case_label40; mpl::int_<40> idx40; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<41> , mpl::int_<49> ) >::type case41; typedef typename proto::result_of::value< typename proto::result_of::child_c< case41 , 0 >::type >::type case_label41; mpl::int_<41> idx41; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<42> , mpl::int_<49> ) >::type case42; typedef typename proto::result_of::value< typename proto::result_of::child_c< case42 , 0 >::type >::type case_label42; mpl::int_<42> idx42; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<43> , mpl::int_<49> ) >::type case43; typedef typename proto::result_of::value< typename proto::result_of::child_c< case43 , 0 >::type >::type case_label43; mpl::int_<43> idx43; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<44> , mpl::int_<49> ) >::type case44; typedef typename proto::result_of::value< typename proto::result_of::child_c< case44 , 0 >::type >::type case_label44; mpl::int_<44> idx44; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<45> , mpl::int_<49> ) >::type case45; typedef typename proto::result_of::value< typename proto::result_of::child_c< case45 , 0 >::type >::type case_label45; mpl::int_<45> idx45; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<46> , mpl::int_<49> ) >::type case46; typedef typename proto::result_of::value< typename proto::result_of::child_c< case46 , 0 >::type >::type case_label46; mpl::int_<46> idx46; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<47> , mpl::int_<49> ) >::type case47; typedef typename proto::result_of::value< typename proto::result_of::child_c< case47 , 0 >::type >::type case_label47; mpl::int_<47> idx47;
                mpl::int_<48>
                    idx48;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break; case case_label35::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx35, size ) ) , env ); break; case case_label36::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx36, size ) ) , env ); break; case case_label37::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx37, size ) ) , env ); break; case case_label38::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx38, size ) ) , env ); break; case case_label39::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx39, size ) ) , env ); break; case case_label40::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx40, size ) ) , env ); break; case case_label41::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx41, size ) ) , env ); break; case case_label42::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx42, size ) ) , env ); break; case case_label43::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx43, size ) ) , env ); break; case case_label44::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx44, size ) ) , env ); break; case case_label45::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx45, size ) ) , env ); break; case case_label46::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx46, size ) ) , env ); break; case case_label47::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx47, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx48
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
    
    
    
    
    
    
    
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<50> size
              , mpl::false_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<50> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<50> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<50> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<50> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<50> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<50> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<50> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<50> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<50> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<50> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<50> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<50> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<50> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<50> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<50> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<50> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<50> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<50> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<50> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<50> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<50> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<50> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<50> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<50> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<50> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<50> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<50> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<50> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<50> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<50> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<50> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<50> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<50> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<50> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<50> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<35> , mpl::int_<50> ) >::type case35; typedef typename proto::result_of::value< typename proto::result_of::child_c< case35 , 0 >::type >::type case_label35; mpl::int_<35> idx35; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<36> , mpl::int_<50> ) >::type case36; typedef typename proto::result_of::value< typename proto::result_of::child_c< case36 , 0 >::type >::type case_label36; mpl::int_<36> idx36; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<37> , mpl::int_<50> ) >::type case37; typedef typename proto::result_of::value< typename proto::result_of::child_c< case37 , 0 >::type >::type case_label37; mpl::int_<37> idx37; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<38> , mpl::int_<50> ) >::type case38; typedef typename proto::result_of::value< typename proto::result_of::child_c< case38 , 0 >::type >::type case_label38; mpl::int_<38> idx38; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<39> , mpl::int_<50> ) >::type case39; typedef typename proto::result_of::value< typename proto::result_of::child_c< case39 , 0 >::type >::type case_label39; mpl::int_<39> idx39; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<40> , mpl::int_<50> ) >::type case40; typedef typename proto::result_of::value< typename proto::result_of::child_c< case40 , 0 >::type >::type case_label40; mpl::int_<40> idx40; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<41> , mpl::int_<50> ) >::type case41; typedef typename proto::result_of::value< typename proto::result_of::child_c< case41 , 0 >::type >::type case_label41; mpl::int_<41> idx41; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<42> , mpl::int_<50> ) >::type case42; typedef typename proto::result_of::value< typename proto::result_of::child_c< case42 , 0 >::type >::type case_label42; mpl::int_<42> idx42; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<43> , mpl::int_<50> ) >::type case43; typedef typename proto::result_of::value< typename proto::result_of::child_c< case43 , 0 >::type >::type case_label43; mpl::int_<43> idx43; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<44> , mpl::int_<50> ) >::type case44; typedef typename proto::result_of::value< typename proto::result_of::child_c< case44 , 0 >::type >::type case_label44; mpl::int_<44> idx44; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<45> , mpl::int_<50> ) >::type case45; typedef typename proto::result_of::value< typename proto::result_of::child_c< case45 , 0 >::type >::type case_label45; mpl::int_<45> idx45; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<46> , mpl::int_<50> ) >::type case46; typedef typename proto::result_of::value< typename proto::result_of::child_c< case46 , 0 >::type >::type case_label46; mpl::int_<46> idx46; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<47> , mpl::int_<50> ) >::type case47; typedef typename proto::result_of::value< typename proto::result_of::child_c< case47 , 0 >::type >::type case_label47; mpl::int_<47> idx47; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<48> , mpl::int_<50> ) >::type case48; typedef typename proto::result_of::value< typename proto::result_of::child_c< case48 , 0 >::type >::type case_label48; mpl::int_<48> idx48; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<49> , mpl::int_<50> ) >::type case49; typedef typename proto::result_of::value< typename proto::result_of::child_c< case49 , 0 >::type >::type case_label49; mpl::int_<49> idx49;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break; case case_label35::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx35, size ) ) , env ); break; case case_label36::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx36, size ) ) , env ); break; case case_label37::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx37, size ) ) , env ); break; case case_label38::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx38, size ) ) , env ); break; case case_label39::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx39, size ) ) , env ); break; case case_label40::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx40, size ) ) , env ); break; case case_label41::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx41, size ) ) , env ); break; case case_label42::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx42, size ) ) , env ); break; case case_label43::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx43, size ) ) , env ); break; case case_label44::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx44, size ) ) , env ); break; case case_label45::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx45, size ) ) , env ); break; case case_label46::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx46, size ) ) , env ); break; case case_label47::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx47, size ) ) , env ); break; case case_label48::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx48, size ) ) , env ); break; case case_label49::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx49, size ) ) , env ); break;
                }
            }
            template <typename Env, typename Cond, typename Cases>
            result_type
            evaluate(
                Env & env
              , Cond const & cond
              , Cases const & cases
              , mpl::int_<50> size
              , mpl::true_
            ) const
            {
                typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<0> , mpl::int_<50> ) >::type case0; typedef typename proto::result_of::value< typename proto::result_of::child_c< case0 , 0 >::type >::type case_label0; mpl::int_<0> idx0; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<1> , mpl::int_<50> ) >::type case1; typedef typename proto::result_of::value< typename proto::result_of::child_c< case1 , 0 >::type >::type case_label1; mpl::int_<1> idx1; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<2> , mpl::int_<50> ) >::type case2; typedef typename proto::result_of::value< typename proto::result_of::child_c< case2 , 0 >::type >::type case_label2; mpl::int_<2> idx2; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<3> , mpl::int_<50> ) >::type case3; typedef typename proto::result_of::value< typename proto::result_of::child_c< case3 , 0 >::type >::type case_label3; mpl::int_<3> idx3; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<4> , mpl::int_<50> ) >::type case4; typedef typename proto::result_of::value< typename proto::result_of::child_c< case4 , 0 >::type >::type case_label4; mpl::int_<4> idx4; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<5> , mpl::int_<50> ) >::type case5; typedef typename proto::result_of::value< typename proto::result_of::child_c< case5 , 0 >::type >::type case_label5; mpl::int_<5> idx5; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<6> , mpl::int_<50> ) >::type case6; typedef typename proto::result_of::value< typename proto::result_of::child_c< case6 , 0 >::type >::type case_label6; mpl::int_<6> idx6; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<7> , mpl::int_<50> ) >::type case7; typedef typename proto::result_of::value< typename proto::result_of::child_c< case7 , 0 >::type >::type case_label7; mpl::int_<7> idx7; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<8> , mpl::int_<50> ) >::type case8; typedef typename proto::result_of::value< typename proto::result_of::child_c< case8 , 0 >::type >::type case_label8; mpl::int_<8> idx8; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<9> , mpl::int_<50> ) >::type case9; typedef typename proto::result_of::value< typename proto::result_of::child_c< case9 , 0 >::type >::type case_label9; mpl::int_<9> idx9; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<10> , mpl::int_<50> ) >::type case10; typedef typename proto::result_of::value< typename proto::result_of::child_c< case10 , 0 >::type >::type case_label10; mpl::int_<10> idx10; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<11> , mpl::int_<50> ) >::type case11; typedef typename proto::result_of::value< typename proto::result_of::child_c< case11 , 0 >::type >::type case_label11; mpl::int_<11> idx11; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<12> , mpl::int_<50> ) >::type case12; typedef typename proto::result_of::value< typename proto::result_of::child_c< case12 , 0 >::type >::type case_label12; mpl::int_<12> idx12; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<13> , mpl::int_<50> ) >::type case13; typedef typename proto::result_of::value< typename proto::result_of::child_c< case13 , 0 >::type >::type case_label13; mpl::int_<13> idx13; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<14> , mpl::int_<50> ) >::type case14; typedef typename proto::result_of::value< typename proto::result_of::child_c< case14 , 0 >::type >::type case_label14; mpl::int_<14> idx14; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<15> , mpl::int_<50> ) >::type case15; typedef typename proto::result_of::value< typename proto::result_of::child_c< case15 , 0 >::type >::type case_label15; mpl::int_<15> idx15; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<16> , mpl::int_<50> ) >::type case16; typedef typename proto::result_of::value< typename proto::result_of::child_c< case16 , 0 >::type >::type case_label16; mpl::int_<16> idx16; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<17> , mpl::int_<50> ) >::type case17; typedef typename proto::result_of::value< typename proto::result_of::child_c< case17 , 0 >::type >::type case_label17; mpl::int_<17> idx17; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<18> , mpl::int_<50> ) >::type case18; typedef typename proto::result_of::value< typename proto::result_of::child_c< case18 , 0 >::type >::type case_label18; mpl::int_<18> idx18; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<19> , mpl::int_<50> ) >::type case19; typedef typename proto::result_of::value< typename proto::result_of::child_c< case19 , 0 >::type >::type case_label19; mpl::int_<19> idx19; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<20> , mpl::int_<50> ) >::type case20; typedef typename proto::result_of::value< typename proto::result_of::child_c< case20 , 0 >::type >::type case_label20; mpl::int_<20> idx20; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<21> , mpl::int_<50> ) >::type case21; typedef typename proto::result_of::value< typename proto::result_of::child_c< case21 , 0 >::type >::type case_label21; mpl::int_<21> idx21; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<22> , mpl::int_<50> ) >::type case22; typedef typename proto::result_of::value< typename proto::result_of::child_c< case22 , 0 >::type >::type case_label22; mpl::int_<22> idx22; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<23> , mpl::int_<50> ) >::type case23; typedef typename proto::result_of::value< typename proto::result_of::child_c< case23 , 0 >::type >::type case_label23; mpl::int_<23> idx23; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<24> , mpl::int_<50> ) >::type case24; typedef typename proto::result_of::value< typename proto::result_of::child_c< case24 , 0 >::type >::type case_label24; mpl::int_<24> idx24; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<25> , mpl::int_<50> ) >::type case25; typedef typename proto::result_of::value< typename proto::result_of::child_c< case25 , 0 >::type >::type case_label25; mpl::int_<25> idx25; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<26> , mpl::int_<50> ) >::type case26; typedef typename proto::result_of::value< typename proto::result_of::child_c< case26 , 0 >::type >::type case_label26; mpl::int_<26> idx26; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<27> , mpl::int_<50> ) >::type case27; typedef typename proto::result_of::value< typename proto::result_of::child_c< case27 , 0 >::type >::type case_label27; mpl::int_<27> idx27; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<28> , mpl::int_<50> ) >::type case28; typedef typename proto::result_of::value< typename proto::result_of::child_c< case28 , 0 >::type >::type case_label28; mpl::int_<28> idx28; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<29> , mpl::int_<50> ) >::type case29; typedef typename proto::result_of::value< typename proto::result_of::child_c< case29 , 0 >::type >::type case_label29; mpl::int_<29> idx29; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<30> , mpl::int_<50> ) >::type case30; typedef typename proto::result_of::value< typename proto::result_of::child_c< case30 , 0 >::type >::type case_label30; mpl::int_<30> idx30; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<31> , mpl::int_<50> ) >::type case31; typedef typename proto::result_of::value< typename proto::result_of::child_c< case31 , 0 >::type >::type case_label31; mpl::int_<31> idx31; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<32> , mpl::int_<50> ) >::type case32; typedef typename proto::result_of::value< typename proto::result_of::child_c< case32 , 0 >::type >::type case_label32; mpl::int_<32> idx32; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<33> , mpl::int_<50> ) >::type case33; typedef typename proto::result_of::value< typename proto::result_of::child_c< case33 , 0 >::type >::type case_label33; mpl::int_<33> idx33; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<34> , mpl::int_<50> ) >::type case34; typedef typename proto::result_of::value< typename proto::result_of::child_c< case34 , 0 >::type >::type case_label34; mpl::int_<34> idx34; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<35> , mpl::int_<50> ) >::type case35; typedef typename proto::result_of::value< typename proto::result_of::child_c< case35 , 0 >::type >::type case_label35; mpl::int_<35> idx35; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<36> , mpl::int_<50> ) >::type case36; typedef typename proto::result_of::value< typename proto::result_of::child_c< case36 , 0 >::type >::type case_label36; mpl::int_<36> idx36; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<37> , mpl::int_<50> ) >::type case37; typedef typename proto::result_of::value< typename proto::result_of::child_c< case37 , 0 >::type >::type case_label37; mpl::int_<37> idx37; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<38> , mpl::int_<50> ) >::type case38; typedef typename proto::result_of::value< typename proto::result_of::child_c< case38 , 0 >::type >::type case_label38; mpl::int_<38> idx38; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<39> , mpl::int_<50> ) >::type case39; typedef typename proto::result_of::value< typename proto::result_of::child_c< case39 , 0 >::type >::type case_label39; mpl::int_<39> idx39; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<40> , mpl::int_<50> ) >::type case40; typedef typename proto::result_of::value< typename proto::result_of::child_c< case40 , 0 >::type >::type case_label40; mpl::int_<40> idx40; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<41> , mpl::int_<50> ) >::type case41; typedef typename proto::result_of::value< typename proto::result_of::child_c< case41 , 0 >::type >::type case_label41; mpl::int_<41> idx41; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<42> , mpl::int_<50> ) >::type case42; typedef typename proto::result_of::value< typename proto::result_of::child_c< case42 , 0 >::type >::type case_label42; mpl::int_<42> idx42; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<43> , mpl::int_<50> ) >::type case43; typedef typename proto::result_of::value< typename proto::result_of::child_c< case43 , 0 >::type >::type case_label43; mpl::int_<43> idx43; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<44> , mpl::int_<50> ) >::type case44; typedef typename proto::result_of::value< typename proto::result_of::child_c< case44 , 0 >::type >::type case_label44; mpl::int_<44> idx44; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<45> , mpl::int_<50> ) >::type case45; typedef typename proto::result_of::value< typename proto::result_of::child_c< case45 , 0 >::type >::type case_label45; mpl::int_<45> idx45; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<46> , mpl::int_<50> ) >::type case46; typedef typename proto::result_of::value< typename proto::result_of::child_c< case46 , 0 >::type >::type case_label46; mpl::int_<46> idx46; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<47> , mpl::int_<50> ) >::type case47; typedef typename proto::result_of::value< typename proto::result_of::child_c< case47 , 0 >::type >::type case_label47; mpl::int_<47> idx47; typedef typename boost::result_of< detail::switch_grammar( Cases , mpl::int_<48> , mpl::int_<50> ) >::type case48; typedef typename proto::result_of::value< typename proto::result_of::child_c< case48 , 0 >::type >::type case_label48; mpl::int_<48> idx48;
                mpl::int_<49>
                    idx49;
                switch(eval(cond, env))
                {
                    case case_label0::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx0, size ) ) , env ); break; case case_label1::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx1, size ) ) , env ); break; case case_label2::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx2, size ) ) , env ); break; case case_label3::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx3, size ) ) , env ); break; case case_label4::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx4, size ) ) , env ); break; case case_label5::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx5, size ) ) , env ); break; case case_label6::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx6, size ) ) , env ); break; case case_label7::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx7, size ) ) , env ); break; case case_label8::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx8, size ) ) , env ); break; case case_label9::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx9, size ) ) , env ); break; case case_label10::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx10, size ) ) , env ); break; case case_label11::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx11, size ) ) , env ); break; case case_label12::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx12, size ) ) , env ); break; case case_label13::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx13, size ) ) , env ); break; case case_label14::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx14, size ) ) , env ); break; case case_label15::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx15, size ) ) , env ); break; case case_label16::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx16, size ) ) , env ); break; case case_label17::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx17, size ) ) , env ); break; case case_label18::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx18, size ) ) , env ); break; case case_label19::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx19, size ) ) , env ); break; case case_label20::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx20, size ) ) , env ); break; case case_label21::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx21, size ) ) , env ); break; case case_label22::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx22, size ) ) , env ); break; case case_label23::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx23, size ) ) , env ); break; case case_label24::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx24, size ) ) , env ); break; case case_label25::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx25, size ) ) , env ); break; case case_label26::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx26, size ) ) , env ); break; case case_label27::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx27, size ) ) , env ); break; case case_label28::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx28, size ) ) , env ); break; case case_label29::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx29, size ) ) , env ); break; case case_label30::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx30, size ) ) , env ); break; case case_label31::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx31, size ) ) , env ); break; case case_label32::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx32, size ) ) , env ); break; case case_label33::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx33, size ) ) , env ); break; case case_label34::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx34, size ) ) , env ); break; case case_label35::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx35, size ) ) , env ); break; case case_label36::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx36, size ) ) , env ); break; case case_label37::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx37, size ) ) , env ); break; case case_label38::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx38, size ) ) , env ); break; case case_label39::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx39, size ) ) , env ); break; case case_label40::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx40, size ) ) , env ); break; case case_label41::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx41, size ) ) , env ); break; case case_label42::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx42, size ) ) , env ); break; case case_label43::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx43, size ) ) , env ); break; case case_label44::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx44, size ) ) , env ); break; case case_label45::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx45, size ) ) , env ); break; case case_label46::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx46, size ) ) , env ); break; case case_label47::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx47, size ) ) , env ); break; case case_label48::value : eval( proto::child_c<1>( detail::switch_grammar()( cases, idx48, size ) ) , env ); break;
                    default:
                        eval(
                            proto::child_c<0>(
                                detail::switch_grammar()(
                                    cases
                                  , idx49
                                  , size
                                )
                            )
                            , env
                        );
                }
            }
