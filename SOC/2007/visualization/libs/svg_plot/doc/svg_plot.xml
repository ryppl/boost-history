<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE library PUBLIC "-//Boost//DTD BoostBook XML V1.0//EN" "http://www.boost.org/tools/boostbook/dtd/boostbook.dtd">
<article id="svg_plot" name="SVG_Plot" dirname="svg_plot" last-revision="$Date: 2008/01/08 02:58:43 $"
 xmlns:xi="http://www.w3.org/2001/XInclude">
  <articleinfo>
    <authorgroup>
    <author>
      <firstname>Jake</firstname> <surname>Voytko</surname>
    </author>
    </authorgroup>
    <copyright>
      <year>2007</year> <holder>Jake Voytko</holder>
    </copyright>
    <legalnotice>
      <para>
        Distributed under the Boost Software License, Version 1.0. (See accompanying
        file LICENSE_1_0.txt or copy at <ulink url="http://www.boost.org/LICENSE_1_0.txt">http://www.boost.org/LICENSE_1_0.txt</ulink>)
      </para>
    </legalnotice>
    <articlepurpose>
      Plot STL containers onto graphs in SVG format
    </articlepurpose>
  </articleinfo>
  <title>SVG_Plot</title>
  <section id="svg_plot.howtouse">
    <title><link linkend="svg_plot.howtouse"> How To Use This Documentation</link></title>
    <itemizedlist>
      <listitem>
        Tutorial pages are intended for those who do not know how to use the program.
        <itemizedlist>
          <listitem>
            The pages that begin with the tag &quot;Tutorial: Simple&quot; are for
            absolute beginners.
          </listitem>
          <listitem>
            &quot;Tutorial: Full&quot; should give the intermediate user a good reference,
            as well as show how the program can be used
          </listitem>
          <listitem>
            &quot;Tutorial: Special&quot; shows other features/options that the headers
            provide to the user.
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        The pages labelled &quot;<emphasis role="bold">Public Interface</emphasis>&quot;
        give reference information for their respective subjects. You can find all
        public methods (and data members, when structs are concerned) in these sections.
      </listitem>
      <listitem>
        If you have a feature request, or if it appears that my implementation is
        in error, please check the <ulink url="svg_plot/todo.html">To Do</ulink>
        page first, as well as the respective rationale section, if it exists. If
        I you do not find your idea/complaint, please reach me either through the
        Boost development list, or email me at jakevoytko (at) gmail (dot) com
      </listitem>
    </itemizedlist>
    <anchor id="svg_plot.howtouse.admonishments"/>
    <bridgehead renderas="sect3">
      <link linkend="svg_plot.howtouse.admonishments">Admonishments</link>
    </bridgehead>
    <note>
      <para>
        <para>
          These blocks typically go into more detail about an explanation given above.
        </para>
      </para>
    </note>
    <tip>
      <para>
        <para>
          These blocks contain information that you may find helpful while coding.
        </para>
      </para>
    </tip>
    <important>
      <para>
        <para>
          These contain information that is imperative to understanding a concept.
          Failure to follow suggestions in these blocks will probably result in undesired
          behavior. Read all of these you find.
        </para>
      </para>
    </important>
    <warning>
      <para>
        <para>
          It is imperative that you follow these. Failure to do so will lead to incorrect,
          and likely undesired, results in the plot.
        </para>
      </para>
    </warning>
    <para>
      And the first admonishment I will use is as follows:
    </para>
    <important>
      <para>
        <para>
          This is not (yet) a Boost library. It is a <ulink url="http://code.google.com/soc/2007/boost/about.html">GSoC
          project</ulink> whose mentor organization is Boost.
        </para>
      </para>
    </important>
    <anchor id="svg_plot.howtouse.preface"/>
    <bridgehead renderas="sect3">
      <link linkend="svg_plot.howtouse.preface">Preface</link>
    </bridgehead>
    <para>
      Humans have a fantastic capacity for visual understanding, and merely looking
      at data organized in one, two, or three dimensions allows us to see relations
      not otherwise visible in a list of numbers. Computers, however, deal with information
      numerically, and C++ and the <ulink url="http://en.wikipedia.org/wiki/Standard_Template_Library">Standard
      Template Library (STL)</ulink> do not currently offer a way to bridge the gap.
      This library helps the user to easily plot data stored in STL containers.
    </para>
    <para>
      This project is focused on using STL containers in order to graph data on a
      one-dimensional and two-dimensional (and in future, perhaps, 3D) plot. The
      plot will currently be written to a <ulink url="http://en.wikipedia.org/wiki/Scalable_Vector_Graphics">Scalable
      Vector Graphic image</ulink>.
    </para>
    <para>
      <ulink url="http://www.w3.org/TR/SVG11/">Scalable Vector Graphics (SVG)</ulink>
      is an <ulink url="http://www.w3.org/TR/REC-xml/#sec-comments">XML specification</ulink>
      and file format for describing two-dimensional vector graphics.
    </para>
    <para>
      SVG files (.svg) can be viewed with a browser like Mozilla Firefox (newer version),
      <ulink url="http://www.adobe.com/products/acrobat/readstep2.htmlAdobe">Acrobat
      Reader</ulink>, many other graphics program, and by Microsoft Internet Explorer,
      provided a suitable <ulink url="http://www.adobe.com/svg/">Adobe SVG Veiwer
      plug-in for SVG files</ulink> is installed.
    </para>
    <para>
      The goals of the project are:
    </para>
    <itemizedlist>
      <listitem>
        To let users produce simple plots with minimal intervention by using sane
        defaults.
      </listitem>
      <listitem>
        To allow users to easily customize plots.
      </listitem>
      <listitem>
        To allow the user to talk to the plot classes using coordinate units rather
        than pixels or other arbitrary measures.
      </listitem>
      <listitem>
        To create the backbone of a <code><phrase role="identifier">svg</phrase></code>
        class that can be extended to fully support the standard.
      </listitem>
      <listitem>
        compliance with the <ulink url="http://www.w3.org/TR/SVG11/">W3C Scalable
        vector Graph standard</ulink>.
      </listitem>
    </itemizedlist>
    <note>
      <para>
        <para>
          Comments and suggestions to Jake Voytko at jakevoytko (at) gmail (dot)
          com
        </para>
      </para>
    </note>
  </section>
  <section id="svg_plot.todo">
    <title><link linkend="svg_plot.todo"> To Do List</link></title>
    <para>
      This project is still in development, so here is a list of things that I would
      still like to do by the end of the project. I recommend you check here first
      before you email me with requests.
    </para>
    <itemizedlist>
      <listitem>
        Allow an <emphasis role="bold">external stylesheet</emphasis> to be loaded
        to style the graph. External stylesheets will allow a standard and easy way
        to style the document so that users don't have to come up with their own
        home-grown solutions.
      </listitem>
      <listitem>
        Allow <emphasis role="bold">function pointers</emphasis> to specify functions
        as input. A typical use case is to just see what a function like <literal>sin(x)</literal>
        looks like.
      </listitem>
      <listitem>
        <emphasis role="bold">Radian coordinate system</emphasis>.
      </listitem>
      <listitem>
        Implementation of <emphasis role="bold">SVG's DOM</emphasis>. This will make
        the SVG class useful for other things than solely making graphs!
      </listitem>
      <listitem>
        <emphasis role="bold">Automatic scaling</emphasis> of the axis.
      </listitem>
      <listitem>
        Allow <emphasis role="bold">2D plots of 1D containers</emphasis>. Currently
        I am having trouble with having functors that update state interact with
        <code><phrase role="identifier">make_transform_iterator</phrase></code>,
        and have omitted the feature.
      </listitem>
      <listitem>
        Allow <emphasis role="bold">other image formats</emphasis>. This is certainly
        an after-GSoC project, as there are many inherent difficulties with this
        part. The solution that I am currently playing with is allowing the user
        to pass a functor that traverses the document tree. Generalizing images to
        an <code><phrase role="identifier">image</phrase></code> class is fraught
        with difficulties, as SVG is a tree-based format, which it does not share
        with many other formats. When I come up with what I feel is a minimal-intervention
        method of doing this, I will begin a discussion on the Boost dev list.
      </listitem>
      <listitem>
        <emphasis role="bold">Avoid redrawing the entire plot each time</emphasis>.
        This is the easiest way to write the program initially, but it would be more
        efficient if the program could keep track of what has been changed and what
        hasn't, so that it may be more efficient if lots of images are being produced.
      </listitem>
      <listitem>
        Allow the user to provide a function object for generating <emphasis role="bold">custom
        axis labels</emphasis>, for example, label axes with names of months (Jan,
        Feb, Mar...) instead of integer representations of months (1, 2, 3...).
      </listitem>
      <listitem>
        <emphasis role="bold">Logarithmic Axes</emphasis>.
      </listitem>
      <listitem>
        <emphasis role="bold">Histograms</emphasis>.
      </listitem>
    </itemizedlist>
  </section>
  <section id="svg_plot.color">
    <title><link linkend="svg_plot.color"> Colors</link></title>
    <para>
      The project supports any <ulink url="http://en.wikipedia.org/wiki/RGB_color_model">RGB
      color</ulink>, as well as a number of colors that are <ulink url="http://www.w3.org/TR/SVG/types.html#ColorKeywords">named
      by the SVG standard</ulink>.
    </para>
    <anchor id="svg_plot.color._code__phrase_role__identifier__svg_color_constant__phrase___code_"/>
    <bridgehead renderas="sect3">
      <link linkend="svg_plot.color._code__phrase_role__identifier__svg_color_constant__phrase___code_"><code><phrase
      role="identifier">svg_color_constant</phrase></code></link>
    </bridgehead>
    <para>
      <code><phrase role="identifier">svg_color_constant</phrase></code> is simply
      an enumerated list.
    </para>
    <para>
      The constants are defined at <ulink url="../../../../boost/svg_plot/svg_color.hpp">svg_color.hpp</ulink>.
    </para>
    <para>
      Examples of colors are at <ulink url="../../../svg_plot/example/svg_colors.cpp">svg_colors.cpp</ulink>.
    </para>
    <para>
      The <ulink url="http://www.w3.org/TR/SVG/types.html#ColorKeywords">colors are
      defined by the SVG standard here</ulink>. The list contains all of your expected
      colors, such as magenta, pink and red, and many other shades.
    </para>
    <para>
      The list also contains one extra color element, <code><phrase role="identifier">blank</phrase></code>,
      defined as <code><phrase role="keyword">false</phrase></code>, used when you
      need to pass a color, but would not like it to be visible. This comes in handy
      for defining defaults for functions, for example.
    </para>
    <anchor id="svg_plot.color.example_of_using__code__phrase_role__identifier__svg_color_constant__phrase___code_"/>
    <bridgehead renderas="sect4">
      <link linkend="svg_plot.color.example_of_using__code__phrase_role__identifier__svg_color_constant__phrase___code_">Example
      of using <code><phrase role="identifier">svg_color_constant</phrase></code></link>
    </bridgehead>
    
<programlisting>
<phrase role="keyword">using</phrase> <phrase role="keyword">namespace</phrase> <phrase role="identifier">boost</phrase><phrase role="special">::</phrase><phrase role="identifier">svg</phrase><phrase role="special">;</phrase>

<phrase role="identifier">svg_2d_plot</phrase> <phrase role="identifier">my_plot</phrase><phrase role="special">;</phrase>

<phrase role="identifier">svg_color_constant</phrase> <phrase role="identifier">my_const</phrase> <phrase role="special">=</phrase> <phrase role="identifier">red</phrase><phrase role="special">;</phrase>

<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">background_border_color</phrase><phrase role="special">(</phrase><phrase role="identifier">my_const</phrase><phrase role="special">);</phrase>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">background_color</phrase><phrase role="special">(</phrase><phrase role="identifier">lightgray</phrase><phrase role="special">);</phrase>
</programlisting>
    <note>
      <para>
        <para>
          <code><phrase role="identifier">svg_color</phrase></code> has a constructor
          for <code><phrase role="identifier">svg_color_constant</phrase></code>,
          so you can use a <code><phrase role="identifier">svg_color_constant</phrase></code>
          in place of a <code><phrase role="identifier">svg_color</phrase></code>
          and it will be implicitly converted. However, there is <emphasis role="bold">not</emphasis>
          currently an <code><phrase role="identifier">svg_color</phrase><phrase
          role="special">::</phrase><phrase role="keyword">operator</phrase><phrase
          role="special">=(</phrase><phrase role="identifier">svg_color_constant</phrase><phrase
          role="special">)</phrase></code> overload, so 
<programlisting>
<phrase role="identifier">svg_color</phrase> <phrase role="identifier">my_color</phrase> <phrase role="special">=</phrase> <phrase role="identifier">red</phrase><phrase role="special">;</phrase>
</programlisting>
          does not have the desired effect, and nor does <code><phrase role="identifier">cout</phrase>
          <phrase role="special">&lt;&lt;</phrase> <phrase role="identifier">red</phrase>
          <phrase role="special">&lt;&lt;</phrase> <phrase role="identifier">endl</phrase><phrase
          role="special">;</phrase></code> output the expected RGB(255,0,0) but instead
          119 the value of the enum!
        </para>
      </para>
    </note>
    <anchor id="svg_plot.color._code__phrase_role__identifier__svg_color__phrase___code__interface"/>
    <bridgehead renderas="sect4">
      <link linkend="svg_plot.color._code__phrase_role__identifier__svg_color__phrase___code__interface"><code><phrase
      role="identifier">svg_color</phrase></code> interface</link>
    </bridgehead>
    <para>
      You can define a <code><phrase role="identifier">svg_color</phrase></code>
      using two different constructors:
    </para>
    
<programlisting>
<phrase role="comment">// The parameters are red, green, and blue respectively.
</phrase><phrase role="identifier">svg_color</phrase><phrase role="special">(</phrase><phrase role="keyword">int</phrase><phrase role="special">,</phrase> <phrase role="keyword">int</phrase><phrase role="special">,</phrase> <phrase role="keyword">int</phrase><phrase role="special">);</phrase>

<phrase role="comment">// Use a pre-existing color constant.
</phrase><phrase role="identifier">svg_color</phrase><phrase role="special">(</phrase><phrase role="identifier">svg_color_constant</phrase><phrase role="special">);</phrase>
</programlisting>
    <important>
      <para>
        <para>
          Any integer value is accepted but negative values are contrained 0, and
          positive values &gt; 255 are constrained to 255.
        </para>
      </para>
    </important>
    <anchor id="svg_plot.color.example_of_using__code__phrase_role__identifier__svg_color__phrase___code_"/>
    <bridgehead renderas="sect4">
      <link linkend="svg_plot.color.example_of_using__code__phrase_role__identifier__svg_color__phrase___code_">Example
      of using <code><phrase role="identifier">svg_color</phrase></code></link>
    </bridgehead>
    
<programlisting>
<phrase role="keyword">using</phrase> <phrase role="keyword">namespace</phrase> <phrase role="identifier">boost</phrase><phrase role="special">::</phrase><phrase role="identifier">svg</phrase><phrase role="special">;</phrase>

<phrase role="identifier">svg_color</phrase> <phrase role="identifier">my_white</phrase><phrase role="special">(</phrase><phrase role="number">255</phrase><phrase role="special">,</phrase> <phrase role="number">255</phrase><phrase role="special">,</phrase> <phrase role="number">255</phrase><phrase role="special">);</phrase> <phrase role="comment">// RGB constructor.
</phrase><phrase role="identifier">svg_color</phrase> <phrase role="identifier">const_white</phrase><phrase role="special">(</phrase><phrase role="identifier">white</phrase><phrase role="special">);</phrase> <phrase role="comment">// SVG defined named constructor.
</phrase>
<phrase role="identifier">BOOST_ASSERT</phrase><phrase role="special">(</phrase><phrase role="identifier">my_white</phrase> <phrase role="special">==</phrase> <phrase role="identifier">const_white</phrase><phrase role="special">);</phrase>
</programlisting>
    <note>
      <para>
        <para>
          <code><phrase role="identifier">svg_color</phrase></code>'s constructor
          takes in three integer values. The <ulink url="http://www.w3.org/TR/SVG11/types.html">SVG
          1.1 standard</ulink> allows any integer to represent an RGB value, with
          values less than 0 and greater than 255 being constrained to their respective
          min and max.
        </para>
      </para>
    </note>
    <anchor id="svg_plot.color.colors_internals_and_rationale"/>
    <bridgehead renderas="sect3">
      <link linkend="svg_plot.color.colors_internals_and_rationale">Colors Internals
      and Rationale</link>
    </bridgehead>
    <para>
      Constants are defined in an enum, <code><phrase role="identifier">svg_color_constant</phrase></code>,
      in alphabetical order. <ulink url="..\..\..\..\boost\svg_plot\svg_color.hpp">color
      constants</ulink>. This facilitates quick lookup of their RGB values from an
      array. Anywhere that a <code><phrase role="identifier">svg_color</phrase></code>
      can be used, a <code><phrase role="identifier">svg_color_constant</phrase></code>
      can be used, as the conversion is implicit.
    </para>
    <para>
      All color information is stored in RGB format as three 'unsigned char' in a
      <code><phrase role="identifier">svg_color</phrase></code> struct. The rationale
      for storing information in RGB format is because it is precise, and is always
      representable the exact same way. Storing a floating-point percent or fraction
      would introduce the possibility of undesirable rounding error.
    </para>
  </section>
  <section id="svg_plot.svg_simple_code_example">
    <title><link linkend="svg_plot.svg_simple_code_example"> Simple Code Example</link></title>
    <section id="svg_plot.svg_simple_code_example.tutorial_code_1d_simple">
      <title><link linkend="svg_plot.svg_simple_code_example.tutorial_code_1d_simple">
      Tutorial: 1D</link></title>
      <section id="svg_plot.svg_simple_code_example.tutorial_code_1d_simple.tutorial_code_1d_example">
        <title><link linkend="svg_plot.svg_simple_code_example.tutorial_code_1d_simple.tutorial_code_1d_example">
        Simple 1D Example</link></title> 
<programlisting>
<phrase role="preprocessor">#include</phrase> <phrase role="special">&lt;</phrase><phrase role="identifier">boost</phrase><phrase role="special">/</phrase><phrase role="identifier">svg_plot</phrase><phrase role="special">/</phrase><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">hpp</phrase><phrase role="special">&gt;</phrase>
<phrase role="keyword">using</phrase> <phrase role="keyword">namespace</phrase> <phrase role="identifier">boost</phrase><phrase role="special">::</phrase><phrase role="identifier">svg</phrase><phrase role="special">;</phrase>
<phrase role="preprocessor">#include</phrase> <phrase role="special">&lt;</phrase><phrase role="identifier">vector</phrase><phrase role="special">&gt;</phrase>
<phrase role="keyword">using</phrase> <phrase role="identifier">std</phrase><phrase role="special">::</phrase><phrase role="identifier">vector</phrase><phrase role="special">;</phrase>

<phrase role="keyword">int</phrase> <phrase role="identifier">main</phrase><phrase role="special">()</phrase>
<phrase role="special">{</phrase>
  <phrase role="comment">// STL containers for the data to plot.
</phrase>  <phrase role="identifier">vector</phrase><phrase role="special">&lt;</phrase><phrase role="keyword">double</phrase><phrase role="special">&gt;</phrase> <phrase role="identifier">dan_times</phrase><phrase role="special">;</phrase>
  <phrase role="identifier">vector</phrase><phrase role="special">&lt;</phrase><phrase role="keyword">double</phrase><phrase role="special">&gt;</phrase> <phrase role="identifier">elaine_times</phrase><phrase role="special">;</phrase>
  <phrase role="comment">// Fill the two containers with some data:
</phrase>  <phrase role="identifier">dan_times</phrase><phrase role="special">.</phrase><phrase role="identifier">push_back</phrase><phrase role="special">(</phrase><phrase role="number">3.1</phrase><phrase role="special">);</phrase>
  <phrase role="identifier">dan_times</phrase><phrase role="special">.</phrase><phrase role="identifier">push_back</phrase><phrase role="special">(</phrase><phrase role="number">4.2</phrase><phrase role="special">);</phrase>
  <phrase role="identifier">elaine_times</phrase><phrase role="special">.</phrase><phrase role="identifier">push_back</phrase><phrase role="special">(</phrase><phrase role="number">2.1</phrase><phrase role="special">);</phrase>
  <phrase role="identifier">elaine_times</phrase><phrase role="special">.</phrase><phrase role="identifier">push_back</phrase><phrase role="special">(</phrase><phrase role="number">7.8</phrase><phrase role="special">);</phrase>

  <phrase role="identifier">svg_1d_plot</phrase> <phrase role="identifier">my_plot</phrase><phrase role="special">;</phrase> <phrase role="comment">// Construct a plot.
</phrase>
  <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">title</phrase><phrase role="special">(</phrase><phrase role="string">&quot;Race Times&quot;</phrase><phrase role="special">)</phrase> <phrase role="comment">// Set title and legend.
</phrase>         <phrase role="special">.</phrase><phrase role="identifier">legend_on</phrase><phrase role="special">(</phrase><phrase role="keyword">true</phrase><phrase role="special">)</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">x_range</phrase><phrase role="special">(-</phrase><phrase role="number">1</phrase><phrase role="special">,</phrase> <phrase role="number">11</phrase><phrase role="special">);</phrase>
         
  <phrase role="comment">// Add the containers of data to the plot.
</phrase>  <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">plot</phrase><phrase role="special">(</phrase><phrase role="identifier">dan_times</phrase><phrase role="special">,</phrase> <phrase role="string">&quot;Dan&quot;</phrase><phrase role="special">,</phrase> <phrase role="identifier">blue</phrase><phrase role="special">);</phrase>
  <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">plot</phrase><phrase role="special">(</phrase><phrase role="identifier">elaine_times</phrase><phrase role="special">,</phrase> <phrase role="string">&quot;Elaine&quot;</phrase><phrase role="special">,</phrase> <phrase role="identifier">orange</phrase><phrase role="special">);</phrase>
  
  <phrase role="comment">// And finally write the plot to a file.
</phrase>  <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">write</phrase><phrase role="special">(</phrase><phrase role="string">&quot;simple.svg&quot;</phrase><phrase role="special">);</phrase>
  <phrase role="keyword">return</phrase> <phrase role="number">0</phrase><phrase role="special">;</phrase>
<phrase role="special">}</phrase>
</programlisting>
        <para>
          <inlinemediaobject><imageobject><imagedata fileref="images/1d_simple.png"></imagedata></imageobject>
          <textobject>
            <phrase>1d_simple</phrase>
          </textobject>
          </inlinemediaobject>
        </para>
        <anchor id="svg_plot.svg_simple_code_example.tutorial_code_1d_simple.tutorial_code_1d_example.a_note_on_syntax"/>
        <bridgehead renderas="sect4">
          <link linkend="svg_plot.svg_simple_code_example.tutorial_code_1d_simple.tutorial_code_1d_example.a_note_on_syntax">A
          Note On Syntax</link>
        </bridgehead>
        <para>
          The syntax &quot;<code><phrase role="identifier">my_plot</phrase><phrase
          role="special">.</phrase><phrase role="identifier">title</phrase><phrase
          role="special">(</phrase><phrase role="string">&quot;Hello&quot;</phrase><phrase
          role="special">).</phrase><phrase role="identifier">legend_on</phrase><phrase
          role="special">(</phrase><phrase role="keyword">true</phrase><phrase role="special">)...</phrase></code>&quot;
          may appear unfamiliar. However, it works on the same 'chaining' principle
          that the assignment operator, addition operator, and output operator in
          the following code works:
        </para>
        
<programlisting>
<phrase role="identifier">a</phrase> <phrase role="special">=</phrase> <phrase role="identifier">b</phrase> <phrase role="special">=</phrase> <phrase role="identifier">c</phrase> <phrase role="special">=</phrase> <phrase role="identifier">d</phrase> <phrase role="special">=</phrase> <phrase role="number">3</phrase><phrase role="special">;</phrase>

<phrase role="identifier">std</phrase><phrase role="special">::</phrase><phrase role="identifier">cout</phrase> <phrase role="special">&lt;&lt;</phrase> <phrase role="identifier">a</phrase> <phrase role="special">+</phrase> <phrase role="identifier">b</phrase> <phrase role="special">+</phrase> <phrase role="identifier">c</phrase> <phrase role="special">+</phrase> <phrase role="identifier">d</phrase> <phrase role="special">&lt;&lt;</phrase> <phrase role="identifier">std</phrase><phrase role="special">::</phrase><phrase role="identifier">endl</phrase><phrase role="special">;</phrase>  <phrase role="comment">// prints 12
</phrase></programlisting>
        <para>
          Within all of the plot classes, 'chaining' works the same way. Equivalent
          tradional code for the example is as follows:
        </para>
        
<programlisting>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">title</phrase><phrase role="special">(</phrase><phrase role="string">&quot;Race Times&quot;</phrase><phrase role="special">);</phrase>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">legend_on</phrase><phrase role="special">(</phrase><phrase role="keyword">true</phrase><phrase role="special">);</phrase>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">x_range</phrase><phrase role="special">(-</phrase><phrase role="number">1</phrase><phrase role="special">,</phrase> <phrase role="number">11</phrase><phrase role="special">);</phrase>
</programlisting>
        <para>
          Chaining allows you to avoid repeatedly typing <code><phrase role="identifier">myplot</phrase><phrase
          role="special">.</phrase></code> and to easily group related settings like
          plot window, axes, ... together, and avoids relying on the order of arguments
          in ordinary function calls. Order would clearly become impracticable with
          dozens of arguments required to set all the myriad plot options.
        </para>
        <para>
          In the long run, I think you will find that chaining helps organize your
          code to read more clearly!
        </para>
        <anchor id="svg_plot.svg_simple_code_example.tutorial_code_1d_simple.tutorial_code_1d_example.simple_1d_example_breakdown"/>
        <bridgehead renderas="sect4">
          <link linkend="svg_plot.svg_simple_code_example.tutorial_code_1d_simple.tutorial_code_1d_example.simple_1d_example_breakdown">Simple
          1D Example Breakdown</link>
        </bridgehead>
        <para>
          Let's examine what this does in detail.
        </para>
        
<programlisting>
<phrase role="identifier">svg_1d_plot</phrase> <phrase role="identifier">my_plot</phrase><phrase role="special">;</phrase>
</programlisting>
        <para>
          This constructor initializes a new 1D plot, called my_plot, and also sets
          all the many default values.
        </para>
        
<programlisting>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">title</phrase><phrase role="special">(</phrase><phrase role="string">&quot;Race Times&quot;</phrase><phrase role="special">)</phrase>
       <phrase role="special">.</phrase><phrase role="identifier">legend_on</phrase><phrase role="special">(</phrase><phrase role="keyword">true</phrase><phrase role="special">)</phrase>
       <phrase role="special">.</phrase><phrase role="identifier">x_range</phrase><phrase role="special">(-</phrase><phrase role="number">1</phrase><phrase role="special">,</phrase> <phrase role="number">11</phrase><phrase role="special">);</phrase>
</programlisting>
        <para>
          All of the setter methods (or member functions) are fairly self-explanatory.
          To walk through it once,
        </para>
        <itemizedlist>
          <listitem>
            the title, which will appear at the top of the graph, will say &quot;Race
            Times&quot;.
          </listitem>
          <listitem>
            <code><phrase role="identifier">legend_on</phrase><phrase role="special">(</phrase><phrase
            role="keyword">true</phrase><phrase role="special">)</phrase></code>
            means that the legend will display.
          </listitem>
          <listitem>
            <code><phrase role="identifier">x_range</phrase><phrase role="special">(-</phrase><phrase
            role="number">1</phrase><phrase role="special">,</phrase> <phrase role="number">11</phrase><phrase
            role="special">)</phrase></code> means that the axis displayed will be
            between -1 and 11, as you can see in the above image.
          </listitem>
        </itemizedlist>
        
<programlisting>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">plot</phrase><phrase role="special">(</phrase><phrase role="identifier">my_data</phrase><phrase role="special">,</phrase> <phrase role="string">&quot;Race times&quot;</phrase><phrase role="special">);</phrase>
</programlisting>
        <para>
          This draws <code><phrase role="identifier">my_data</phrase></code> onto
          <code><phrase role="identifier">my_plot</phrase></code>. As many containers
          as you want can be drawn to <code><phrase role="identifier">my_plot</phrase></code>.
          The name of this data series is &quot;Race times&quot;, and this text will
          show up in the legend (if my_plot.legend_on() == true). These are the two
          required parameters for this plot function call. There are also optional
          parameters, as seen in the section <ulink url=".\html\svg_plot\interface\svg_1d_plot_interface.html">svg_1d_plot_interface.html</ulink>
        </para>
        <para>
          
<programlisting>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">write</phrase><phrase role="special">(</phrase><phrase role="string">&quot;simple.svg&quot;</phrase><phrase role="special">);</phrase>
</programlisting>
          This writes our plot to the file &quot;simple.svg&quot;. SVG files can
          be viewed with most browsers, or embedded into documents.
        </para>
      </section>
      <section id="svg_plot.svg_simple_code_example.tutorial_code_1d_simple.full_1d_layout">
        <title><link linkend="svg_plot.svg_simple_code_example.tutorial_code_1d_simple.full_1d_layout">
        Tutorial: 1D Full Layout Example</link></title> 
<programlisting>
<phrase role="preprocessor">#include</phrase> <phrase role="special">&lt;</phrase><phrase role="identifier">boost</phrase><phrase role="special">/</phrase><phrase role="identifier">svg_plot</phrase><phrase role="special">/</phrase><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">hpp</phrase><phrase role="special">&gt;</phrase>
<phrase role="keyword">using</phrase> <phrase role="keyword">namespace</phrase> <phrase role="identifier">boost</phrase><phrase role="special">::</phrase><phrase role="identifier">svg</phrase><phrase role="special">;</phrase>
<phrase role="preprocessor">#include</phrase> <phrase role="special">&lt;</phrase><phrase role="identifier">cmath</phrase><phrase role="special">&gt;</phrase>  <phrase role="comment">// for sqrt
</phrase>
<phrase role="preprocessor">#include</phrase> <phrase role="special">&lt;</phrase><phrase role="identifier">vector</phrase><phrase role="special">&gt;</phrase>
<phrase role="preprocessor">#include</phrase> <phrase role="special">&lt;</phrase><phrase role="identifier">deque</phrase><phrase role="special">&gt;</phrase>
<phrase role="preprocessor">#include</phrase> <phrase role="special">&lt;</phrase><phrase role="identifier">boost</phrase><phrase role="special">/</phrase><phrase role="identifier">array</phrase><phrase role="special">.</phrase><phrase role="identifier">hpp</phrase><phrase role="special">&gt;</phrase>

<phrase role="comment">// Three different STL-style containers:
</phrase><phrase role="keyword">using</phrase> <phrase role="identifier">std</phrase><phrase role="special">::</phrase><phrase role="identifier">vector</phrase><phrase role="special">;</phrase>
<phrase role="keyword">using</phrase> <phrase role="identifier">std</phrase><phrase role="special">::</phrase><phrase role="identifier">deque</phrase><phrase role="special">;</phrase>
<phrase role="keyword">using</phrase> <phrase role="identifier">boost</phrase><phrase role="special">::</phrase><phrase role="identifier">array</phrase><phrase role="special">;</phrase>

<phrase role="comment">// Three sample functions:  
</phrase><phrase role="keyword">double</phrase> <phrase role="identifier">f</phrase><phrase role="special">(</phrase><phrase role="keyword">double</phrase> <phrase role="identifier">x</phrase><phrase role="special">)</phrase>
<phrase role="special">{</phrase>
  <phrase role="keyword">return</phrase> <phrase role="identifier">sqrt</phrase><phrase role="special">(</phrase><phrase role="identifier">x</phrase><phrase role="special">);</phrase>
<phrase role="special">}</phrase>

<phrase role="keyword">double</phrase> <phrase role="identifier">g</phrase><phrase role="special">(</phrase><phrase role="keyword">double</phrase> <phrase role="identifier">x</phrase><phrase role="special">)</phrase>
<phrase role="special">{</phrase>
  <phrase role="keyword">return</phrase> <phrase role="special">-</phrase><phrase role="number">2</phrase> <phrase role="special">+</phrase> <phrase role="identifier">x</phrase><phrase role="special">*</phrase><phrase role="identifier">x</phrase><phrase role="special">;</phrase>
<phrase role="special">}</phrase>

<phrase role="keyword">double</phrase> <phrase role="identifier">h</phrase><phrase role="special">(</phrase><phrase role="keyword">double</phrase> <phrase role="identifier">x</phrase><phrase role="special">)</phrase>
<phrase role="special">{</phrase>
  <phrase role="keyword">return</phrase> <phrase role="special">-</phrase><phrase role="number">1</phrase> <phrase role="special">+</phrase> <phrase role="number">2</phrase><phrase role="special">*</phrase><phrase role="identifier">x</phrase><phrase role="special">;</phrase>
<phrase role="special">}</phrase>

<phrase role="keyword">int</phrase> <phrase role="identifier">main</phrase><phrase role="special">()</phrase>
<phrase role="special">{</phrase>
  <phrase role="identifier">vector</phrase><phrase role="special">&lt;</phrase><phrase role="keyword">double</phrase><phrase role="special">&gt;</phrase> <phrase role="identifier">data1</phrase><phrase role="special">;</phrase>
  <phrase role="identifier">deque</phrase><phrase role="special">&lt;</phrase><phrase role="keyword">double</phrase><phrase role="special">&gt;</phrase> <phrase role="identifier">data2</phrase><phrase role="special">;</phrase>
  <phrase role="identifier">boost</phrase><phrase role="special">::</phrase><phrase role="identifier">array</phrase><phrase role="special">&lt;</phrase><phrase role="keyword">double</phrase><phrase role="special">,</phrase> <phrase role="number">10</phrase><phrase role="special">&gt;</phrase> <phrase role="identifier">data3</phrase><phrase role="special">;</phrase>
  <phrase role="comment">// Fill the containers with some data using the functions:
</phrase>  <phrase role="keyword">int</phrase> <phrase role="identifier">j</phrase><phrase role="special">=</phrase><phrase role="number">0</phrase><phrase role="special">;</phrase>
  <phrase role="keyword">for</phrase><phrase role="special">(</phrase><phrase role="keyword">double</phrase> <phrase role="identifier">i</phrase><phrase role="special">=</phrase><phrase role="number">0</phrase><phrase role="special">;</phrase> <phrase role="identifier">i</phrase><phrase role="special">&lt;</phrase><phrase role="number">9.5</phrase><phrase role="special">;</phrase> <phrase role="identifier">i</phrase><phrase role="special">+=</phrase><phrase role="number">1.</phrase><phrase role="special">)</phrase>
  <phrase role="special">{</phrase>
    <phrase role="identifier">data1</phrase><phrase role="special">.</phrase><phrase role="identifier">push_back</phrase><phrase role="special">(</phrase><phrase role="identifier">f</phrase><phrase role="special">(</phrase><phrase role="identifier">i</phrase><phrase role="special">));</phrase>
    <phrase role="identifier">data2</phrase><phrase role="special">.</phrase><phrase role="identifier">push_front</phrase><phrase role="special">(</phrase><phrase role="identifier">g</phrase><phrase role="special">(</phrase><phrase role="identifier">i</phrase><phrase role="special">));</phrase>
    <phrase role="identifier">data3</phrase><phrase role="special">[</phrase><phrase role="identifier">j</phrase><phrase role="special">++]</phrase> <phrase role="special">=</phrase> <phrase role="identifier">h</phrase><phrase role="special">(</phrase><phrase role="identifier">i</phrase><phrase role="special">);</phrase>
  <phrase role="special">}</phrase>

  <phrase role="identifier">svg_1d_plot</phrase> <phrase role="identifier">my_plot</phrase><phrase role="special">;</phrase> <phrase role="comment">// Construct my_plot.
</phrase>  
  <phrase role="comment">// Set many plot options,
</phrase>  <phrase role="comment">// using chaining to group similar aspects together.
</phrase>  <phrase role="comment">// Size/scale settings.
</phrase>  <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">image_size</phrase><phrase role="special">(</phrase><phrase role="number">500</phrase><phrase role="special">,</phrase> <phrase role="number">350</phrase><phrase role="special">)</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">x_range</phrase><phrase role="special">(-</phrase><phrase role="number">3</phrase><phrase role="special">,</phrase> <phrase role="number">10</phrase><phrase role="special">);</phrase>

  <phrase role="comment">// Text settings.
</phrase>  <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">title</phrase><phrase role="special">(</phrase><phrase role="string">&quot;Oh My!&quot;</phrase><phrase role="special">)</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">title_font_size</phrase><phrase role="special">(</phrase><phrase role="number">29</phrase><phrase role="special">)</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">x_label</phrase><phrase role="special">(</phrase><phrase role="string">&quot;Time in Months&quot;</phrase><phrase role="special">);</phrase>
  
  <phrase role="comment">// Commands.
</phrase>  <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">legend_on</phrase><phrase role="special">(</phrase><phrase role="keyword">true</phrase><phrase role="special">)</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">plot_window_on</phrase><phrase role="special">(</phrase><phrase role="keyword">true</phrase><phrase role="special">)</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">x_label_on</phrase><phrase role="special">(</phrase><phrase role="keyword">true</phrase><phrase role="special">)</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">x_major_labels_on</phrase><phrase role="special">(</phrase><phrase role="keyword">true</phrase><phrase role="special">);</phrase>
  
  <phrase role="comment">// Color settings.
</phrase>  <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">background_color</phrase><phrase role="special">(</phrase><phrase role="identifier">svg_color</phrase><phrase role="special">(</phrase><phrase role="number">67</phrase><phrase role="special">,</phrase> <phrase role="number">111</phrase><phrase role="special">,</phrase> <phrase role="number">69</phrase><phrase role="special">))</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">legend_background_color</phrase><phrase role="special">(</phrase><phrase role="identifier">svg_color</phrase><phrase role="special">(</phrase><phrase role="number">207</phrase><phrase role="special">,</phrase> <phrase role="number">202</phrase><phrase role="special">,</phrase><phrase role="number">167</phrase><phrase role="special">))</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">legend_border_color</phrase><phrase role="special">(</phrase><phrase role="identifier">svg_color</phrase><phrase role="special">(</phrase><phrase role="number">102</phrase><phrase role="special">,</phrase> <phrase role="number">102</phrase><phrase role="special">,</phrase> <phrase role="number">84</phrase><phrase role="special">))</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">plot_background_color</phrase><phrase role="special">(</phrase><phrase role="identifier">svg_color</phrase><phrase role="special">(</phrase><phrase role="number">136</phrase><phrase role="special">,</phrase> <phrase role="number">188</phrase><phrase role="special">,</phrase> <phrase role="number">126</phrase><phrase role="special">))</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">title_color</phrase><phrase role="special">(</phrase><phrase role="identifier">white</phrase><phrase role="special">);</phrase>

  <phrase role="comment">// Axis settings.
</phrase>  <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">x_major_interval</phrase><phrase role="special">(</phrase><phrase role="number">2</phrase><phrase role="special">)</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">x_major_tick_length</phrase><phrase role="special">(</phrase><phrase role="number">14</phrase><phrase role="special">)</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">x_major_tick_width</phrase><phrase role="special">(</phrase><phrase role="number">1</phrase><phrase role="special">)</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">x_minor_tick_length</phrase><phrase role="special">(</phrase><phrase role="number">7</phrase><phrase role="special">)</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">x_minor_tick_width</phrase><phrase role="special">(</phrase><phrase role="number">1</phrase><phrase role="special">)</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">x_num_minor_ticks</phrase><phrase role="special">(</phrase><phrase role="number">3</phrase><phrase role="special">);</phrase>
  
  <phrase role="comment">// Legend settings.
</phrase>  <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">legend_title_font_size</phrase><phrase role="special">(</phrase><phrase role="number">15</phrase><phrase role="special">);</phrase>
  
  <phrase role="comment">// Put the three containers of data onto the plot.
</phrase>  <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">plot</phrase><phrase role="special">(</phrase><phrase role="identifier">data1</phrase><phrase role="special">,</phrase> <phrase role="string">&quot;Lions&quot;</phrase><phrase role="special">,</phrase>  <phrase role="identifier">blue</phrase><phrase role="special">);</phrase>
  <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">plot</phrase><phrase role="special">(</phrase><phrase role="identifier">data2</phrase><phrase role="special">,</phrase> <phrase role="string">&quot;Tigers&quot;</phrase><phrase role="special">,</phrase> <phrase role="identifier">orange</phrase><phrase role="special">);</phrase>
  <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">plot</phrase><phrase role="special">(</phrase><phrase role="identifier">data3</phrase><phrase role="special">,</phrase> <phrase role="string">&quot;Bears&quot;</phrase><phrase role="special">,</phrase>  <phrase role="identifier">red</phrase><phrase role="special">);</phrase>

  <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">write</phrase><phrase role="special">(</phrase><phrase role="string">&quot;1d_complex.svg&quot;</phrase><phrase role="special">);</phrase>

  <phrase role="keyword">return</phrase> <phrase role="number">0</phrase><phrase role="special">;</phrase>
<phrase role="special">}</phrase>
</programlisting>
        <para>
          This produces the following output:
        </para>
        <para>
          <inlinemediaobject><imageobject><imagedata fileref="images/1d_complex.png"></imagedata></imageobject>
          <textobject>
            <phrase>1d_complex</phrase>
          </textobject>
          </inlinemediaobject>
        </para>
        <para>
          A little bit of color customization goes a very long way!
        </para>
      </section>
      <section id="svg_plot.svg_simple_code_example.tutorial_code_1d_simple.1d_special">
        <title><link linkend="svg_plot.svg_simple_code_example.tutorial_code_1d_simple.1d_special">
        Tutorial: 1D Special Features</link></title> <anchor id="svg_plot.svg_simple_code_example.tutorial_code_1d_simple.1d_special.x_axis_grid_lines"/>
        <bridgehead renderas="sect5">
          <link linkend="svg_plot.svg_simple_code_example.tutorial_code_1d_simple.1d_special.x_axis_grid_lines">X-Axis
          Grid Lines</link>
        </bridgehead>
        <para>
          If you would like vertical grid lines that go on the graph, you can make
          the following call to <code><phrase role="identifier">svg_1d_plot</phrase></code>:
        </para>
        
<programlisting>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">x_major_grid_on</phrase><phrase role="special">(</phrase><phrase role="keyword">true</phrase><phrase role="special">)</phrase> 
       <phrase role="special">.</phrase><phrase role="identifier">x_minor_grid_on</phrase><phrase role="special">(</phrase><phrase role="keyword">true</phrase><phrase role="special">);</phrase>
</programlisting>
        <para>
          To color style it, you might add the following calls:
        </para>
        
<programlisting>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">x_major_grid_color</phrase><phrase role="special">(</phrase><phrase role="identifier">lightgray</phrase><phrase role="special">)</phrase> <phrase role="comment">// Darker color for major grid.
</phrase>       <phrase role="special">.</phrase><phrase role="identifier">x_minor_grid_color</phrase><phrase role="special">(</phrase><phrase role="identifier">whitesmoke</phrase><phrase role="special">);</phrase> <phrase role="comment">// Lighter color for minor grid.
</phrase></programlisting>
        <para>
          This will produce the following image:
        </para>
        <para>
          <inlinemediaobject><imageobject><imagedata fileref="images/1d_x_grid.png"></imagedata></imageobject>
          <textobject>
            <phrase>1d_x_grid</phrase>
          </textobject>
          </inlinemediaobject>
        </para>
        <anchor id="svg_plot.svg_simple_code_example.tutorial_code_1d_simple.1d_special.x_axis_external_style"/>
        <bridgehead renderas="sect4">
          <link linkend="svg_plot.svg_simple_code_example.tutorial_code_1d_simple.1d_special.x_axis_external_style">X-Axis
          External Style</link>
        </bridgehead>
        <para>
          TODO this has ben changed to x_up_ticks and x_down_ticks and y_left_ticks
          and y_right_ticks.
        </para>
        <para>
          By default the 'ticks' face into the plot area. Alternatively, you can
          use an 'external' style, so that the ticks face out from the X- and/or
          Y-axes.
        </para>
        
<programlisting>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">x_external_style_on</phrase><phrase role="special">(</phrase><phrase role="keyword">true</phrase><phrase role="special">);</phrase>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">y_external_style_on</phrase><phrase role="special">(</phrase><phrase role="keyword">true</phrase><phrase role="special">);</phrase>
</programlisting>
        <para>
          The axis is still otherwise styled using the normal methods. The following
          is an example of the style that you can produce with this:
        </para>
        <para>
          <inlinemediaobject><imageobject><imagedata fileref="images/1d_x_external.png"></imagedata></imageobject>
          <textobject>
            <phrase>1d_x_external</phrase>
          </textobject>
          </inlinemediaobject>
        </para>
        <important>
          <para>
            <para>
              If the axis is turned off, <code><phrase role="identifier">x_external_style_on</phrase><phrase
              role="special">(</phrase><phrase role="keyword">true</phrase><phrase
              role="special">)</phrase></code> will not turn the axis back on. To
              do that, you must call <code><phrase role="identifier">axis_on</phrase><phrase
              role="special">(</phrase><phrase role="keyword">true</phrase><phrase
              role="special">)</phrase></code>
            </para>
          </para>
        </important>
      </section>
    </section>
    <section id="svg_plot.svg_simple_code_example.tutorial_2d_code_simple">
      <title><link linkend="svg_plot.svg_simple_code_example.tutorial_2d_code_simple">
      Tutorial: 2D</link></title>
      <section id="svg_plot.svg_simple_code_example.tutorial_2d_code_simple.2d_simple_code_example">
        <title><link linkend="svg_plot.svg_simple_code_example.tutorial_2d_code_simple.2d_simple_code_example">
        Simple Code Example</link></title> 
<programlisting>
<phrase role="preprocessor">#include</phrase> <phrase role="special">&lt;</phrase><phrase role="identifier">boost</phrase><phrase role="special">/</phrase><phrase role="identifier">svg_plot</phrase><phrase role="special">/</phrase><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">hpp</phrase><phrase role="special">&gt;</phrase>
<phrase role="keyword">using</phrase> <phrase role="keyword">namespace</phrase> <phrase role="identifier">boost</phrase><phrase role="special">::</phrase><phrase role="identifier">svg</phrase><phrase role="special">;</phrase>

<phrase role="preprocessor">#include</phrase> <phrase role="special">&lt;</phrase><phrase role="identifier">map</phrase><phrase role="special">&gt;</phrase>
<phrase role="keyword">using</phrase> <phrase role="identifier">std</phrase><phrase role="special">::</phrase><phrase role="identifier">multimap</phrase><phrase role="special">;</phrase> <phrase role="comment">// A more complicated STL container.
</phrase>
<phrase role="keyword">int</phrase> <phrase role="identifier">main</phrase><phrase role="special">()</phrase>
<phrase role="special">{</phrase>
  <phrase role="identifier">multimap</phrase><phrase role="special">&lt;</phrase><phrase role="keyword">double</phrase><phrase role="special">,</phrase> <phrase role="keyword">double</phrase><phrase role="special">&gt;</phrase> <phrase role="identifier">map1</phrase><phrase role="special">;</phrase>
  <phrase role="identifier">multimap</phrase><phrase role="special">&lt;</phrase><phrase role="keyword">double</phrase><phrase role="special">,</phrase> <phrase role="keyword">double</phrase><phrase role="special">&gt;</phrase> <phrase role="identifier">map2</phrase><phrase role="special">;</phrase>

  <phrase role="comment">// This is random data used purely for example purposes.  
</phrase>  <phrase role="identifier">map1</phrase><phrase role="special">[</phrase><phrase role="number">1.</phrase><phrase role="special">]</phrase> <phrase role="special">=</phrase> <phrase role="number">3.2</phrase><phrase role="special">;</phrase>
  <phrase role="identifier">map1</phrase><phrase role="special">[</phrase><phrase role="number">1.</phrase><phrase role="special">]</phrase> <phrase role="special">=</phrase> <phrase role="number">5.4</phrase><phrase role="special">;</phrase>
  <phrase role="identifier">map1</phrase><phrase role="special">[</phrase><phrase role="number">7.3</phrase><phrase role="special">]</phrase> <phrase role="special">=</phrase> <phrase role="number">9.1</phrase><phrase role="special">;</phrase>

  <phrase role="identifier">map2</phrase><phrase role="special">[</phrase><phrase role="number">3.1</phrase><phrase role="special">]</phrase> <phrase role="special">=</phrase> <phrase role="number">6.1</phrase><phrase role="special">;</phrase>
  <phrase role="identifier">map2</phrase><phrase role="special">[</phrase><phrase role="number">5.4</phrase><phrase role="special">]</phrase> <phrase role="special">=</phrase> <phrase role="number">7.</phrase><phrase role="special">;</phrase>

  <phrase role="identifier">svg_1d_plot</phrase> <phrase role="identifier">my_plot</phrase><phrase role="special">;</phrase>

  <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">title</phrase><phrase role="special">(</phrase><phrase role="string">&quot;Race Times&quot;</phrase><phrase role="special">)</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">legend_on</phrase><phrase role="special">(</phrase><phrase role="keyword">true</phrase><phrase role="special">)</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">x_range</phrase><phrase role="special">(-</phrase><phrase role="number">1</phrase><phrase role="special">,</phrase> <phrase role="number">11</phrase><phrase role="special">)</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">background_border_color</phrase><phrase role="special">(</phrase><phrase role="identifier">black</phrase><phrase role="special">);</phrase>

  <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">plot</phrase><phrase role="special">(</phrase><phrase role="identifier">map1</phrase><phrase role="special">,</phrase> <phrase role="string">&quot;Series 1&quot;</phrase><phrase role="special">,</phrase> <phrase role="identifier">blue</phrase><phrase role="special">);</phrase> <phrase role="comment">// Data point marker color is blue.
</phrase>  <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">plot</phrase><phrase role="special">(</phrase><phrase role="identifier">map2</phrase><phrase role="special">,</phrase> <phrase role="string">&quot;Series 2&quot;</phrase><phrase role="special">,</phrase> <phrase role="identifier">orange</phrase><phrase role="special">);</phrase>

  <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">write</phrase><phrase role="special">(</phrase><phrase role="string">&quot;simple_2d.svg&quot;</phrase><phrase role="special">);</phrase>
  <phrase role="keyword">return</phrase> <phrase role="number">0</phrase><phrase role="special">;</phrase>
<phrase role="special">}</phrase>
</programlisting>
        <anchor id="svg_plot.svg_simple_code_example.tutorial_2d_code_simple.2d_simple_code_example.resulting_simple_2d_example_image"/>
        <bridgehead renderas="sect4">
          <link linkend="svg_plot.svg_simple_code_example.tutorial_2d_code_simple.2d_simple_code_example.resulting_simple_2d_example_image">Resulting
          Simple_2D Example Image</link>
        </bridgehead>
        <para>
          <inlinemediaobject><imageobject><imagedata fileref="images/2d_simple.png"></imagedata></imageobject>
          <textobject>
            <phrase>2d_simple</phrase>
          </textobject>
          </inlinemediaobject>
        </para>
        <anchor id="svg_plot.svg_simple_code_example.tutorial_2d_code_simple.2d_simple_code_example.simple_2d_example_breakdown"/>
        <bridgehead renderas="sect4">
          <link linkend="svg_plot.svg_simple_code_example.tutorial_2d_code_simple.2d_simple_code_example.simple_2d_example_breakdown">Simple_2D
          Example Breakdown</link>
        </bridgehead>
        <para>
          Let's examine what this does.
        </para>
        
<programlisting>
<phrase role="identifier">svg_2d_plot</phrase> <phrase role="identifier">my_plot</phrase><phrase role="special">;</phrase>
</programlisting>
        <para>
          This constructor initializes a new 2D plot. This also sets the many default
          values.
        </para>
        
<programlisting>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">title</phrase><phrase role="special">(</phrase><phrase role="string">&quot;Race Times&quot;</phrase><phrase role="special">)</phrase>
       <phrase role="special">.</phrase><phrase role="identifier">legend_on</phrase><phrase role="special">(</phrase><phrase role="keyword">true</phrase><phrase role="special">)</phrase>
       <phrase role="special">.</phrase><phrase role="identifier">x_range</phrase><phrase role="special">(-</phrase><phrase role="number">1</phrase><phrase role="special">,</phrase> <phrase role="number">11</phrase><phrase role="special">)</phrase>
       <phrase role="special">.</phrase><phrase role="identifier">background_border_color</phrase><phrase role="special">(</phrase><phrase role="identifier">black</phrase><phrase role="special">);</phrase>
</programlisting>
        <para>
          All of the setter methods are fairly self-explanatory. To walk through
          it once,
        </para>
        <itemizedlist>
          <listitem>
            The title, which will appear at the top of the graph, will say &quot;Race
            Times&quot;.
          </listitem>
          <listitem>
            <code><phrase role="identifier">legend_on</phrase><phrase role="special">(</phrase><phrase
            role="keyword">true</phrase><phrase role="special">)</phrase></code>
            means that the legend will show up.
          </listitem>
          <listitem>
            <code><phrase role="identifier">x_range</phrase><phrase role="special">(-</phrase><phrase
            role="number">1</phrase><phrase role="special">,</phrase> <phrase role="number">11</phrase><phrase
            role="special">)</phrase></code> means that the axis displayed will be
            between -1 and 11, as you can see in the above images.
          </listitem>
          <listitem>
            <code><phrase role="identifier">background_border_color</phrase><phrase
            role="special">(</phrase><phrase role="identifier">black</phrase><phrase
            role="special">)</phrase></code> sets the border around the image to
            <code><phrase role="identifier">black</phrase></code>. Ordinarily it
            is left to be the color of the background (and so no border of plot area
            will be visible).
          </listitem>
        </itemizedlist>
        
<programlisting>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">plot</phrase><phrase role="special">(</phrase><phrase role="identifier">map1</phrase><phrase role="special">,</phrase> <phrase role="string">&quot;Series 1&quot;</phrase><phrase role="special">,</phrase> <phrase role="identifier">blue</phrase><phrase role="special">);</phrase>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">plot</phrase><phrase role="special">(</phrase><phrase role="identifier">map2</phrase><phrase role="special">,</phrase> <phrase role="string">&quot;Series 2&quot;</phrase><phrase role="special">,</phrase> <phrase role="identifier">orange</phrase><phrase role="special">);</phrase>
</programlisting>
        <para>
          This draws <code><phrase role="identifier">map1</phrase></code> and <code><phrase
          role="identifier">map2</phrase></code> to <code><phrase role="identifier">my_plot</phrase></code>.
          As many containers as you want can be drawn to <code><phrase role="identifier">my_plot</phrase></code>.
          Evntually the plot will become cluttered and confusing, when I recommend
          just creating another plot!
        </para>
        <para>
          The name of the series is <code><phrase role="string">&quot;Race times&quot;</phrase></code>,
          and that text will show in the legend. These are the two required parameters
          for this function call. There are many optional parameters, as seen in
          the section <ulink url="plot_function">Getting More Out of the <code><phrase
          role="identifier">plot</phrase><phrase role="special">()</phrase></code>
          Function</ulink>
        </para>
        
<programlisting>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">write</phrase><phrase role="special">(</phrase><phrase role="string">&quot;simple_2d.svg&quot;</phrase><phrase role="special">);</phrase>
</programlisting>
        <para>
          This writes plot <code><phrase role="identifier">my_plot</phrase></code>
          to the file &quot;simple_2d.svg&quot;.
        </para>
      </section>
      <section id="svg_plot.svg_simple_code_example.tutorial_2d_code_simple.full_2d_layout">
        <title><link linkend="svg_plot.svg_simple_code_example.tutorial_2d_code_simple.full_2d_layout">
        Tutorial: Fuller Layout Example</link></title> 
<programlisting>
<phrase role="preprocessor">#include</phrase> <phrase role="special">&lt;</phrase><phrase role="identifier">boost</phrase><phrase role="special">/</phrase><phrase role="identifier">svg_plot</phrase><phrase role="special">/</phrase><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">hpp</phrase><phrase role="special">&gt;</phrase>
<phrase role="keyword">using</phrase> <phrase role="keyword">namespace</phrase> <phrase role="identifier">boost</phrase><phrase role="special">::</phrase><phrase role="identifier">svg</phrase><phrase role="special">;</phrase>
<phrase role="preprocessor">#include</phrase> <phrase role="special">&lt;</phrase><phrase role="identifier">map</phrase><phrase role="special">&gt;</phrase>
<phrase role="keyword">using</phrase> <phrase role="identifier">std</phrase><phrase role="special">::</phrase><phrase role="identifier">multimap</phrase><phrase role="special">;</phrase>
<phrase role="preprocessor">#include</phrase> <phrase role="special">&lt;</phrase><phrase role="identifier">cmath</phrase><phrase role="special">&gt;</phrase> <phrase role="comment">// for sqrt
</phrase>
<phrase role="comment">// Some example functions:
</phrase><phrase role="keyword">double</phrase> <phrase role="identifier">f</phrase><phrase role="special">(</phrase><phrase role="keyword">double</phrase> <phrase role="identifier">x</phrase><phrase role="special">)</phrase>
<phrase role="special">{</phrase>
  <phrase role="keyword">return</phrase> <phrase role="identifier">sqrt</phrase><phrase role="special">(</phrase><phrase role="identifier">x</phrase><phrase role="special">);</phrase>
<phrase role="special">}</phrase>

<phrase role="keyword">double</phrase> <phrase role="identifier">g</phrase><phrase role="special">(</phrase><phrase role="keyword">double</phrase> <phrase role="identifier">x</phrase><phrase role="special">)</phrase>
<phrase role="special">{</phrase>
  <phrase role="keyword">return</phrase> <phrase role="special">-</phrase><phrase role="number">2</phrase> <phrase role="special">+</phrase> <phrase role="identifier">x</phrase><phrase role="special">*</phrase><phrase role="identifier">x</phrase><phrase role="special">;</phrase>
<phrase role="special">}</phrase>

<phrase role="keyword">double</phrase> <phrase role="identifier">h</phrase><phrase role="special">(</phrase><phrase role="keyword">double</phrase> <phrase role="identifier">x</phrase><phrase role="special">)</phrase>
<phrase role="special">{</phrase>
  <phrase role="keyword">return</phrase> <phrase role="special">-</phrase><phrase role="number">1</phrase> <phrase role="special">+</phrase> <phrase role="number">2</phrase><phrase role="special">*</phrase><phrase role="identifier">x</phrase><phrase role="special">;</phrase>
<phrase role="special">}</phrase>

<phrase role="keyword">int</phrase> <phrase role="identifier">main</phrase><phrase role="special">()</phrase>
<phrase role="special">{</phrase>
  <phrase role="identifier">multimap</phrase><phrase role="special">&lt;</phrase><phrase role="keyword">double</phrase><phrase role="special">,</phrase> <phrase role="keyword">double</phrase><phrase role="special">&gt;</phrase> <phrase role="identifier">data1</phrase><phrase role="special">,</phrase> <phrase role="identifier">data2</phrase><phrase role="special">,</phrase> <phrase role="identifier">data3</phrase><phrase role="special">;</phrase>
  
  <phrase role="keyword">for</phrase><phrase role="special">(</phrase><phrase role="keyword">double</phrase> <phrase role="identifier">i</phrase><phrase role="special">=</phrase><phrase role="number">0</phrase><phrase role="special">;</phrase> <phrase role="identifier">i</phrase><phrase role="special">&lt;=</phrase><phrase role="number">10.</phrase><phrase role="special">;</phrase> <phrase role="identifier">i</phrase><phrase role="special">+=</phrase><phrase role="number">1.</phrase><phrase role="special">)</phrase>
  <phrase role="special">{</phrase>
    <phrase role="identifier">data1</phrase><phrase role="special">[</phrase><phrase role="identifier">i</phrase><phrase role="special">]</phrase> <phrase role="special">=</phrase> <phrase role="identifier">f</phrase><phrase role="special">(</phrase><phrase role="identifier">i</phrase><phrase role="special">);</phrase>
    <phrase role="identifier">data2</phrase><phrase role="special">[</phrase><phrase role="identifier">i</phrase><phrase role="special">]</phrase> <phrase role="special">=</phrase> <phrase role="identifier">g</phrase><phrase role="special">(</phrase><phrase role="identifier">i</phrase><phrase role="special">);</phrase>
    <phrase role="identifier">data3</phrase><phrase role="special">[</phrase><phrase role="identifier">i</phrase><phrase role="special">]</phrase> <phrase role="special">=</phrase> <phrase role="identifier">h</phrase><phrase role="special">(</phrase><phrase role="identifier">i</phrase><phrase role="special">);</phrase> 
  <phrase role="special">}</phrase>

  <phrase role="identifier">svg_2d_plot</phrase> <phrase role="identifier">my_plot</phrase><phrase role="special">;</phrase>

  <phrase role="comment">// Size/scale settings.
</phrase>  <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">image_size</phrase><phrase role="special">(</phrase><phrase role="number">700</phrase><phrase role="special">,</phrase> <phrase role="number">500</phrase><phrase role="special">)</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">x_range</phrase><phrase role="special">(-</phrase><phrase role="number">1</phrase><phrase role="special">,</phrase> <phrase role="number">10</phrase><phrase role="special">)</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">y_range</phrase><phrase role="special">(-</phrase><phrase role="number">5</phrase><phrase role="special">,</phrase> <phrase role="number">100</phrase><phrase role="special">)</phrase>

  <phrase role="comment">// Text settings.
</phrase>  <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">title</phrase><phrase role="special">(</phrase><phrase role="string">&quot;Plot of Mathematical Functions&quot;</phrase><phrase role="special">)</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">title_font_size</phrase><phrase role="special">(</phrase><phrase role="number">29</phrase><phrase role="special">)</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">x_label</phrase><phrase role="special">(</phrase><phrase role="string">&quot;Time in Months&quot;</phrase><phrase role="special">);</phrase>
  
  <phrase role="comment">// Commands.
</phrase>  <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">legend_on</phrase><phrase role="special">(</phrase><phrase role="keyword">true</phrase><phrase role="special">)</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">plot_window_on</phrase><phrase role="special">(</phrase><phrase role="keyword">true</phrase><phrase role="special">)</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">x_label_on</phrase><phrase role="special">(</phrase><phrase role="keyword">true</phrase><phrase role="special">)</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">x_major_labels_on</phrase><phrase role="special">(</phrase><phrase role="keyword">true</phrase><phrase role="special">);</phrase>
  
  <phrase role="comment">// Color settings.
</phrase>  <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">background_color</phrase><phrase role="special">(</phrase><phrase role="identifier">svg_color</phrase><phrase role="special">(</phrase><phrase role="number">67</phrase><phrase role="special">,</phrase> <phrase role="number">111</phrase><phrase role="special">,</phrase> <phrase role="number">69</phrase><phrase role="special">))</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">legend_background_color</phrase><phrase role="special">(</phrase><phrase role="identifier">svg_color</phrase><phrase role="special">(</phrase><phrase role="number">207</phrase><phrase role="special">,</phrase> <phrase role="number">202</phrase><phrase role="special">,</phrase><phrase role="number">167</phrase><phrase role="special">))</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">legend_border_color</phrase><phrase role="special">(</phrase><phrase role="identifier">svg_color</phrase><phrase role="special">(</phrase><phrase role="number">102</phrase><phrase role="special">,</phrase> <phrase role="number">102</phrase><phrase role="special">,</phrase> <phrase role="number">84</phrase><phrase role="special">))</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">plot_background_color</phrase><phrase role="special">(</phrase><phrase role="identifier">svg_color</phrase><phrase role="special">(</phrase><phrase role="number">136</phrase><phrase role="special">,</phrase> <phrase role="number">188</phrase><phrase role="special">,</phrase> <phrase role="number">126</phrase><phrase role="special">))</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">title_color</phrase><phrase role="special">(</phrase><phrase role="identifier">white</phrase><phrase role="special">);</phrase>

  <phrase role="comment">//X axis settings.
</phrase>  <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">x_major_interval</phrase><phrase role="special">(</phrase><phrase role="number">2</phrase><phrase role="special">)</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">x_major_tick_length</phrase><phrase role="special">(</phrase><phrase role="number">14</phrase><phrase role="special">)</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">x_major_tick_width</phrase><phrase role="special">(</phrase><phrase role="number">1</phrase><phrase role="special">)</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">x_minor_tick_length</phrase><phrase role="special">(</phrase><phrase role="number">7</phrase><phrase role="special">)</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">x_minor_tick_width</phrase><phrase role="special">(</phrase><phrase role="number">1</phrase><phrase role="special">)</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">x_num_minor_ticks</phrase><phrase role="special">(</phrase><phrase role="number">3</phrase><phrase role="special">)</phrase>
  
  <phrase role="comment">// Y axis settings.
</phrase>         <phrase role="special">.</phrase><phrase role="identifier">y_major_tick</phrase><phrase role="special">(</phrase><phrase role="number">10</phrase><phrase role="special">)</phrase>
         <phrase role="special">.</phrase><phrase role="identifier">y_num_minor_ticks</phrase><phrase role="special">(</phrase><phrase role="number">2</phrase><phrase role="special">);</phrase>   

  <phrase role="comment">// Legend settings.
</phrase>  <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">legend_title_font_size</phrase><phrase role="special">(</phrase><phrase role="number">15</phrase><phrase role="special">);</phrase>
  
  <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">plot</phrase><phrase role="special">(</phrase><phrase role="identifier">data1</phrase><phrase role="special">,</phrase> <phrase role="string">&quot;Sqrt(x)&quot;</phrase><phrase role="special">,</phrase>  <phrase role="identifier">blue</phrase><phrase role="special">,</phrase>   
         <phrase role="identifier">_point_style</phrase> <phrase role="special">=</phrase> <phrase role="identifier">none</phrase><phrase role="special">,</phrase>
         <phrase role="identifier">_show_line</phrase> <phrase role="special">=</phrase> <phrase role="keyword">true</phrase><phrase role="special">);</phrase>

  <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">plot</phrase><phrase role="special">(</phrase><phrase role="identifier">data2</phrase><phrase role="special">,</phrase> <phrase role="string">&quot;-2 + x^2&quot;</phrase><phrase role="special">,</phrase> <phrase role="identifier">orange</phrase><phrase role="special">,</phrase> 
         <phrase role="identifier">_show_line</phrase> <phrase role="special">=</phrase> <phrase role="keyword">true</phrase><phrase role="special">);</phrase>

  <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">plot</phrase><phrase role="special">(</phrase><phrase role="identifier">data3</phrase><phrase role="special">,</phrase> <phrase role="string">&quot;-1 + 2x&quot;</phrase><phrase role="special">,</phrase>  <phrase role="identifier">red</phrase><phrase role="special">,</phrase>
         <phrase role="identifier">_point_style</phrase> <phrase role="special">=</phrase> <phrase role="identifier">square</phrase><phrase role="special">);</phrase>

  <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">write</phrase><phrase role="special">(</phrase><phrase role="string">&quot;2d_full.svg&quot;</phrase><phrase role="special">);</phrase>

  <phrase role="keyword">return</phrase> <phrase role="number">0</phrase><phrase role="special">;</phrase>
<phrase role="special">}</phrase>
</programlisting>
        <para>
          This produces the following output:
        </para>
        <para>
          <inlinemediaobject><imageobject><imagedata fileref="images/2d_full.png"></imagedata></imageobject>
          <textobject>
            <phrase>2d_full</phrase>
          </textobject>
          </inlinemediaobject>
        </para>
        <para>
          A little bit of color customization goes a <emphasis role="bold">very</emphasis>
          long way!
        </para>
      </section>
      <section id="svg_plot.svg_simple_code_example.tutorial_2d_code_simple.2d_special">
        <title><link linkend="svg_plot.svg_simple_code_example.tutorial_2d_code_simple.2d_special">
        Tutorial: 2D Special Features</link></title> <anchor id="svg_plot.svg_simple_code_example.tutorial_2d_code_simple.2d_special.y_axis_grid_lines"/>
        <bridgehead renderas="sect4">
          <link linkend="svg_plot.svg_simple_code_example.tutorial_2d_code_simple.2d_special.y_axis_grid_lines">Y-Axis
          Grid Lines</link>
        </bridgehead>
        <para>
          If you would like horizontal grid lines that go across the graph, you can
          make the following call to <code><phrase role="identifier">svg_2d_plot</phrase></code>:
        </para>
        
<programlisting>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">y_major_grid_on</phrase><phrase role="special">(</phrase><phrase role="keyword">true</phrase><phrase role="special">)</phrase>
       <phrase role="special">.</phrase><phrase role="identifier">y_minor_grid_on</phrase><phrase role="special">(</phrase><phrase role="keyword">true</phrase><phrase role="special">);</phrase>
</programlisting>
        <para>
          To style it, you could use the following calls:
        </para>
        
<programlisting>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">y_major_grid_color</phrase><phrase role="special">(</phrase><phrase role="identifier">lightgray</phrase><phrase role="special">)</phrase> <phrase role="comment">// Darker color for major grid.
</phrase>       <phrase role="special">.</phrase><phrase role="identifier">y_minor_grid_color</phrase><phrase role="special">(</phrase><phrase role="identifier">whitesmoke</phrase><phrase role="special">);</phrase> <phrase role="comment">// lighter color for minor grid.
</phrase></programlisting>
        <para>
          This will produce the following image:
        </para>
        <para>
          <inlinemediaobject><imageobject><imagedata fileref="images/2d_y_grid.png"></imagedata></imageobject>
          <textobject>
            <phrase>2d_y_grid</phrase>
          </textobject>
          </inlinemediaobject>
        </para>
        <para>
          Similarly you can have horizontal and/or vertical lines:
        </para>
        
<programlisting>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">x_major_grid_on</phrase><phrase role="special">(</phrase><phrase role="keyword">true</phrase><phrase role="special">)</phrase>  
       <phrase role="special">.</phrase><phrase role="identifier">x_minor_grid_on</phrase><phrase role="special">(</phrase><phrase role="keyword">true</phrase><phrase role="special">);</phrase>
</programlisting>
        <para>
          and color it similarly:
        </para>
        
<programlisting>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">y_major_grid_color</phrase><phrase role="special">(</phrase><phrase role="identifier">lightblue</phrase><phrase role="special">)</phrase> <phrase role="comment">// Darker color for major grid.
</phrase>       <phrase role="special">.</phrase><phrase role="identifier">y_minor_grid_color</phrase><phrase role="special">(</phrase><phrase role="identifier">azure</phrase><phrase role="special">);</phrase> <phrase role="comment">// lighter color for minor grid.
</phrase></programlisting>
        <anchor id="svg_plot.svg_simple_code_example.tutorial_2d_code_simple.2d_special.external_y_axis_style"/>
        <bridgehead renderas="sect5">
          <link linkend="svg_plot.svg_simple_code_example.tutorial_2d_code_simple.2d_special.external_y_axis_style">External
          Y Axis Style</link>
        </bridgehead>
        <para>
          For an alternate way to display a regular axis, you can use an external
          style:
        </para>
        
<programlisting>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">y_external_style_on</phrase><phrase role="special">(</phrase><phrase role="keyword">true</phrase><phrase role="special">);</phrase>
</programlisting>
        <important>
          <para>
            <para>
              If the axis is turned off, <code><phrase role="identifier">y_external_style_on</phrase><phrase
              role="special">(</phrase><phrase role="keyword">true</phrase><phrase
              role="special">)</phrase></code> will not turn the axis back on. To
              do that, you must call <code><phrase role="identifier">axis_on</phrase><phrase
              role="special">(</phrase><phrase role="keyword">true</phrase><phrase
              role="special">)</phrase></code>
            </para>
          </para>
        </important>
        <anchor id="svg_plot.svg_simple_code_example.tutorial_2d_code_simple.2d_special.fill_the_area_between_the_plot_and_the_axis"/>
        <bridgehead renderas="sect5">
          <link linkend="svg_plot.svg_simple_code_example.tutorial_2d_code_simple.2d_special.fill_the_area_between_the_plot_and_the_axis">Fill
          the area between the plot and the axis</link>
        </bridgehead>
        <para>
          When there is a call to the plot() method, define <code><phrase role="identifier">_area_fill_color</phrase></code>
        </para>
        
<programlisting>
<phrase role="identifier">multimap</phrase><phrase role="special">&lt;</phrase><phrase role="keyword">double</phrase><phrase role="special">,</phrase> <phrase role="keyword">double</phrase><phrase role="special">&gt;</phrase> <phrase role="identifier">my_data</phrase><phrase role="special">;</phrase>
<phrase role="identifier">svg_2d_plot</phrase> <phrase role="identifier">my_plot</phrase><phrase role="special">;</phrase>

<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">plot</phrase><phrase role="special">(</phrase><phrase role="identifier">my_data</phrase><phrase role="special">,</phrase> <phrase role="string">&quot;Data&quot;</phrase><phrase role="special">,</phrase> <phrase role="identifier">_area_fill_color</phrase><phrase role="special">(</phrase><phrase role="identifier">red</phrase><phrase role="special">));</phrase>
</programlisting>
        <para>
          This produces the following image:
        </para>
        <para>
          <inlinemediaobject><imageobject><imagedata fileref="images/2d_area_fill.png"></imagedata></imageobject>
          <textobject>
            <phrase>2d_area_fill</phrase>
          </textobject>
          </inlinemediaobject>
        </para>
        <anchor id="svg_plot.svg_simple_code_example.tutorial_2d_code_simple.2d_special.curve_interpolation"/>
        <bridgehead renderas="sect4">
          <link linkend="svg_plot.svg_simple_code_example.tutorial_2d_code_simple.2d_special.curve_interpolation">Curve
          Interpolation</link>
        </bridgehead>
        <para>
          If you would like an <emphasis role="bold">interpolated curve</emphasis>
          shown over your data (rather than the default straight lines joining points),
          simply use the following command:
        </para>
        
<programlisting>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">plot</phrase><phrase role="special">(</phrase><phrase role="identifier">data</phrase><phrase role="special">,</phrase> <phrase role="string">&quot;Series 1&quot;</phrase><phrase role="special">,</phrase> <phrase role="identifier">_bezier_curve</phrase> <phrase role="special">=</phrase> <phrase role="string">&quot;true&quot;</phrase><phrase role="special">);</phrase>
</programlisting>
        <para>
          This produces something like the following images:
        </para>
        <para>
          <inlinemediaobject><imageobject><imagedata fileref="images/2d_bezier.png"></imagedata></imageobject>
          <textobject>
            <phrase>2d_bezier</phrase>
          </textobject>
          </inlinemediaobject>
        </para>
        <warning>
          <para>
            <para>
              The <code><phrase role="identifier">_bezier_curve</phrase></code> feature
              still displays undesired behavior in extreme circumstances. Do not
              use this feature with curves that have a numeric_limit value (<code><phrase
              role="special">-</phrase><phrase role="identifier">NaN</phrase></code>,
              for example), or with data that has high irregularity in X-Axis spacing
              (for example, a clump of points between (0, 1) on the X axis, with
              the next one at 100 on the X axis.)
            </para>
          </para>
        </warning>
      </section>
    </section>
    <section id="svg_plot.svg_simple_code_example.svg_boxplot_tutorial">
      <title><link linkend="svg_plot.svg_simple_code_example.svg_boxplot_tutorial">
      Tutorial: Boxplot</link></title>
      <section id="svg_plot.svg_simple_code_example.svg_boxplot_tutorial.svg_boxplot_tutorial_simple">
        <title><link linkend="svg_plot.svg_simple_code_example.svg_boxplot_tutorial.svg_boxplot_tutorial_simple">
        Simple Example</link></title> 
<programlisting>
<phrase role="preprocessor">#include</phrase> <phrase role="special">&lt;</phrase><phrase role="identifier">boost</phrase><phrase role="special">/</phrase><phrase role="identifier">svg_plot</phrase><phrase role="special">/</phrase><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">hpp</phrase><phrase role="special">&gt;</phrase>
<phrase role="keyword">using</phrase> <phrase role="keyword">namespace</phrase> <phrase role="identifier">boost</phrase><phrase role="special">::</phrase><phrase role="identifier">svg</phrase><phrase role="special">;</phrase>
<phrase role="preprocessor">#include</phrase> <phrase role="special">&lt;</phrase><phrase role="identifier">vector</phrase><phrase role="special">&gt;</phrase>
<phrase role="keyword">using</phrase> <phrase role="identifier">std</phrase><phrase role="special">::</phrase><phrase role="identifier">vector</phrase><phrase role="special">;</phrase>

<phrase role="comment">// Functions to simulate distributions.
</phrase><phrase role="keyword">double</phrase> <phrase role="identifier">f</phrase><phrase role="special">(</phrase><phrase role="keyword">double</phrase> <phrase role="identifier">x</phrase><phrase role="special">)</phrase>
<phrase role="special">{</phrase>
    <phrase role="keyword">return</phrase> <phrase role="number">50</phrase> <phrase role="special">/</phrase> <phrase role="identifier">x</phrase><phrase role="special">;</phrase>
<phrase role="special">}</phrase>

<phrase role="keyword">double</phrase> <phrase role="identifier">g</phrase><phrase role="special">(</phrase><phrase role="keyword">double</phrase> <phrase role="identifier">x</phrase><phrase role="special">)</phrase>
<phrase role="special">{</phrase>
    <phrase role="keyword">return</phrase> <phrase role="number">40</phrase> <phrase role="special">+</phrase> <phrase role="number">25</phrase> <phrase role="special">*</phrase> <phrase role="identifier">sin</phrase><phrase role="special">(</phrase><phrase role="identifier">x</phrase> <phrase role="special">*</phrase> <phrase role="number">50</phrase><phrase role="special">);</phrase>
<phrase role="special">}</phrase>

<phrase role="keyword">int</phrase> <phrase role="identifier">main</phrase><phrase role="special">()</phrase>
<phrase role="special">{</phrase>
    <phrase role="identifier">std</phrase><phrase role="special">::</phrase><phrase role="identifier">vector</phrase><phrase role="special">&lt;</phrase><phrase role="keyword">double</phrase><phrase role="special">&gt;</phrase> <phrase role="identifier">data1</phrase><phrase role="special">,</phrase> <phrase role="identifier">data2</phrase><phrase role="special">;</phrase>

    <phrase role="comment">// Fill our vectors with values from the functions f(x) and g(x)
</phrase>    <phrase role="keyword">for</phrase><phrase role="special">(</phrase><phrase role="keyword">double</phrase> <phrase role="identifier">i</phrase> <phrase role="special">=</phrase> <phrase role="special">.</phrase><phrase role="number">1</phrase><phrase role="special">;</phrase> <phrase role="identifier">i</phrase> <phrase role="special">&lt;</phrase> <phrase role="number">10</phrase><phrase role="special">;</phrase> <phrase role="identifier">i</phrase><phrase role="special">+=.</phrase><phrase role="number">1</phrase><phrase role="special">)</phrase>
    <phrase role="special">{</phrase>
        <phrase role="identifier">data1</phrase><phrase role="special">.</phrase><phrase role="identifier">push_back</phrase><phrase role="special">(</phrase><phrase role="identifier">f</phrase><phrase role="special">(</phrase><phrase role="identifier">i</phrase><phrase role="special">));</phrase>
        <phrase role="identifier">data2</phrase><phrase role="special">.</phrase><phrase role="identifier">push_back</phrase><phrase role="special">(</phrase><phrase role="identifier">g</phrase><phrase role="special">(</phrase><phrase role="identifier">i</phrase><phrase role="special">));</phrase>
    <phrase role="special">}</phrase>

    <phrase role="comment">// Initialize a new box plot.
</phrase>    <phrase role="identifier">svg_boxplot</phrase> <phrase role="identifier">my_plot</phrase><phrase role="special">;</phrase>

    <phrase role="comment">// Color information.
</phrase>    <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">background_border_color</phrase><phrase role="special">(</phrase><phrase role="identifier">black</phrase><phrase role="special">);</phrase>

    <phrase role="comment">// String information.
</phrase>    <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">title</phrase><phrase role="special">(</phrase><phrase role="string">&quot;Boxplots of Common Functions&quot;</phrase><phrase role="special">)</phrase>
   <phrase role="special">.</phrase><phrase role="identifier">x_label</phrase><phrase role="special">(</phrase><phrase role="string">&quot;Functions&quot;</phrase><phrase role="special">)</phrase>
   <phrase role="special">.</phrase><phrase role="identifier">y_label</phrase><phrase role="special">(</phrase><phrase role="string">&quot;Population Size&quot;</phrase><phrase role="special">);</phrase>

    <phrase role="comment">// Axis information.
</phrase>    <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">y_range</phrase><phrase role="special">(</phrase><phrase role="number">0</phrase><phrase role="special">,</phrase> <phrase role="number">100</phrase><phrase role="special">)</phrase>
           <phrase role="special">.</phrase><phrase role="identifier">y_minor_tick_length</phrase><phrase role="special">(</phrase><phrase role="number">20</phrase><phrase role="special">)</phrase>
     <phrase role="special">.</phrase><phrase role="identifier">y_major_interval</phrase><phrase role="special">(</phrase><phrase role="number">20</phrase><phrase role="special">);</phrase>

    <phrase role="comment">// Write data.
</phrase>    <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">plot</phrase><phrase role="special">(</phrase><phrase role="identifier">data1</phrase><phrase role="special">,</phrase> <phrase role="string">&quot;[50 / x]&quot;</phrase><phrase role="special">);</phrase>
    <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">plot</phrase><phrase role="special">(</phrase><phrase role="identifier">data2</phrase><phrase role="special">,</phrase> <phrase role="string">&quot;[40 + 25 * sin(x * 50)]&quot;</phrase><phrase role="special">);</phrase>

    <phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">write</phrase><phrase role="special">(</phrase><phrase role="string">&quot;boxplot_simple.svg&quot;</phrase><phrase role="special">);</phrase>
    <phrase role="keyword">return</phrase> <phrase role="number">0</phrase><phrase role="special">;</phrase>
<phrase role="special">}</phrase>
</programlisting>
        <anchor id="svg_plot.svg_simple_code_example.svg_boxplot_tutorial.svg_boxplot_tutorial_simple.image_boxplot_simple_svg"/>
        <bridgehead renderas="sect4">
          <link linkend="svg_plot.svg_simple_code_example.svg_boxplot_tutorial.svg_boxplot_tutorial_simple.image_boxplot_simple_svg">Image
          boxplot_simple.svg</link>
        </bridgehead>
        <para>
          <inlinemediaobject><imageobject><imagedata fileref="images/boxplot_simple.png"></imagedata></imageobject>
          <textobject>
            <phrase>boxplot_simple</phrase>
          </textobject>
          </inlinemediaobject>
        </para>
        <anchor id="svg_plot.svg_simple_code_example.svg_boxplot_tutorial.svg_boxplot_tutorial_simple.basic_example_breakdown"/>
        <bridgehead renderas="sect4">
          <link linkend="svg_plot.svg_simple_code_example.svg_boxplot_tutorial.svg_boxplot_tutorial_simple.basic_example_breakdown">Basic
          Example Breakdown</link>
        </bridgehead>
        <para>
          Let's examine what this does.
        </para>
        <anchor id="svg_plot.svg_simple_code_example.svg_boxplot_tutorial.svg_boxplot_tutorial_simple.initializing_a_new_boxplot"/>
        <bridgehead renderas="sect4">
          <link linkend="svg_plot.svg_simple_code_example.svg_boxplot_tutorial.svg_boxplot_tutorial_simple.initializing_a_new_boxplot">Initializing
          a new boxplot</link>
        </bridgehead>
        <para>
          This initializes a new boxplot. This also sets the many default values.
          4 svg_boxplot my_plot;
        </para>
        <anchor id="svg_plot.svg_simple_code_example.svg_boxplot_tutorial.svg_boxplot_tutorial_simple.setting_a_color"/>
        <bridgehead renderas="sect4">
          <link linkend="svg_plot.svg_simple_code_example.svg_boxplot_tutorial.svg_boxplot_tutorial_simple.setting_a_color">Setting
          a color</link>
        </bridgehead>
        <para>
          This sets the border color of the entire image to black (not just the plot
          area).
        </para>
        
<programlisting>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">background_border_color</phrase><phrase role="special">(</phrase><phrase role="identifier">black</phrase><phrase role="special">);</phrase>
</programlisting>
        <anchor id="svg_plot.svg_simple_code_example.svg_boxplot_tutorial.svg_boxplot_tutorial_simple.setting_strings_in_the_plot"/>
        <bridgehead renderas="sect4">
          <link linkend="svg_plot.svg_simple_code_example.svg_boxplot_tutorial.svg_boxplot_tutorial_simple.setting_strings_in_the_plot">Setting
          strings in the plot</link>
        </bridgehead>
        <para>
          The following code sets the title that appears at the top of the graph,
          the label that appears at the bottom to name the X-axis, and the label
          that appears to the left to name the Y-axis.
        </para>
        
<programlisting>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">title</phrase><phrase role="special">(</phrase><phrase role="string">&quot;Boxplots of Common Functions&quot;</phrase><phrase role="special">)</phrase>
      <phrase role="special">.</phrase><phrase role="identifier">x_label</phrase><phrase role="special">(</phrase><phrase role="string">&quot;Functions&quot;</phrase><phrase role="special">)</phrase> 
      <phrase role="special">.</phrase><phrase role="identifier">y_label</phrase><phrase role="special">(</phrase><phrase role="string">&quot;Population Size&quot;</phrase><phrase role="special">);</phrase>
</programlisting>
        <anchor id="svg_plot.svg_simple_code_example.svg_boxplot_tutorial.svg_boxplot_tutorial_simple.setting_axis_information"/>
        <bridgehead renderas="sect3">
          <link linkend="svg_plot.svg_simple_code_example.svg_boxplot_tutorial.svg_boxplot_tutorial_simple.setting_axis_information">Setting
          axis information</link>
        </bridgehead>
        <para>
          Axis information for the X-axis is very limited, as the coordinate system
          for the X-axis is discrete, based only on the number of box-and-whisker
          plots that appear in the same boxplot.
        </para>
        <para>
          Axis information for the Y-axis, however, is customizable much in the same
          way that that axis information is customizable for the 1 and 2 dimensional
          graphs. // Axis information. my_plot.y_range(0, 100) .y_minor_tick_length(20)
          .y_major_interval(20);
        </para>
        <anchor id="svg_plot.svg_simple_code_example.svg_boxplot_tutorial.svg_boxplot_tutorial_simple.writing_to_a_file"/>
        <bridgehead renderas="sect4">
          <link linkend="svg_plot.svg_simple_code_example.svg_boxplot_tutorial.svg_boxplot_tutorial_simple.writing_to_a_file">Writing
          to a file</link>
        </bridgehead>
        <para>
          This finally writes our plot to the file &quot;boxplot_simple.svg&quot;.
          
<programlisting>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">write</phrase><phrase role="special">(</phrase><phrase role="string">&quot;boxplot_simple.svg&quot;</phrase><phrase role="special">);</phrase>
</programlisting>
        </para>
      </section>
      <section id="svg_plot.svg_simple_code_example.svg_boxplot_tutorial.svg_boxplot_tutorial_full">
        <title><link linkend="svg_plot.svg_simple_code_example.svg_boxplot_tutorial.svg_boxplot_tutorial_full">
        Full Boxplot Layout</link></title>
      </section>
    </section>
    <section id="svg_plot.svg_simple_code_example.tutorial_stylesheet">
      <title><link linkend="svg_plot.svg_simple_code_example.tutorial_stylesheet">
      Stylesheet Tutorial</link></title>
      <para>
        To include a stylesheet into a program with any plot, simply use the <code><phrase
        role="identifier">load_stylesheet</phrase><phrase role="special">(</phrase><phrase
        role="keyword">const</phrase> <phrase role="identifier">std</phrase><phrase
        role="special">::</phrase><phrase role="identifier">string</phrase><phrase
        role="special">&amp;</phrase> <phrase role="identifier">filename</phrase><phrase
        role="special">)</phrase></code> method to load an external stylesheet. To
        load the file ./style.css, for instance, we would call:
      </para>
      
<programlisting>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">load_stylesheet</phrase><phrase role="special">(</phrase><phrase role="string">&quot;./style.css&quot;</phrase><phrase role="special">);</phrase>
</programlisting>
      <para>
        There are a few instances when a <code><phrase role="identifier">std</phrase><phrase
        role="special">::</phrase><phrase role="identifier">runtime_error</phrase></code>
        exception may be thrown.
      </para>
      <itemizedlist>
        <listitem>
          If the filename is incorrect.
        </listitem>
        <listitem>
          If the file does not pass the parsing phase.
        </listitem>
      </itemizedlist>
      <anchor id="svg_plot.svg_simple_code_example.tutorial_stylesheet.using_the_stylesheet"/>
      <bridgehead renderas="sect4">
        <link linkend="svg_plot.svg_simple_code_example.tutorial_stylesheet.using_the_stylesheet">Using
        the stylesheet</link>
      </bridgehead>
      <para>
        Here is the output file for the simple 1D example, as used before:
      </para>
      <para>
        <inlinemediaobject><imageobject><imagedata fileref="images/1d_simple.png"></imagedata></imageobject>
        <textobject>
          <phrase>1d_simple</phrase>
        </textobject>
        </inlinemediaobject>
      </para>
      <para>
        Here it is with a simple stylesheet applied (from $PROJECT_ROOT/libs/svg_plot/example/style.css):
      </para>
      <caution>
        <para>
          <para>
            When the user will have the option to convert the graph to another image
            format, the stylesheets will be ignored. These would provide the user
            with an even more complex function object that they would need to implement.
            If you provide a stylesheet, make sure you know what will not be converted.
            (Currently, that is everything in the stylesheets.)
          </para>
        </para>
      </caution>
      <para>
        <inlinemediaobject><imageobject><imagedata fileref="images/1d_simple_style.png"></imagedata></imageobject>
        <textobject>
          <phrase>1d_simple_style</phrase>
        </textobject>
        </inlinemediaobject>
      </para>
    </section>
    <section id="svg_plot.svg_simple_code_example.behavior">
      <title><link linkend="svg_plot.svg_simple_code_example.behavior"> Behavior</link></title>
      <section id="svg_plot.svg_simple_code_example.behavior.behavior_limits">
        <title><link linkend="svg_plot.svg_simple_code_example.behavior.behavior_limits">
        Numerical Limits</link></title>
        <para>
          All limits that are dealt with are double precision floating-point limits.
          Limits are detected when data is added to the plot by the call to the
          <code><phrase role="identifier">plot</phrase><phrase role="special">()</phrase></code>
          method.
        </para>
        <para>
          Currently, the line interpolation algorithms do not take limits into account,
          so behavior may be incorrect for such plots as <code><phrase role="number">1</phrase>
          <phrase role="special">/</phrase> <phrase role="identifier">x</phrase></code>.
        </para>
        <para>
          Data at the limits are drawn as a circle with <code><phrase role="identifier">_stroke_color</phrase>
          <phrase role="special">=</phrase> <phrase role="identifier">lightgray</phrase></code>
          and <code><phrase role="identifier">_fill_color</phrase> <phrase role="special">=</phrase>
          <phrase role="identifier">whitesmoke</phrase></code>. This will become
          customizable.
        </para>
        <anchor id="svg_plot.svg_simple_code_example.behavior.behavior_limits.nan"/>
        <bridgehead renderas="sect4">
          <link linkend="svg_plot.svg_simple_code_example.behavior.behavior_limits.nan">NaN</link>
        </bridgehead>
        <para>
          Any double precision floating-point numbers that return a nonzero value
          for the function <code><phrase role="identifier">_isnan</phrase><phrase
          role="special">(</phrase><phrase role="keyword">double</phrase><phrase
          role="special">)</phrase></code> is considered to be a NaN value. When
          plotted, the number will appear in the user-defined coordinates as 0.
        </para>
        <anchor id="svg_plot.svg_simple_code_example.behavior.behavior_limits.infinity"/>
        <bridgehead renderas="sect4">
          <link linkend="svg_plot.svg_simple_code_example.behavior.behavior_limits.infinity">Infinity</link>
        </bridgehead>
        <para>
          Any double precision floating point number that is equal to either of the
          following is considered to be Infinity:
        </para>
        
<programlisting>
<phrase role="identifier">std</phrase><phrase role="special">::</phrase><phrase role="identifier">numeric_limits</phrase><phrase role="special">&lt;</phrase><phrase role="keyword">double</phrase><phrase role="special">&gt;::</phrase><phrase role="identifier">max</phrase><phrase role="special">()</phrase>
<phrase role="identifier">std</phrase><phrase role="special">::</phrase><phrase role="identifier">numeric_limits</phrase><phrase role="special">&lt;</phrase><phrase role="keyword">double</phrase><phrase role="special">&gt;::</phrase><phrase role="identifier">infinity</phrase><phrase role="special">()</phrase>
</programlisting>
        <para>
          When plotted, these values will appear at the <emphasis role="bold">top</emphasis>
          of your plot window. If the plot window is not turned on, these points
          will appear at the top of the graph.
        </para>
        <anchor id="svg_plot.svg_simple_code_example.behavior.behavior_limits.negative_infinity"/>
        <bridgehead renderas="sect4">
          <link linkend="svg_plot.svg_simple_code_example.behavior.behavior_limits.negative_infinity">Negative
          Infinity</link>
        </bridgehead>
        <para>
          Any double precision floating point number that is equal to either of the
          following is considered to be Negative Infinity:
        </para>
        
<programlisting>
<phrase role="identifier">std</phrase><phrase role="special">::</phrase><phrase role="identifier">numeric_limits</phrase><phrase role="special">&lt;</phrase><phrase role="keyword">double</phrase><phrase role="special">&gt;::</phrase><phrase role="identifier">min</phrase><phrase role="special">()</phrase>
<phrase role="special">-</phrase><phrase role="identifier">std</phrase><phrase role="special">::</phrase><phrase role="identifier">numeric_limits</phrase><phrase role="special">&lt;</phrase><phrase role="keyword">double</phrase><phrase role="special">&gt;::</phrase><phrase role="identifier">infinity</phrase><phrase role="special">()</phrase>
<phrase role="identifier">std</phrase><phrase role="special">::</phrase><phrase role="identifier">numeric_limits</phrase><phrase role="special">&lt;</phrase><phrase role="keyword">double</phrase><phrase role="special">&gt;::</phrase><phrase role="identifier">denorm_min</phrase><phrase role="special">()</phrase>
</programlisting>
        <para>
          When plotted, these values will appear at the <emphasis role="bold">bottom</emphasis>
          of your plot window. If the plot window is not turned on, these points
          will appear at the bottom of the graph.
        </para>
        <para>
          Here is an example of numeric limits handling in action:
        </para>
        <para>
          <inlinemediaobject><imageobject><imagedata fileref="images/2d_limit.png"></imagedata></imageobject>
          <textobject>
            <phrase>2d_limit</phrase>
          </textobject>
          </inlinemediaobject> [\TODO this file is missing!]
        </para>
      </section>
      <section id="svg_plot.svg_simple_code_example.behavior.behavior_stylesheets">
        <title><link linkend="svg_plot.svg_simple_code_example.behavior.behavior_stylesheets">
        Stylesheets</link></title>
        <para>
          Stylesheets currently have only a single way of being used with the program:
          they are parsed by the <code><phrase role="identifier">svg</phrase></code>
          class, and if the stylesheet parses correctly, they are loaded directly
          into the SVG file. I recognize that it may also be desired to link to an
          external stylesheet, but this presents a few problems.
        </para>
        <itemizedlist>
          <listitem>
            Both of the files now need to be transported with the produced document.
          </listitem>
          <listitem>
            Any user-provided function object that is used to convert between image
            formats now suddenly needs to be able to load the image format from an
            external source.
          </listitem>
        </itemizedlist>
        <para>
          When the image converter portion of the project is completed, the image
          format function object will not be forced to deal with CSS. This is primarily
          a practical matter, and keeps simple an already difficult task. This will
          not preclude a method that extracts appropriate data from the CSS file
          and calls the appropriate functions. For example, if the user provides
          the following:
        </para>
        
<programlisting>
<phrase role="preprocessor">#Background</phrase>
<phrase role="special">{</phrase>
  <phrase role="identifier">fill</phrase> <phrase role="special">:</phrase> <phrase role="preprocessor">#FFF</phrase><phrase role="special">;</phrase>
  <phrase role="identifier">stroke</phrase> <phrase role="special">:</phrase> #<phrase role="number">041010</phrase> <phrase role="special">;</phrase> 
<phrase role="special">}</phrase>
</programlisting>
        <para>
          why shouldn't
        </para>
        
<programlisting>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">background_color</phrase><phrase role="special">(</phrase><phrase role="identifier">black</phrase><phrase role="special">);</phrase>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">background_border_color</phrase><phrase role="special">(</phrase><phrase role="identifier">svg_color</phrase><phrase role="special">(</phrase><phrase role="number">4</phrase><phrase role="special">,</phrase> <phrase role="number">16</phrase><phrase role="special">,</phrase> <phrase role="number">16</phrase><phrase role="special">));</phrase>
</programlisting>
        <para>
          be called?
        </para>
        <caution>
          <para>
            <para>
              Please note that the language that is accepted by the parser is actually
              stricter than the real CSS standard allows for. Following GSoC, the
              parser will be reimplemented to reflect the parser suggested by the
              CSS standard. All identifiers (class, ID, or otherwise), must be the
              <emphasis role="bold">one and only</emphasis> identifier on the line.
              The following is not accepted:
            </para>
            <para>
              rect, circle { fill : #00FF00; stroke : #000000; }
            </para>
            <para>
              But the following is:
            </para>
            <para>
              
<programlisting>
<phrase role="identifier">rect</phrase>
<phrase role="special">{</phrase>
  <phrase role="identifier">fill</phrase> <phrase role="special">:</phrase> #<phrase role="number">00FF</phrase><phrase role="number">00</phrase><phrase role="special">;</phrase>
  <phrase role="identifier">stroke</phrase> <phrase role="special">:</phrase> #<phrase role="number">00FF</phrase><phrase role="number">00</phrase><phrase role="special">;</phrase>
<phrase role="special">}</phrase>

<phrase role="identifier">circle</phrase>
<phrase role="special">{</phrase>
  <phrase role="identifier">fill</phrase> <phrase role="special">:</phrase> #<phrase role="number">00FF</phrase><phrase role="number">00</phrase><phrase role="special">;</phrase>
  <phrase role="identifier">stroke</phrase> <phrase role="special">:</phrase> #<phrase role="number">00FF</phrase><phrase role="number">00</phrase><phrase role="special">;</phrase>
<phrase role="special">}</phrase>
</programlisting>
            </para>
            <para>
              None of the power of CSS is compromised (I believe), but it becomes
              more verbose.
            </para>
          </para>
        </caution>
      </section>
    </section>
    <section id="svg_plot.svg_simple_code_example.plot_defaults">
      <title><link linkend="svg_plot.svg_simple_code_example.plot_defaults"> Plot
      Defaults</link></title>
      <section id="svg_plot.svg_simple_code_example.plot_defaults.1d_defaults">
        <title><link linkend="svg_plot.svg_simple_code_example.plot_defaults.1d_defaults">
        <code><phrase role="identifier">svg_1d_plot</phrase></code> Defaults</link></title>
        <para>
          There are certain defaults, tabulated below, that are true at the beginning
          of the plotting.
        </para>
        <table frame="all"> <title>Default Values</title>
        <tgroup cols="3">
          <thead>
            <row>
              <entry>
              <para>
                object
              </para>
              </entry><entry>
              <para>
                Default value
              </para>
              </entry><entry>
              <para>
                Rationale
              </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
              <para>
                All colors not defined in this table
              </para>
              </entry><entry>
              <para>
                black
              </para>
              </entry><entry>
              <para>
                Coloring, if any, will be highly dependent on user needs.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Axis
              </para>
              </entry><entry>
              <para>
                On, internal style
              </para>
              </entry><entry>
              <para>
                Most graphs include an axis of some kind. The internal axis style
                is used because this seems to be the default behavior in many textbooks
                I have owned.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Coordinate precision
              </para>
              </entry><entry>
              <para>
                3 decimal digits
              </para>
              </entry><entry>
              <para>
                Sufficient 1 in 1000 precision for typical small plots. (Higher precision
                will increase svg file size).
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Distance between major X ticks
              </para>
              </entry><entry>
              <para>
                <code><phrase role="number">3</phrase> <phrase role="identifier">units</phrase></code>
              </para>
              </entry><entry>
              <para>
                Reasonably fits into a plot window.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Font size of the legend title
              </para>
              </entry><entry>
              <para>
                12
              </para>
              </entry><entry>
              <para>
                Reasonable when paired with the image size.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Font size of the X Label
              </para>
              </entry><entry>
              <para>
                12
              </para>
              </entry><entry>
              <para>
                Reasonable when paired with the image size.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Font size of the title
              </para>
              </entry><entry>
              <para>
                30
              </para>
              </entry><entry>
              <para>
                Makes the title stand out.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Grid lines
              </para>
              </entry><entry>
              <para>
                <code><phrase role="identifier">All</phrase> <phrase role="identifier">off</phrase></code>
              </para>
              </entry><entry>
              <para>
                Grid lines are a user's personal choice, so default is none.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Image background
              </para>
              </entry><entry>
              <para>
                white
              </para>
              </entry><entry>
              <para>
                Coloring, if any, will be highly dependent on user needs.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Image size
              </para>
              </entry><entry>
              <para>
                <code><phrase role="number">500</phrase> <phrase role="identifier">by</phrase>
                <phrase role="number">350</phrase></code>
              </para>
              </entry><entry>
              <para>
                Details discernable. The image is easily viewable by those using
                800x600 monitors.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Legend
              </para>
              </entry><entry>
              <para>
                <code><phrase role="identifier">Off</phrase></code>
              </para>
              </entry><entry>
              <para>
                The goal of the defaults is to provide the cleanest possible plot
                as a default. Excluding the legend meets this goal.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Legend background
              </para>
              </entry><entry>
              <para>
                white
              </para>
              </entry><entry>
              <para>
                Coloring, if any, will be highly dependent on user needs.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Major tick length
              </para>
              </entry><entry>
              <para>
                20 pixels
              </para>
              </entry><entry>
              <para>
                Tasteful default when paired with the window size. This also makes
                the major ticks easily distinguishable from the minor ticks.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Major tick width
              </para>
              </entry><entry>
              <para>
                2 pixels
              </para>
              </entry><entry>
              <para>
                Major ticks are more obvious than minor ticks.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Minor tick length
              </para>
              </entry><entry>
              <para>
                10 pixels
              </para>
              </entry><entry>
              <para>
                Tasteful default when compared with the size of the grid. This makes
                the minor ticks less obvious than the major ticks.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Minor tick width
              </para>
              </entry><entry>
              <para>
                1 pixel
              </para>
              </entry><entry>
              <para>
                This makes the minor tick less obvious than the major ticks.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Number of minor X ticks between each major X tick
              </para>
              </entry><entry>
              <para>
                2
              </para>
              </entry><entry>
              <para>
                This allows the minor ticks to appear on the integer values.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Plot Window
              </para>
              </entry><entry>
              <para>
                <code><phrase role="identifier">Off</phrase></code>
              </para>
              </entry><entry>
              <para>
                Initially off because it is the simplest case.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Plot window background
              </para>
              </entry><entry>
              <para>
                white
              </para>
              </entry><entry>
              <para>
                Coloring, if any, will be highly dependent on user needs.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Title
              </para>
              </entry><entry>
              <para>
                On, <code><phrase role="string">&quot;Plot of data&quot;</phrase></code>
              </para>
              </entry><entry>
              <para>
                The title is on because this is one of the most basic elements of
                a graph. The title is set to a default because when <code><phrase
                role="identifier">title_on</phrase> <phrase role="special">==</phrase>
                <phrase role="keyword">true</phrase></code>, something should display.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Title size
              </para>
              </entry><entry>
              <para>
                <code><phrase role="number">30</phrase></code>
              </para>
              </entry><entry>
              <para>
                This is clearly visible in a variety of image sizes.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                X Axis Label
              </para>
              </entry><entry>
              <para>
                <code><phrase role="string">&quot;X Axis&quot;</phrase></code>, Off
              </para>
              </entry><entry>
              <para>
                &quot;X Axis&quot; is the label because <emphasis>something</emphasis>
                should display were the user to turn on the X-axis label without
                setting text.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                X Axis Label Size
              </para>
              </entry><entry>
              <para>
                <code><phrase role="number">12</phrase></code>
              </para>
              </entry><entry>
              <para>
                This is a reasonable size at the default image size.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                X Grid (Major and Minor)
              </para>
              </entry><entry>
              <para>
                Off
              </para>
              </entry><entry>
              <para>
                Turned off in the interest of providing simple, clean plots.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                X Range
              </para>
              </entry><entry>
              <para>
                <code><phrase role="special">(-</phrase><phrase role="number">10</phrase><phrase
                role="special">,</phrase> <phrase role="number">10</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Traditional plot viewport (but almost all plots will need to set
                both X and Y ranges).
              </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
        </table>
      </section>
      <section id="svg_plot.svg_simple_code_example.plot_defaults.2d_defaults">
        <title><link linkend="svg_plot.svg_simple_code_example.plot_defaults.2d_defaults">
        <code><phrase role="identifier">svg_2d_plot</phrase></code> Defaults</link></title>
        <para>
          You may have noticed that there are certain defaults that are true at the
          beginning of the plotting. Here is a table of the defaults:
        </para>
        <table frame="all"> <title>Default Values</title>
        <tgroup cols="3">
          <thead>
            <row>
              <entry>
              <para>
                object
              </para>
              </entry><entry>
              <para>
                Default value
              </para>
              </entry><entry>
              <para>
                Rationale
              </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
              <para>
                All colors not defined in this table
              </para>
              </entry><entry>
              <para>
                black
              </para>
              </entry><entry>
              <para>
                Coloring, if any, will be highly dependent on user needs.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Axis
              </para>
              </entry><entry>
              <para>
                On, internal style
              </para>
              </entry><entry>
              <para>
                Most graphs include an axis of some kind. The internal axis style
                is used because this seems to be the default behavior in many textbooks
                I have owned.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Distance between major X ticks
              </para>
              </entry><entry>
              <para>
                <code><phrase role="number">3</phrase> <phrase role="identifier">units</phrase></code>
              </para>
              </entry><entry>
              <para>
                Reasonably fits into a plot window.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Font size of the legend title
              </para>
              </entry><entry>
              <para>
                12
              </para>
              </entry><entry>
              <para>
                Reasonable when paired with the image size.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Font size of the X Label
              </para>
              </entry><entry>
              <para>
                12
              </para>
              </entry><entry>
              <para>
                Reasonable when paired with the image size.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Font size of the title
              </para>
              </entry><entry>
              <para>
                30
              </para>
              </entry><entry>
              <para>
                Makes the title stand out.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Grid lines
              </para>
              </entry><entry>
              <para>
                <code><phrase role="identifier">All</phrase> <phrase role="identifier">off</phrase></code>
              </para>
              </entry><entry>
              <para>
                Grid lines are a user's personal choice, so default is off
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Image background
              </para>
              </entry><entry>
              <para>
                white
              </para>
              </entry><entry>
              <para>
                Coloring, if any, will be highly dependent on user needs.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Image size
              </para>
              </entry><entry>
              <para>
                <code><phrase role="number">500</phrase> <phrase role="identifier">by</phrase>
                <phrase role="number">350</phrase></code>
              </para>
              </entry><entry>
              <para>
                Details discernable. The image is easily viewable by those using
                800x600 monitors.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Legend
              </para>
              </entry><entry>
              <para>
                <code><phrase role="identifier">Off</phrase></code>
              </para>
              </entry><entry>
              <para>
                The goal of the defaults is to provide the cleanest possible plot
                as a default. Excluding the legend meets this goal.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Legend background
              </para>
              </entry><entry>
              <para>
                white
              </para>
              </entry><entry>
              <para>
                Coloring, if any, will be highly dependent on user needs.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Major tick length
              </para>
              </entry><entry>
              <para>
                20 pixels
              </para>
              </entry><entry>
              <para>
                Tasteful default when paired with the window size. This also makes
                the major ticks easily distinguishable from the minor ticks.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Major tick width
              </para>
              </entry><entry>
              <para>
                2 pixels
              </para>
              </entry><entry>
              <para>
                Major ticks are more obvious than minor ticks.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Minor tick length
              </para>
              </entry><entry>
              <para>
                10 pixels
              </para>
              </entry><entry>
              <para>
                Tasteful default when compared with the size of the grid. This makes
                the minor ticks less obvious than the major ticks.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Minor tick width
              </para>
              </entry><entry>
              <para>
                1 pixel
              </para>
              </entry><entry>
              <para>
                This makes the minor tick less obvious than the major ticks.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Number of minor X ticks between each major X tick
              </para>
              </entry><entry>
              <para>
                2
              </para>
              </entry><entry>
              <para>
                This allows the minor ticks to appear on the integers.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Plot Window
              </para>
              </entry><entry>
              <para>
                <code><phrase role="identifier">Off</phrase></code>
              </para>
              </entry><entry>
              <para>
                Initially off because it is the simplest case.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Plot window background
              </para>
              </entry><entry>
              <para>
                white
              </para>
              </entry><entry>
              <para>
                Coloring, if any, will be highly dependent on user needs.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Title
              </para>
              </entry><entry>
              <para>
                On, <code><phrase role="string">&quot;Plot of data&quot;</phrase></code>
              </para>
              </entry><entry>
              <para>
                The title is on because this is one of the most basic elements of
                a graph. The title is set to a default because when <code><phrase
                role="identifier">title_on</phrase> <phrase role="special">==</phrase>
                <phrase role="keyword">true</phrase></code>, <emphasis>something</emphasis>
                should display.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Title size
              </para>
              </entry><entry>
              <para>
                <code><phrase role="number">30</phrase></code>
              </para>
              </entry><entry>
              <para>
                This is clearly visible in a variety of image sizes.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                X Axis Label
              </para>
              </entry><entry>
              <para>
                <code><phrase role="string">&quot;X Axis&quot;</phrase></code>, Off
              </para>
              </entry><entry>
              <para>
                &quot;X Axis&quot; is the label because <emphasis>something</emphasis>
                should display were the user to turn on the X axis label without
                setting text.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                X Axis Label Size
              </para>
              </entry><entry>
              <para>
                <code><phrase role="number">12</phrase></code>
              </para>
              </entry><entry>
              <para>
                This is a reasonable size at the default image size.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                X Grid (Major and Minor)
              </para>
              </entry><entry>
              <para>
                Off
              </para>
              </entry><entry>
              <para>
                Turned off in the interest of providing simple, clean plots.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                X Range
              </para>
              </entry><entry>
              <para>
                <code><phrase role="special">(-</phrase><phrase role="number">10</phrase><phrase
                role="special">,</phrase> <phrase role="number">10</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Traditional plot viewport.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Y Axis Label
              </para>
              </entry><entry>
              <para>
                <code><phrase role="string">&quot;Y Axis&quot;</phrase></code>, Off
              </para>
              </entry><entry>
              <para>
                &quot;Y Axis&quot; is the label because <emphasis>something</emphasis>
                should display were the user to turn on the X axis label without
                setting text, and this is the most informative.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Y Axis Label Size
              </para>
              </entry><entry>
              <para>
                <code><phrase role="number">12</phrase></code>
              </para>
              </entry><entry>
              <para>
                This is a reasonable size at the default image size.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Y Grid (Major and Minor)
              </para>
              </entry><entry>
              <para>
                Off
              </para>
              </entry><entry>
              <para>
                Turned off in the interest of providing simple, clean plots.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                Y Range
              </para>
              </entry><entry>
              <para>
                <code><phrase role="special">(-</phrase><phrase role="number">10</phrase><phrase
                role="special">,</phrase> <phrase role="number">10</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Traditional plot viewport.
              </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
        </table>
      </section>
    </section>
    <section id="svg_plot.svg_simple_code_example.interface">
      <title><link linkend="svg_plot.svg_simple_code_example.interface"> Public Interfaces</link></title>
      <section id="svg_plot.svg_simple_code_example.interface.svg_interface">
        <title><link linkend="svg_plot.svg_simple_code_example.interface.svg_interface">
        <code><phrase role="identifier">svg</phrase></code> Public Interface</link></title>
        <table frame="all"> <title>class `svg`</title>
        <tgroup cols="3">
          <thead>
            <row>
              <entry>
              <para>
                Signature
              </para>
              </entry><entry>
              <para>
                Description
              </para>
              </entry><entry>
              <para>
                Notes &amp; Examples
              </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg</phrase><phrase role="special">()</phrase></code>
              </para>
              </entry><entry>
              <para>
                Constructor
              </para>
              </entry><entry>
              <para>
                Default image size (pixels) is (400, 400).
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">coord_precision</phrase><phrase role="special">(</phrase><phrase
                role="keyword">int</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the precision output for coordinates (decimal digits)
              </para>
              </entry><entry>
              <para>
                default 3, but for mobiles, 2 might suffice.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg</phrase><phrase role="special">()</phrase></code>
              </para>
              </entry><entry>
              <para>
                Constructor
              </para>
              </entry><entry>
              <para>
                Default image size (pixels) is (400, 400).
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">copyright_holder</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">std</phrase><phrase
                role="special">::</phrase><phrase role="identifier">string</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Set copyright holder for the SVG XML document, as comment and XML.
              </para>
              </entry><entry>
              <para>
                &lt;!-- SVG Plot Copyright Paul A. Bristow 2007 --&gt; &lt;meta name<literal>&quot;copyright&quot;
                content</literal>&quot;Paul A. Bristow&quot; /&gt;
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="keyword">const</phrase> <phrase role="identifier">std</phrase><phrase
                role="special">::</phrase><phrase role="identifier">string</phrase><phrase
                role="special">&amp;</phrase> <phrase role="identifier">copyright_holder</phrase></code>
              </para>
              </entry><entry>
              <para>
                Returns the copyright holder for the SVG XML document
              </para>
              </entry><entry>
              <para>
                Returns the input value for copyright holder. Does not return any
                XML
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">author</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">std</phrase><phrase
                role="special">::</phrase><phrase role="identifier">string</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the author of the document
              </para>
              </entry><entry>
              <para>
                The copyright_holder is the default author
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">copyright_date</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">std</phrase><phrase
                role="special">::</phrase><phrase role="identifier">string</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Set copyright date for the SVG XML document, as comment and XML.
              </para>
              </entry><entry>
              <para>
                &lt;!-- SVG Plot Copyright Paul A. Bristow 2007 --&gt; &lt;meta name<literal>&quot;date&quot;
                content</literal>&quot;2007&quot; /&gt;
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="keyword">const</phrase> <phrase role="identifier">std</phrase><phrase
                role="special">::</phrase><phrase role="identifier">string</phrase><phrase
                role="special">&amp;</phrase> <phrase role="identifier">copyright_date</phrase><phrase
                role="special">()</phrase></code>
              </para>
              </entry><entry>
              <para>
                Returns the copyright date for the SVG XML document
              </para>
              </entry><entry>
              <para>
                Returns the date string, not the associated XML.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">description</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">std</phrase><phrase
                role="special">::</phrase><phrase role="identifier">string</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets description for the SVG XML document, as comment and XML.
              </para>
              </entry><entry>
              <para>
                &lt;!-- My Document description --&gt; &lt;desc&gt;My Document description&lt;/desc&gt;
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="keyword">const</phrase> <phrase role="identifier">std</phrase><phrase
                role="special">::</phrase><phrase role="identifier">string</phrase><phrase
                role="special">&amp;</phrase> <phrase role="identifier">description</phrase><phrase
                role="special">()</phrase></code>
              </para>
              </entry><entry>
              <para>
                Returns the description of the document.
              </para>
              </entry><entry>
              <para>
                Returns the description string, not the associated XML
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="keyword">const</phrase> <phrase role="identifier">std</phrase><phrase
                role="special">::</phrase><phrase role="identifier">string</phrase><phrase
                role="special">&amp;</phrase> <phrase role="identifier">author</phrase><phrase
                role="special">()</phrase></code>
              </para>
              </entry><entry>
              <para>
                Returns the author of the document.
              </para>
              </entry><entry>
              <para>
                The default is the copyright_holder.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">document_title</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">std</phrase><phrase
                role="special">::</phrase><phrase role="identifier">string</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets title for the SVG XML document (not the plot)
              </para>
              </entry><entry>
              <para>
                &lt;title&gt;My Document title&lt;/title&gt;
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="keyword">int</phrase> <phrase role="identifier">document_size</phrase><phrase
                role="special">()</phrase></code>
              </para>
              </entry><entry>
              <para>
                Returns the number of elements in the root of the document
              </para>
              </entry><entry>
              <para>
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="keyword">int</phrase> <phrase role="identifier">coord_precision</phrase><phrase
                role="special">(</phrase><phrase role="keyword">int</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Returns the current precision of doubles in the document
              </para>
              </entry><entry>
              <para>
                The default is 3
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">license</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">std</phrase><phrase
                role="special">::</phrase><phrase role="identifier">string</phrase><phrase
                role="special">,</phrase> <phrase role="keyword">const</phrase>
                <phrase role="identifier">std</phrase><phrase role="special">::</phrase><phrase
                role="identifier">string</phrase><phrase role="special">,</phrase>
                <phrase role="keyword">const</phrase> <phrase role="identifier">std</phrase><phrase
                role="special">::</phrase><phrase role="identifier">string</phrase><phrase
                role="special">,</phrase> <phrase role="keyword">const</phrase>
                <phrase role="identifier">std</phrase><phrase role="special">::</phrase><phrase
                role="identifier">string</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Set license terms (if any): reproduction, distribution, attribution,
                commercialuse
              </para>
              </entry><entry>
              <para>
                &quot;permits&quot; (default), &quot;requires&quot;, or &quot;prohibits&quot;.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="keyword">const</phrase> <phrase role="identifier">std</phrase><phrase
                role="special">::</phrase><phrase role="identifier">string</phrase><phrase
                role="special">&amp;</phrase> <phrase role="identifier">reproduction</phrase><phrase
                role="special">()</phrase></code>
              </para>
              </entry><entry>
              <para>
                Returns the Reproduction segment of the license
              </para>
              </entry><entry>
              <para>
                The default is <code><phrase role="string">&quot;&quot;</phrase></code>
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="keyword">const</phrase> <phrase role="identifier">std</phrase><phrase
                role="special">::</phrase><phrase role="identifier">string</phrase><phrase
                role="special">&amp;</phrase> <phrase role="identifier">distribution</phrase><phrase
                role="special">()</phrase></code>
              </para>
              </entry><entry>
              <para>
                Returns the Distribution segment of the license
              </para>
              </entry><entry>
              <para>
                The default is <code><phrase role="string">&quot;&quot;</phrase></code>
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="keyword">const</phrase> <phrase role="identifier">std</phrase><phrase
                role="special">::</phrase><phrase role="identifier">string</phrase><phrase
                role="special">&amp;</phrase> <phrase role="identifier">attribution</phrase><phrase
                role="special">()</phrase></code>
              </para>
              </entry><entry>
              <para>
                Returns the Attribution segment of the license
              </para>
              </entry><entry>
              <para>
                The default is <code><phrase role="string">&quot;&quot;</phrase></code>
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="keyword">const</phrase> <phrase role="identifier">std</phrase><phrase
                role="special">::</phrase><phrase role="identifier">string</phrase><phrase
                role="special">&amp;</phrase> <phrase role="identifier">commercialuse</phrase><phrase
                role="special">()</phrase></code>
              </para>
              </entry><entry>
              <para>
                Returns the Commercial Use segment of the license
              </para>
              </entry><entry>
              <para>
                The default is <code><phrase role="string">&quot;&quot;</phrase></code>
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">license</phrase><phrase role="special">(</phrase><phrase
                role="keyword">bool</phrase><phrase role="special">)]</phrase> <phrase
                role="special">[</phrase><phrase role="identifier">Sets</phrase>
                <phrase role="identifier">whether</phrase> <phrase role="keyword">or</phrase>
                <phrase role="keyword">not</phrase> <phrase role="identifier">the</phrase>
                <phrase role="identifier">license</phrase> <phrase role="identifier">information</phrase>
                <phrase role="identifier">should</phrase> <phrase role="identifier">be</phrase>
                <phrase role="identifier">added</phrase> <phrase role="identifier">to</phrase>
                <phrase role="identifier">the</phrase> <phrase role="identifier">written</phrase>
                <phrase role="identifier">document</phrase><phrase role="special">]</phrase>
                <phrase role="special">[</phrase></code>false`
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="keyword">bool</phrase> <phrase role="identifier">is_license</phrase><phrase
                role="special">()</phrase></code>
              </para>
              </entry><entry>
              <para>
                Returns whether or not a license will be output with a written document.
              </para>
              </entry><entry>
              <para>
                Permits reproduction &amp; distribution but requires atribution.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">get_g_element</phrase></code>
              </para>
              </entry><entry>
              <para>
                Class derived from svg_element.
              </para>
              </entry><entry>
              <para>
                Graph element: line, circle, rect... Node element of document tree.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">g_element</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">add_g_element</phrase><phrase role="special">()</phrase></code>
              </para>
              </entry><entry>
              <para>
                Adds a g_element at the root of the document tree. Acts as a <code><phrase
                role="identifier">push_back</phrase><phrase role="special">()</phrase></code>
              </para>
              </entry><entry>
              <para>
                Returns the <code><phrase role="identifier">g_element</phrase></code>
                that is pushed back. This allows you to do something like the following:
                <code><phrase role="identifier">image</phrase><phrase role="special">.</phrase><phrase
                role="identifier">add_g_element</phrase><phrase role="special">().</phrase><phrase
                role="identifier">line</phrase><phrase role="special">(/**/).</phrase><phrase
                role="identifier">line</phrase><phrase role="special">(/**/).</phrase><phrase
                role="identifier">rect</phrase><phrase role="special">(/**/);</phrase>
                </code> which adds two lines and a rectangle to the g_element that
                was just created.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">circle</phrase><phrase role="special">(</phrase><phrase
                role="keyword">double</phrase> <phrase role="identifier">x</phrase><phrase
                role="special">,</phrase> <phrase role="keyword">double</phrase>
                <phrase role="identifier">y</phrase><phrase role="special">,</phrase>
                <phrase role="keyword">unsigned</phrase> <phrase role="keyword">int</phrase>
                <phrase role="identifier">radius</phrase> <phrase role="special">=</phrase>
                <phrase role="number">5</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Adds a point at (x,y) in the root level of the document
              </para>
              </entry><entry>
              <para>
                If the user is calling the circle method, odds are they would prefer
                a real circle instead of a degenerate circle (a point). 5 is as good
                a default as any other, and the user is unlikely want a point if
                they are making this call.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">g_element</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">get_g_element</phrase><phrase role="special">(</phrase><phrase
                role="keyword">int</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Gets the g_element at the index specified.
              </para>
              </entry><entry>
              <para>
                Gives a runtime error if you specify an index that does not contain
                a <code><phrase role="identifier">g_element</phrase></code>. An iterator
                interface to access these elements might be useful.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_size</phrase><phrase role="special">(</phrase><phrase
                role="keyword">unsigned</phrase> <phrase role="keyword">int</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the width of the image (pixels).
              </para>
              </entry><entry>
              <para>
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_size</phrase><phrase role="special">(</phrase><phrase
                role="keyword">unsigned</phrase> <phrase role="keyword">int</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the height of the image (pixels).
              </para>
              </entry><entry>
              <para>
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="keyword">unsigned</phrase> <phrase role="keyword">int</phrase>
                <phrase role="identifier">x_size</phrase><phrase role="special">()</phrase></code>
              </para>
              </entry><entry>
              <para>
                Returns the width of the image (pixels).
              </para>
              </entry><entry>
              <para>
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="keyword">unsigned</phrase> <phrase role="keyword">int</phrase>
                <phrase role="identifier">y_size</phrase><phrase role="special">()</phrase></code>
              </para>
              </entry><entry>
              <para>
                Returns the height of the image (pixels).
              </para>
              </entry><entry>
              <para>
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">image_size</phrase><phrase role="special">(</phrase><phrase
                role="keyword">unsigned</phrase> <phrase role="keyword">int</phrase><phrase
                role="special">,</phrase> <phrase role="keyword">unsigned</phrase>
                <phrase role="keyword">int</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the size of the image produced, (pixels).
              </para>
              </entry><entry>
              <para>
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">line</phrase><phrase role="special">(</phrase><phrase
                role="keyword">double</phrase> <phrase role="identifier">x1</phrase><phrase
                role="special">,</phrase> <phrase role="keyword">double</phrase>
                <phrase role="identifier">y1</phrase><phrase role="special">,</phrase>
                <phrase role="keyword">double</phrase> <phrase role="identifier">x2</phrase><phrase
                role="special">,</phrase> <phrase role="keyword">double</phrase>
                <phrase role="identifier">y2</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Adds a line from (x1,y1) to (x2,y2) in the root level of the document.
              </para>
              </entry><entry>
              <para>
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">path_element</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">path</phrase><phrase role="special">()</phrase></code>
              </para>
              </entry><entry>
              <para>
                Pushes a <code><phrase role="identifier">path_element</phrase></code>
                to the back of the tree and returns a reference to it. This allows
                chaining, for example: 
<programlisting>
<phrase role="identifier">path_element</phrase><phrase role="special">&amp;</phrase> <phrase role="identifier">my_path</phrase> <phrase role="special">=</phrase> <phrase role="identifier">image</phrase><phrase role="special">.</phrase><phrase role="identifier">path</phrase><phrase role="special">();</phrase>

<phrase role="identifier">my_path</phrase><phrase role="special">.</phrase><phrase role="identifier">M</phrase><phrase role="special">(</phrase><phrase role="number">3</phrase><phrase role="special">,</phrase> <phrase role="number">3</phrase><phrase role="special">).</phrase><phrase role="identifier">l</phrase><phrase role="special">(</phrase><phrase role="number">150</phrase><phrase role="special">,</phrase> <phrase role="number">150</phrase><phrase role="special">);</phrase>
</programlisting>
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">rect</phrase><phrase role="special">(</phrase><phrase
                role="keyword">double</phrase> <phrase role="identifier">x1</phrase><phrase
                role="special">,</phrase> <phrase role="keyword">double</phrase>
                <phrase role="identifier">y1</phrase><phrase role="special">,</phrase>
                <phrase role="keyword">double</phrase> <phrase role="identifier">width</phrase><phrase
                role="special">,</phrase> <phrase role="keyword">double</phrase>
                <phrase role="identifier">height</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Adds a rectangle at point (x1, y1) that has <code><phrase role="identifier">width</phrase></code>
                wide and <code><phrase role="identifier">height</phrase></code> high.
              </para>
              </entry><entry>
              <para>
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">text</phrase><phrase role="special">(</phrase><phrase
                role="keyword">double</phrase> <phrase role="identifier">x</phrase><phrase
                role="special">,</phrase> <phrase role="keyword">double</phrase>
                <phrase role="identifier">y</phrase><phrase role="special">,</phrase>
                <phrase role="identifier">std</phrase><phrase role="special">::</phrase><phrase
                role="identifier">string</phrase> <phrase role="identifier">text</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Adds string <code><phrase role="identifier">text</phrase></code>
                at (x,y) in the root level of the document
              </para>
              </entry><entry>
              <para>
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">write</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">std</phrase><phrase
                role="special">::</phrase><phrase role="identifier">string</phrase><phrase
                role="special">&amp;)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Writes the document to the file represented by the argument.
              </para>
              </entry><entry>
              <para>
                Opens the file stream itself and tries to call <code><phrase role="identifier">write</phrase><phrase
                role="special">(</phrase><phrase role="identifier">std</phrase><phrase
                role="special">::</phrase><phrase role="identifier">ostream</phrase><phrase
                role="special">&amp;)</phrase></code>. Throws <code><phrase role="identifier">std</phrase><phrase
                role="special">::</phrase><phrase role="identifier">runtime_exception</phrase></code>
                if it can not open the file.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">write</phrase><phrase role="special">(</phrase><phrase
                role="identifier">std</phrase><phrase role="special">::</phrase><phrase
                role="identifier">ostream</phrase><phrase role="special">&amp;)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Writes the document to the stream represented by the argument.
              </para>
              </entry><entry>
              <para>
              </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
        </table>
      </section>
      <section id="svg_plot.svg_simple_code_example.interface.svg_1d_plot_interface">
        <title><link linkend="svg_plot.svg_simple_code_example.interface.svg_1d_plot_interface">
        <code><phrase role="identifier">svg_1d_plot</phrase></code> Public Interface</link></title>
        <table frame="all"> <title>1D_plot Miscellaneous Functions</title>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>
              <para>
                Signature
              </para>
              </entry><entry>
              <para>
                Description
              </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">()</phrase></code>
              </para>
              </entry><entry>
              <para>
                See the defaults section for further details
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">image_size</phrase><phrase role="special">(</phrase><phrase
                role="keyword">unsigned</phrase> <phrase role="keyword">int</phrase><phrase
                role="special">,</phrase> <phrase role="keyword">unsigned</phrase>
                <phrase role="keyword">int</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the size of the image produced (pixels)
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">coord_precision</phrase><phrase role="special">(</phrase><phrase
                role="keyword">int</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the precision output for coordinates (decimal digits, default
                3).
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">document_title</phrase><phrase role="special">(</phrase><phrase
                role="identifier">std</phrase><phrase role="special">::</phrase><phrase
                role="identifier">string</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets title for the SVG XML document (not the plot). &lt;title&gt;My
                Document title&lt;/title&gt;
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">description</phrase><phrase role="special">(</phrase><phrase
                role="identifier">std</phrase><phrase role="special">::</phrase><phrase
                role="identifier">string</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets description for the SVG XML document, as comment and XML, for
                example: &lt;!-- My Document description --&gt; &lt;desc&gt;My Document
                description&lt;/desc&gt;
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">legend_title_font_size</phrase><phrase
                role="special">(</phrase><phrase role="keyword">unsigned</phrase>
                <phrase role="keyword">int</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the font size for the legend title.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">title</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">std</phrase><phrase
                role="special">::</phrase><phrase role="identifier">string</phrase><phrase
                role="special">&amp;)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the string to be used for the title.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">title_font_size</phrase><phrase role="special">(</phrase><phrase
                role="keyword">unsigned</phrase> <phrase role="keyword">int</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the font size for the title.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">write</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">std</phrase><phrase
                role="special">::</phrase><phrase role="identifier">string</phrase><phrase
                role="special">&amp;)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Writes the plot to the file passed as a parameter.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">write</phrase><phrase role="special">(</phrase><phrase
                role="identifier">ostream</phrase><phrase role="special">&amp;)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Writes the plot to a stream passed as a parameter.
              </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
        </table> <table frame="all"> <title>1D_plot Commands</title>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>
              <para>
                Signature
              </para>
              </entry><entry>
              <para>
                Description
              </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">axis_on</phrase><phrase role="special">(</phrase><phrase
                role="keyword">bool</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets whether the axis is on (true) or off.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">legend_on</phrase><phrase role="special">(</phrase><phrase
                role="keyword">bool</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets whether the legend is on (true) or off.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">plot_window_on</phrase><phrase role="special">(</phrase><phrase
                role="keyword">bool</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets whether the plot will be displayed in its own window, or will
                be &quot;full screen&quot; in the image.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">title_on</phrase><phrase role="special">(</phrase><phrase
                role="keyword">bool</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Determines whether or not the image title is displayed.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_axis_on</phrase><phrase role="special">(</phrase><phrase
                role="keyword">bool</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Determines whether or not the X-axis is displayed.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_external_style_on</phrase><phrase role="special">(</phrase><phrase
                role="keyword">bool</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Determines whether or not the axis is inside or outside of the plot.
                Defaults is <code><phrase role="keyword">false</phrase></code>.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_label_on</phrase><phrase role="special">(</phrase><phrase
                role="keyword">bool</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets whether or not the X-axis label will show
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_major_labels_on</phrase><phrase role="special">(</phrase><phrase
                role="keyword">bool</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                sets whether or not the major ticks will be labelled on the X-axis
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_major_grid_on</phrase><phrase role="special">(</phrase><phrase
                role="keyword">bool</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Determines whether or not the major grid on the X axis will be displayed.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_minor_grid_on</phrase><phrase role="special">(</phrase><phrase
                role="keyword">bool</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Determines whether or not the minor grid on the X axis will be displayed.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_axis_on</phrase><phrase role="special">(</phrase><phrase
                role="keyword">bool</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Determines whether or not the Y axis is displayed.
              </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
        </table> <table frame="all"> <title>1D_plot Colors</title>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>
              <para>
                Signature
              </para>
              </entry><entry>
              <para>
                Description
              </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">background_border_color</phrase><phrase
                role="special">(</phrase><phrase role="keyword">const</phrase> <phrase
                role="identifier">svg_color</phrase> <phrase role="special">&amp;</phrase><phrase
                role="identifier">col</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Set the background border color for the legend as <code><phrase role="identifier">col</phrase></code>,
                an RGB color.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">background_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Set the background color for the whole image.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">legend_background_color</phrase><phrase
                role="special">(</phrase><phrase role="keyword">const</phrase> <phrase
                role="identifier">svg_color</phrase> <phrase role="special">&amp;</phrase><phrase
                role="identifier">col</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Set the background color for the legend as <code><phrase role="identifier">col</phrase></code>,
                an RGB color.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">legend_border_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Set the border color for the legend as <code><phrase role="identifier">col</phrase></code>,
                an RGB color.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">plot_background_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Set the color of the plot area. Note: this only goes into effect
                if plot_area(true) has been called.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">title_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Set the title color.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_axis_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the color of the lines that form the axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_label_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the color of the labels that go along the X axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_major_grid_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the color of the grid that runs perpindicular to the X axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_major_tick_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the color of the major ticks of the x-axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_minor_grid_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the color of the minor grid of the x-axis
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_minor_tick_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the color of the minor ticks of the x-axis.
              </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
        </table> <table frame="all"> <title>1D_plot X-Axis Definition</title>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>
              <para>
                Signature
              </para>
              </entry><entry>
              <para>
                Description
              </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_axis_width</phrase><phrase role="special">(</phrase><phrase
                role="keyword">unsigned</phrase> <phrase role="keyword">int</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the stroke width of the x-axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_label</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">std</phrase><phrase
                role="special">::</phrase><phrase role="identifier">string</phrase><phrase
                role="special">&amp;)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the label of the x-axis. This does not guarantee that it will
                be shown. You must call <code><phrase role="identifier">x_label_on</phrase><phrase
                role="special">(</phrase><phrase role="keyword">true</phrase><phrase
                role="special">)</phrase></code> to display.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_major_interval</phrase><phrase role="special">(</phrase><phrase
                role="keyword">double</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the distance (in Cartesian units) between ticks on the x-axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_major_tick_length</phrase><phrase role="special">(</phrase><phrase
                role="keyword">int</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the length (pixels) of the x-axis major ticks.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_major_tick_width</phrase><phrase role="special">(</phrase><phrase
                role="keyword">unsigned</phrase> <phrase role="keyword">int</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the width (pixels) of the major ticks on the x-axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_minor_tick_length</phrase><phrase role="special">(</phrase><phrase
                role="keyword">int</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the length (pixels) of the x-axis minor tick lengths.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_minor_tick_width</phrase><phrase role="special">(</phrase><phrase
                role="keyword">unsigned</phrase> <phrase role="keyword">int</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the width (pixels) of the minor ticks on the x-axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_num_minor_ticks</phrase><phrase role="special">(</phrase><phrase
                role="keyword">int</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the number of minor ticks between each major tick.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_1d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_range</phrase><phrase role="special">(</phrase><phrase
                role="keyword">double</phrase> <phrase role="identifier">x1</phrase><phrase
                role="special">,</phrase> <phrase role="keyword">double</phrase>
                <phrase role="identifier">x2</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the scale of the x axis from x1 to x2. Throws an exception if
                x2&lt;=x1.
              </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
        </table> <anchor id="svg_plot.svg_simple_code_example.interface.svg_1d_plot_interface.the_1d_plot__code__phrase_role__identifier__plot__phrase__phrase_role__special______phrase___code__method"/>
        <bridgehead renderas="sect5">
          <link linkend="svg_plot.svg_simple_code_example.interface.svg_1d_plot_interface.the_1d_plot__code__phrase_role__identifier__plot__phrase__phrase_role__special______phrase___code__method">The
          1D_plot <code><phrase role="identifier">plot</phrase><phrase role="special">()</phrase></code>
          Method</link>
        </bridgehead>
        <para>
          The <code><phrase role="identifier">plot</phrase><phrase role="special">()</phrase></code>
          method is defined using Boost.Parameter. As such, it supports a few extra
          named parameters, as well as a deduced parameter.
        </para>
        <table frame="all"> <title>1D_plot Required parameter</title>
        <tgroup cols="3">
          <thead>
            <row>
              <entry>
              <para>
                ID
              </para>
              </entry><entry>
              <para>
                Type (* is a wildcard)
              </para>
              </entry><entry>
              <para>
                Description
              </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
              <para>
                _container
              </para>
              </entry><entry>
              <para>
                *
              </para>
              </entry><entry>
              <para>
                Any object that can return an iterator with begin() and end()
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                _title
              </para>
              </entry><entry>
              <para>
                <code><phrase role="identifier">std</phrase><phrase role="special">::</phrase><phrase
                role="identifier">string</phrase></code>
              </para>
              </entry><entry>
              <para>
                The name of this data series.
              </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
        </table> <table frame="all"> <title>1D_plot Deduced parameter</title>
        <tgroup cols="4">
          <thead>
            <row>
              <entry>
              <para>
                ID
              </para>
              </entry><entry>
              <para>
                Type
              </para>
              </entry><entry>
              <para>
                Description
              </para>
              </entry><entry>
              <para>
                Default
              </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
              <para>
                _fill_color
              </para>
              </entry><entry>
              <para>
                <code><phrase role="identifier">svg_color</phrase></code>
              </para>
              </entry><entry>
              <para>
                Color that shows <emphasis role="bold">inside the circle</emphasis>
                being drawn.
              </para>
              </entry><entry>
              <para>
                white
              </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
        </table> <table frame="all"> <title>1D_plot Optional Parameters</title>
        <tgroup cols="4">
          <thead>
            <row>
              <entry>
              <para>
                ID
              </para>
              </entry><entry>
              <para>
                Type
              </para>
              </entry><entry>
              <para>
                Description
              </para>
              </entry><entry>
              <para>
                Default
              </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
              <para>
                _stroke_color
              </para>
              </entry><entry>
              <para>
                <code><phrase role="identifier">svg_color</phrase></code>
              </para>
              </entry><entry>
              <para>
                Outline of the circle that is being drawn.
              </para>
              </entry><entry>
              <para>
                black
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                _point_style
              </para>
              </entry><entry>
              <para>
                <code><phrase role="identifier">point_shape</phrase></code>
              </para>
              </entry><entry>
              <para>
                Shape of the point. Options currently are: <literal>none</literal>,
                <literal>circle</literal>, and <literal>square</literal>.
              </para>
              </entry><entry>
              <para>
                circle
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                _size
              </para>
              </entry><entry>
              <para>
                <code><phrase role="keyword">unsigned</phrase> <phrase role="keyword">int</phrase></code>
              </para>
              </entry><entry>
              <para>
                Height/width of the circle and square.
              </para>
              </entry><entry>
              <para>
                10
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                _x_functor
              </para>
              </entry><entry>
              <para>
                *
              </para>
              </entry><entry>
              <para>
                A class or functor that contains a conversion function. You will
                not have to worry about this, unless you are trying to plot a container
                of type that does not have a conversion to double, for example, age
                of a user-defined type <code><phrase role="identifier">humans</phrase></code>.
                For example: 
<programlisting>
<phrase role="keyword">class</phrase> <phrase role="identifier">my_functor</phrase>
<phrase role="special">{</phrase>
  <phrase role="identifier">typdef</phrase> <phrase role="keyword">double</phrase> <phrase role="identifier">result_type</phrase><phrase role="special">;</phrase>

  <phrase role="keyword">double</phrase> <phrase role="keyword">operator</phrase><phrase role="special">()(</phrase><phrase role="keyword">const</phrase> <phrase role="identifier">human</phrase><phrase role="special">&amp;</phrase> <phrase role="identifier">_hum</phrase><phrase role="special">)</phrase>
  <phrase role="special">{</phrase>
    <phrase role="keyword">return</phrase> <phrase role="special">(</phrase><phrase role="keyword">double</phrase><phrase role="special">)(</phrase><phrase role="identifier">_hum</phrase><phrase role="special">.</phrase><phrase role="identifier">age</phrase><phrase role="special">());</phrase>
  <phrase role="special">}</phrase>
<phrase role="special">}</phrase>

<phrase role="comment">// ...
</phrase>
<phrase role="identifier">plot</phrase><phrase role="special">(</phrase><phrase role="identifier">my_plot</phrase><phrase role="special">,</phrase> <phrase role="identifier">my_data</phrase><phrase role="special">,</phrase> <phrase role="string">&quot;Lions&quot;</phrase><phrase role="special">,</phrase> <phrase role="identifier">_x_functor</phrase> <phrase role="special">=</phrase> <phrase role="identifier">my_functor</phrase><phrase role="special">());</phrase>
</programlisting>
              </para>
              </entry><entry>
              <para>
                <code><phrase role="identifier">boost_default_convert</phrase></code>
                is sufficient in all cases where the data stored in the container
                can be directly cast to a <code><phrase role="keyword">double</phrase></code>.
              </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
        </table>
        <para>
          Here are some examples of using of the 1D_plot <code><phrase role="identifier">plot</phrase></code>
          method:
        </para>
        <anchor id="svg_plot.svg_simple_code_example.interface.svg_1d_plot_interface.using_1d_plot_fill_and_stroke_colors"/>
        <bridgehead renderas="sect4">
          <link linkend="svg_plot.svg_simple_code_example.interface.svg_1d_plot_interface.using_1d_plot_fill_and_stroke_colors">Using
          1D_plot fill and stroke colors</link>
        </bridgehead>
        
<programlisting>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">plot</phrase><phrase role="special">(</phrase><phrase role="identifier">my_data</phrase><phrase role="special">,</phrase> <phrase role="string">&quot;Lions&quot;</phrase><phrase role="special">,</phrase> 
<phrase role="identifier">_fill_color</phrase> <phrase role="special">=</phrase> <phrase role="identifier">red</phrase><phrase role="special">,</phrase> 
<phrase role="identifier">_stroke_color</phrase> <phrase role="special">=</phrase> <phrase role="identifier">black</phrase><phrase role="special">);</phrase>
</programlisting>
        <para>
          This has the same effect as the following:
        </para>
        
<programlisting>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">plot</phrase><phrase role="special">(</phrase><phrase role="identifier">my_data</phrase><phrase role="special">,</phrase> <phrase role="string">&quot;Lions&quot;</phrase><phrase role="special">,</phrase> <phrase role="identifier">red</phrase><phrase role="special">,</phrase> <phrase role="identifier">black</phrase><phrase role="special">);</phrase> <phrase role="comment">// Order is significant:
</phrase><phrase role="comment">// fill is red and stroke is black.
</phrase></programlisting>
        <para>
          and also the same effect as:
        </para>
        
<programlisting>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">plot</phrase><phrase role="special">(</phrase><phrase role="identifier">my_data</phrase><phrase role="special">,</phrase> <phrase role="string">&quot;Lions&quot;</phrase><phrase role="special">,</phrase> 
<phrase role="identifier">_stroke_color</phrase> <phrase role="special">=</phrase> <phrase role="identifier">black</phrase><phrase role="special">,</phrase>  
<phrase role="identifier">_fill_color</phrase> <phrase role="special">=</phrase> <phrase role="identifier">red</phrase><phrase role="special">);</phrase>
</programlisting>
        <para>
          Since _fill_color is a Boost.Parameter deduced parameter, when two svg_colors
          are used in the same function call, they are always inferred in the following
          order: (fill, stroke).
        </para>
      </section>
      <section id="svg_plot.svg_simple_code_example.interface.svg_2d_plot_interface">
        <title><link linkend="svg_plot.svg_simple_code_example.interface.svg_2d_plot_interface">
        <code><phrase role="identifier">svg_2d_plot</phrase></code> Public Interface</link></title>
        <table frame="all"> <title>2D_plot Miscellaneous</title>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>
              <para>
                Signature
              </para>
              </entry><entry>
              <para>
                Description
              </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">()</phrase></code>
              </para>
              </entry><entry>
              <para>
                See the defaults section for further details.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">image_size</phrase><phrase role="special">(</phrase><phrase
                role="keyword">unsigned</phrase> <phrase role="keyword">int</phrase><phrase
                role="special">,</phrase> <phrase role="keyword">unsigned</phrase>
                <phrase role="keyword">int</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the size (pixels) of the plot image produced.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">title</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">std</phrase><phrase
                role="special">::</phrase><phrase role="identifier">string</phrase><phrase
                role="special">&amp;)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the string to be used for the title.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">title_font_size</phrase><phrase role="special">(</phrase><phrase
                role="keyword">unsigned</phrase> <phrase role="keyword">int</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the font size for the title.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">legend_title_font_size</phrase><phrase
                role="special">(</phrase><phrase role="keyword">unsigned</phrase>
                <phrase role="keyword">int</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the font size for the legend title.
              </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
        </table> <table frame="all"> <title>2D_plot Commands</title>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>
              <para>
                Signature
              </para>
              </entry><entry>
              <para>
                Description
              </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">axis_on</phrase><phrase role="special">(</phrase><phrase
                role="keyword">bool</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets whether the axis is on (true) or off.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">legend_on</phrase><phrase role="special">(</phrase><phrase
                role="keyword">bool</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets whether the legend is on (true) or off.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">plot_window_on</phrase><phrase role="special">(</phrase><phrase
                role="keyword">bool</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets whether the plot will be displayed in its own window, or will
                be &quot;full screen&quot; in the image.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">title_on</phrase><phrase role="special">(</phrase><phrase
                role="keyword">bool</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Determines whether or not the image title is displayed.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_label_on</phrase><phrase role="special">(</phrase><phrase
                role="keyword">bool</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets whether or not the X axis label will show.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_major_grid_on</phrase><phrase role="special">(</phrase><phrase
                role="keyword">bool</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Determines whether or not the major grid on the X axis will be displayed.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_major_labels_on</phrase><phrase role="special">(</phrase><phrase
                role="keyword">bool</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                sets whether or not the major ticks will be labelled on the x axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_minor_grid_on</phrase><phrase role="special">(</phrase><phrase
                role="keyword">bool</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Determines whether or not the minor grid on the X axis will be displayed.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_label_on</phrase><phrase role="special">(</phrase><phrase
                role="keyword">bool</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets whether or not the Y axis label will show.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_major_grid_on</phrase><phrase role="special">(</phrase><phrase
                role="keyword">bool</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Determines whether or not the major grid on the Y axis will be displayed.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_major_labels_on</phrase><phrase role="special">(</phrase><phrase
                role="keyword">bool</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                sets whether or not the major ticks will be labelled on the Y axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_minor_grid_on</phrase><phrase role="special">(</phrase><phrase
                role="keyword">bool</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Determines whether or not the minor grid on the Y axis will be displayed.
              </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
        </table> <table frame="all"> <title>2D_plot Colors</title>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>
              <para>
                Signature
              </para>
              </entry><entry>
              <para>
                Description
              </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">title_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Set the plot title color.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">background_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Set the background color for the whole image.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">legend_background_color</phrase><phrase
                role="special">(</phrase><phrase role="keyword">const</phrase> <phrase
                role="identifier">svg_color</phrase> <phrase role="special">&amp;</phrase><phrase
                role="identifier">col</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Set the background color for the legend as <code><phrase role="identifier">col</phrase></code>,
                an RGB color.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">legend_border_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Set the border color for the legend as <code><phrase role="identifier">col</phrase></code>,
                an RGB color.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">background_border_color</phrase><phrase
                role="special">(</phrase><phrase role="keyword">const</phrase> <phrase
                role="identifier">svg_color</phrase> <phrase role="special">&amp;</phrase><phrase
                role="identifier">col</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Set the background border color for the legend as <code><phrase role="identifier">col</phrase></code>,
                an RGB color.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">plot_background_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Set the color of the plot area. Note: this only goes into effect
                if plot_area(true) has been called.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_axis_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the color of the lines that form the axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_label_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the color of the labels that go along the X axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_major_tick_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the color of the major ticks of the x-axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_major_grid_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the color of the grid that runs perpindicular to the X axis
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_minor_tick_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the color of the minor ticks of the x-axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_axis_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the color of the lines that form the Y axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_label_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the color of the labels that go along the Y axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_major_tick_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the color of the major ticks of the Y-axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_major_grid_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the color of the grid that runs perpindicular to the Y axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_minor_tick_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the color of the minor ticks of the Y-axis.
              </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
        </table> <table frame="all"> <title>2D_plot Axis Information</title>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>
              <para>
                Signature
              </para>
              </entry><entry>
              <para>
                Description
              </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_axis_width</phrase><phrase role="special">(</phrase><phrase
                role="keyword">unsigned</phrase> <phrase role="keyword">int</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the stroke width (pixels) of the x-axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_label</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">std</phrase><phrase
                role="special">::</phrase><phrase role="identifier">string</phrase><phrase
                role="special">&amp;)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the label of the x-axis. You must set <code><phrase role="identifier">x_label</phrase><phrase
                role="special">(</phrase><phrase role="keyword">true</phrase><phrase
                role="special">)</phrase></code> to display the label.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_major_interval</phrase><phrase role="special">(</phrase><phrase
                role="keyword">double</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the distance (Cartesian units) between ticks on the x-axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_major_tick_length</phrase><phrase role="special">(</phrase><phrase
                role="keyword">int</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the length (pixels) of the x-axis major ticks.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_major_tick_width</phrase><phrase role="special">(</phrase><phrase
                role="keyword">unsigned</phrase> <phrase role="keyword">int</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the width (pixels) of the major ticks on the x-axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_minor_tick</phrase><phrase role="special">(</phrase><phrase
                role="keyword">unsigned</phrase> <phrase role="keyword">int</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the length (pixels) of the x-axis minor ticks.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_minor_tick_length</phrase><phrase role="special">(</phrase><phrase
                role="keyword">int</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the length (pixels) of the x-axis minor tick lengths.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_minor_tick_width</phrase><phrase role="special">(</phrase><phrase
                role="keyword">unsigned</phrase> <phrase role="keyword">int</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the width (pixels) of the minor ticks on the x-axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_num_minor_ticks</phrase><phrase role="special">(</phrase><phrase
                role="keyword">int</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the number of minor ticks between each major tick.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_range</phrase><phrase role="special">(</phrase><phrase
                role="keyword">double</phrase> <phrase role="identifier">x1</phrase><phrase
                role="special">,</phrase> <phrase role="keyword">double</phrase>
                <phrase role="identifier">x2</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the scale of the x axis from x1 to x2. Throws an exception if
                x2 &lt;= x1.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_axis_width</phrase><phrase role="special">(</phrase><phrase
                role="keyword">unsigned</phrase> <phrase role="keyword">int</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the stroke width of the x-axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_label</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">std</phrase><phrase
                role="special">::</phrase><phrase role="identifier">string</phrase><phrase
                role="special">&amp;)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the label of the Y-axis. You must set <code><phrase role="identifier">x_label</phrase><phrase
                role="special">(</phrase><phrase role="keyword">true</phrase><phrase
                role="special">)</phrase></code> to display the label.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_major_tick</phrase><phrase role="special">(</phrase><phrase
                role="keyword">double</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the distance (in Cartesian units) between ticks on the Y axis
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_major_tick_length</phrase><phrase role="special">(</phrase><phrase
                role="keyword">int</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the length (pixels) of the Y axis major ticks.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_major_tick_width</phrase><phrase role="special">(</phrase><phrase
                role="keyword">unsigned</phrase> <phrase role="keyword">int</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the width (pixels) of the major ticks on the Y axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_minor_tick</phrase><phrase role="special">(</phrase><phrase
                role="keyword">unsigned</phrase> <phrase role="keyword">int</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the length (pixels) of the Y axis minor ticks.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_major_tick_length</phrase><phrase role="special">(</phrase><phrase
                role="keyword">int</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the length (pixels) of the Y axis minor tick lengths.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_minor_tick_width</phrase><phrase role="special">(</phrase><phrase
                role="keyword">unsigned</phrase> <phrase role="keyword">int</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the width (pixels) of the minor ticks on the Y axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_num_minor_ticks</phrase><phrase role="special">(</phrase><phrase
                role="keyword">int</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the number of minor ticks between each major tick.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_2d_plot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_scale</phrase><phrase role="special">(</phrase><phrase
                role="keyword">double</phrase> <phrase role="identifier">y1</phrase><phrase
                role="special">,</phrase> <phrase role="keyword">double</phrase>
                <phrase role="identifier">y2</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the scale of the Y axis from y1 to y2. Throws an exception if
                y2 &lt;= y1.
              </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
        </table>
        <para>
          (Note: Getters omitted for now. TODO)
        </para>
        <anchor id="svg_plot.svg_simple_code_example.interface.svg_2d_plot_interface.the__code__phrase_role__identifier__plot__phrase__phrase_role__special______phrase___code__method"/>
        <bridgehead renderas="sect5">
          <link linkend="svg_plot.svg_simple_code_example.interface.svg_2d_plot_interface.the__code__phrase_role__identifier__plot__phrase__phrase_role__special______phrase___code__method">The
          <code><phrase role="identifier">plot</phrase><phrase role="special">()</phrase></code>
          Method</link>
        </bridgehead>
        <para>
          The <code><phrase role="identifier">plot</phrase><phrase role="special">()</phrase></code>
          method is defined using Boost.Parameter. As such, it supports a few extra
          named parameters, as well as a deduced parameter.
        </para>
        <table frame="all"> <title>2D_plot Required parameter</title>
        <tgroup cols="3">
          <thead>
            <row>
              <entry>
              <para>
                ID
              </para>
              </entry><entry>
              <para>
                Type (* is a wildcard)
              </para>
              </entry><entry>
              <para>
                Description
              </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
              <para>
                _container
              </para>
              </entry><entry>
              <para>
                *
              </para>
              </entry><entry>
              <para>
                Any object that can return an iterator with begin() and end()
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                _title
              </para>
              </entry><entry>
              <para>
                <code><phrase role="identifier">std</phrase><phrase role="special">::</phrase><phrase
                role="identifier">string</phrase></code>
              </para>
              </entry><entry>
              <para>
                The name of this series
              </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
        </table> <table frame="all"> <title>2D_plot Deduced parameter</title>
        <tgroup cols="4">
          <thead>
            <row>
              <entry>
              <para>
                ID
              </para>
              </entry><entry>
              <para>
                Type
              </para>
              </entry><entry>
              <para>
                Description
              </para>
              </entry><entry>
              <para>
                Default
              </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
              <para>
                _fill_color
              </para>
              </entry><entry>
              <para>
                <code><phrase role="identifier">svg_color</phrase></code>
              </para>
              </entry><entry>
              <para>
                This is the color that shows up inside of the circle that is being
                drawn
              </para>
              </entry><entry>
              <para>
                white
              </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
        </table> <table frame="all"> <title>2D_plot Optional Parameters</title>
        <tgroup cols="4">
          <thead>
            <row>
              <entry>
              <para>
                ID
              </para>
              </entry><entry>
              <para>
                Type
              </para>
              </entry><entry>
              <para>
                Description
              </para>
              </entry><entry>
              <para>
                Default
              </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
              <para>
                _bezier_on
              </para>
              </entry><entry>
              <para>
                <code><phrase role="keyword">bool</phrase></code>
              </para>
              </entry><entry>
              <para>
                This determines whether or not Bézier curve interpolation will be
                applied to the plot lines. It is important to note that the curve
                interpolation is still in its infancy, and should only be used with
                reasonably nice data sets
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                _line_on
              </para>
              </entry><entry>
              <para>
                <code><phrase role="keyword">bool</phrase></code>
              </para>
              </entry><entry>
              <para>
                This determines whether or not there are lines drawn between data
                points.
              </para>
              </entry><entry>
              <para>
                false
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                _line_color
              </para>
              </entry><entry>
              <para>
                <code><phrase role="keyword">bool</phrase></code>
              </para>
              </entry><entry>
              <para>
                This determines the color of the lines between data points.
              </para>
              </entry><entry>
              <para>
                black
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                _area_fill_color
              </para>
              </entry><entry>
              <para>
                <code><phrase role="identifier">svg_color</phrase></code>
              </para>
              </entry><entry>
              <para>
                Defining this enables the &quot;Fill Area Under Axis&quot; feature.
                the color you define will be the fill color between a line and the
                area under the axis. This only takes effect if <code><phrase role="identifier">_line_on</phrase>
                <phrase role="special">=</phrase> <phrase role="keyword">true</phrase></code>
                is called.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                _stroke_color
              </para>
              </entry><entry>
              <para>
                <code><phrase role="identifier">svg_color</phrase></code>
              </para>
              </entry><entry>
              <para>
                The outline of the circle that is being drawn.
              </para>
              </entry><entry>
              <para>
                black
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                _point_style
              </para>
              </entry><entry>
              <para>
                <code><phrase role="identifier">point_shape</phrase></code>
              </para>
              </entry><entry>
              <para>
                This is the shape of the point. Options currently are between <literal>none</literal>,
                <literal>circle</literal>, and <literal>square</literal>.
              </para>
              </entry><entry>
              <para>
                circle
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                _size
              </para>
              </entry><entry>
              <para>
                <code><phrase role="keyword">unsigned</phrase> <phrase role="keyword">int</phrase></code>
              </para>
              </entry><entry>
              <para>
                This is the height/width of the circle and square.
              </para>
              </entry><entry>
              <para>
                10
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                _x_functor
              </para>
              </entry><entry>
              <para>
                *
              </para>
              </entry><entry>
              <para>
                A class or that contains a conversion function. You will not have
                to worry about this, unless you are trying to accomplish stuff like
                plotting a vector of humans. For example: 
<programlisting>
<phrase role="keyword">class</phrase> <phrase role="identifier">my_functor</phrase>
<phrase role="special">{</phrase>
  <phrase role="identifier">typdef</phrase> <phrase role="identifier">pair</phrase><phrase role="special">&lt;</phrase><phrase role="keyword">double</phrase><phrase role="special">,</phrase> <phrase role="keyword">double</phrase><phrase role="special">&gt;</phrase> <phrase role="identifier">result_type</phrase><phrase role="special">;</phrase>

  <phrase role="identifier">pair</phrase><phrase role="special">&lt;</phrase><phrase role="keyword">double</phrase><phrase role="special">,</phrase> <phrase role="keyword">double</phrase><phrase role="special">&gt;</phrase> <phrase role="keyword">operator</phrase><phrase role="special">()(</phrase><phrase role="keyword">const</phrase> <phrase role="identifier">human</phrase><phrase role="special">&amp;</phrase> <phrase role="identifier">_hum</phrase><phrase role="special">)</phrase> <phrase role="keyword">const</phrase>
  <phrase role="special">{</phrase>
    <phrase role="keyword">return</phrase> <phrase role="identifier">pair</phrase><phrase role="special">&lt;</phrase><phrase role="keyword">double</phrase><phrase role="special">,</phrase> <phrase role="keyword">double</phrase><phrase role="special">&gt;(</phrase><phrase role="identifier">i</phrase><phrase role="special">,</phrase> <phrase role="identifier">_hum</phrase><phrase role="special">.</phrase><phrase role="identifier">age</phrase><phrase role="special">());</phrase>
  <phrase role="special">}</phrase>
<phrase role="special">}</phrase>

<phrase role="comment">// snip
</phrase>
<phrase role="identifier">plot</phrase><phrase role="special">(</phrase><phrase role="identifier">my_plot</phrase><phrase role="special">,</phrase> <phrase role="identifier">my_data</phrase><phrase role="special">,</phrase> <phrase role="string">&quot;People&quot;</phrase><phrase role="special">,</phrase> <phrase role="identifier">_x_functor</phrase> <phrase role="special">=</phrase> <phrase role="identifier">my_functor</phrase><phrase role="special">());</phrase>
</programlisting>
              </para>
              </entry><entry>
              <para>
                <code><phrase role="identifier">boost_default_2d_convert</phrase></code>
                (the default) is sufficient in all cases where the data stored in
                the container can be directly cast to a double.
              </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
        </table>
        <para>
          Here are some examples of correct uses:
        </para>
        <anchor id="svg_plot.svg_simple_code_example.interface.svg_2d_plot_interface.using_fill_and_stroke_colors"/>
        <bridgehead renderas="sect3">
          <link linkend="svg_plot.svg_simple_code_example.interface.svg_2d_plot_interface.using_fill_and_stroke_colors">Using
          fill and stroke colors</link>
        </bridgehead>
        
<programlisting>
<phrase role="identifier">my_plot</phrase><phrase role="special">.(</phrase><phrase role="identifier">my_data</phrase><phrase role="special">,</phrase> <phrase role="string">&quot;Lions&quot;</phrase><phrase role="special">,</phrase> 
<phrase role="identifier">_fill_color</phrase> <phrase role="special">=</phrase> <phrase role="identifier">red</phrase><phrase role="special">,</phrase> 
<phrase role="identifier">_stroke_color</phrase> <phrase role="special">=</phrase> <phrase role="identifier">black</phrase><phrase role="special">);</phrase>
</programlisting>
        <para>
          This has the same effect as the following:
        </para>
        
<programlisting>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">plot</phrase><phrase role="special">(</phrase><phrase role="identifier">my_data</phrase><phrase role="special">,</phrase> <phrase role="string">&quot;Lions&quot;</phrase><phrase role="special">,</phrase> <phrase role="identifier">red</phrase><phrase role="special">,</phrase> <phrase role="identifier">black</phrase><phrase role="special">);</phrase>
</programlisting>
        <para>
          and also the same effect as:
        </para>
        
<programlisting>
<phrase role="identifier">my_plot</phrase><phrase role="special">.</phrase><phrase role="identifier">plot</phrase><phrase role="special">(</phrase><phrase role="identifier">my_data</phrase><phrase role="special">,</phrase> <phrase role="string">&quot;Lions&quot;</phrase><phrase role="special">,</phrase> 
<phrase role="identifier">_stroke_color</phrase> <phrase role="special">=</phrase> <phrase role="identifier">black</phrase><phrase role="special">,</phrase>  
<phrase role="identifier">_fill_color</phrase> <phrase role="special">=</phrase> <phrase role="identifier">red</phrase><phrase role="special">);</phrase>
</programlisting>
        <para>
          Since _fill_color is a deduced parameter, when two svg_colors are used
          in the same function call, they are always inferred in the following order:
          (fill, stroke).
        </para>
      </section>
      <section id="svg_plot.svg_simple_code_example.interface.svg_boxplot_interface">
        <title><link linkend="svg_plot.svg_simple_code_example.interface.svg_boxplot_interface">
        <code><phrase role="identifier">svg_boxplot</phrase></code> Public Interface</link></title>
        <table frame="all"> <title>Boxplot Miscellaneous</title>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>
              <para>
                Signature
              </para>
              </entry><entry>
              <para>
                Description
              </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">()</phrase></code>
              </para>
              </entry><entry>
              <para>
                See the defaults section for further details.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">image_size</phrase><phrase role="special">(</phrase><phrase
                role="keyword">unsigned</phrase> <phrase role="keyword">int</phrase><phrase
                role="special">,</phrase> <phrase role="keyword">unsigned</phrase>
                <phrase role="keyword">int</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the size (pixels) of the plot image produced.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">title</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">std</phrase><phrase
                role="special">::</phrase><phrase role="identifier">string</phrase><phrase
                role="special">&amp;)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the string to be used for the plot title.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">title_size</phrase><phrase role="special">(</phrase><phrase
                role="keyword">unsigned</phrase> <phrase role="keyword">int</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the font size for the plot title.
              </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
        </table> <table frame="all"> <title>Boxplot Commands</title>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>
              <para>
                Signature
              </para>
              </entry><entry>
              <para>
                Description
              </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">title_on</phrase><phrase role="special">(</phrase><phrase
                role="keyword">bool</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Determines whether or not the image title is displayed.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_label_on</phrase><phrase role="special">(</phrase><phrase
                role="keyword">bool</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets whether or not the X-axis label will show.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_labels_on</phrase><phrase role="special">(</phrase><phrase
                role="keyword">bool</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                sets whether or not the major ticks will be labelled on the x axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_label_on</phrase><phrase role="special">(</phrase><phrase
                role="keyword">bool</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets whether or not the Y-axis label will show.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_major_labels_on</phrase><phrase role="special">(</phrase><phrase
                role="keyword">bool</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                sets whether or not the major ticks will be labelled on the Y axis.
              </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
        </table> <table frame="all"> <title>Boxplot Colors</title>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>
              <para>
                Signature
              </para>
              </entry><entry>
              <para>
                Description
              </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">title_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Set the title color.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">background_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Set the background color for the whole image.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">background_border_color</phrase><phrase
                role="special">(</phrase><phrase role="keyword">const</phrase> <phrase
                role="identifier">svg_color</phrase> <phrase role="special">&amp;</phrase><phrase
                role="identifier">col</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Set the background border color for the legend as <code><phrase role="identifier">col</phrase></code>,
                an RGB color.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">plot_background_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Set the color of the plot area. Note: this only goes into effect
                if plot_area(true) has been called.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_label_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the color of the labels that go along the X-axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_tick_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the color of the major ticks of the X-axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_label_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the color of the labels that go along the X-axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_major_tick_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the color of the major ticks of the Y-axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_minor_tick_color</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">svg_color</phrase>
                <phrase role="special">&amp;</phrase><phrase role="identifier">col</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the color of the minor ticks of the Y-axis.
              </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
        </table> <table frame="all"> <title>Boxplot Axis Information</title>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>
              <para>
                Signature
              </para>
              </entry><entry>
              <para>
                Description
              </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_label</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">std</phrase><phrase
                role="special">::</phrase><phrase role="identifier">string</phrase><phrase
                role="special">&amp;)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the label of the X-axis. It will be shown <emphasis role="bold">only
                if</emphasis> <code><phrase role="identifier">x_label</phrase><phrase
                role="special">(</phrase><phrase role="keyword">true</phrase><phrase
                role="special">)</phrase></code>.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_tick_length</phrase><phrase role="special">(</phrase><phrase
                role="keyword">int</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the length (pixels) of the X-axis ticks.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">x_tick_width</phrase><phrase role="special">(</phrase><phrase
                role="keyword">unsigned</phrase> <phrase role="keyword">int</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the width (pixels) of the major ticks on the X-axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_label</phrase><phrase role="special">(</phrase><phrase
                role="keyword">const</phrase> <phrase role="identifier">std</phrase><phrase
                role="special">::</phrase><phrase role="identifier">string</phrase><phrase
                role="special">&amp;)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the label of the X-axis. It will be shown <emphasis role="bold">only
                if</emphasis> <code><phrase role="identifier">x_label</phrase><phrase
                role="special">(</phrase><phrase role="keyword">true</phrase><phrase
                role="special">)</phrase></code>.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_major_interval</phrase><phrase role="special">(</phrase><phrase
                role="keyword">double</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the distance (in Cartesian units) between ticks on the Y-axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_major_tick_length</phrase><phrase role="special">(</phrase><phrase
                role="keyword">int</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the length (pixels) of the Y-axis major ticks.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_major_tick_width</phrase><phrase role="special">(</phrase><phrase
                role="keyword">unsigned</phrase> <phrase role="keyword">int</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the width (pixels) of the major ticks on the Y-axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_num_minor_tick</phrase><phrase role="special">(</phrase><phrase
                role="keyword">unsigned</phrase> <phrase role="keyword">int</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the length (pixels) of the Y-axis minor ticks.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_major_tick_length</phrase><phrase role="special">(</phrase><phrase
                role="keyword">int</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the length (pixels) of the Y-axis minor tick lengths.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_minor_tick_width</phrase><phrase role="special">(</phrase><phrase
                role="keyword">unsigned</phrase> <phrase role="keyword">int</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the width (pixels) of the minor ticks on the Y-axis.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_num_minor_ticks</phrase><phrase role="special">(</phrase><phrase
                role="keyword">int</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the number of minor ticks between each major tick.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                <code><phrase role="identifier">svg_boxplot</phrase><phrase role="special">&amp;</phrase>
                <phrase role="identifier">y_range</phrase><phrase role="special">(</phrase><phrase
                role="keyword">double</phrase> <phrase role="identifier">y1</phrase><phrase
                role="special">,</phrase> <phrase role="keyword">double</phrase>
                <phrase role="identifier">y2</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry><entry>
              <para>
                Sets the scale of the Y-axis from y1 to y2. Throws an exception if
                y2 &lt;= y1.
              </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
        </table>
        <para>
          (Note: Getters omitted for now - TODO)
        </para>
        <anchor id="svg_plot.svg_simple_code_example.interface.svg_boxplot_interface.the__code__phrase_role__identifier__plot__phrase__phrase_role__special______phrase___code__method"/>
        <bridgehead renderas="sect5">
          <link linkend="svg_plot.svg_simple_code_example.interface.svg_boxplot_interface.the__code__phrase_role__identifier__plot__phrase__phrase_role__special______phrase___code__method">The
          <code><phrase role="identifier">plot</phrase><phrase role="special">()</phrase></code>
          Method</link>
        </bridgehead>
        <para>
          The <code><phrase role="identifier">plot</phrase><phrase role="special">()</phrase></code>
          method is defined using Boost.Parameter. As such, it supports a few extra
          named parameters, as well as a deduced parameter.
        </para>
        <table frame="all"> <title>Required parameter</title>
        <tgroup cols="3">
          <thead>
            <row>
              <entry>
              <para>
                ID
              </para>
              </entry><entry>
              <para>
                Type (* is a wildcard)
              </para>
              </entry><entry>
              <para>
                Description
              </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
              <para>
                ctr
              </para>
              </entry><entry>
              <para>
                *
              </para>
              </entry><entry>
              <para>
                Any object that can return an iterator with begin() and end().
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                name
              </para>
              </entry><entry>
              <para>
                <code><phrase role="identifier">std</phrase><phrase role="special">::</phrase><phrase
                role="identifier">string</phrase></code>
              </para>
              </entry><entry>
              <para>
                The name of this data series.
              </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
        </table> <table frame="all"> <title>Optional Parameters</title>
        <tgroup cols="4">
          <thead>
            <row>
              <entry>
              <para>
                ID
              </para>
              </entry><entry>
              <para>
                Type
              </para>
              </entry><entry>
              <para>
                Description
              </para>
              </entry><entry>
              <para>
                Default
              </para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
              <para>
                box_style
              </para>
              </entry><entry>
              <para>
                <code><phrase role="keyword">const</phrase> <phrase role="identifier">svg_style</phrase><phrase
                role="special">&amp;</phrase></code>
              </para>
              </entry><entry>
              <para>
                Styles the box of the boxplot.
              </para>
              </entry><entry>
              <para>
                <code><phrase role="identifier">svg_style</phrase><phrase role="special">(</phrase><phrase
                role="identifier">white</phrase><phrase role="special">,</phrase>
                <phrase role="identifier">black</phrase><phrase role="special">,</phrase>
                <phrase role="number">1</phrase><phrase role="special">)</phrase></code>.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                median_style
              </para>
              </entry><entry>
              <para>
                <code><phrase role="keyword">const</phrase> <phrase role="identifier">svg_style</phrase><phrase
                role="special">&amp;</phrase></code>
              </para>
              </entry><entry>
              <para>
                Styles the median of the boxplot.
              </para>
              </entry><entry>
              <para>
                <code><phrase role="identifier">svg_style</phrase><phrase role="special">(</phrase><phrase
                role="identifier">white</phrase><phrase role="special">,</phrase>
                <phrase role="identifier">black</phrase><phrase role="special">,</phrase>
                <phrase role="number">1</phrase><phrase role="special">)</phrase></code>.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                axis_style
              </para>
              </entry><entry>
              <para>
                <code><phrase role="keyword">const</phrase> <phrase role="identifier">svg_style</phrase><phrase
                role="special">&amp;</phrase></code>
              </para>
              </entry><entry>
              <para>
                Styles the data range line (the line going through the middle.
              </para>
              </entry><entry>
              <para>
                <code><phrase role="identifier">svg_style</phrase><phrase role="special">(</phrase><phrase
                role="identifier">white</phrase><phrase role="special">,</phrase>
                <phrase role="identifier">black</phrase><phrase role="special">,</phrase>
                <phrase role="number">1</phrase><phrase role="special">)</phrase></code>.
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                min_whisker_style
              </para>
              </entry><entry>
              <para>
                <code><phrase role="keyword">const</phrase> <phrase role="identifier">svg_style</phrase><phrase
                role="special">&amp;</phrase></code>
              </para>
              </entry><entry>
              <para>
                Styles the lower whisker.
              </para>
              </entry><entry>
              <para>
                <code><phrase role="identifier">svg_style</phrase><phrase role="special">(</phrase><phrase
                role="identifier">white</phrase><phrase role="special">,</phrase>
                <phrase role="identifier">black</phrase><phrase role="special">,</phrase>
                <phrase role="number">1</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                max_whisker_style
              </para>
              </entry><entry>
              <para>
                <code><phrase role="keyword">const</phrase> <phrase role="identifier">svg_style</phrase><phrase
                role="special">&amp;</phrase></code>
              </para>
              </entry><entry>
              <para>
                Styles the upper whisker.
              </para>
              </entry><entry>
              <para>
                <code><phrase role="identifier">svg_style</phrase><phrase role="special">(</phrase><phrase
                role="identifier">white</phrase><phrase role="special">,</phrase>
                <phrase role="identifier">black</phrase><phrase role="special">,</phrase>
                <phrase role="number">1</phrase><phrase role="special">)</phrase></code>
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                mild_outlier_style
              </para>
              </entry><entry>
              <para>
                <code><phrase role="keyword">const</phrase> <phrase role="identifier">plot_point_style</phrase><phrase
                role="special">&amp;</phrase></code>
              </para>
              </entry><entry>
              <para>
                Styles outliers within 3 Inter-Quartile Ranges (IQRs) of the edges
                of the box
              </para>
              </entry><entry>
              <para>
                <code><phrase role="identifier">plot_point_style</phrase><phrase
                role="special">(</phrase><phrase role="identifier">black</phrase><phrase
                role="special">,</phrase> <phrase role="identifier">black</phrase><phrase
                role="special">,</phrase> <phrase role="number">0</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                ext_outlier_style
              </para>
              </entry><entry>
              <para>
                <code><phrase role="keyword">const</phrase> <phrase role="identifier">plot_point_style</phrase><phrase
                role="special">&amp;</phrase></code>
              </para>
              </entry><entry>
              <para>
                Styles outliers more than 3 IQRs away from the box.
              </para>
              </entry><entry>
              <para>
                <code><phrase role="identifier">plot_point_style</phrase><phrase
                role="special">(</phrase><phrase role="identifier">white</phrase><phrase
                role="special">,</phrase> <phrase role="identifier">black</phrase><phrase
                role="special">,</phrase> <phrase role="number">1</phrase><phrase
                role="special">)</phrase></code>
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                whisker_length
              </para>
              </entry><entry>
              <para>
                unsigned int
              </para>
              </entry><entry>
              <para>
                Determines how long the whiskers at the end of the data range line
                will be
              </para>
              </entry><entry>
              <para>
                30
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                box_width
              </para>
              </entry><entry>
              <para>
                unsigned int
              </para>
              </entry><entry>
              <para>
                Determines the width of the box.
              </para>
              </entry><entry>
              <para>
                60
              </para>
              </entry>
            </row>
            <row>
              <entry>
              <para>
                functor
              </para>
              </entry><entry>
              <para>
                *
              </para>
              </entry><entry>
              <para>
                A class or that contains a conversion function. You will not have
                to worry about this, unless you are trying to accomplish stuff like
                plotting a container of a user-defined class, for example human,
                that does not have a conversion to double. For example: 
<programlisting>
<phrase role="keyword">class</phrase> <phrase role="identifier">my_functor</phrase>
<phrase role="special">{</phrase>
  <phrase role="identifier">typdef</phrase> <phrase role="keyword">double</phrase> <phrase role="identifier">result_type</phrase><phrase role="special">;</phrase>

  <phrase role="keyword">double</phrase> <phrase role="keyword">operator</phrase><phrase role="special">()(</phrase><phrase role="keyword">const</phrase> <phrase role="identifier">human</phrase><phrase role="special">&amp;</phrase> <phrase role="identifier">body</phrase><phrase role="special">)</phrase> <phrase role="keyword">const</phrase>
  <phrase role="special">{</phrase>
    <phrase role="keyword">return</phrase> <phrase role="keyword">double</phrase><phrase role="special">(</phrase><phrase role="identifier">body</phrase><phrase role="special">.</phrase><phrase role="identifier">age</phrase><phrase role="special">());</phrase>
  <phrase role="special">}</phrase>
<phrase role="special">}</phrase>

<phrase role="comment">// ...
</phrase>
<phrase role="identifier">plot</phrase><phrase role="special">(</phrase><phrase role="identifier">my_data</phrase><phrase role="special">,</phrase> <phrase role="string">&quot;People&quot;</phrase><phrase role="special">,</phrase> <phrase role="identifier">functor</phrase> <phrase role="special">=</phrase> <phrase role="identifier">my_functor</phrase><phrase role="special">());</phrase>
</programlisting>
              </para>
              </entry><entry>
              <para>
                <code><phrase role="identifier">boost_default_convert</phrase></code>
                (default) is sufficient in all cases where the data stored in the
                container can be directly cast to a double.
              </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
        </table>
      </section>
    </section>
    <section id="svg_plot.svg_simple_code_example.implementation">
      <title><link linkend="svg_plot.svg_simple_code_example.implementation"> Implementation
      &amp; Rationale</link></title> <anchor id="svg_plot.svg_simple_code_example.implementation.number_of__minor_ticks"/>
      <bridgehead renderas="sect4">
        <link linkend="svg_plot.svg_simple_code_example.implementation.number_of__minor_ticks">Number
        of Minor ticks</link>
      </bridgehead>
      <para>
        <code><phrase role="identifier">x_num_minor_ticks</phrase><phrase role="special">()</phrase></code>
        and <code><phrase role="identifier">x_num_minor_ticks</phrase><phrase role="special">()</phrase></code>
      </para>
      <para>
        are provided control the number of minor ticks between the major ticks.
      </para>
      <para>
        There are a total of x_num_minor_ticks + 1 ticks for each major tick, for
        example, a major on 0, minor on 1,2,3,4, major on 5 ...
      </para>
      <para>
        For integer usually binary, octal and hexadecimal, num_minor_ticks = 2[super]n
        -1 are useful, for example 1 if major ticks are even will give minor ticks
        on odd values), 3 if major on 0, minor on 1, 2, 3 and major on 4... 7 if
        major on 0, minor on 1,2,3,4,5,6,7 and major on 8 ... 15 if major on 0, minor
        on 1,2,3,4,5,6,7, 8,9,A,B,C,D,E,F, major on 0x10...
      </para>
      
<programlisting>
<phrase role="identifier">For</phrase> <phrase role="identifier">decimal</phrase> <phrase role="identifier">based</phrase> <phrase role="identifier">values</phrase><phrase role="special">,</phrase> <phrase role="identifier">num_minor_ticks</phrase> <phrase role="number">1</phrase><phrase role="special">,</phrase> <phrase role="number">4</phrase><phrase role="special">,</phrase> <phrase role="number">9</phrase> <phrase role="identifier">are</phrase> <phrase role="identifier">useful</phrase><phrase role="special">,</phrase> <phrase role="keyword">for</phrase> <phrase role="identifier">example</phrase><phrase role="special">:</phrase>
<phrase role="number">1</phrase> <phrase role="keyword">if</phrase> <phrase role="identifier">major</phrase> <phrase role="identifier">are</phrase> <phrase role="identifier">even</phrase><phrase role="special">,</phrase> <phrase role="identifier">major</phrase> <phrase role="number">0</phrase><phrase role="special">,</phrase> <phrase role="identifier">minor</phrase> <phrase role="number">1</phrase><phrase role="special">,</phrase> <phrase role="identifier">major</phrase> <phrase role="number">2</phrase> <phrase role="special">...</phrase>
<phrase role="number">4</phrase> <phrase role="keyword">if</phrase> <phrase role="identifier">major</phrase> <phrase role="identifier">on</phrase> <phrase role="number">0</phrase><phrase role="special">,</phrase> <phrase role="identifier">minor</phrase> <phrase role="identifier">on</phrase> <phrase role="number">1</phrase><phrase role="special">,</phrase><phrase role="number">2</phrase><phrase role="special">,</phrase><phrase role="number">3</phrase><phrase role="special">,</phrase><phrase role="number">4</phrase><phrase role="special">,</phrase> <phrase role="identifier">major</phrase> <phrase role="identifier">on</phrase> <phrase role="number">5</phrase> <phrase role="special">...</phrase>
<phrase role="number">9</phrase> <phrase role="keyword">if</phrase> <phrase role="identifier">major</phrase> <phrase role="identifier">on</phrase> <phrase role="number">0</phrase><phrase role="special">,</phrase> <phrase role="identifier">minor</phrase> <phrase role="identifier">on</phrase> <phrase role="number">1</phrase><phrase role="special">,</phrase><phrase role="number">2</phrase><phrase role="special">,</phrase><phrase role="number">3</phrase><phrase role="special">,</phrase><phrase role="number">4</phrase><phrase role="special">,</phrase><phrase role="number">5</phrase><phrase role="special">,</phrase><phrase role="number">6</phrase><phrase role="special">,</phrase><phrase role="number">7</phrase><phrase role="special">,</phrase><phrase role="number">8</phrase><phrase role="special">,</phrase><phrase role="number">9</phrase><phrase role="special">,</phrase> <phrase role="identifier">major</phrase> <phrase role="identifier">on</phrase> <phrase role="number">10</phrase>
</programlisting>
      <para>
        This section provide more information about this implementation and some
        of the rationale for desing decisions.
      </para>
      <anchor id="svg_plot.svg_simple_code_example.implementation.svg_specification"/>
      <bridgehead renderas="sect4">
        <link linkend="svg_plot.svg_simple_code_example.implementation.svg_specification">SVG
        Specification</link>
      </bridgehead>
      <para>
        <ulink url="http://www.w3.org/TR/SVG/">SVG version 1.1</ulink> was used in
        the design of this version but <ulink url="http://www.w3.org/TR/SVG12/">SVG
        1.2 draft specification</ulink> is also available and appears to be final
        and designed to be backward compatible. No changes that affect the code produced
        have been detected from a quick perusal of this document. It is probable
        but untested that the svg files produced will also comply with the <ulink
        url="http://www.w3.org/TR/SVGMobile12/">Tiny svg for mobiles specification</ulink>.
      </para>
      <anchor id="svg_plot.svg_simple_code_example.implementation.design"/>
      <bridgehead renderas="sect4">
        <link linkend="svg_plot.svg_simple_code_example.implementation.design">Design</link>
      </bridgehead>
      <para>
        SVG would be a flat format if it weren't for the &lt;g&gt; elements: these
        make it parse into a tree.
      </para>
      <para>
        If each element has its own style (fill, stroke etc) then the .svg file size
        would be increased. (This style is used by other packages that output svg).
      </para>
      <para>
        So the <ulink url="http://www.w3.org/TR/SVG/struct.html#GElement">group element</ulink>
        is used with each type given an id to allow reference back to it.
      </para>
      <para>
        svg_style_details.hpp contains a list of these groups, for example: PLOT_X_AXIS,
        PLOT_TITLE... indexing an array of string document id &quot;yAxis&quot;,
        &quot;title&quot;...
      </para>
      <para>
        and these can be seen, with style information in the output, for example:
      </para>
      
<programlisting>
<phrase role="special">&lt;</phrase><phrase role="identifier">g</phrase> <phrase role="identifier">id</phrase><phrase role="special">=</phrase><phrase role="string">&quot;yAxis&quot;</phrase> <phrase role="identifier">stroke</phrase><phrase role="special">=</phrase><phrase role="string">&quot;rgb(0,0,0)&quot;</phrase><phrase role="special">&gt;&lt;/</phrase><phrase role="identifier">g</phrase><phrase role="special">&gt;</phrase>

<phrase role="special">&lt;</phrase><phrase role="identifier">g</phrase> <phrase role="identifier">id</phrase><phrase role="special">=</phrase><phrase role="string">&quot;title&quot;</phrase><phrase role="special">&gt;</phrase>
<phrase role="special">&lt;</phrase><phrase role="identifier">text</phrase> <phrase role="identifier">x</phrase><phrase role="special">=</phrase><phrase role="string">&quot;250&quot;</phrase> <phrase role="identifier">y</phrase><phrase role="special">=</phrase><phrase role="string">&quot;20&quot;</phrase> <phrase role="identifier">text</phrase><phrase role="special">-</phrase><phrase role="identifier">anchor</phrase><phrase role="special">=</phrase><phrase role="string">&quot; middle&quot;</phrase> <phrase role="identifier">font</phrase><phrase role="special">-</phrase><phrase role="identifier">size</phrase><phrase role="special">=</phrase><phrase role="string">&quot;20&quot;</phrase><phrase role="special">&gt;</phrase><phrase role="identifier">Demo</phrase> <phrase role="number">1D</phrase> <phrase role="identifier">plot</phrase><phrase role="special">&lt;/</phrase><phrase role="identifier">text</phrase><phrase role="special">&gt;&lt;/</phrase><phrase role="identifier">g</phrase><phrase role="special">&gt;</phrase>
</programlisting>
      <para>
        In the general case, the most that occurs grouped together is the style information:
        axis lines all share the same style information, points in a series all share
        the same color information, and this is also a logical grouping. One can
        can add a series, and then come back later and change the &lt;g&gt; element
        above the points, which is a single change, and have the change reflected
        on every point in the series. It seems this is the most logical way to represent
        the data in memory.
      </para>
      <anchor id="svg_plot.svg_simple_code_example.implementation.economising_on__svg_file_size"/>
      <bridgehead renderas="sect4">
        <link linkend="svg_plot.svg_simple_code_example.implementation.economising_on__svg_file_size">Economising
        on .svg File Size</link>
      </bridgehead>
      <para>
        Some of the factors affecting the file size are:
      </para>
      <orderedlist>
        <listitem>
          Excessive precision of data points.
        </listitem>
      </orderedlist>
      <para>
        If plots are to be viewed only at a modest size, then the precision of x
        and y coordinates does not need to be higher than about 1 in 1000, so a precision
        of about 3 decimal digits will suffice.
      </para>
      <para>
        A default of 3 decimal digits has been chosen, but the precision can be controlled
        to permit a higher resolution, for example on a map that is printed at 2000
        dpi. or even only 2 decimal digits for a display on a mobile, where file
        transfer speed may make reducing file size important.
      </para>
      <orderedlist>
        <listitem>
          Excessive data points. When plotting functions, it is sensible to avoid
          using more data points than are justified by the resolution. Again 1 in
          1000 is a typical number, and by using bezier curve fitting, as few as
          100 points should be sufficient to produce a visibly perfectly smooth curve
          for 'well-behaved' functions.
        </listitem>
      </orderedlist>
      <para>
        Plotting extremely large datasets from files may cause memory overflow, as
        with any STL container held in memory. It may be necessary to perform some
        averaging or smoothing, or just using a 'stride' to select, for example,
        every 100th value to be plotted.
      </para>
      <orderedlist>
        <listitem>
          Redundant style specifications.
        </listitem>
      </orderedlist>
      <para>
        The use of the g or group element has been used to try to reduce repeated
        (and thus redundant) style specifications. More efficient use of groups may
        be possible.
      </para>
      <orderedlist>
        <listitem>
          Not using default style and attributes where possible.
        </listitem>
      </orderedlist>
      <para>
        Some effort has been made to use defaults, but more may be possible.
      </para>
      <anchor id="svg_plot.svg_simple_code_example.implementation.adding_document_information_to_the_svg_image_files"/>
      <bridgehead renderas="sect4">
        <link linkend="svg_plot.svg_simple_code_example.implementation.adding_document_information_to_the_svg_image_files">Adding
        document information to the svg Image files</link>
      </bridgehead>
      <para>
        Several ways of adding useful information to the svg document are provided.
        If the strings are null (the default) nothing is output.
      </para>
      <para>
        Member function svg&amp; description(const std::string) allows output like:
      </para>
      
<programlisting>
<phrase role="special">&lt;</phrase><phrase role="identifier">desc</phrase><phrase role="special">&gt;</phrase><phrase role="identifier">My</phrase> <phrase role="identifier">Document</phrase> <phrase role="identifier">description</phrase><phrase role="special">&lt;/</phrase><phrase role="identifier">desc</phrase><phrase role="special">&gt;</phrase>

<phrase role="identifier">svg</phrase><phrase role="special">&amp;</phrase> <phrase role="identifier">document_title</phrase><phrase role="special">(</phrase><phrase role="keyword">const</phrase> <phrase role="identifier">std</phrase><phrase role="special">::</phrase><phrase role="identifier">string</phrase><phrase role="special">)</phrase>

<phrase role="special">&lt;</phrase><phrase role="identifier">title</phrase><phrase role="special">&gt;</phrase><phrase role="identifier">My</phrase> <phrase role="identifier">Document</phrase> <phrase role="identifier">title</phrase><phrase role="special">&lt;/</phrase><phrase role="identifier">title</phrase><phrase role="special">&gt;</phrase>
</programlisting>
      <para>
        (Note that this is <emphasis role="bold">not</emphasis> the same as the title
        of the plot.)
      </para>
      <anchor id="svg_plot.svg_simple_code_example.implementation.adding_copyright_and_license_conditions_for_the_svg_image_files"/>
      <bridgehead renderas="sect4">
        <link linkend="svg_plot.svg_simple_code_example.implementation.adding_copyright_and_license_conditions_for_the_svg_image_files">Adding
        Copyright and License conditions for the SVG Image files</link>
      </bridgehead>
      <para>
        In general, setting values for items like copyright_holder will ensure that
        they appear in the SVG document both as XML and as XML comment. If none are
        set, nothing will be output, to minimize file size.
      </para>
      <para>
        <ulink url="http://www.w3.org/TR/2004/WD-SVG12-20041027/nonvisual.html">www.w3.org/TR/2004/WD-SVG12-20041027</ulink>
        discusses primary documents, of type .svg in section 17.3 Adding Copyright
        information to an SVG document: SVG encourages the use of a common metadata
        format for inclusion of copyright information. Metadata relevant to the data
        copyright of the entire document should be added to metadata element of the
        topmost svg element. This allows the author to unambiguously state the licensing
        terms for the entire document. The scheme may also be used elsewhere in the
        document, for pieces that have different licensing. For example, an SVG font
        may have specific licensing details expressed in its own metadata element.
      </para>
      <para>
        Note that inclusion of this metadata does not provide the author with a method
        in which to protect or enforce their copyright, it simply bundles the copyright
        information with the content in a defined manner. Providing methods, technical
        or non-technical, for data protection is currently beyond the scope of the
        SVG specification.
      </para>
      <para>
        This does not exclude the use of other metadata schemes.
      </para>
      <para>
        A simple way of adding metadata for copyright is provided by functions to
        set
      </para>
      
<programlisting>
<phrase role="identifier">copyright_holder</phrase><phrase role="special">(</phrase><phrase role="identifier">std</phrase><phrase role="special">::</phrase><phrase role="identifier">string</phrase><phrase role="special">);</phrase>
<phrase role="identifier">copyright_date</phrase><phrase role="special">(</phrase><phrase role="identifier">std</phrase><phrase role="special">::</phrase><phrase role="identifier">string</phrase><phrase role="special">);</phrase>
</programlisting>
      <para>
        (as well as description and document_title, and .svg filename if any).
      </para>
      <para>
        For example, setting these will incorporate an XML comment
      </para>
      
<programlisting>
<phrase role="special">&lt;!--</phrase> <phrase role="identifier">SVG</phrase> <phrase role="identifier">Plot</phrase> <phrase role="identifier">Copyright</phrase> <phrase role="identifier">Paul</phrase> <phrase role="identifier">A</phrase><phrase role="special">.</phrase> <phrase role="identifier">Bristow</phrase> <phrase role="number">2007</phrase> <phrase role="special">--&gt;</phrase> 
</programlisting>
      <para>
        and also as meta data:
      </para>
      
<programlisting>
<phrase role="special">&lt;</phrase><phrase role="identifier">meta</phrase> <phrase role="identifier">name</phrase><phrase role="special">=</phrase><phrase role="string">&quot;copyright&quot;</phrase> <phrase role="identifier">content</phrase><phrase role="special">=</phrase><phrase role="string">&quot;Paul A. Bristow&quot;</phrase> <phrase role="special">/&gt;</phrase>
<phrase role="special">&lt;</phrase><phrase role="identifier">meta</phrase> <phrase role="identifier">name</phrase><phrase role="special">=</phrase><phrase role="string">&quot;date&quot;</phrase> <phrase role="identifier">content</phrase><phrase role="special">=</phrase><phrase role="string">&quot;2007&quot;</phrase> <phrase role="special">/&gt;</phrase>
</programlisting>
      <para>
        The Creative Commons Metadata Set is also provided as an option in this implementation,
        following <ulink url="http://www.ibm.com/developerworks/xml/library/x-think18.html">this
        example.</ulink>
      </para>
      <para>
        The <ulink url="http://creativecommons.org/about/licenses">Creative Commons
        License</ulink> is one method of providing license terms in a machine-readable
        format.
      </para>
      <para>
        Typical data added to the file would be XML like this:
      </para>
      
<programlisting>
<phrase role="special">&lt;</phrase><phrase role="identifier">metadata</phrase><phrase role="special">&gt;</phrase>
  <phrase role="special">&lt;</phrase><phrase role="identifier">rdf</phrase><phrase role="special">:</phrase><phrase role="identifier">RDF</phrase> <phrase role="identifier">xmlns</phrase><phrase role="special">:</phrase><phrase role="identifier">cc</phrase><phrase role="special">=</phrase><phrase role="string">&quot;http://web.resource.org/cc/&quot;</phrase>
           <phrase role="identifier">xmlns</phrase><phrase role="special">:</phrase><phrase role="identifier">dc</phrase><phrase role="special">=</phrase><phrase role="string">&quot;http://purl.org/dc/elements/1.1/&quot;</phrase>
           <phrase role="identifier">xmlns</phrase><phrase role="special">:</phrase><phrase role="identifier">rdf</phrase><phrase role="special">=</phrase><phrase role="string">&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;</phrase><phrase role="special">&gt;</phrase>
    <phrase role="special">&lt;</phrase><phrase role="identifier">cc</phrase><phrase role="special">:</phrase><phrase role="identifier">work</phrase> <phrase role="identifier">rdf</phrase><phrase role="special">:</phrase><phrase role="identifier">about</phrase><phrase role="special">=</phrase><phrase role="string">&quot;filename.svg&quot;</phrase><phrase role="special">&gt;</phrase>        
      <phrase role="special">&lt;!--</phrase> <phrase role="identifier">insert</phrase> <phrase role="identifier">filename</phrase> <phrase role="keyword">or</phrase> <phrase role="identifier">title</phrase> <phrase role="identifier">here</phrase> <phrase role="special">--&gt;</phrase>
      <phrase role="special">&lt;</phrase><phrase role="identifier">dc</phrase><phrase role="special">:</phrase><phrase role="identifier">title</phrase><phrase role="special">&gt;</phrase><phrase role="identifier">Plot</phrase> <phrase role="identifier">title</phrase><phrase role="special">&lt;/</phrase><phrase role="identifier">dc</phrase><phrase role="special">:</phrase><phrase role="identifier">title</phrase><phrase role="special">&gt;</phrase>
      <phrase role="special">&lt;</phrase><phrase role="identifier">dc</phrase><phrase role="special">:</phrase><phrase role="identifier">creator</phrase><phrase role="special">&gt;</phrase><phrase role="identifier">Boost</phrase><phrase role="special">.</phrase><phrase role="identifier">Plot</phrase><phrase role="special">&lt;/</phrase><phrase role="identifier">dc</phrase><phrase role="special">:</phrase><phrase role="identifier">creator</phrase><phrase role="special">&gt;</phrase>
      <phrase role="special">&lt;</phrase><phrase role="identifier">dc</phrase><phrase role="special">:</phrase><phrase role="identifier">author</phrase><phrase role="special">&gt;</phrase><phrase role="identifier">Paul</phrase> <phrase role="identifier">A</phrase><phrase role="special">.</phrase> <phrase role="identifier">Bristow</phrase><phrase role="special">&lt;/</phrase><phrase role="identifier">dc</phrase><phrase role="special">:</phrase><phrase role="identifier">author</phrase><phrase role="special">&gt;</phrase>
      <phrase role="special">&lt;</phrase><phrase role="identifier">dc</phrase><phrase role="special">:</phrase><phrase role="identifier">format</phrase><phrase role="special">&gt;</phrase><phrase role="identifier">application</phrase><phrase role="special">/</phrase><phrase role="identifier">xhtml</phrase><phrase role="special">+</phrase><phrase role="identifier">xml</phrase><phrase role="special">+</phrase><phrase role="identifier">svg</phrase><phrase role="special">&lt;/</phrase><phrase role="identifier">dc</phrase><phrase role="special">:</phrase><phrase role="identifier">format</phrase><phrase role="special">&gt;</phrase>
        <phrase role="special">&lt;</phrase><phrase role="identifier">cc</phrase><phrase role="special">:</phrase><phrase role="identifier">license</phrase> <phrase role="identifier">rdf</phrase><phrase role="special">:</phrase><phrase role="identifier">about</phrase><phrase role="special">=</phrase><phrase role="string">&quot;http://creativecommons.org/licenses/by-sa/.0/&quot;</phrase><phrase role="special">&gt;</phrase>
           <phrase role="special">&lt;</phrase><phrase role="identifier">cc</phrase><phrase role="special">:</phrase><phrase role="identifier">requires</phrase> <phrase role="identifier">rdf</phrase><phrase role="special">:</phrase><phrase role="identifier">resource</phrase><phrase role="special">=</phrase><phrase role="string">&quot;http://web.resource.org/cc/Notice&quot;</phrase><phrase role="special">/&gt;</phrase>
           <phrase role="special">&lt;</phrase><phrase role="identifier">cc</phrase><phrase role="special">:</phrase><phrase role="identifier">permits</phrase> <phrase role="identifier">rdf</phrase><phrase role="special">:</phrase><phrase role="identifier">resource</phrase><phrase role="special">=</phrase><phrase role="string">&quot;http://web.resource.org/cc/Reproduction&quot;</phrase><phrase role="special">/&gt;</phrase>
           <phrase role="special">&lt;</phrase><phrase role="identifier">cc</phrase><phrase role="special">:</phrase><phrase role="identifier">permits</phrase> <phrase role="identifier">rdf</phrase><phrase role="special">:</phrase><phrase role="identifier">resource</phrase><phrase role="special">=</phrase><phrase role="string">&quot;http://web.resource.org/cc/Distribution&quot;</phrase><phrase role="special">/&gt;</phrase>
           <phrase role="special">&lt;</phrase><phrase role="identifier">cc</phrase><phrase role="special">:</phrase><phrase role="identifier">requires</phrase> <phrase role="identifier">rdf</phrase><phrase role="special">:</phrase><phrase role="identifier">resource</phrase><phrase role="special">=</phrase><phrase role="string">&quot;http://web.resource.org/cc/Attribution&quot;</phrase><phrase role="special">/&gt;</phrase>
           <phrase role="special">&lt;</phrase><phrase role="identifier">cc</phrase><phrase role="special">:</phrase><phrase role="identifier">permits</phrase> <phrase role="identifier">rdf</phrase><phrase role="special">:</phrase><phrase role="identifier">resource</phrase><phrase role="special">=</phrase><phrase role="string">&quot;http://web.resource.org/cc/CommercialUse&quot;</phrase><phrase role="special">/&gt;</phrase>
        <phrase role="special">&lt;/</phrase><phrase role="identifier">cc</phrase><phrase role="special">:</phrase><phrase role="identifier">license</phrase><phrase role="special">&gt;</phrase>
    <phrase role="special">&lt;/</phrase><phrase role="identifier">cc</phrase><phrase role="special">:</phrase><phrase role="identifier">work</phrase><phrase role="special">&gt;</phrase>
  <phrase role="special">&lt;/</phrase><phrase role="identifier">rdf</phrase><phrase role="special">:</phrase><phrase role="identifier">RDF</phrase><phrase role="special">&gt;</phrase>
<phrase role="special">&lt;/</phrase><phrase role="identifier">metadata</phrase><phrase role="special">&gt;</phrase>
</programlisting>
      <para>
        cc:permits can also be cc:requires or cc:prohibits, as required.
      </para>
      <para>
        A license that permits reproduction, distribution and commercial use, but
        requires both notice &amp; attribution is probably most suitable for Boost
        documents as is therefore chosen as the default.
      </para>
      <para>
        This license can be included by calling svg member function <code><phrase
        role="identifier">is_license</phrase><phrase role="special">(</phrase><phrase
        role="keyword">true</phrase><phrase role="special">)</phrase></code>. If
        this license will be included can be discovered by calling svg member function
        <code><phrase role="identifier">is_license</phrase><phrase role="special">()</phrase></code>.
      </para>
      <para>
        Similarly functions const std::string license_reproduction();` const std::string
        license_distribution(); const std::string license_attribution(); const std::string
        license_commercialuse() allow you to find the current license requirements.
      </para>
      <para>
        <ulink url="http://web.resource.org/rss/1.0/modules/cc/">RDF</ulink> is the
        metadata format chosen by <ulink url="http://creativecommons.org">Creative
        Commons</ulink>.
      </para>
      <para>
        and references the resource (cc) at <ulink url="http://web.resource.org/cc/">http://web.resource.org/cc/</ulink>
        using the definition of its XML namespace:
      </para>
      
<programlisting>
<phrase role="identifier">rdf</phrase><phrase role="special">:</phrase><phrase role="identifier">RDF</phrase> <phrase role="identifier">xmlns</phrase><phrase role="special">:</phrase><phrase role="identifier">cc</phrase><phrase role="special">=</phrase><phrase role="string">&quot;http://web.resource.org/cc/&quot;</phrase>
</programlisting>
      <para>
        Options are <ulink url="http://web.resource.org/rss/1.0/modules/cc/">summarized</ulink>.
      </para>
      <para>
        A way of seting the author is also provided, in case the copyright has been
        assigned to someone else, for example a publisher. svg set and get member
        functions:
      </para>
      
<programlisting>
<phrase role="identifier">author</phrase><phrase role="special">(</phrase><phrase role="keyword">const</phrase> <phrase role="identifier">std</phrase><phrase role="special">::</phrase><phrase role="identifier">string</phrase><phrase role="special">);</phrase>
<phrase role="keyword">const</phrase> <phrase role="identifier">std</phrase><phrase role="special">::</phrase><phrase role="identifier">string</phrase> <phrase role="identifier">author</phrase><phrase role="special">();</phrase>
</programlisting>
      <anchor id="svg_plot.svg_simple_code_example.implementation.using_unicode_symbols__usually_math_sumbols_and_greek_letters_"/>
      <bridgehead renderas="sect4">
        <link linkend="svg_plot.svg_simple_code_example.implementation.using_unicode_symbols__usually_math_sumbols_and_greek_letters_">Using
        Unicode Symbols (usually Math Sumbols and Greek letters)</link>
      </bridgehead>
      <para>
        Unicode symbols that work on most browsers in html are listed at:
      </para>
      <para>
        <ulink url="boost\math_toolkit\libs\math\doc\sf_and_dist\html4_symbols.qbk">html4_symbols</ulink>,
        <ulink url="http://www.htmlhelp.com/reference/html40/entities/symbols.html">reference/html40/entities/symbols</ulink>,
        and <ulink url="http://www.alanwood.net/demos/ent4_frame.html">demos</ulink>.
      </para>
      <para>
        However support for Unicode in SVG is much less fully implemented and displayed
        results are variable.
      </para>
      <para>
        The Unicode value in decimal 9830 or hex x2666 must be prefixed with <code><phrase
        role="special">&amp;</phrase> </code>and terminated with <code><phrase role="special">;</phrase></code>
        for example, <code><phrase role="special">&amp;</phrase><phrase role="identifier">x2666</phrase></code>;
        for xml and then enveloped with &quot;&quot; to convert to a const std::string,
        for example: &quot;&amp;#x2666;&quot; for diamond.
      </para>
      <para>
        Thus diamond can be used a point marker.
      </para>
      <para>
        Similarly for greek in title, legend and axes:
      </para>
      
<programlisting>
<phrase role="special">.</phrase><phrase role="identifier">legend_title</phrase><phrase role="special">(</phrase><phrase role="string">&quot;My Legend &amp;#956;&quot;</phrase><phrase role="special">)</phrase> <phrase role="comment">// generates &lt;em&gt;&amp;#956;&lt;/em&gt;  greek mu 
</phrase></programlisting>
      <anchor id="svg_plot.svg_simple_code_example.implementation.subscript_and_superscript_in_title__legend_and_labels"/>
      <bridgehead renderas="sect4">
        <link linkend="svg_plot.svg_simple_code_example.implementation.subscript_and_superscript_in_title__legend_and_labels">Subscript
        and superscript in title, legend and labels</link>
      </bridgehead>
      <para>
        It is very common need to show superscript, in units for example, area (m[super
        2]), and subscript for a[sub 0, a[sub 2]...
      </para>
      <para>
        Sadly, although these needs are both OK with html, showing sub and superscripts
        in svg doesn't work well as yet because browsers don't handle &lt;sub&gt;
        or &lt;sup&gt;, nor baseline-shift.
      </para>
      <para>
        The only reasonably widely supported feature is Unicode symbols for superscript
        1, 2 and 3 (only). For example, Latin1_symbols: sup1 &amp;185; sup2 &amp;178;
        sup3 &amp;179; work on Firefox &amp; IE6/7.
      </para>
      <para>
        But&amp;#2071; &amp;#2075; &amp;#2090; - show just square boxes.
      </para>
      <para>
        The SVG specification covers &lt;sub, &lt;super&gt;, and the general baseline-shift,
        but these are just not implemented yet.
      </para>
      <para>
        <ulink url="http://unicode.org/reports/tr25/#_Toc28">2.8 Superscripts and
        Subscripts</ulink> <ulink url="http://www.unicode.org/charts/symbols.html">symbols</ulink>
      </para>
      <para>
        At Nov 2007, the following commands don't have very useful coverage. &lt;tspan
        baseline-shift = "50%" font-stretch = "wider" font-variant = "small-caps"
        &gt; 3 &lt;/tspan&gt; baseline-shift = "50%" &amp; super and subscript down't
        work on Firefox 2. but DO on IE6 (and probably 7) font-stretch = "wider"
        No effect Firefox or IE6. font-variant = "small-caps" No effect Firefox or
        IE6. &lt;tspan baseline-shift = "50%" &gt;3/4 &lt;/tspan&gt;
      </para>
      <para>
        This has been reported as a bug to Mozilla, and is regarded a duplicate of
        other reports on sub and super https://bugzilla.mozilla.org/show_bug.cgi?id=401102
      </para>
      <para>
        but baseline-shift has no effect on Firefox 2. See http://www.imagemagick.org/discourse-server/viewtopic.php?f=3&amp;t=7410&amp;view=previous
      </para>
      <para>
        The use of &lt;tspan to shift characters <emphasis role="bold">is</emphasis>
        feasible, as shown <ulink url="http://www.w3.org/TR/SVG/images/text/tspan02.svg">in
        this example</ulink>, which displays correctly in all browsers,
      </para>
      <para>
        and it is also possible to use
      </para>
      
<programlisting>
<phrase role="special">&lt;</phrase><phrase role="identifier">svg</phrase><phrase role="special">:</phrase><phrase role="identifier">g</phrase> <phrase role="identifier">transform</phrase><phrase role="special">=</phrase><phrase role="string">&quot;translate(5.062500, -5.367188)&quot;</phrase><phrase role="special">&gt;</phrase>
</programlisting>
      <para>
        to shift the next letter up, but these parameters are font-size related,*
        and the svg most verbose.
      </para>
      <para>
        None of these method provides a <emphasis role="bold">convenient</emphasis>
        method of creating the right string for titles, legends, or axis labels,
        but it may be possible to devise code that does.
      </para>
      <anchor id="svg_plot.svg_simple_code_example.implementation.coding_style"/>
      <bridgehead renderas="sect4">
        <link linkend="svg_plot.svg_simple_code_example.implementation.coding_style">Coding
        style</link>
      </bridgehead>
      <para>
        In general <ulink url="http://www.boost.org/libs/spirit/doc/style_guide.html">Boost
        coding style guide</ulink> and <ulink url="http://groups.yahoo.com/group/boost/files/coding_guidelines.html">Boost
        coding guidelines</ulink> has been used.
      </para>
      <para>
        But some work is needed to rename arguments named with lading underscores
        in violation of guidance 2.14:
      </para>
      <para>
        Names containing double underscores (
<programlisting>
<phrase role="identifier">__</phrase><phrase role="char">''</phrase><phrase role="special">)</phrase> <phrase role="keyword">or</phrase> <phrase role="identifier">beginning</phrase> <phrase role="identifier">with</phrase> <phrase role="identifier">single</phrase> <phrase role="identifier">underscores</phrase> <phrase role="special">(</phrase></programlisting>
        _'') are entirely forbidden. These are reserved to the C++ implementation
        in various contexts.
      </para>
      <para>
        and also
      </para>
      <para>
        2.10. Data members should have a 
<programlisting>
<phrase role="identifier">m_</phrase><phrase role="char">''</phrase> <phrase role="identifier">prefix</phrase><phrase role="special">,</phrase> <phrase role="identifier">to</phrase> <phrase role="identifier">distinguish</phrase> <phrase role="identifier">them</phrase>
<phrase role="identifier">from</phrase> <phrase role="identifier">an</phrase> <phrase role="identifier">otherwise</phrase><phrase role="special">-</phrase><phrase role="identifier">identical</phrase> <phrase role="identifier">member</phrase> <phrase role="identifier">function</phrase> <phrase role="identifier">name</phrase>
<phrase role="keyword">and</phrase> <phrase role="identifier">to</phrase> <phrase role="identifier">clarify</phrase> <phrase role="identifier">their</phrase> <phrase role="identifier">provenance</phrase> <phrase role="identifier">in</phrase> <phrase role="identifier">code</phrase> <phrase role="identifier">which</phrase> <phrase role="identifier">uses</phrase> <phrase role="identifier">them</phrase><phrase role="special">.</phrase>
<phrase role="identifier">Non</phrase><phrase role="special">-</phrase><phrase role="identifier">member</phrase> <phrase role="identifier">names</phrase> <phrase role="identifier">must</phrase> <phrase role="keyword">not</phrase> <phrase role="identifier">have</phrase> <phrase role="identifier">an</phrase> </programlisting>
        m_'' prefix.
      </para>
      <para>
        Some data members end with _ to avoid name clashes, another widely used convention.
      </para>
    </section>
    <section id="svg_plot.svg_simple_code_example.acknowledgements">
      <title><link linkend="svg_plot.svg_simple_code_example.acknowledgements"> Acknowledgements</link></title>
      <para>
        I would like to thank the following people:
      </para>
      <itemizedlist>
        <listitem>
          <emphasis role="bold">Google</emphasis>: For offering Summer of Code, and
          giving me the opportunity to do something I never would have done otherwise.
        </listitem>
        <listitem>
          <emphasis role="bold">Joaquín Mª López Muñoz</emphasis>: My GSoC mentor.
          His proofreading and advice helped shape the project into what it is today,
          and prevented small problems from becoming major problems.
        </listitem>
        <listitem>
          <emphasis role="bold">Paul A. Bristow</emphasis>: For showing an active
          interest, offering literally dozens of minor and major features he'd like
          to see, and for helping with Boost.Build.
        </listitem>
        <listitem>
          <emphasis role="bold">Matias Capeletto</emphasis>: For showing an active
          interest, and offering feature suggestions.
        </listitem>
        <listitem>
          <emphasis role="bold">Sarah Braun</emphasis>: For helping me pick colors
          for examples.
        </listitem>
        <listitem>
          <emphasis role="bold">Boost Community</emphasis>: For all of the encouragement,
          suggestions, disagreements, and patience.
        </listitem>
      </itemizedlist>
    </section>
  </article>
  