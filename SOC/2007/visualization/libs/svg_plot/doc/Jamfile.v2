# jamfile.v2 for SVG_plot using Doxygen

# Copyright Paul A. Bristow 2009
# Derived from Copyright Eric Niebler 2005 Boost xPressive docs.

# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt
# or copy at http://www.boost.org/LICENSE_1_0.txt)

# Reminder: whitespace MUST terminate variable name!
# so spaces or newlines BEFORE ; and : and AFTER too.
# (because : and ; are keywords!)

# SVG plot documentation as html and pdf from Quickbook, using Doxygen.
# AND auto-indexing.

# project boost/doc ;

using quickbook ;
using doxygen ;
using auto-index ;

#path-constant local-boost-root : [ get_boost_root ] ;
#path-constant pdf-images : $(local-boost-root)/doc/src/images ;
path-constant images_location : html ; # location of SVG images referenced by Quickbook.

xml svg_plot
  :
    svg_plot.qbk
  :
;

doxygen autodoc
  :
    [ glob ../../../boost/svg_plot/*.hpp ]
    [ glob ../../../boost/svg_plot/detail/*.hpp ]
  :
    <doxygen:param>TAB_SIZE=2
    <doxygen:param>EXTRACT_ALL=YES
    <doxygen:param>HIDE_UNDOC_MEMBERS=NO
    <doxygen:param>INLINE_INHERITED_MEMB=YES # Show all inherited members of a class in the documentation of that class as if those members were ordinary class members.
    <doxygen:param>SORT_MEMBER_DOCS=YES
    <doxygen:param>EXTRACT_PRIVATE=YES
    <doxygen:param>ENABLE_PREPROCESSING=YES
    <doxygen:param>MACRO_EXPANSION=YES
    <doxygen:param>EXPAND_ONLY_PREDEF=YES
    <doxygen:param>SEARCH_INCLUDES=YES
    <doxygen:param>SHOW_INCLUDE_FILES=NO # List of the files that are included by a file in the documentation of that file.
    <doxygen:param>REPEAT_BRIEF=YES # Prepend the brief description of a member or function before the detailed description
    <doxygen:param>BRIEF_MEMBER_DESC=YES # Include brief member descriptions after the members that are listed in the file and class
    <doxygen:param> MULTILINE_CPP_IS_BRIEF = YES # Treat a multi-line C++ special comment block (i.e. a block of //! or /// comments) as a brief description.
    # May be best to always use \brief and \details to avoid ambiguity?
    <doxygen:param>INCLUDE_PATH=$(BOOST_ROOT)
    <doxygen:param>WARN_LOGFILE=../../../libs/svg_plot/doc/doxywarnings.log
;
    #<doxygen:param>"PREDEFINED=\"BOOST_DEDUCED_TYPENAME=typename\" "
# See Doxygen configuration for detailed explanation of these options

# import boostbook : boostbook ;

boostbook standalone
  :
    svg_plot
  :

    # This one turns on indexing:
    <auto-index>on
    # Choose indexing method for pdf's:
    <format>pdf:<auto-index-internal>off
    # Choose indexing method for html:
    <format>html:<auto-index-internal>on
    # Set the name of the script file to use:
    <auto-index-script>index.idx

  # Path for links to Boost:
  #<xsl:param>boost.root=$(local-boost-root) # better?
  <xsl:param>boost.root=../../../../../../../../boost_trunk
  # Path for libraries index:
  <xsl:param>boost.libraries=I:/boost_trunk/libs/libraries.htm
  # Use the main Boost stylesheet:
  <xsl:param>html.stylesheet=../../../../../../../../boost_trunk/doc/html/boostbook.css
  #<xsl:param>html.stylesheet=$(local-boost-root)/doc/html/boostbook.css #?  better
  # Use the svg_plot local Boost stylesheet:
  # <xsl:param>html.stylesheet=./html/boostbook.css

  # Some general style settings:
  <xsl:param>table.footnote.number.format=1
  <xsl:param>footnote.number.format=1

  # HTML options first:
  # Use graphics not text for navigation:
  <xsl:param>navig.graphics=1
  # How far down we chunk nested sections, basically all of them:
  <xsl:param>chunk.section.depth=10
  # Don't put the first section on the same page as the TOC:
  <xsl:param>chunk.first.sections=1
  # How far down sections get TOC's
  <xsl:param>toc.section.depth=10
  # Max depth in each TOC:
  <xsl:param>toc.max.depth=4
  # How far down we go with TOC's
  <xsl:param>generate.section.toc.level=10
  #<xsl:param>root.filename="svg_plot"

  # <xsl:param>project.root=http://beta.boost.org/development
  # <xsl:param>annotation.support=1
  # <xsl:param>quickbook.source.style.show="'true'"

  # PDF Options:
  # TOC Generation
  <xsl:param>fop1.extensions=0
  <format>pdf:<xsl:param>xep.extensions=1
  <format>pdf:<xsl:param>fop.extensions=0

  # No indent on body text:
  <format>pdf:<xsl:param>body.start.indent=0pt
  # Margin size:
  <format>pdf:<xsl:param>page.margin.inner=0.5in
  # Margin size:
  <format>pdf:<xsl:param>page.margin.outer=0.5in
  # Paper type = A4
  <format>pdf:<xsl:param>paper.type=A4
  # Yes, we want graphics for admonishments:
  <xsl:param>admon.graphics=1
  # Set this one for PDF generation *only*:
  # default pnd graphics are awful in PDF form,
  # better use SVG's instead:
  <format>pdf:<xsl:param>admon.graphics.extension=".svg"
  <format>pdf:<xsl:param>use.role.for.mediaobject=1
  <format>pdf:<xsl:param>preferred.mediaobject.role=print
  <format>pdf:<xsl:param>img.src.path=$(images_location)/
  <format>pdf:<xsl:param>admon.graphics.path=$(images_location)/images/
  <format>pdf:<xsl:param>draft.mode="no"

  <dependency>autodoc

  ;

# install html : ../../../doc/html/boostbook.css ;
# install ../ : ../../../boost.png ;

# install pdf-install : standalone : <location>. <install-type>PDF ;

