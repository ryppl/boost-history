#include <boost/preprocessor/iterate.hpp>

#define SIGNAL_NETWORK_TEMPLATE_CLASS_IMPL BOOST_PP_CAT(SIGNAL_NETWORK_TEMPLATE_CLASS,_impl)
#define SIGNAL_NETWORK_TEMPLATE_FILE_TO_INCLUDE <boost/signal_network/detail/BOOST_PP_CAT(SIGNAL_NETWORK_TEMPLATE_CLASS,_template.hpp>)

#ifdef SIGNAL_NETWORK_TEMPLATE_ITERATE2
#define SIGNAL_NETWORK_TEMPLATE_INPUTS int Input,
#define SIGNAL_NETWORK_TEMPLATE_INPUTS_LIST Input,
#define SIGNAL_NETWORK_TEMPLATE_INPUTS_VALUES _inputs,
#else
#define SIGNAL_NETWORK_TEMPLATE_INPUTS
#define SIGNAL_NETWORK_TEMPLATE_INPUTS_LIST
#define SIGNAL_NETWORK_TEMPLATE_INPUTS_VALUES
#endif // SIGNAL_NETWORK_ITERATE2

#ifdef SIGNAL_NETWORK_TEMPLATE_TYPENAME_T
#define SIGNAL_NETWORK_TEMPLATE_TYPENAMES typename T,
#define SIGNAL_NETWORK_TEMPLATE_TYPENAMES_LIST T,
#else
#define SIGNAL_NETWORK_TEMPLATE_TYPENAMES
#define SIGNAL_NETWORK_TEMPLATE_TYPENAMES_LIST
#endif // SIGNAL_NETWORK_TEMPLATE_TYPENAME_T

#ifdef SIGNAL_NETWORK_TEMPLATE_BASE
#define SIGNAL_NETWORK_TEMPLATE_INHERIT : public SIGNAL_NETWORK_TEMPLATE_BASE
#else
#define SIGNAL_NETWORK_TEMPLATE_BASE
#define SIGNAL_NETWORK_TEMPLATE_INHERIT
#endif // SIGNAL_NETWORK_TEMPLATE_INHERIT_FILTER

namespace boost {
namespace signal_network {
namespace signet {
namespace detail {

template<SIGNAL_NETWORK_TEMPLATE_INPUTS SIGNAL_NETWORK_TEMPLATE_TYPENAMES typename Signature, int Arity
#ifndef SIGNAL_NETWORK_TEMPLATE_NO_RETURNS
	, typename Enable=void
#endif // SIGNAL_NETWORK_TEMPLATE_NO_RETURNS
>
struct SIGNAL_NETWORK_TEMPLATE_CLASS_IMPL;

} // namespace detail
} // namespace signet
} // namespace signal_network
} // namespace boost

#ifdef SIGNAL_NETWORK_TEMPLATE_ITERATE2
#define BOOST_PP_ITERATION_PARAMS_1 (3,(0,3,<boost/signal_network/detail/template_loader2.hpp>))
#else
#define BOOST_PP_ITERATION_PARAMS_1 (3,(0,3,<boost/signal_network/detail/template_loader.hpp>))
#endif // SIGNAL_NETWORK_TEMPLATE_ITERATE2
#include BOOST_PP_ITERATE()
#undef BOOST_PP_ITERATION_PARAMS_1

#ifndef SIGNAL_NETWORK_TEMPLATE_NO_MAIN_CLASS

#define SIGNAL_NETWORK_TEMPLATE_CLASS_IMPL_BASE detail::SIGNAL_NETWORK_TEMPLATE_CLASS_IMPL \
	<SIGNAL_NETWORK_TEMPLATE_INPUTS_LIST SIGNAL_NETWORK_TEMPLATE_TYPENAMES_LIST Signature, boost::function_traits<Signature>::arity>

namespace boost {
namespace signal_network {
namespace signet {
#ifdef SIGNAL_NETWORK_TEMPLATE_DETAIL
namespace detail {
#endif // SIGNAL_NETWORK_TEMPLATE_DETAIL

template<SIGNAL_NETWORK_TEMPLATE_INPUTS SIGNAL_NETWORK_TEMPLATE_TYPENAMES typename Signature
#ifdef SIGNAL_NETWORK_TEMPLATE_ITERATE_MAIN_CLASS
, typename Enable = void
#endif
>
class SIGNAL_NETWORK_TEMPLATE_CLASS;

#ifdef SIGNAL_NETWORK_TEMPLATE_ITERATE_MAIN_CLASS
#define BOOST_PP_ITERATION_PARAMS_1 (3,(0,3,<boost/signal_network/detail/main_class_loader.hpp>))
#include BOOST_PP_ITERATE()
#undef BOOST_PP_ITERATION_PARAMS_1
#else
#include  <boost/signal_network/detail/main_class_loader.hpp>
#endif

#ifdef SIGNAL_NETWORK_TEMPLATE_DETAIL
} // detail
#endif
} // namespace signet
} // namespace signal_network
} // namespace boost

#undef SIGNAL_NETWORK_TEMPLATE_CLASS_IMPL_BASE

#endif // SIGNAL_NETWORK_TEMPLATE_NO_MAIN_CLASS

#undef SIGNAL_NETWORK_TEMPLATE_ITERATE2
#undef SIGNAL_NETWORK_TEMPLATE_INPUTS
#undef SIGNAL_NETWORK_TEMPLATE_INPUTS_LIST
#undef SIGNAL_NETWORK_TEMPLATE_INPUTS_VALUES
#undef SIGNAL_NETWORK_TEMPLATE_DETAIL
#undef SIGNAL_NETWORK_TEMPLATE_NO_MAIN_CLASS
#undef SIGNAL_NETWORK_TEMPLATE_TYPENAME_T
#undef SIGNAL_NETWORK_TEMPLATE_TYPENAMES
#undef SIGNAL_NETWORK_TEMPLATE_TYPENAMES_LIST
#undef SIGNAL_NETWORK_TEMPLATE_INHERIT
#undef SIGNAL_NETWORK_TEMPLATE_BASE
#undef SIGNAL_NETWORK_TEMPLATE_NO_RETURNS
#undef SIGNAL_NETWORK_TEMPLATE_FILE_TO_INCLUDE
#undef SIGNAL_NETWORK_TEMPLATE_CLASS_IMPL
#undef SIGNAL_NETWORK_TEMPLATE_ITERATE_MAIN_CLASS
#undef SIGNAL_NETWORK_TEMPLATE_CLASS
