[section:connections Functions, operators, and helper classes]

[section:connect connect function]

[*See also]: [funcref boost::signals::connect connect function reference.]

[DataflowSignals] provides a [connect] function in the `boost::signals`
namespace, which connects a [SignalProducer] and [SignalConsumer]
which are [Connectable].

Given a [SignalProducer] `p` and [SignalConsumer] `c`,

    connect(p,c);
    
will create a connection between the two.  The examples in this documentation typically
use [operators] to create connections.  The [operators] use the [connect] function
directly, and can be replaced by invocations of [connect] if preferred.


    #include <boost/signal_network/connection/slot_selector.hpp>

will add support for [slot_selector] objects as signal consumers.  In addition, they can be used
as signal producers if the underlying object is a signal producer.

    #include <boost/signal_network/connection/slot_selector_map.hpp>
    
will add support for fusion maps from signatures to [slot_selector] objects (and perhaps to any signal consumer,
not tested yet) as signal consumers.  This can be used to pack multiple slots of an object together, and then make
connections based on the appropriate signature (see the send_slot function of [storage] as an example).
In addition, fusion maps can be used as signal producers if the underlying object of the front element is a signal
producer.

[test_connect]

[endsect]

[section:operators connection operators]

[heading Chaining]

Chaining of components can be done using `operator >>=`.

[test_storage_unfused]

[heading Branching]

More complex connections can also be made relatively easily using
both `operator >>=`
and `operator |`, with `operator |` being used for branching.

[test_branching_unfused]

[endsect][/operators]

[section invoke function]

[DataflowSignals] provides an [invoke] function in the `boost::signals`
namespace, which invokes a [Invocable] [DataflowSignals]
[Component].

[endsect]

[section:slot_selector slot_selector class]

[*See also]: [classref boost::signals::slot_selector slot_selector class reference.]

The [slot_selector] class is used to refer to a particular member function of a particular object, and can be used
can be used as a receiver.

[slot_selector] objects can be constructed using the [funcref boost::signals::make_slot_selector] function.
See the [link dataflow.connections.examples.multiple_same  Multiple inputs of the same signature] example.

[heading Models]

* [SignalConsumer]
* [ProxyPort]

[endsect][/slot_selector]



[endsect][/connections]
