[section Concepts]

[section:signaltraits SignalTraits]
A [Traits] type `T` is a ['[SignalTraits]] if
its tag is `dataflow::signals::tag`.

[heading Refinement of]
* [Traits]

[heading Notation]
The following expressions are used in this document:

[variablelist
    [[ST] [A [SignalTraits] type.]]
]

[heading Requirements]

The following requrements are only those that are in addition to or different
than those of the refined concepts listed above:

[table
    [[Name] [Expression] [Result Type] [Semantics]]
    [
        [Tag]
        [`ST::tag`]
        [`dataflow::signals::tag`]
        [[Tag] type tag.]
    ]
]

[endsect]

[section:signalporttraits SignalPortTraits]
A [PortTraits], [SignalTraits] type `SPT` is a ['[SignalPortTraits]] if
it specifies the signature of the underlying signal.

[heading Refinement of]
* [PortTraits]
* [SignalTraits]

[heading Notation]
The following expressions are used in this document:

[variablelist
    [[SPT] [A [SignalTraits] type.]]
]

[heading Requirements]

The following requrements are only those that are in addition to or different
than those of the refined concepts listed above:

[table
    [[Name] [Expression] [Result Type] [Semantics]]
    [
        [Signature]
        [`SPT::signature_type`]
        [`any function type`]
        [Signature of the underlying [boost_signal]/[boost_function].]
    ]
]

[endsect]

[section SignalProducer]

A producer [Port] type `P` is a ['[SignalProducer]] if its
[PortTraits] is a [SignalPortTraits].  A [SignalProducer] must also
match the requirements modeled by the [boost_signal] class.

[heading Refinement of]
* producer [Port]
* [Connectable] with [SignalConsumer] of same signature.
* [AllDisconnectable]
* requirements modeled by the [boost_signal] class.

[heading Requirements]

The following requrements are only those that are in addition to or different
than those of the refined concepts listed above:

[table
    [[Name] [Expression] [Result Type] [Semantics]]
    [
        [Traits]
        [[^[traits_of]<P, dataflow::signals::tag>::type]]
        [[SignalTraits] type]
        [
            The [Traits] of `P` for [Tag] `dataflow::signals::tag`.
        ]
    ]
]

[heading Header]

[boost_signal] models [SignalProducer] after including the following files:

```
    #include <boost/dataflow/signals/support.hpp>
```

[endsect][/signalproducer]

[section SignalConsumer]

A consumer [Port] type `P` is a ['[SignalConsumer]] if its
[PortTraits] is a [SignalPortTraits]. A [SignalProducer] must also
match the concepts modeled by the [boost_signal] class.

[heading Refinement of]
* consumer [Port]
* [Connectable] with [SignalProducer] of same signature.
* concepts modeled by the [boost_function] class.
* convertible to [boost_function].

[heading Requirements]

The following requrements are only those that are in addition to or different
than those of the refined concepts listed above:

[table
    [[Name] [Expression] [Result Type] [Semantics]]
    [
        [Traits]
        [[^[traits_of]<P, dataflow::signals::tag>::type]]
        [[SignalTraits] type]
        [
            The [Traits] of `P` for [Tag] `dataflow::signals::tag`.
        ]
    ]
]

[heading Header]

[boost_function] models [SignalConsumer] after including the following files:

```
    #include <boost/dataflow/signals/support.hpp>
```

[endsect][/signalconsumer]

[section SignalConsumerComponent]

A [Component] type `F` is a ['[SignalConsumerComponent]] if its
[ComponentTraits] is a [SignalTraits], and has a default [SignalConsumer] port.

[heading Refinement of]
* [Component]

[heading Requirements]

The following requrements are only those that are in addition to or different
than those of the refined concepts listed above:

...to come...

[endsect][/SignalConsumerComponent]

[section SignalFilterComponent]

A [Component] type `F` is a ['[SignalFilterComponent]] if its
[PortTraits] is a [SignalTraits], and has default [SignalProducer]
and [SignalConsumer] ports.

[heading Refinement of]
* [Component]

[heading Requirements]

The following requrements are only those that are in addition to or different
than those of the refined concepts listed above:

...to come...

[endsect][/SignalFilterComponent]

[endsect]
