[section Concepts]

[section:signalporttraits SignalPortTraits]
A [PortTraitsConcept] type `T` is a [`[SignalPortTraitsConcept]] if
its mechanism is `signals::mechanism`, and it specifies the signature
of the underlying signal.

[heading Refinement of]
* [PortTraitsConcept]

[heading Notation]
The following expressions are used in this document:

[variablelist
    [[PT] [A [SignalPortTraitsConcept] type.]]
    [[C] [A [ConnectableConcept] [SignalConsumerConcept].]]
    [[p] [An object of type `p`.]]
    [[c] [An object of type `c`.]]
]

[heading Requirements]
[table
    [[Name] [Expression] [Result Type] [Semantics]]
    [
        [Mechanism]
        [`PT::mechanism`]
        [`dataflow::signals::mechanism`]
        [[MechanismConcept] type tag.]
    ]
    [
        [Signature]
        [`PT::signature_type`]
        [`any function type`]
        [Signature of the underlying `boost::signal`/`boost::function`.]
    ]
]

[endsect]

[section SignalProducer]

A [ProducerPortConcept] type `P` is a ['[SignalProducerConcept]] if its
[PortTraitsConcept] is a [SignalPortTraitsConcept], and the `get_port` function
returns the underlying `boost::signal`.

[heading Refinement of]
* [ProducerPortConcept]
* [ConnectableConcept] with [SignalConsumerConcept] of same signature.

[heading Notation]
The following expressions are used in this document:

[variablelist
    [[`P`] [A [SignalProducerConcept] type.]]
    [[`PT`] [[PortTraitsConcept] of `P`]]
    [[`C`] [A [ConnectableConcept] [SignalConsumerConcept].]]
    [[`S`] [Signature of underlying signal]]
    [[`p`] [An object of type `p`.]]
    [[`c`] [An object of type `c`.]]
]

[heading Requirements]
[table
    [[Name] [Expression] [Result Type] [Description]]
    [
        [Signal]
        [`dataflow::get_port(p)`]
        [`boost::signal<PT::signal_type,...> &`]
        [
            Reference to the signal storing the outgoing connections.
        ]
    ]
]

[heading Header]

The types, templates, and functions shown here are declared in the following
files:

```
    #include <boost/dataflow/signals/support.hpp>
```

[endsect][/signalproducer]

[section SignalConsumer]

A [ConsumerPortConcept] type `P` is a ['[SignalConsumerConcept]] if its
[PortTraitsConcept] is a [SignalPortTraitsConcept], and the `get_port` function
returns the underlying `boost::function`.

[heading Refinement of]
* [ConsumerPortConcept]
* [ConnectableConcept] with [SignalProducerConcept] of same signature.

[heading Notation]
The following expressions are used in this document:

[variablelist
    [[`C`] [A [SignalConsumerConcept] type.]]
    [[`PT`] [[PortTraitsConcept] of `C`]]
    [[`P`] [A [ConnectableConcept] [SignalProducerConcept].]]
    [[`S`] [Signature of underlying signal]]
    [[`c`] [An object of type `c`.]]
    [[`p`] [An object of type `p`.]]
]

[heading Requirements]
[table
    [[Name] [Expression] [Result Type] [Description]]
    [
        [Signal]
        [`dataflow::get_port(p)`]
        [`boost::function<PT::signature_type>`]
        [
            Boost.Function object for the slot.
        ]
    ]
]

[heading Header]

The types, templates, and functions shown here are declared in the following
files:

```
    #include <boost/dataflow/signals/support.hpp>
```

[endsect][/signalconsumer]

[endsect]
