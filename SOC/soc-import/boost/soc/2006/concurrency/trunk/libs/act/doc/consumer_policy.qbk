[section Consumer Policy]

A [concept Consumer Policy] is a type which is used as a handle to related
__consumer__ types. These [concept Consumer Policys] generally act as policies
to higher-level templates which choose the appropriate __consumer__ type based
on the knowledge of how the __consumer__ will be used. In =Boost.Act=, such
types are used as policies during active-qualification.

In order to be considered a valid [concept Consumer Policy], given the
variable definitions below, the following expressions must be well-formed and
have the indicated effects.

[variablelist Consumer Policy Descriptive Variable Definitions
[[`A`]            [A [concept Consumer Policy] type.]                          ]
[[`a`]            [Value of type `A&`.]                                        ]
[[`T`]            [The type of objects to be processed.]                       ]
[[`t`]            [Value of type `T&`.]                                        ]
[[`tc`]           [Value of type `T const&`.]                                  ]
[[`P`]            [A unary function object which may take `t` as an argument.] ]
[[`p`]            [Value of type `P const&`.]                                  ]
]

[heading Expression Requirements]

[table Consumer Policy Requirements
[[Expression]                    [Return Type][Pre/Post-Condition]             ]
[[`consumer_policy
   ::scoped_consumer
     < A
     , constraint<T>
     , processor<P>
     >
     ::type`
 ]                               []           [A __consumer__ type which
                                               guarantees all
                                               processing is completed prior to
                                               the object being destroyed.
                                              ]                                ]
[[`consumer_policy
   ::safe_scoped_consumer
     < A
     , constraint<T>
     , processor<P>
     >
     ::type`
 ]                               []           [A __consumer__ type which
                                               guarantees all processing is
                                               completed prior to the object
                                               being destroyed and which may be
                                               interfaced with by any number of
                                               threads of execution.
                                              ]                                ]
]

[endsect]
