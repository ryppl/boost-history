#  Copyright (c) 2006, Bernhard Reiter
#
#  This code may be used under either of the following two licences:
#
#  Permission is hereby granted, free of charge, to any person obtaining a copy 
#  of this software and associated documentation files (the "Software"), to deal 
#  in the Software without restriction, including without limitation the rights 
#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell 
#  copies of the Software, and to permit persons to whom the Software is 
#  furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included in 
#  all copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL 
#  THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN 
#  THE SOFTWARE. OF SUCH DAMAGE.
#
#  Or:
#
#  Distributed under the Boost Software License, Version 1.0.
#  (See accompanying file LICENSE_1_0.txt or copy at
#  http:#www.boost.org/LICENSE_1_0.txt)

using testing ;

if ! $(BOOST_ROOT)
{
	BOOST_ROOT = [ modules.peek : BOOST_ROOT ] ;
}

project :
	:	requirements
		<include>$(BOOST_ROOT)
		<include>../../../
	;
	
test-suite tree :
	[ run range_helpers_test.cpp ]
	[ run unbalanced_binary_tree_test.cpp ]
#	[ run key_search_binary_tree_test.cpp ]	
	[ run rank_search_binary_tree_test.cpp ]	
	[ run traverse_search_binary_tree_test.cpp ]
	[ run rotate_binary_tree_test.cpp ]
	[ run string_search_binary_tree_test.cpp ]

#	[ run interval_search_binary_tree_test.cpp ]
#	[ compile search_ordered_vector_test.cpp  ]

	[ run search_ordered_vector_test.cpp
#		:
#		:
#		: <library>$(BOOST_ROOT)//unit_test_framework
	]

	[ run red_black_tree_test.cpp ]
	[ run treap_test.cpp ]
	[ run forest_test.cpp ]
	
	;
