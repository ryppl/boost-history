[/
 / Boost.Process
 / Pending work chapter.
 /
 / Copyright (c) 2006 Julio M. Merino Vidal.
 /
 / Use, modification, and distribution is subject to the Boost Software
 / License, Version 1.0.  (See accompanying file LICENSE_1_0.txt or copy
 / at http://www.boost.org/LICENSE_1_0.txt.)
 /]

[/ ---------------------------------------------------------------------- ]

[section Pending work]

This chapter contains a list of pending items in the library that should be
addressed before it can be sent for a serious/formal review.  Some of these
are a simple matter of programming but others will require more
consideration to decide the best way to solve them.

[section Code]

* Integrate with [@http://asio.sourceforge.net/ Boost.Asio] to permit
  asynchronous notification of child process termination and availability
  of new data in output streams.

* Add the ability to force/request the termination of a child process.

* Make it possible to specify a timeout when waiting for child processes
  to terminate.

* Parametrize classes that use strings to support wide characters.

* Parametrize `wait` methods to return a custom [link
  boost_process.concepts.exit_status Status] implementation?  If doing
  this add a `posix_status` class and simplify the existing `status` one.

* Make the `detail::launcher_base` a public class?  It can be useful to
  end users if they decide to implement a custom launcher.

* Replace custom `system_error` with Boost.System's homologous when it is
  available.

[endsect]

[section Documentation]

* Add a ['Design decisions] chapter.

* Fix links to inherited methods.  Don't know which is the best approach
  to address this.

* Add some diagrams to illustrate interprocess communication.

[endsect]

[/ ---------------------------------------------------------------------- ]

[endsect]
