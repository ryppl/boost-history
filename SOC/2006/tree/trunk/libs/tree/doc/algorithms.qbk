[/
 /  Copyright (c) 2006-2008, Bernhard Reiter
 /
 /  Distributed under the Boost Software License, Version 1.0.
 /  (See accompanying file LICENSE_1_0.txt or copy at
 /  http://www.boost.org/LICENSE_1_0.txt)
 /
 //////////////////////////////////////////////////////////////////////////////////////////////
 /
 / Boost.Tree
 / Algorithms documentation file.
 /]

[section Algorithms]

While STL algorithms operate on (at least a pair of) iterators, for hierarchic structures
as trees it is just natural to operate on a subtree which in turn are referenced by their
"subtree root" cursor.

Contrarily to iterator-based algorithms that normally just traverse a range given by two
iterators starting at the first element linearly and terminating past the last element,
there is no one such "natural" traversal for subtrees.

[section Pre-, In-, and Postorder Algorithms]
[endsect] [/ Pre-, In-, and Postorder Algorithms]

[endsect] [/ Algorithms]
