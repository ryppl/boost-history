#  Copyright (c) 2006, Giovanni P. Deretta
#
#  This code may be used under either of the following two licences:
#
#  Permission is hereby granted, free of charge, to any person obtaining a copy 
#  of this software and associated documentation files (the "Software"), to deal 
#  in the Software without restriction, including without limitation the rights 
#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell 
#  copies of the Software, and to permit persons to whom the Software is 
#  furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included in 
#  all copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL 
#  THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN 
#  THE SOFTWARE. OF SUCH DAMAGE.
#
#  Or:
#
#  Distributed under the Boost Software License, Version 1.0.
#  (See accompanying file LICENSE_1_0.txt or copy at
#  http://www.boost.org/LICENSE_1_0.txt)


# bring in rules for testing
import testing ;
import os ;

if [ os.name ] = WINDOWS
{
        TARGET_SPECIFIC_DEFINE =
          "_WIN32_WINNT=0x0400"
          ;
}

project
    : requirements
      	<library>/boost/test//boost_unit_test_framework
      	<library>../build//boost_coroutine
      	<link>static
	<define>"_WIN32_WINNT=0x0400" #$(TARGET_SPECIFIC_DEFINE)
      	<include>../../..
      	<threading>multi
    ;

test-suite "coroutine"
    :
      [ run test_any.cpp ]
      [ run test_create.cpp ]
      [ run test_invoke.cpp ]
      [ run test_meta.cpp ]
      [ run test_optional.cpp ]
      [ run test_yield.cpp ]
      [ run test_yield_to.cpp ]
      [ run test_yield_to2.cpp ]
      [ run test_call.cpp ]
      [ run test_move.cpp ]
      [ run test_non_default_constructible.cpp ]
      [ run test_reference.cpp ]
      [ run test_generator.cpp ]
   ;

