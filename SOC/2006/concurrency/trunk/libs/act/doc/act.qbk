[article Boost.Act
    [quickbook 1.3]
    [id act]
    [dirname act]
    [copyright 2006, 2007 Matthew Calabrese]
    [category C++ Concurrency Library]
    [authors [Calabrese, Matthew]]
    [purpose Library for concurrent programming.]
    [license
        Distributed under the Boost Software License, Version 1.0.
        (See accompanying file LICENSE_1_0.txt or copy at
        [@http://www.boost.org/LICENSE_1_0.txt])
    ]
    [source-mode c++]
]

[template concept[ name ] [^[name]]]
[template model[ name ] [^[*[name]]]]
[template tablenote[ body ] ['Note: [body] --end note]]

[def __alert__              [$images/alert.png]]
[def __note__               [$images/note.png]]
[def __OpenMP__             [@http://www.OpenMP.org OpenMP]]

[def __consumer_policy__             [link boost_act.concepts.consumer_concepts.consumer_policy                          [concept Consumer Policy]]]
[def __consumer__                    [link boost_act.concepts.consumer_concepts.consumer                                 [concept Consumer]]]
[def __queue_policy__                [link boost_act.concepts.queue_concepts.queue_policy                                [concept Queue Policy]]]
[def __pc_queue__                    [link boost_act.concepts.queue_concepts.pc_queue                                    [concept PC Queue]]]
[def __interlocked_type__            [link boost_act.interlocked.interlocked_concepts.interlocked_type                   [concept Interlocked Type]]]
[def __interlocked_natural_type__    [link boost_act.interlocked.interlocked_concepts.interlocked_natural_type           [concept Interlocked Natural Type]]]
[def __interlocked_cage__            [link boost_act.interlocked.interlocked_concepts.interlocked_cage                   [concept Interlocked Cage]]]
[def __interlocked_cages__           [link boost_act.interlocked.interlocked_concepts.interlocked_cage                   [concept Interlocked Cages]]]
[def __interlocked_fence__           [link boost_act.interlocked.interlocked_concepts.interlocked_fence                  [concept Interlocked Fence]]]
[def __interlocked_fences__          [link boost_act.interlocked.interlocked_concepts.interlocked_fence                  [concept Interlocked Fences]]]
[def __interlocked_operation__       [link boost_act.interlocked.interlocked_concepts.interlocked_operation              [concept Interlocked Operation]]]
[def __interlocked_operations__      [link boost_act.interlocked.interlocked_concepts.interlocked_operation              [concept Interlocked Operations]]]
[def __interlocked_semantic_type__   [link boost_act.interlocked.interlocked_concepts.interlocked_semantic_type          [concept Interlocked Semantic Type]]]
[def __interlocked_semantic_types__  [link boost_act.interlocked.interlocked_concepts.interlocked_semantic_type          [concept Interlocked Semantic Types]]]
[def __interlocked_semantic_models__ [link boost_act.interlocked.interlocked_semantic_models                             [concept Interlocked Semantic Models]]]
[def __interlocked_cage_models__     [link boost_act.interlocked.interlocked_cage_models                                 [concept Interlocked Cage Models]]]
[def __interlocked_fence_models__    [link boost_act.interlocked.interlocked_fence_models                                [concept Interlocked Fence Models]]]
[def __interlocked_arithmetic_type__ [link boost_act.interlocked.interlocked_concepts.interlocked_arithmetic_type        [concept Interlocked Arithmetic Type]]]
[def __interlocked_integer_type__    [link boost_act.interlocked.interlocked_concepts.interlocked_integer_type           [concept Interlocked Integer Type]]]
[def __interlocked_memory_cage__     [link boost_act.interlocked.interlocked_cage_models.interlocked_memory_cage         [model Interlocked Memory Cage]]]
[def __interlocked_memory_cages__    [link boost_act.interlocked.interlocked_cage_models.interlocked_memory_cage         [model Interlocked Memory Cages]]]
[def __interlocked_compiler_cage__   [link boost_act.interlocked.interlocked_cage_models.interlocked_compiler_cage       [model Interlocked Compiler Cage]]]
[def __interlocked_compiler_cages__  [link boost_act.interlocked.interlocked_cage_models.interlocked_compiler_cage       [model Interlocked Compiler Cages]]]
[def __interlocked_memory_fence__    [link boost_act.interlocked.interlocked_fence_models.interlocked_memory_fence       [model Interlocked Memory Fence]]]
[def __interlocked_memory_fences__   [link boost_act.interlocked.interlocked_fence_models.interlocked_memory_fence       [model Interlocked Memory Fences]]]
[def __interlocked_compiler_fence__  [link boost_act.interlocked.interlocked_fence_models.interlocked_compiler_fence     [model Interlocked Compiler Fence]]]
[def __interlocked_compiler_fences__ [link boost_act.interlocked.interlocked_fence_models.interlocked_compiler_fence     [model Interlocked Compiler Fence]]]
[def __worker_policy__               [link boost_act.concepts.worker_policy                                              [concept Worker Policy]]]
[def __worker__                      [link boost_act.concepts.worker                                                     [concept Worker]]]
[def __threaded_worker_policy__      [link boost_act.concepts.threaded_worker_policy                                     [concept Threaded Worker Policy]]]
[def __threaded_worker__             [link boost_act.concepts.threaded_worker                                            [concept Threaded Worker]]]

[include beta_warning.qbk]
[include interlocked.qbk]
[include rationale.qbk]
