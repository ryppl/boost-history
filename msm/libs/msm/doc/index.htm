<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:m="http://schemas.microsoft.com/office/2004/12/omml"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=us-ascii">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 12">
<meta name=Originator content="Microsoft Word 12">
<link rel=File-List href="index-Dateien/filelist.xml">
<link rel=Edit-Time-Data href="index-Dateien/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Christophe</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Christophe</o:LastAuthor>
  <o:Revision>277</o:Revision>
  <o:Created>2009-09-03T20:17:00Z</o:Created>
  <o:LastSaved>2009-11-09T22:04:00Z</o:LastSaved>
  <o:Pages>39</o:Pages>
  <o:Words>18815</o:Words>
  <o:Characters>118541</o:Characters>
  <o:Lines>987</o:Lines>
  <o:Paragraphs>274</o:Paragraphs>
  <o:CharactersWithSpaces>137082</o:CharactersWithSpaces>
  <o:Version>12.00</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<link rel=dataStoreItem href="index-Dateien/item0032.xml"
target="index-Dateien/props0033.xml">
<link rel=themeData href="index-Dateien/themedata.thmx">
<link rel=colorSchemeMapping href="index-Dateien/colorschememapping.xml">
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:TrackMoves>false</w:TrackMoves>
  <w:TrackFormatting/>
  <w:HyphenationZone>21</w:HyphenationZone>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:DoNotPromoteQF/>
  <w:LidThemeOther>DE</w:LidThemeOther>
  <w:LidThemeAsian>X-NONE</w:LidThemeAsian>
  <w:LidThemeComplexScript>X-NONE</w:LidThemeComplexScript>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:DontGrowAutofit/>
   <w:SplitPgBreakAndParaMark/>
   <w:DontVertAlignCellWithSp/>
   <w:DontBreakConstrainedForcedTables/>
   <w:DontVertAlignInTxbx/>
   <w:Word11KerningPairs/>
   <w:CachedColBalance/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
  <m:mathPr>
   <m:mathFont m:val="Cambria Math"/>
   <m:brkBin m:val="before"/>
   <m:brkBinSub m:val="&#45;-"/>
   <m:smallFrac m:val="off"/>
   <m:dispDef/>
   <m:lMargin m:val="0"/>
   <m:rMargin m:val="0"/>
   <m:defJc m:val="centerGroup"/>
   <m:wrapIndent m:val="1440"/>
   <m:intLim m:val="subSup"/>
   <m:naryLim m:val="undOvr"/>
  </m:mathPr></w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" DefUnhideWhenUsed="true"
  DefSemiHidden="true" DefQFormat="false" DefPriority="99"
  LatentStyleCount="267">
  <w:LsdException Locked="false" Priority="0" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Normal"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="heading 1"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="heading 2"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="heading 3"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 4"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 5"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 6"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 7"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 8"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 9"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 1"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 2"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 3"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 4"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 5"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 6"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 7"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 8"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 9"/>
  <w:LsdException Locked="false" Priority="35" QFormat="true" Name="caption"/>
  <w:LsdException Locked="false" Priority="10" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Title"/>
  <w:LsdException Locked="false" Priority="1" Name="Default Paragraph Font"/>
  <w:LsdException Locked="false" Priority="11" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Subtitle"/>
  <w:LsdException Locked="false" Priority="22" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Strong"/>
  <w:LsdException Locked="false" Priority="20" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Emphasis"/>
  <w:LsdException Locked="false" Priority="59" SemiHidden="false"
   UnhideWhenUsed="false" Name="Table Grid"/>
  <w:LsdException Locked="false" UnhideWhenUsed="false" Name="Placeholder Text"/>
  <w:LsdException Locked="false" Priority="1" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="No Spacing"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 1"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 1"/>
  <w:LsdException Locked="false" UnhideWhenUsed="false" Name="Revision"/>
  <w:LsdException Locked="false" Priority="34" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="List Paragraph"/>
  <w:LsdException Locked="false" Priority="29" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Quote"/>
  <w:LsdException Locked="false" Priority="30" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Intense Quote"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 1"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 1"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 2"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 2"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 2"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 3"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 3"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 3"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 4"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 4"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 4"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 5"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 5"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 5"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 6"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 6"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 6"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="19" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Subtle Emphasis"/>
  <w:LsdException Locked="false" Priority="21" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Intense Emphasis"/>
  <w:LsdException Locked="false" Priority="31" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Subtle Reference"/>
  <w:LsdException Locked="false" Priority="32" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Intense Reference"/>
  <w:LsdException Locked="false" Priority="33" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Book Title"/>
  <w:LsdException Locked="false" Priority="37" Name="Bibliography"/>
  <w:LsdException Locked="false" Priority="39" QFormat="true" Name="TOC Heading"/>
 </w:LatentStyles>
</xml><![endif]-->
<style>
<!--table.MSOTABLELIGHTSHADINGFIRSTROW
	{mso-para-margin-top:auto;
	mso-para-margin-bottom:auto;}
table.MSOTABLELIGHTSHADINGLASTROW
	{mso-para-margin-top:auto;
	mso-para-margin-bottom:auto;}
table.MSOTABLELIGHTLISTFIRSTROW
	{mso-para-margin-top:auto;
	mso-para-margin-bottom:auto;}
table.MSOTABLELIGHTLISTLASTROW
	{mso-para-margin-top:auto;
	mso-para-margin-bottom:auto;}
table.MSOTABLEMEDIUMSHADING1FIRSTROW
	{mso-para-margin-top:auto;
	mso-para-margin-bottom:auto;}
table.MSOTABLEMEDIUMSHADING1LASTROW
	{mso-para-margin-top:auto;
	mso-para-margin-bottom:auto;}
table.MSOTABLELIGHTSHADINGACCENT1FIRSTROW
	{mso-para-margin-top:auto;
	mso-para-margin-bottom:auto;}
table.MSOTABLELIGHTSHADINGACCENT1LASTROW
	{mso-para-margin-top:auto;
	mso-para-margin-bottom:auto;}
table.MSOTABLELIGHTLISTACCENT1FIRSTROW
	{mso-para-margin-top:auto;
	mso-para-margin-bottom:auto;}
table.MSOTABLELIGHTLISTACCENT1LASTROW
	{mso-para-margin-top:auto;
	mso-para-margin-bottom:auto;}
table.MSOTABLELIGHTSHADINGACCENT2FIRSTROW
	{mso-para-margin-top:auto;
	mso-para-margin-bottom:auto;}
table.MSOTABLELIGHTSHADINGACCENT2LASTROW
	{mso-para-margin-top:auto;
	mso-para-margin-bottom:auto;}
table.MSOTABLELIGHTSHADINGACCENT4FIRSTROW
	{mso-para-margin-top:auto;
	mso-para-margin-bottom:auto;}
table.MSOTABLELIGHTSHADINGACCENT4LASTROW
	{mso-para-margin-top:auto;
	mso-para-margin-bottom:auto;}
table.MSOTABLELIGHTSHADINGACCENT5FIRSTROW
	{mso-para-margin-top:auto;
	mso-para-margin-bottom:auto;}
table.MSOTABLELIGHTSHADINGACCENT5LASTROW
	{mso-para-margin-top:auto;
	mso-para-margin-bottom:auto;}

 /* Font Definitions */
 @font-face
	{font-family:Helvetica;
	panose-1:2 11 6 4 2 2 2 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-format:other;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:Courier;
	panose-1:2 7 4 9 2 2 5 2 4 4;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:"Tms Rmn";
	panose-1:2 2 6 3 4 5 5 2 3 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-format:other;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:Helv;
	panose-1:2 11 6 4 2 2 2 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-format:other;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:"New York";
	panose-1:2 4 5 3 6 5 6 2 3 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-format:other;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:System;
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-format:other;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:"MS Mincho";
	panose-1:2 2 6 9 4 2 5 8 3 4;
	mso-font-alt:"\FF2D\FF33 \660E\671D";
	mso-font-charset:128;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-536870145 1791491579 18 0 131231 0;}
@font-face
	{font-family:Batang;
	panose-1:2 3 6 0 0 1 1 1 1 1;
	mso-font-alt:\BC14\D0D5;
	mso-font-charset:129;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-1342176593 1775729915 48 0 524447 0;}
@font-face
	{font-family:SimSun;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-alt:\5B8B\4F53;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 680460288 22 0 262145 0;}
@font-face
	{font-family:PMingLiU;
	panose-1:2 2 5 0 0 0 0 0 0 0;
	mso-font-alt:\65B0\7D30\660E\9AD4;
	mso-font-charset:136;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-1610611969 684719354 22 0 1048577 0;}
@font-face
	{font-family:"MS Gothic";
	panose-1:2 11 6 9 7 2 5 8 2 4;
	mso-font-alt:"\FF2D\FF33 \30B4\30B7\30C3\30AF";
	mso-font-charset:128;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-536870145 1791491579 18 0 131231 0;}
@font-face
	{font-family:Dotum;
	panose-1:2 11 6 0 0 1 1 1 1 1;
	mso-font-alt:\B3CB\C6C0;
	mso-font-charset:129;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-1342176593 1775729915 48 0 524447 0;}
@font-face
	{font-family:SimHei;
	panose-1:2 1 6 9 6 1 1 1 1 1;
	mso-font-alt:\9ED1\4F53;
	mso-font-charset:134;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-2147482945 953122042 22 0 262145 0;}
@font-face
	{font-family:MingLiU;
	panose-1:2 2 5 9 0 0 0 0 0 0;
	mso-font-alt:\7D30\660E\9AD4;
	mso-font-charset:136;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-1610611969 684719354 22 0 1048577 0;}
@font-face
	{font-family:Mincho;
	panose-1:2 2 6 9 4 3 5 8 3 5;
	mso-font-alt:\660E\671D;
	mso-font-charset:128;
	mso-generic-font-family:roman;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:1 134676480 16 0 131072 0;}
@font-face
	{font-family:Gulim;
	panose-1:2 11 6 0 0 1 1 1 1 1;
	mso-font-alt:\AD74\B9BC;
	mso-font-charset:129;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-1342176593 1775729915 48 0 524447 0;}
@font-face
	{font-family:Century;
	panose-1:2 4 6 4 5 5 5 2 3 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:647 0 0 0 159 0;}
@font-face
	{font-family:"Angsana New";
	panose-1:2 2 6 3 5 4 5 2 3 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-2130706429 0 0 0 65537 0;}
@font-face
	{font-family:"Cordia New";
	panose-1:2 11 3 4 2 2 2 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-2130706429 0 0 0 65537 0;}
@font-face
	{font-family:Mangal;
	panose-1:2 4 5 3 5 2 3 3 2 2;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:32771 0 0 0 1 0;}
@font-face
	{font-family:Latha;
	panose-1:2 0 4 0 0 0 0 0 0 0;
	mso-font-charset:1;
	mso-generic-font-family:roman;
	mso-font-format:other;
	mso-font-pitch:variable;
	mso-font-signature:262144 0 0 0 0 0;}
@font-face
	{font-family:Sylfaen;
	panose-1:1 10 5 2 5 3 6 3 3 3;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:67110535 0 0 0 159 0;}
@font-face
	{font-family:Vrinda;
	panose-1:1 1 6 0 1 1 1 1 1 1;
	mso-font-charset:0;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:65539 0 0 0 1 0;}
@font-face
	{font-family:Raavi;
	panose-1:2 0 5 0 0 0 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:131075 0 0 0 1 0;}
@font-face
	{font-family:Shruti;
	panose-1:2 11 6 4 2 2 2 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:262147 0 0 0 1 0;}
@font-face
	{font-family:Sendnya;
	panose-1:0 0 4 0 0 0 0 0 0 0;
	mso-font-charset:1;
	mso-generic-font-family:roman;
	mso-font-format:other;
	mso-font-pitch:variable;
	mso-font-signature:0 0 0 0 0 0;}
@font-face
	{font-family:Gautami;
	panose-1:2 0 5 0 0 0 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:-2145386493 0 0 0 1 0;}
@font-face
	{font-family:Tunga;
	panose-1:0 0 4 0 0 0 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:4194307 0 0 0 1 0;}
@font-face
	{font-family:"Estrangelo Edessa";
	panose-1:3 8 6 0 0 0 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:script;
	mso-font-pitch:variable;
	mso-font-signature:-2147475389 0 128 0 1 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-1610611985 1107304683 0 0 159 0;}
@font-face
	{font-family:"Arial Unicode MS";
	panose-1:2 11 6 4 2 2 2 2 2 4;
	mso-font-charset:128;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-134238209 -371195905 63 0 4129279 0;}
@font-face
	{font-family:Cambria;
	panose-1:2 4 5 3 5 4 6 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-1610611985 1073741899 0 0 159 0;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-1610611985 1073750139 0 0 159 0;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-520082689 -1073717157 41 0 66047 0;}
@font-face
	{font-family:Consolas;
	panose-1:2 11 6 9 2 2 4 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-1610611985 1073750091 0 0 159 0;}
@font-face
	{font-family:OpenSymbol;
	panose-1:5 1 0 0 0 0 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:-2147483473 268561642 0 0 1 0;}
@font-face
	{font-family:Miriam;
	panose-1:2 11 5 2 5 1 1 1 1 1;
	mso-font-charset:177;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:2049 0 0 0 32 0;}
@font-face
	{font-family:"Lucida Sans Unicode";
	panose-1:2 11 6 2 3 5 4 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-2147480833 14699 0 0 191 0;}
@font-face
	{font-family:Marlett;
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:"\@Batang";
	panose-1:2 3 6 0 0 1 1 1 1 1;
	mso-font-charset:129;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-1342176593 1775729915 48 0 524447 0;}
@font-face
	{font-family:BatangChe;
	panose-1:2 3 6 9 0 1 1 1 1 1;
	mso-font-charset:129;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-1342176593 1775729915 48 0 524447 0;}
@font-face
	{font-family:"\@BatangChe";
	panose-1:2 3 6 9 0 1 1 1 1 1;
	mso-font-charset:129;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-1342176593 1775729915 48 0 524447 0;}
@font-face
	{font-family:Gungsuh;
	panose-1:2 3 6 0 0 1 1 1 1 1;
	mso-font-charset:129;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-1342176593 1775729915 48 0 524447 0;}
@font-face
	{font-family:"\@Gungsuh";
	panose-1:2 3 6 0 0 1 1 1 1 1;
	mso-font-charset:129;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-1342176593 1775729915 48 0 524447 0;}
@font-face
	{font-family:GungsuhChe;
	panose-1:2 3 6 9 0 1 1 1 1 1;
	mso-font-charset:129;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-1342176593 1775729915 48 0 524447 0;}
@font-face
	{font-family:"\@GungsuhChe";
	panose-1:2 3 6 9 0 1 1 1 1 1;
	mso-font-charset:129;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-1342176593 1775729915 48 0 524447 0;}
@font-face
	{font-family:DaunPenh;
	panose-1:1 1 1 1 1 1 1 1 1 1;
	mso-font-charset:0;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 0 65536 0 1 0;}
@font-face
	{font-family:DokChampa;
	panose-1:2 11 6 4 2 2 2 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:50331651 0 0 0 65537 0;}
@font-face
	{font-family:Euphemia;
	panose-1:2 11 5 3 4 1 2 2 1 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-2147483537 74 8192 0 1 0;}
@font-face
	{font-family:"\@Gulim";
	panose-1:2 11 6 0 0 1 1 1 1 1;
	mso-font-charset:129;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-1342176593 1775729915 48 0 524447 0;}
@font-face
	{font-family:GulimChe;
	panose-1:2 11 6 9 0 1 1 1 1 1;
	mso-font-charset:129;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-1342176593 1775729915 48 0 524447 0;}
@font-face
	{font-family:"\@GulimChe";
	panose-1:2 11 6 9 0 1 1 1 1 1;
	mso-font-charset:129;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-1342176593 1775729915 48 0 524447 0;}
@font-face
	{font-family:"\@Dotum";
	panose-1:2 11 6 0 0 1 1 1 1 1;
	mso-font-charset:129;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-1342176593 1775729915 48 0 524447 0;}
@font-face
	{font-family:DotumChe;
	panose-1:2 11 6 9 0 1 1 1 1 1;
	mso-font-charset:129;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-1342176593 1775729915 48 0 524447 0;}
@font-face
	{font-family:"\@DotumChe";
	panose-1:2 11 6 9 0 1 1 1 1 1;
	mso-font-charset:129;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-1342176593 1775729915 48 0 524447 0;}
@font-face
	{font-family:Impact;
	panose-1:2 11 8 6 3 9 2 5 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:647 0 0 0 159 0;}
@font-face
	{font-family:"Iskoola Pota";
	panose-1:2 2 6 3 5 4 5 3 3 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:3 0 512 0 1 0;}
@font-face
	{font-family:Kalinga;
	panose-1:2 0 6 0 0 0 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:524291 0 0 0 1 0;}
@font-face
	{font-family:Kartika;
	panose-1:2 2 5 3 3 4 4 6 2 3;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:8388611 0 0 0 1 0;}
@font-face
	{font-family:"Lucida Console";
	panose-1:2 11 6 9 4 5 4 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-2147482993 6144 0 0 31 0;}
@font-face
	{font-family:"Malgun Gothic";
	panose-1:2 11 5 3 2 0 0 2 0 4;
	mso-font-charset:129;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-1879047505 165117179 18 0 524289 0;}
@font-face
	{font-family:"\@Malgun Gothic";
	panose-1:2 11 5 3 2 0 0 2 0 4;
	mso-font-charset:129;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-1879047505 165117179 18 0 524289 0;}
@font-face
	{font-family:Meiryo;
	panose-1:2 11 6 4 3 5 4 4 2 4;
	mso-font-charset:128;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-536870145 1791492095 18 0 131081 0;}
@font-face
	{font-family:"\@Meiryo";
	panose-1:2 11 6 4 3 5 4 4 2 4;
	mso-font-charset:128;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-536870145 1791492095 18 0 131081 0;}
@font-face
	{font-family:"Microsoft Himalaya";
	panose-1:1 1 1 0 1 1 1 1 1 1;
	mso-font-charset:0;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:-2147483645 65536 64 0 1 0;}
@font-face
	{font-family:"Microsoft JhengHei";
	panose-1:2 11 6 4 3 5 4 4 2 4;
	mso-font-charset:136;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:135 680476672 22 0 1048585 0;}
@font-face
	{font-family:"\@Microsoft JhengHei";
	panose-1:2 11 6 4 3 5 4 4 2 4;
	mso-font-charset:136;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:135 680476672 22 0 1048585 0;}
@font-face
	{font-family:"Microsoft YaHei";
	panose-1:2 11 5 3 2 2 4 2 2 4;
	mso-font-charset:134;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-2147483001 705641554 22 0 262175 0;}
@font-face
	{font-family:"\@Microsoft YaHei";
	panose-1:2 11 5 3 2 2 4 2 2 4;
	mso-font-charset:134;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-2147483001 705641554 22 0 262175 0;}
@font-face
	{font-family:"\@MingLiU";
	panose-1:2 2 5 9 0 0 0 0 0 0;
	mso-font-charset:136;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-1610611969 684719354 22 0 1048577 0;}
@font-face
	{font-family:"\@PMingLiU";
	panose-1:2 2 5 0 0 0 0 0 0 0;
	mso-font-charset:136;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-1610611969 684719354 22 0 1048577 0;}
@font-face
	{font-family:MingLiU_HKSCS;
	panose-1:2 2 5 0 0 0 0 0 0 0;
	mso-font-charset:136;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-2147483645 684719354 22 0 1048577 0;}
@font-face
	{font-family:"\@MingLiU_HKSCS";
	panose-1:2 2 5 0 0 0 0 0 0 0;
	mso-font-charset:136;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-2147483645 684719354 22 0 1048577 0;}
@font-face
	{font-family:MingLiU-ExtB;
	panose-1:2 2 5 0 0 0 0 0 0 0;
	mso-font-charset:136;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-2147483601 168296456 16 0 1048577 0;}
@font-face
	{font-family:"\@MingLiU-ExtB";
	panose-1:2 2 5 0 0 0 0 0 0 0;
	mso-font-charset:136;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-2147483601 168296456 16 0 1048577 0;}
@font-face
	{font-family:PMingLiU-ExtB;
	panose-1:2 2 5 0 0 0 0 0 0 0;
	mso-font-charset:136;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-2147483601 168296456 16 0 1048577 0;}
@font-face
	{font-family:"\@PMingLiU-ExtB";
	panose-1:2 2 5 0 0 0 0 0 0 0;
	mso-font-charset:136;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-2147483601 168296456 16 0 1048577 0;}
@font-face
	{font-family:MingLiU_HKSCS-ExtB;
	panose-1:2 2 5 0 0 0 0 0 0 0;
	mso-font-charset:136;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-2147483601 168296456 16 0 1048577 0;}
@font-face
	{font-family:"\@MingLiU_HKSCS-ExtB";
	panose-1:2 2 5 0 0 0 0 0 0 0;
	mso-font-charset:136;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-2147483601 168296456 16 0 1048577 0;}
@font-face
	{font-family:"Mongolian Baiti";
	panose-1:3 0 5 0 0 0 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:script;
	mso-font-pitch:variable;
	mso-font-signature:-2147483613 0 131072 0 1 0;}
@font-face
	{font-family:"\@MS Gothic";
	panose-1:2 11 6 9 7 2 5 8 2 4;
	mso-font-charset:128;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-536870145 1791491579 18 0 131231 0;}
@font-face
	{font-family:"MS PGothic";
	panose-1:2 11 6 0 7 2 5 8 2 4;
	mso-font-charset:128;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-536870145 1791491579 18 0 131231 0;}
@font-face
	{font-family:"\@MS PGothic";
	panose-1:2 11 6 0 7 2 5 8 2 4;
	mso-font-charset:128;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-536870145 1791491579 18 0 131231 0;}
@font-face
	{font-family:"MS UI Gothic";
	panose-1:2 11 6 0 7 2 5 8 2 4;
	mso-font-charset:128;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-536870145 1791491579 18 0 131231 0;}
@font-face
	{font-family:"\@MS UI Gothic";
	panose-1:2 11 6 0 7 2 5 8 2 4;
	mso-font-charset:128;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-536870145 1791491579 18 0 131231 0;}
@font-face
	{font-family:"\@MS Mincho";
	panose-1:2 2 6 9 4 2 5 8 3 4;
	mso-font-charset:128;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-536870145 1791491579 18 0 131231 0;}
@font-face
	{font-family:"MS PMincho";
	panose-1:2 2 6 0 4 2 5 8 3 4;
	mso-font-charset:128;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-536870145 1791491579 18 0 131231 0;}
@font-face
	{font-family:"\@MS PMincho";
	panose-1:2 2 6 0 4 2 5 8 3 4;
	mso-font-charset:128;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-536870145 1791491579 18 0 131231 0;}
@font-face
	{font-family:"MV Boli";
	mso-font-charset:0;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 0 256 0 1 0;}
@font-face
	{font-family:Nyala;
	panose-1:2 0 5 4 7 3 0 2 0 3;
	mso-font-charset:0;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:-1610612625 0 2048 0 147 0;}
@font-face
	{font-family:"Plantagenet Cherokee";
	panose-1:2 2 6 2 7 1 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:3 0 4096 0 1 0;}
@font-face
	{font-family:"Segoe Script";
	panose-1:2 11 5 4 2 0 0 0 0 3;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:655 0 0 0 159 0;}
@font-face
	{font-family:"Segoe UI";
	panose-1:2 11 5 2 4 2 4 2 2 3;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-536861953 -1073733541 9 0 479 0;}
@font-face
	{font-family:"\@SimSun";
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 680460288 22 0 262145 0;}
@font-face
	{font-family:NSimSun;
	panose-1:2 1 6 9 3 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:3 680460288 22 0 262145 0;}
@font-face
	{font-family:"\@NSimSun";
	panose-1:2 1 6 9 3 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:3 680460288 22 0 262145 0;}
@font-face
	{font-family:SimSun-ExtB;
	panose-1:2 1 6 9 6 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:3 168689664 16 0 262145 0;}
@font-face
	{font-family:"\@SimSun-ExtB";
	panose-1:2 1 6 9 6 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:3 168689664 16 0 262145 0;}
@font-face
	{font-family:"Microsoft Yi Baiti";
	panose-1:3 0 5 0 0 0 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:script;
	mso-font-pitch:variable;
	mso-font-signature:-2147483645 66562 524290 0 1 0;}
@font-face
	{font-family:"Microsoft Sans Serif";
	panose-1:2 11 6 4 2 2 2 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-520082689 -1073741822 8 0 66047 0;}
@font-face
	{font-family:Gisha;
	panose-1:2 11 5 2 4 2 4 2 2 3;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-2147481593 1073741890 0 0 33 0;}
@font-face
	{font-family:Leelawadee;
	panose-1:2 11 5 2 4 2 4 2 2 3;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-2130706257 1073750091 0 0 65537 0;}
@font-face
	{font-family:"Microsoft Uighur";
	panose-1:2 0 0 0 0 0 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:8195 -2147483648 8 0 65 0;}
@font-face
	{font-family:MoolBoran;
	panose-1:2 11 1 0 1 1 1 1 1 1;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-2147483633 8266 65536 0 1 0;}
@font-face
	{font-family:Andalus;
	panose-1:2 1 0 0 0 0 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:8195 -2147483648 8 0 65 0;}
@font-face
	{font-family:"Arabic Typesetting";
	panose-1:3 2 4 2 4 4 6 3 2 3;
	mso-font-charset:0;
	mso-generic-font-family:script;
	mso-font-pitch:variable;
	mso-font-signature:-1610604433 -1073741824 8 0 211 0;}
@font-face
	{font-family:"Simplified Arabic";
	panose-1:2 1 0 0 0 0 0 0 0 0;
	mso-font-charset:178;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:8193 0 0 0 64 0;}
@font-face
	{font-family:"Simplified Arabic Fixed";
	panose-1:2 1 0 9 0 0 0 0 0 0;
	mso-font-charset:178;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:8193 0 0 0 64 0;}
@font-face
	{font-family:"Traditional Arabic";
	panose-1:2 1 0 0 0 0 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:8195 -2147483648 8 0 65 0;}
@font-face
	{font-family:Aharoni;
	panose-1:2 1 8 3 2 1 4 3 2 3;
	mso-font-charset:177;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:2049 0 0 0 32 0;}
@font-face
	{font-family:David;
	panose-1:2 14 5 2 6 4 1 1 1 1;
	mso-font-charset:177;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:2049 0 0 0 32 0;}
@font-face
	{font-family:FrankRuehl;
	panose-1:2 14 5 3 6 1 1 1 1 1;
	mso-font-charset:177;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:2049 0 0 0 32 0;}
@font-face
	{font-family:"Levenim MT";
	panose-1:2 1 5 2 6 1 1 1 1 1;
	mso-font-charset:177;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:2049 0 0 0 32 0;}
@font-face
	{font-family:"Miriam Fixed";
	panose-1:2 11 5 9 5 1 1 1 1 1;
	mso-font-charset:177;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:2049 0 0 0 32 0;}
@font-face
	{font-family:Narkisim;
	panose-1:2 14 5 2 5 1 1 1 1 1;
	mso-font-charset:177;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:2049 0 0 0 32 0;}
@font-face
	{font-family:Rod;
	panose-1:2 3 5 9 5 1 1 1 1 1;
	mso-font-charset:177;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:2049 0 0 0 32 0;}
@font-face
	{font-family:FangSong;
	panose-1:2 1 6 9 6 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-2147482945 953122042 22 0 262145 0;}
@font-face
	{font-family:"\@FangSong";
	panose-1:2 1 6 9 6 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-2147482945 953122042 22 0 262145 0;}
@font-face
	{font-family:"\@SimHei";
	panose-1:2 1 6 9 6 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-2147482945 953122042 22 0 262145 0;}
@font-face
	{font-family:KaiTi;
	panose-1:2 1 6 9 6 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-2147482945 953122042 22 0 262145 0;}
@font-face
	{font-family:"\@KaiTi";
	panose-1:2 1 6 9 6 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-2147482945 953122042 22 0 262145 0;}
@font-face
	{font-family:AngsanaUPC;
	panose-1:2 2 6 3 5 4 5 2 3 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-2130706429 0 0 0 65537 0;}
@font-face
	{font-family:"Browallia New";
	panose-1:2 11 6 4 2 2 2 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-2130706429 0 0 0 65537 0;}
@font-face
	{font-family:BrowalliaUPC;
	panose-1:2 11 6 4 2 2 2 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-2130706429 0 0 0 65537 0;}
@font-face
	{font-family:CordiaUPC;
	panose-1:2 11 3 4 2 2 2 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-2130706429 0 0 0 65537 0;}
@font-face
	{font-family:DilleniaUPC;
	panose-1:2 2 6 3 5 4 5 2 3 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-2130706393 2 0 0 65537 0;}
@font-face
	{font-family:EucrosiaUPC;
	panose-1:2 2 6 3 5 4 5 2 3 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-2130706393 2 0 0 65537 0;}
@font-face
	{font-family:FreesiaUPC;
	panose-1:2 11 6 4 2 2 2 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:16777223 2 0 0 65537 0;}
@font-face
	{font-family:IrisUPC;
	panose-1:2 11 6 4 2 2 2 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:16777223 2 0 0 65537 0;}
@font-face
	{font-family:JasmineUPC;
	panose-1:2 2 6 3 5 4 5 2 3 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:16777223 2 0 0 65537 0;}
@font-face
	{font-family:KodchiangUPC;
	panose-1:2 2 6 3 5 4 5 2 3 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:16777223 2 0 0 65537 0;}
@font-face
	{font-family:LilyUPC;
	panose-1:2 11 6 4 2 2 2 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:16777223 2 0 0 65537 0;}
@font-face
	{font-family:DFKai-SB;
	panose-1:3 0 5 9 0 0 0 0 0 0;
	mso-font-charset:136;
	mso-generic-font-family:script;
	mso-font-pitch:fixed;
	mso-font-signature:3 135135232 22 0 1048577 0;}
@font-face
	{font-family:"\@DFKai-SB";
	panose-1:3 0 5 9 0 0 0 0 0 0;
	mso-font-charset:136;
	mso-generic-font-family:script;
	mso-font-pitch:fixed;
	mso-font-signature:3 135135232 22 0 1048577 0;}
@font-face
	{font-family:"Arial Black";
	panose-1:2 11 10 4 2 1 2 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:647 0 0 0 159 0;}
@font-face
	{font-family:Candara;
	panose-1:2 14 5 2 3 3 3 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-1610611985 1073750091 0 0 159 0;}
@font-face
	{font-family:"Comic Sans MS";
	panose-1:3 15 7 2 3 3 2 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:script;
	mso-font-pitch:variable;
	mso-font-signature:647 0 0 0 159 0;}
@font-face
	{font-family:Constantia;
	panose-1:2 3 6 2 5 3 6 3 3 3;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-1610611985 1073750091 0 0 159 0;}
@font-face
	{font-family:Corbel;
	panose-1:2 11 5 3 2 2 4 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-1610611985 1073750091 0 0 159 0;}
@font-face
	{font-family:"Franklin Gothic Medium";
	panose-1:2 11 6 3 2 1 2 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:647 0 0 0 159 0;}
@font-face
	{font-family:Georgia;
	panose-1:2 4 5 2 5 4 5 2 3 3;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:647 0 0 0 159 0;}
@font-face
	{font-family:"Palatino Linotype";
	panose-1:2 4 5 2 5 3 5 10 3 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-536870265 1073741843 0 0 415 0;}
@font-face
	{font-family:"Segoe Print";
	panose-1:2 0 6 0 0 0 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:655 0 0 0 159 0;}
@font-face
	{font-family:"Trebuchet MS";
	panose-1:2 11 6 3 2 2 2 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:647 0 0 0 159 0;}
@font-face
	{font-family:Verdana;
	panose-1:2 11 6 4 3 5 4 4 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-1593833729 1073750107 16 0 415 0;}
@font-face
	{font-family:Webdings;
	panose-1:5 3 1 2 1 5 9 6 7 3;
	mso-font-charset:2;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:Nina;
	panose-1:2 11 6 6 3 5 4 4 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:647 0 0 0 159 0;}
@font-face
	{font-family:"Bitstream Vera Sans Mono";
	panose-1:2 11 6 9 3 8 4 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-2147483473 268443722 0 0 1 0;}
@font-face
	{font-family:"Bitstream Vera Serif";
	panose-1:2 6 6 3 5 6 5 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-2147483473 268443722 0 0 1 0;}
@font-face
	{font-family:"Bitstream Vera Sans";
	panose-1:2 11 6 3 3 8 4 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-2147483473 268443722 0 0 1 0;}
@font-face
	{font-family:"Segoe Condensed";
	panose-1:2 11 6 6 4 2 0 2 2 3;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:647 0 0 0 159 0;}
@font-face
	{font-family:"DejaVu Sans Condensed";
	panose-1:2 11 6 6 3 8 4 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-419426561 1375794687 168042529 0 447 0;}
@font-face
	{font-family:"DejaVu Serif";
	panose-1:2 6 6 3 5 6 5 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-469761281 1342206459 134479904 0 159 0;}
@font-face
	{font-family:"DejaVu Serif Condensed";
	panose-1:2 6 6 6 5 6 5 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-469761281 1342206459 134479904 0 159 0;}
@font-face
	{font-family:"DejaVu Sans Mono";
	panose-1:2 11 6 9 3 8 4 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-436206849 1342208507 32 0 159 0;}
@font-face
	{font-family:"DejaVu Sans";
	panose-1:2 11 6 3 3 8 4 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-419418369 -771686913 168042537 0 -2147483137 0;}
@font-face
	{font-family:"DejaVu Sans Light";
	panose-1:2 11 2 3 3 8 4 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-536860929 1342177403 134217760 0 415 0;}
@font-face
	{font-family:"MT Extra";
	panose-1:5 5 1 2 1 2 5 2 2 2;
	mso-font-charset:2;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:"Bookshelf Symbol 7";
	panose-1:5 1 1 1 1 1 1 1 1 1;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:"MS Reference Sans Serif";
	panose-1:2 11 6 4 3 5 4 4 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:536871559 0 0 0 415 0;}
@font-face
	{font-family:"MS Reference Specialty";
	panose-1:5 0 5 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:"Bradley Hand ITC";
	panose-1:3 7 4 2 5 3 2 3 2 3;
	mso-font-charset:0;
	mso-generic-font-family:script;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:"Freestyle Script";
	panose-1:3 8 4 2 3 2 5 11 4 4;
	mso-font-charset:0;
	mso-generic-font-family:script;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:"French Script MT";
	panose-1:3 2 4 2 4 6 7 4 6 5;
	mso-font-charset:0;
	mso-generic-font-family:script;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:"Juice ITC";
	panose-1:4 4 4 3 4 10 2 2 2 2;
	mso-font-charset:0;
	mso-generic-font-family:decorative;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:"Kristen ITC";
	panose-1:3 5 5 2 4 2 2 3 2 2;
	mso-font-charset:0;
	mso-generic-font-family:script;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:"Lucida Handwriting";
	panose-1:3 1 1 1 1 1 1 1 1 1;
	mso-font-charset:0;
	mso-generic-font-family:script;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:Mistral;
	panose-1:3 9 7 2 3 4 7 2 4 3;
	mso-font-charset:0;
	mso-generic-font-family:script;
	mso-font-pitch:variable;
	mso-font-signature:647 0 0 0 159 0;}
@font-face
	{font-family:Papyrus;
	panose-1:3 7 5 2 6 5 2 3 2 5;
	mso-font-charset:0;
	mso-generic-font-family:script;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:Pristina;
	panose-1:3 6 4 2 4 4 6 8 2 4;
	mso-font-charset:0;
	mso-generic-font-family:script;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:"Tempus Sans ITC";
	panose-1:4 2 4 4 3 13 7 2 2 2;
	mso-font-charset:0;
	mso-generic-font-family:decorative;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:"Book Antiqua";
	panose-1:2 4 6 2 5 3 5 3 3 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:647 0 0 0 159 0;}
@font-face
	{font-family:Garamond;
	panose-1:2 2 4 4 3 3 1 1 8 3;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:647 0 0 0 159 0;}
@font-face
	{font-family:"Monotype Corsiva";
	panose-1:3 1 1 1 1 2 1 1 1 1;
	mso-font-charset:0;
	mso-generic-font-family:script;
	mso-font-pitch:variable;
	mso-font-signature:647 0 0 0 159 0;}
@font-face
	{font-family:"Century Gothic";
	panose-1:2 11 5 2 2 2 2 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:647 0 0 0 159 0;}
@font-face
	{font-family:"Wingdings 2";
	panose-1:5 2 1 2 1 5 7 7 7 7;
	mso-font-charset:2;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:"Wingdings 3";
	panose-1:5 4 1 2 1 8 7 7 7 7;
	mso-font-charset:2;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:"\@Arial Unicode MS";
	panose-1:2 11 6 4 2 2 2 2 2 4;
	mso-font-charset:128;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-134238209 -371195905 63 0 4129279 0;}
@font-face
	{font-family:"Bookman Old Style";
	panose-1:2 5 6 4 5 5 5 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:647 0 0 0 159 0;}
@font-face
	{font-family:"Arial Narrow";
	panose-1:2 11 6 6 2 2 2 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:647 2048 0 0 159 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
h1
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"\00DCberschrift 1 Zchn";
	mso-margin-top-alt:auto;
	margin-right:0cm;
	margin-bottom:5.95pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	mso-outline-level:1;
	font-size:24.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	font-weight:bold;}
h2
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"\00DCberschrift 2 Zchn";
	mso-margin-top-alt:auto;
	margin-right:0cm;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	font-weight:bold;}
h3
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"\00DCberschrift 3 Zchn";
	mso-margin-top-alt:auto;
	margin-right:0cm;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	mso-outline-level:3;
	font-size:13.5pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	font-weight:bold;}
h4
	{mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-qformat:yes;
	mso-style-link:"\00DCberschrift 4 Zchn";
	mso-style-next:Standard;
	margin-top:10.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:4;
	font-size:12.0pt;
	font-family:"Cambria","serif";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#4F81BD;
	mso-themecolor:accent1;
	font-weight:bold;
	font-style:italic;}
a:link, span.MsoHyperlink
	{mso-style-priority:99;
	color:blue;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{mso-style-noshow:yes;
	mso-style-priority:99;
	color:purple;
	text-decoration:underline;
	text-underline:single;}
p
	{mso-style-priority:99;
	mso-margin-top-alt:auto;
	margin-right:0cm;
	margin-bottom:5.95pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
code
	{mso-style-noshow:yes;
	mso-style-priority:99;
	font-family:"Courier New";
	mso-ascii-font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
pre
	{mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-link:"HTML Vorformatiert Zchn";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-link:"Sprechblasentext Zchn";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:8.0pt;
	font-family:"Tahoma","sans-serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{mso-style-noshow:yes;
	mso-style-priority:34;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:36.0pt;
	margin-bottom:.0001pt;
	mso-add-space:auto;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
p.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst
	{mso-style-noshow:yes;
	mso-style-priority:34;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-type:export-only;
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:36.0pt;
	margin-bottom:.0001pt;
	mso-add-space:auto;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
p.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle
	{mso-style-noshow:yes;
	mso-style-priority:34;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-type:export-only;
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:36.0pt;
	margin-bottom:.0001pt;
	mso-add-space:auto;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
p.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast
	{mso-style-noshow:yes;
	mso-style-priority:34;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-type:export-only;
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:36.0pt;
	margin-bottom:.0001pt;
	mso-add-space:auto;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
span.berschrift1Zchn
	{mso-style-name:"\00DCberschrift 1 Zchn";
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"\00DCberschrift 1";
	mso-ansi-font-size:14.0pt;
	mso-bidi-font-size:14.0pt;
	font-family:"Cambria","serif";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#365F91;
	mso-themecolor:accent1;
	mso-themeshade:191;
	font-weight:bold;}
span.berschrift2Zchn
	{mso-style-name:"\00DCberschrift 2 Zchn";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"\00DCberschrift 2";
	mso-ansi-font-size:13.0pt;
	mso-bidi-font-size:13.0pt;
	font-family:"Cambria","serif";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#4F81BD;
	mso-themecolor:accent1;
	font-weight:bold;}
span.berschrift3Zchn
	{mso-style-name:"\00DCberschrift 3 Zchn";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"\00DCberschrift 3";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Cambria","serif";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#4F81BD;
	mso-themecolor:accent1;
	font-weight:bold;}
span.berschrift4Zchn
	{mso-style-name:"\00DCberschrift 4 Zchn";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"\00DCberschrift 4";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Cambria","serif";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#4F81BD;
	mso-themecolor:accent1;
	font-weight:bold;
	font-style:italic;}
span.HTMLVorformatiertZchn
	{mso-style-name:"HTML Vorformatiert Zchn";
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"HTML Vorformatiert";
	font-family:Consolas;
	mso-ascii-font-family:Consolas;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	mso-hansi-font-family:Consolas;}
span.SprechblasentextZchn
	{mso-style-name:"Sprechblasentext Zchn";
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:Sprechblasentext;
	mso-ansi-font-size:8.0pt;
	mso-bidi-font-size:8.0pt;
	font-family:"Tahoma","sans-serif";
	mso-ascii-font-family:Tahoma;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	mso-hansi-font-family:Tahoma;
	mso-bidi-font-family:Tahoma;}
span.preprocessor
	{mso-style-name:preprocessor;
	mso-style-unhide:no;}
span.special
	{mso-style-name:special;
	mso-style-unhide:no;}
span.identifier
	{mso-style-name:identifier;
	mso-style-unhide:no;}
span.msoIns
	{mso-style-type:export-only;
	mso-style-name:"";
	text-decoration:underline;
	text-underline:single;
	color:teal;}
span.msoDel
	{mso-style-type:export-only;
	mso-style-name:"";
	text-decoration:line-through;
	color:red;}
.MsoChpDefault
	{mso-style-type:export-only;
	mso-default-props:yes;
	font-size:10.0pt;
	mso-ansi-font-size:10.0pt;
	mso-bidi-font-size:10.0pt;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:70.85pt 70.85pt 2.0cm 70.85pt;
	mso-header-margin:35.4pt;
	mso-footer-margin:35.4pt;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:2052744;
	mso-list-template-ids:-493329040;}
@list l0:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l0:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l0:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l0:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l0:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l0:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l0:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l0:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l0:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l1
	{mso-list-id:9528912;
	mso-list-template-ids:-1730124760;}
@list l1:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l1:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l1:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l1:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l1:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l1:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l1:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l1:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l1:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l2
	{mso-list-id:61873234;
	mso-list-template-ids:961943314;}
@list l2:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l2:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l2:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l2:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l2:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l2:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l2:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l2:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l2:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l3
	{mso-list-id:113259448;
	mso-list-type:hybrid;
	mso-list-template-ids:-1334279470 67567617 67567619 67567621 67567617 67567619 67567621 67567617 67567619 67567621;}
@list l3:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l3:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l3:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l3:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l3:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l3:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l3:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l3:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l3:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l4
	{mso-list-id:172650312;
	mso-list-type:hybrid;
	mso-list-template-ids:-63165634 67567617 67567619 67567621 67567617 67567619 67567621 67567617 67567619 67567621;}
@list l4:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l4:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l4:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l4:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l4:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l4:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l4:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l4:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l4:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l5
	{mso-list-id:182867113;
	mso-list-template-ids:1061459582;}
@list l5:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l5:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l5:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l5:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l5:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l5:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l5:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l5:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l5:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l6
	{mso-list-id:303658219;
	mso-list-type:hybrid;
	mso-list-template-ids:1868583318 67567617 67567619 67567621 67567617 67567619 67567621 67567617 67567619 67567621;}
@list l6:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l6:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l6:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l6:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l6:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l6:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l6:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l6:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l6:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l7
	{mso-list-id:396442374;
	mso-list-type:hybrid;
	mso-list-template-ids:524832518 67567617 67567619 67567621 67567617 67567619 67567621 67567617 67567619 67567621;}
@list l7:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l7:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l7:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l7:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l7:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l7:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l7:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l7:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l7:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l8
	{mso-list-id:438571780;
	mso-list-template-ids:1555833732;}
@list l8:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l8:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l8:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l8:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l8:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l8:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l8:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l8:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l8:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l9
	{mso-list-id:474181410;
	mso-list-type:hybrid;
	mso-list-template-ids:1413511628 67567617 67567619 67567621 67567617 67567619 67567621 67567617 67567619 67567621;}
@list l9:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l9:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l9:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l9:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l9:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l9:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l9:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l9:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l9:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l10
	{mso-list-id:502402215;
	mso-list-template-ids:864963542;}
@list l10:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l10:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l10:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l10:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l10:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l10:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l10:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l10:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l10:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l11
	{mso-list-id:530804595;
	mso-list-type:hybrid;
	mso-list-template-ids:-1673239034 67567617 67567619 67567621 67567617 67567619 67567621 67567617 67567619 67567621;}
@list l11:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l11:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l11:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l11:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l11:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l11:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l11:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l11:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l11:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l12
	{mso-list-id:558129470;
	mso-list-template-ids:-1638399218;}
@list l12:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l12:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l12:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l12:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l12:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l12:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l12:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l12:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l12:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l13
	{mso-list-id:602569479;
	mso-list-template-ids:1018057442;}
@list l13:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l13:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l13:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l13:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l13:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l13:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l13:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l13:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l13:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l14
	{mso-list-id:610279850;
	mso-list-type:hybrid;
	mso-list-template-ids:1023213496 67567617 67567619 67567621 67567617 67567619 67567621 67567617 67567619 67567621;}
@list l14:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l14:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l14:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l14:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l14:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l14:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l14:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l14:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l14:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l15
	{mso-list-id:619726856;
	mso-list-type:hybrid;
	mso-list-template-ids:512903894 67567617 67567619 67567621 67567617 67567619 67567621 67567617 67567619 67567621;}
@list l15:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l15:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l15:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l15:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l15:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l15:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l15:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l15:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l15:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l16
	{mso-list-id:649598104;
	mso-list-type:hybrid;
	mso-list-template-ids:1536707106 67567617 67567619 67567621 67567617 67567619 67567621 67567617 67567619 67567621;}
@list l16:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l16:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l16:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l16:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l16:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l16:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l16:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l16:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l16:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l17
	{mso-list-id:720399495;
	mso-list-type:hybrid;
	mso-list-template-ids:-1279387748 67567617 67567619 67567621 67567617 67567619 67567621 67567617 67567619 67567621;}
@list l17:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	margin-left:54.0pt;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l17:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l17:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l17:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l17:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l17:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l17:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l17:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l17:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l18
	{mso-list-id:754670753;
	mso-list-template-ids:-1551972502;}
@list l18:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l18:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l18:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l18:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l18:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l18:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l18:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l18:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l18:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l19
	{mso-list-id:761100156;
	mso-list-template-ids:836958140;}
@list l19:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l19:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l19:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l19:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l19:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l19:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l19:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l19:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l19:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l20
	{mso-list-id:781069911;
	mso-list-type:hybrid;
	mso-list-template-ids:129686144 67567617 67567619 67567621 67567617 67567619 67567621 67567617 67567619 67567621;}
@list l20:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l20:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l20:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l20:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l20:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l20:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l20:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l20:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l20:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l21
	{mso-list-id:849757469;
	mso-list-type:hybrid;
	mso-list-template-ids:516825884 67567617 67567619 67567621 67567617 67567619 67567621 67567617 67567619 67567621;}
@list l21:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	margin-left:54.0pt;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l21:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l21:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l21:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l21:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l21:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l21:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l21:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l21:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l22
	{mso-list-id:963121799;
	mso-list-template-ids:-350171470;}
@list l22:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l22:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l22:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l22:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l22:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l22:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l22:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l22:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l22:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l23
	{mso-list-id:991059834;
	mso-list-type:hybrid;
	mso-list-template-ids:-458720232 67567617 67567617 67567621 67567617 67567619 67567621 67567617 67567619 67567621;}
@list l23:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l23:level2
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l23:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l23:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l23:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l23:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l23:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l23:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l23:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l24
	{mso-list-id:1040057886;
	mso-list-type:hybrid;
	mso-list-template-ids:-936729874 67567617 67567619 67567621 67567617 67567619 67567621 67567617 67567619 67567621;}
@list l24:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l24:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l24:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l24:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l24:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l24:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l24:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l24:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l24:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l25
	{mso-list-id:1055087789;
	mso-list-type:hybrid;
	mso-list-template-ids:-2075332068 2091289928 67567619 67567621 67567617 67567619 67567621 67567617 67567619 67567621;}
@list l25:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
@list l25:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l25:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l25:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l25:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l25:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l25:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l25:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l25:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l26
	{mso-list-id:1145241846;
	mso-list-template-ids:540567464;}
@list l26:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l26:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l26:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l26:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l26:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l26:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l26:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l26:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l26:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l27
	{mso-list-id:1168325453;
	mso-list-type:hybrid;
	mso-list-template-ids:1479189550 67567617 67567619 67567621 67567617 67567619 67567621 67567617 67567619 67567621;}
@list l27:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l27:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l27:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l27:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l27:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l27:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l27:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l27:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l27:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l28
	{mso-list-id:1259830084;
	mso-list-type:hybrid;
	mso-list-template-ids:-2019906010 67567617 67567619 67567621 67567617 67567619 67567621 67567617 67567619 67567621;}
@list l28:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l28:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l28:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l28:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l28:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l28:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l28:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l28:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l28:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l29
	{mso-list-id:1280065955;
	mso-list-type:hybrid;
	mso-list-template-ids:272824830 67567617 67567619 67567621 67567617 67567619 67567621 67567617 67567619 67567621;}
@list l29:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	margin-left:54.0pt;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l29:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l29:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l29:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l29:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l29:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l29:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l29:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l29:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l30
	{mso-list-id:1412967759;
	mso-list-template-ids:-567780602;}
@list l30:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l30:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l30:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l30:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l30:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l30:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l30:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l30:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l30:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l31
	{mso-list-id:1466392733;
	mso-list-type:hybrid;
	mso-list-template-ids:1819157884 67567617 67567619 67567621 67567617 67567619 67567621 67567617 67567619 67567621;}
@list l31:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l31:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l31:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l31:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l31:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l31:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l31:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l31:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l31:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l32
	{mso-list-id:1493108425;
	mso-list-template-ids:-541802490;}
@list l32:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l32:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l32:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l32:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l32:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l32:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l32:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l32:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l32:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l33
	{mso-list-id:1501776453;
	mso-list-template-ids:365886082;}
@list l33:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l33:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l33:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l33:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l33:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l33:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l33:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l33:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l33:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l34
	{mso-list-id:1616715111;
	mso-list-type:hybrid;
	mso-list-template-ids:1879050554 67567617 67567619 67567621 67567617 67567619 67567621 67567617 67567619 67567621;}
@list l34:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l34:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l34:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l34:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l34:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l34:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l34:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l34:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l34:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l35
	{mso-list-id:1659649190;
	mso-list-template-ids:-1058523542;}
@list l35:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l35:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l35:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l35:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l35:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l35:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l35:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l35:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l35:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l36
	{mso-list-id:1694914861;
	mso-list-type:hybrid;
	mso-list-template-ids:-1614647314 67567617 67567619 67567621 67567617 67567619 67567621 67567617 67567619 67567621;}
@list l36:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l37
	{mso-list-id:1745571200;
	mso-list-template-ids:-429486050;}
@list l37:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l37:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l37:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l37:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l37:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l37:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l37:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l37:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l37:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l38
	{mso-list-id:1816599751;
	mso-list-template-ids:-2056904892;}
@list l38:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l38:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l38:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l38:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l38:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l38:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l38:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l38:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l38:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l39
	{mso-list-id:1854608351;
	mso-list-type:hybrid;
	mso-list-template-ids:-136259574 67567617 67567619 67567621 67567617 67567619 67567621 67567617 67567619 67567621;}
@list l39:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l39:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l39:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l39:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l39:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l39:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l39:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l39:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l39:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l40
	{mso-list-id:1904290003;
	mso-list-template-ids:-1496945720;}
@list l40:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l40:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l40:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l40:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l40:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l40:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l40:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l40:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l40:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l41
	{mso-list-id:1922173753;
	mso-list-type:hybrid;
	mso-list-template-ids:1592819408 -1239144778 67567619 67567621 67567617 67567619 67567621 67567617 67567619 67567621;}
@list l41:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:-;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
@list l41:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l41:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l41:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l41:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l41:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l41:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l41:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l41:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l42
	{mso-list-id:1968387992;
	mso-list-template-ids:216181760;}
@list l42:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l42:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l42:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l42:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l42:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l42:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l42:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l42:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l42:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l43
	{mso-list-id:1994023609;
	mso-list-template-ids:1249929396;}
@list l43:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l43:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l43:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l43:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l43:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l43:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l43:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l43:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l43:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l44
	{mso-list-id:2024744074;
	mso-list-template-ids:-225663202;}
@list l44:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l44:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l44:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l44:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l44:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l44:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l44:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l44:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l44:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l45
	{mso-list-id:2037073662;
	mso-list-type:hybrid;
	mso-list-template-ids:-1884630188 67567617 67567619 67567621 67567617 67567619 67567621 67567617 67567619 67567621;}
@list l45:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l45:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l45:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l45:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l45:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l45:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l45:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l45:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l45:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l46
	{mso-list-id:2076778819;
	mso-list-template-ids:1550886238;}
@list l46:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l46:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l46:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l46:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l46:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l46:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l46:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l46:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l46:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l47
	{mso-list-id:2110462656;
	mso-list-type:hybrid;
	mso-list-template-ids:29630954 67567617 67567619 67567621 67567617 67567619 67567621 67567617 67567619 67567621;}
@list l47:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;}
@list l47:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l47:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l47:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l47:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l47:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l47:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l47:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l47:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Normale Tabelle";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-qformat:yes;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
table.MsoTableGrid
	{mso-style-name:Tabellengitternetz;
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-priority:59;
	mso-style-unhide:no;
	border:solid black 1.0pt;
	mso-border-themecolor:text1;
	mso-border-alt:solid black .5pt;
	mso-border-themecolor:text1;
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-border-insideh:.5pt solid black;
	mso-border-insideh-themecolor:text1;
	mso-border-insidev:.5pt solid black;
	mso-border-insidev-themecolor:text1;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
table.MsoTableLightShading
	{mso-style-name:"Helle Schattierung";
	mso-tstyle-rowband-size:1;
	mso-tstyle-colband-size:1;
	mso-style-priority:60;
	mso-style-unhide:no;
	border-top:solid black 1.0pt;
	mso-border-top-themecolor:text1;
	border-left:none;
	border-bottom:solid black 1.0pt;
	mso-border-bottom-themecolor:text1;
	border-right:none;
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";
	color:black;
	mso-themecolor:text1;
	mso-themeshade:191;}
table.MsoTableLightShadingFirstRow
	{mso-style-name:"Helle Schattierung";
	mso-table-condition:first-row;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-tstyle-border-top:1.0pt solid black;
	mso-tstyle-border-top-themecolor:text1;
	mso-tstyle-border-left:cell-none;
	mso-tstyle-border-bottom:1.0pt solid black;
	mso-tstyle-border-bottom-themecolor:text1;
	mso-tstyle-border-right:cell-none;
	mso-tstyle-border-insideh:cell-none;
	mso-tstyle-border-insidev:cell-none;
	line-height:normal;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableLightShadingLastRow
	{mso-style-name:"Helle Schattierung";
	mso-table-condition:last-row;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-tstyle-border-top:1.0pt solid black;
	mso-tstyle-border-top-themecolor:text1;
	mso-tstyle-border-left:cell-none;
	mso-tstyle-border-bottom:1.0pt solid black;
	mso-tstyle-border-bottom-themecolor:text1;
	mso-tstyle-border-right:cell-none;
	mso-tstyle-border-insideh:cell-none;
	mso-tstyle-border-insidev:cell-none;
	line-height:normal;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableLightShadingFirstCol
	{mso-style-name:"Helle Schattierung";
	mso-table-condition:first-column;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableLightShadingLastCol
	{mso-style-name:"Helle Schattierung";
	mso-table-condition:last-column;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableLightShadingOddColumn
	{mso-style-name:"Helle Schattierung";
	mso-table-condition:odd-column;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-tstyle-shading:silver;
	mso-tstyle-shading-themecolor:text1;
	mso-tstyle-shading-themetint:63;
	mso-tstyle-border-left:cell-none;
	mso-tstyle-border-right:cell-none;
	mso-tstyle-border-insideh:cell-none;
	mso-tstyle-border-insidev:cell-none;}
table.MsoTableLightShadingOddRow
	{mso-style-name:"Helle Schattierung";
	mso-table-condition:odd-row;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-tstyle-shading:silver;
	mso-tstyle-shading-themecolor:text1;
	mso-tstyle-shading-themetint:63;
	mso-tstyle-border-left:cell-none;
	mso-tstyle-border-right:cell-none;
	mso-tstyle-border-insideh:cell-none;
	mso-tstyle-border-insidev:cell-none;}
table.MsoTableLightList
	{mso-style-name:"Helle Liste";
	mso-tstyle-rowband-size:1;
	mso-tstyle-colband-size:1;
	mso-style-priority:61;
	mso-style-unhide:no;
	border:solid black 1.0pt;
	mso-border-themecolor:text1;
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
table.MsoTableLightListFirstRow
	{mso-style-name:"Helle Liste";
	mso-table-condition:first-row;
	mso-style-priority:61;
	mso-style-unhide:no;
	mso-tstyle-shading:black;
	mso-tstyle-shading-themecolor:text1;
	line-height:normal;
	color:white;
	mso-themecolor:background1;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableLightListLastRow
	{mso-style-name:"Helle Liste";
	mso-table-condition:last-row;
	mso-style-priority:61;
	mso-style-unhide:no;
	mso-tstyle-border-top:2.25pt double black;
	mso-tstyle-border-top-themecolor:text1;
	mso-tstyle-border-left:1.0pt solid black;
	mso-tstyle-border-left-themecolor:text1;
	mso-tstyle-border-bottom:1.0pt solid black;
	mso-tstyle-border-bottom-themecolor:text1;
	mso-tstyle-border-right:1.0pt solid black;
	mso-tstyle-border-right-themecolor:text1;
	line-height:normal;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableLightListFirstCol
	{mso-style-name:"Helle Liste";
	mso-table-condition:first-column;
	mso-style-priority:61;
	mso-style-unhide:no;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableLightListLastCol
	{mso-style-name:"Helle Liste";
	mso-table-condition:last-column;
	mso-style-priority:61;
	mso-style-unhide:no;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableLightListOddColumn
	{mso-style-name:"Helle Liste";
	mso-table-condition:odd-column;
	mso-style-priority:61;
	mso-style-unhide:no;
	mso-tstyle-border-top:1.0pt solid black;
	mso-tstyle-border-top-themecolor:text1;
	mso-tstyle-border-left:1.0pt solid black;
	mso-tstyle-border-left-themecolor:text1;
	mso-tstyle-border-bottom:1.0pt solid black;
	mso-tstyle-border-bottom-themecolor:text1;
	mso-tstyle-border-right:1.0pt solid black;
	mso-tstyle-border-right-themecolor:text1;}
table.MsoTableLightListOddRow
	{mso-style-name:"Helle Liste";
	mso-table-condition:odd-row;
	mso-style-priority:61;
	mso-style-unhide:no;
	mso-tstyle-border-top:1.0pt solid black;
	mso-tstyle-border-top-themecolor:text1;
	mso-tstyle-border-left:1.0pt solid black;
	mso-tstyle-border-left-themecolor:text1;
	mso-tstyle-border-bottom:1.0pt solid black;
	mso-tstyle-border-bottom-themecolor:text1;
	mso-tstyle-border-right:1.0pt solid black;
	mso-tstyle-border-right-themecolor:text1;}
table.MsoTableMediumShading1
	{mso-style-name:"Mittlere Schattierung 1";
	mso-tstyle-rowband-size:1;
	mso-tstyle-colband-size:1;
	mso-style-priority:63;
	mso-style-unhide:no;
	border:solid #404040 1.0pt;
	mso-border-themecolor:text1;
	mso-border-themetint:191;
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-border-insideh:1.0pt solid #404040;
	mso-border-insideh-themecolor:text1;
	mso-border-insideh-themetint:191;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
table.MsoTableMediumShading1FirstRow
	{mso-style-name:"Mittlere Schattierung 1";
	mso-table-condition:first-row;
	mso-style-priority:63;
	mso-style-unhide:no;
	mso-tstyle-shading:black;
	mso-tstyle-shading-themecolor:text1;
	mso-tstyle-border-top:1.0pt solid #404040;
	mso-tstyle-border-top-themecolor:text1;
	mso-tstyle-border-top-themetint:191;
	mso-tstyle-border-left:1.0pt solid #404040;
	mso-tstyle-border-left-themecolor:text1;
	mso-tstyle-border-left-themetint:191;
	mso-tstyle-border-bottom:1.0pt solid #404040;
	mso-tstyle-border-bottom-themecolor:text1;
	mso-tstyle-border-bottom-themetint:191;
	mso-tstyle-border-right:1.0pt solid #404040;
	mso-tstyle-border-right-themecolor:text1;
	mso-tstyle-border-right-themetint:191;
	mso-tstyle-border-insideh:cell-none;
	mso-tstyle-border-insidev:cell-none;
	line-height:normal;
	color:white;
	mso-themecolor:background1;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableMediumShading1LastRow
	{mso-style-name:"Mittlere Schattierung 1";
	mso-table-condition:last-row;
	mso-style-priority:63;
	mso-style-unhide:no;
	mso-tstyle-border-top:2.25pt double #404040;
	mso-tstyle-border-top-themecolor:text1;
	mso-tstyle-border-top-themetint:191;
	mso-tstyle-border-left:1.0pt solid #404040;
	mso-tstyle-border-left-themecolor:text1;
	mso-tstyle-border-left-themetint:191;
	mso-tstyle-border-bottom:1.0pt solid #404040;
	mso-tstyle-border-bottom-themecolor:text1;
	mso-tstyle-border-bottom-themetint:191;
	mso-tstyle-border-right:1.0pt solid #404040;
	mso-tstyle-border-right-themecolor:text1;
	mso-tstyle-border-right-themetint:191;
	mso-tstyle-border-insideh:cell-none;
	mso-tstyle-border-insidev:cell-none;
	line-height:normal;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableMediumShading1FirstCol
	{mso-style-name:"Mittlere Schattierung 1";
	mso-table-condition:first-column;
	mso-style-priority:63;
	mso-style-unhide:no;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableMediumShading1LastCol
	{mso-style-name:"Mittlere Schattierung 1";
	mso-table-condition:last-column;
	mso-style-priority:63;
	mso-style-unhide:no;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableMediumShading1OddColumn
	{mso-style-name:"Mittlere Schattierung 1";
	mso-table-condition:odd-column;
	mso-style-priority:63;
	mso-style-unhide:no;
	mso-tstyle-shading:silver;
	mso-tstyle-shading-themecolor:text1;
	mso-tstyle-shading-themetint:63;}
table.MsoTableMediumShading1OddRow
	{mso-style-name:"Mittlere Schattierung 1";
	mso-table-condition:odd-row;
	mso-style-priority:63;
	mso-style-unhide:no;
	mso-tstyle-shading:silver;
	mso-tstyle-shading-themecolor:text1;
	mso-tstyle-shading-themetint:63;
	mso-tstyle-border-insideh:cell-none;
	mso-tstyle-border-insidev:cell-none;}
table.MsoTableMediumShading1EvenRow
	{mso-style-name:"Mittlere Schattierung 1";
	mso-table-condition:even-row;
	mso-style-priority:63;
	mso-style-unhide:no;
	mso-tstyle-border-insideh:cell-none;
	mso-tstyle-border-insidev:cell-none;}
table.MsoTableColorfulList
	{mso-style-name:"Farbige Liste";
	mso-tstyle-rowband-size:1;
	mso-tstyle-colband-size:1;
	mso-style-priority:72;
	mso-style-unhide:no;
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-tstyle-shading:#E6E6E6;
	mso-tstyle-shading-themecolor:text1;
	mso-tstyle-shading-themetint:25;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";
	color:black;
	mso-themecolor:text1;}
table.MsoTableColorfulListFirstRow
	{mso-style-name:"Farbige Liste";
	mso-table-condition:first-row;
	mso-style-priority:72;
	mso-style-unhide:no;
	mso-tstyle-shading:#9E3A38;
	mso-tstyle-shading-themecolor:accent2;
	mso-tstyle-shading-themeshade:204;
	mso-tstyle-border-bottom:1.5pt solid white;
	mso-tstyle-border-bottom-themecolor:background1;
	color:white;
	mso-themecolor:background1;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableColorfulListLastRow
	{mso-style-name:"Farbige Liste";
	mso-table-condition:last-row;
	mso-style-priority:72;
	mso-style-unhide:no;
	mso-tstyle-shading:white;
	mso-tstyle-shading-themecolor:background1;
	mso-tstyle-border-top:1.5pt solid black;
	mso-tstyle-border-top-themecolor:text1;
	color:#9E3A38;
	mso-themecolor:accent2;
	mso-themeshade:204;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableColorfulListFirstCol
	{mso-style-name:"Farbige Liste";
	mso-table-condition:first-column;
	mso-style-priority:72;
	mso-style-unhide:no;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableColorfulListLastCol
	{mso-style-name:"Farbige Liste";
	mso-table-condition:last-column;
	mso-style-priority:72;
	mso-style-unhide:no;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableColorfulListOddColumn
	{mso-style-name:"Farbige Liste";
	mso-table-condition:odd-column;
	mso-style-priority:72;
	mso-style-unhide:no;
	mso-tstyle-shading:silver;
	mso-tstyle-shading-themecolor:text1;
	mso-tstyle-shading-themetint:63;
	mso-tstyle-border-top:cell-none;
	mso-tstyle-border-left:cell-none;
	mso-tstyle-border-bottom:cell-none;
	mso-tstyle-border-right:cell-none;
	mso-tstyle-border-insideh:cell-none;
	mso-tstyle-border-insidev:cell-none;}
table.MsoTableColorfulListOddRow
	{mso-style-name:"Farbige Liste";
	mso-table-condition:odd-row;
	mso-style-priority:72;
	mso-style-unhide:no;
	mso-tstyle-shading:#CCCCCC;
	mso-tstyle-shading-themecolor:text1;
	mso-tstyle-shading-themetint:51;}
table.MsoTableLightShadingAccent1
	{mso-style-name:"Helle Schattierung - Akzent 1";
	mso-tstyle-rowband-size:1;
	mso-tstyle-colband-size:1;
	mso-style-priority:60;
	mso-style-unhide:no;
	border-top:solid #4F81BD 1.0pt;
	mso-border-top-themecolor:accent1;
	border-left:none;
	border-bottom:solid #4F81BD 1.0pt;
	mso-border-bottom-themecolor:accent1;
	border-right:none;
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";
	color:#365F91;
	mso-themecolor:accent1;
	mso-themeshade:191;}
table.MsoTableLightShadingAccent1FirstRow
	{mso-style-name:"Helle Schattierung - Akzent 1";
	mso-table-condition:first-row;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-tstyle-border-top:1.0pt solid #4F81BD;
	mso-tstyle-border-top-themecolor:accent1;
	mso-tstyle-border-left:cell-none;
	mso-tstyle-border-bottom:1.0pt solid #4F81BD;
	mso-tstyle-border-bottom-themecolor:accent1;
	mso-tstyle-border-right:cell-none;
	mso-tstyle-border-insideh:cell-none;
	mso-tstyle-border-insidev:cell-none;
	line-height:normal;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableLightShadingAccent1LastRow
	{mso-style-name:"Helle Schattierung - Akzent 1";
	mso-table-condition:last-row;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-tstyle-border-top:1.0pt solid #4F81BD;
	mso-tstyle-border-top-themecolor:accent1;
	mso-tstyle-border-left:cell-none;
	mso-tstyle-border-bottom:1.0pt solid #4F81BD;
	mso-tstyle-border-bottom-themecolor:accent1;
	mso-tstyle-border-right:cell-none;
	mso-tstyle-border-insideh:cell-none;
	mso-tstyle-border-insidev:cell-none;
	line-height:normal;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableLightShadingAccent1FirstCol
	{mso-style-name:"Helle Schattierung - Akzent 1";
	mso-table-condition:first-column;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableLightShadingAccent1LastCol
	{mso-style-name:"Helle Schattierung - Akzent 1";
	mso-table-condition:last-column;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableLightShadingAccent1OddColumn
	{mso-style-name:"Helle Schattierung - Akzent 1";
	mso-table-condition:odd-column;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-tstyle-shading:#D3DFEE;
	mso-tstyle-shading-themecolor:accent1;
	mso-tstyle-shading-themetint:63;
	mso-tstyle-border-left:cell-none;
	mso-tstyle-border-right:cell-none;
	mso-tstyle-border-insideh:cell-none;
	mso-tstyle-border-insidev:cell-none;}
table.MsoTableLightShadingAccent1OddRow
	{mso-style-name:"Helle Schattierung - Akzent 1";
	mso-table-condition:odd-row;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-tstyle-shading:#D3DFEE;
	mso-tstyle-shading-themecolor:accent1;
	mso-tstyle-shading-themetint:63;
	mso-tstyle-border-left:cell-none;
	mso-tstyle-border-right:cell-none;
	mso-tstyle-border-insideh:cell-none;
	mso-tstyle-border-insidev:cell-none;}
table.MsoTableLightListAccent1
	{mso-style-name:"Helle Liste - Akzent 1";
	mso-tstyle-rowband-size:1;
	mso-tstyle-colband-size:1;
	mso-style-priority:61;
	mso-style-unhide:no;
	border:solid #4F81BD 1.0pt;
	mso-border-themecolor:accent1;
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
table.MsoTableLightListAccent1FirstRow
	{mso-style-name:"Helle Liste - Akzent 1";
	mso-table-condition:first-row;
	mso-style-priority:61;
	mso-style-unhide:no;
	mso-tstyle-shading:#4F81BD;
	mso-tstyle-shading-themecolor:accent1;
	line-height:normal;
	color:white;
	mso-themecolor:background1;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableLightListAccent1LastRow
	{mso-style-name:"Helle Liste - Akzent 1";
	mso-table-condition:last-row;
	mso-style-priority:61;
	mso-style-unhide:no;
	mso-tstyle-border-top:2.25pt double #4F81BD;
	mso-tstyle-border-top-themecolor:accent1;
	mso-tstyle-border-left:1.0pt solid #4F81BD;
	mso-tstyle-border-left-themecolor:accent1;
	mso-tstyle-border-bottom:1.0pt solid #4F81BD;
	mso-tstyle-border-bottom-themecolor:accent1;
	mso-tstyle-border-right:1.0pt solid #4F81BD;
	mso-tstyle-border-right-themecolor:accent1;
	line-height:normal;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableLightListAccent1FirstCol
	{mso-style-name:"Helle Liste - Akzent 1";
	mso-table-condition:first-column;
	mso-style-priority:61;
	mso-style-unhide:no;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableLightListAccent1LastCol
	{mso-style-name:"Helle Liste - Akzent 1";
	mso-table-condition:last-column;
	mso-style-priority:61;
	mso-style-unhide:no;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableLightListAccent1OddColumn
	{mso-style-name:"Helle Liste - Akzent 1";
	mso-table-condition:odd-column;
	mso-style-priority:61;
	mso-style-unhide:no;
	mso-tstyle-border-top:1.0pt solid #4F81BD;
	mso-tstyle-border-top-themecolor:accent1;
	mso-tstyle-border-left:1.0pt solid #4F81BD;
	mso-tstyle-border-left-themecolor:accent1;
	mso-tstyle-border-bottom:1.0pt solid #4F81BD;
	mso-tstyle-border-bottom-themecolor:accent1;
	mso-tstyle-border-right:1.0pt solid #4F81BD;
	mso-tstyle-border-right-themecolor:accent1;}
table.MsoTableLightListAccent1OddRow
	{mso-style-name:"Helle Liste - Akzent 1";
	mso-table-condition:odd-row;
	mso-style-priority:61;
	mso-style-unhide:no;
	mso-tstyle-border-top:1.0pt solid #4F81BD;
	mso-tstyle-border-top-themecolor:accent1;
	mso-tstyle-border-left:1.0pt solid #4F81BD;
	mso-tstyle-border-left-themecolor:accent1;
	mso-tstyle-border-bottom:1.0pt solid #4F81BD;
	mso-tstyle-border-bottom-themecolor:accent1;
	mso-tstyle-border-right:1.0pt solid #4F81BD;
	mso-tstyle-border-right-themecolor:accent1;}
table.MsoTableLightShadingAccent2
	{mso-style-name:"Helle Schattierung - Akzent 2";
	mso-tstyle-rowband-size:1;
	mso-tstyle-colband-size:1;
	mso-style-priority:60;
	mso-style-unhide:no;
	border-top:solid #C0504D 1.0pt;
	mso-border-top-themecolor:accent2;
	border-left:none;
	border-bottom:solid #C0504D 1.0pt;
	mso-border-bottom-themecolor:accent2;
	border-right:none;
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";
	color:#943634;
	mso-themecolor:accent2;
	mso-themeshade:191;}
table.MsoTableLightShadingAccent2FirstRow
	{mso-style-name:"Helle Schattierung - Akzent 2";
	mso-table-condition:first-row;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-tstyle-border-top:1.0pt solid #C0504D;
	mso-tstyle-border-top-themecolor:accent2;
	mso-tstyle-border-left:cell-none;
	mso-tstyle-border-bottom:1.0pt solid #C0504D;
	mso-tstyle-border-bottom-themecolor:accent2;
	mso-tstyle-border-right:cell-none;
	mso-tstyle-border-insideh:cell-none;
	mso-tstyle-border-insidev:cell-none;
	line-height:normal;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableLightShadingAccent2LastRow
	{mso-style-name:"Helle Schattierung - Akzent 2";
	mso-table-condition:last-row;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-tstyle-border-top:1.0pt solid #C0504D;
	mso-tstyle-border-top-themecolor:accent2;
	mso-tstyle-border-left:cell-none;
	mso-tstyle-border-bottom:1.0pt solid #C0504D;
	mso-tstyle-border-bottom-themecolor:accent2;
	mso-tstyle-border-right:cell-none;
	mso-tstyle-border-insideh:cell-none;
	mso-tstyle-border-insidev:cell-none;
	line-height:normal;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableLightShadingAccent2FirstCol
	{mso-style-name:"Helle Schattierung - Akzent 2";
	mso-table-condition:first-column;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableLightShadingAccent2LastCol
	{mso-style-name:"Helle Schattierung - Akzent 2";
	mso-table-condition:last-column;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableLightShadingAccent2OddColumn
	{mso-style-name:"Helle Schattierung - Akzent 2";
	mso-table-condition:odd-column;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-tstyle-shading:#EFD3D2;
	mso-tstyle-shading-themecolor:accent2;
	mso-tstyle-shading-themetint:63;
	mso-tstyle-border-left:cell-none;
	mso-tstyle-border-right:cell-none;
	mso-tstyle-border-insideh:cell-none;
	mso-tstyle-border-insidev:cell-none;}
table.MsoTableLightShadingAccent2OddRow
	{mso-style-name:"Helle Schattierung - Akzent 2";
	mso-table-condition:odd-row;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-tstyle-shading:#EFD3D2;
	mso-tstyle-shading-themecolor:accent2;
	mso-tstyle-shading-themetint:63;
	mso-tstyle-border-left:cell-none;
	mso-tstyle-border-right:cell-none;
	mso-tstyle-border-insideh:cell-none;
	mso-tstyle-border-insidev:cell-none;}
table.MsoTableLightShadingAccent4
	{mso-style-name:"Helle Schattierung - Akzent 4";
	mso-tstyle-rowband-size:1;
	mso-tstyle-colband-size:1;
	mso-style-priority:60;
	mso-style-unhide:no;
	border-top:solid #8064A2 1.0pt;
	mso-border-top-themecolor:accent4;
	border-left:none;
	border-bottom:solid #8064A2 1.0pt;
	mso-border-bottom-themecolor:accent4;
	border-right:none;
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";
	color:#5F497A;
	mso-themecolor:accent4;
	mso-themeshade:191;}
table.MsoTableLightShadingAccent4FirstRow
	{mso-style-name:"Helle Schattierung - Akzent 4";
	mso-table-condition:first-row;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-tstyle-border-top:1.0pt solid #8064A2;
	mso-tstyle-border-top-themecolor:accent4;
	mso-tstyle-border-left:cell-none;
	mso-tstyle-border-bottom:1.0pt solid #8064A2;
	mso-tstyle-border-bottom-themecolor:accent4;
	mso-tstyle-border-right:cell-none;
	mso-tstyle-border-insideh:cell-none;
	mso-tstyle-border-insidev:cell-none;
	line-height:normal;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableLightShadingAccent4LastRow
	{mso-style-name:"Helle Schattierung - Akzent 4";
	mso-table-condition:last-row;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-tstyle-border-top:1.0pt solid #8064A2;
	mso-tstyle-border-top-themecolor:accent4;
	mso-tstyle-border-left:cell-none;
	mso-tstyle-border-bottom:1.0pt solid #8064A2;
	mso-tstyle-border-bottom-themecolor:accent4;
	mso-tstyle-border-right:cell-none;
	mso-tstyle-border-insideh:cell-none;
	mso-tstyle-border-insidev:cell-none;
	line-height:normal;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableLightShadingAccent4FirstCol
	{mso-style-name:"Helle Schattierung - Akzent 4";
	mso-table-condition:first-column;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableLightShadingAccent4LastCol
	{mso-style-name:"Helle Schattierung - Akzent 4";
	mso-table-condition:last-column;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableLightShadingAccent4OddColumn
	{mso-style-name:"Helle Schattierung - Akzent 4";
	mso-table-condition:odd-column;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-tstyle-shading:#DFD8E8;
	mso-tstyle-shading-themecolor:accent4;
	mso-tstyle-shading-themetint:63;
	mso-tstyle-border-left:cell-none;
	mso-tstyle-border-right:cell-none;
	mso-tstyle-border-insideh:cell-none;
	mso-tstyle-border-insidev:cell-none;}
table.MsoTableLightShadingAccent4OddRow
	{mso-style-name:"Helle Schattierung - Akzent 4";
	mso-table-condition:odd-row;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-tstyle-shading:#DFD8E8;
	mso-tstyle-shading-themecolor:accent4;
	mso-tstyle-shading-themetint:63;
	mso-tstyle-border-left:cell-none;
	mso-tstyle-border-right:cell-none;
	mso-tstyle-border-insideh:cell-none;
	mso-tstyle-border-insidev:cell-none;}
table.MsoTableLightShadingAccent5
	{mso-style-name:"Helle Schattierung - Akzent 5";
	mso-tstyle-rowband-size:1;
	mso-tstyle-colband-size:1;
	mso-style-priority:60;
	mso-style-unhide:no;
	border-top:solid #4BACC6 1.0pt;
	mso-border-top-themecolor:accent5;
	border-left:none;
	border-bottom:solid #4BACC6 1.0pt;
	mso-border-bottom-themecolor:accent5;
	border-right:none;
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";
	color:#31849B;
	mso-themecolor:accent5;
	mso-themeshade:191;}
table.MsoTableLightShadingAccent5FirstRow
	{mso-style-name:"Helle Schattierung - Akzent 5";
	mso-table-condition:first-row;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-tstyle-border-top:1.0pt solid #4BACC6;
	mso-tstyle-border-top-themecolor:accent5;
	mso-tstyle-border-left:cell-none;
	mso-tstyle-border-bottom:1.0pt solid #4BACC6;
	mso-tstyle-border-bottom-themecolor:accent5;
	mso-tstyle-border-right:cell-none;
	mso-tstyle-border-insideh:cell-none;
	mso-tstyle-border-insidev:cell-none;
	line-height:normal;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableLightShadingAccent5LastRow
	{mso-style-name:"Helle Schattierung - Akzent 5";
	mso-table-condition:last-row;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-tstyle-border-top:1.0pt solid #4BACC6;
	mso-tstyle-border-top-themecolor:accent5;
	mso-tstyle-border-left:cell-none;
	mso-tstyle-border-bottom:1.0pt solid #4BACC6;
	mso-tstyle-border-bottom-themecolor:accent5;
	mso-tstyle-border-right:cell-none;
	mso-tstyle-border-insideh:cell-none;
	mso-tstyle-border-insidev:cell-none;
	line-height:normal;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableLightShadingAccent5FirstCol
	{mso-style-name:"Helle Schattierung - Akzent 5";
	mso-table-condition:first-column;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableLightShadingAccent5LastCol
	{mso-style-name:"Helle Schattierung - Akzent 5";
	mso-table-condition:last-column;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-ansi-font-weight:bold;
	mso-bidi-font-weight:bold;}
table.MsoTableLightShadingAccent5OddColumn
	{mso-style-name:"Helle Schattierung - Akzent 5";
	mso-table-condition:odd-column;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-tstyle-shading:#D2EAF1;
	mso-tstyle-shading-themecolor:accent5;
	mso-tstyle-shading-themetint:63;
	mso-tstyle-border-left:cell-none;
	mso-tstyle-border-right:cell-none;
	mso-tstyle-border-insideh:cell-none;
	mso-tstyle-border-insidev:cell-none;}
table.MsoTableLightShadingAccent5OddRow
	{mso-style-name:"Helle Schattierung - Akzent 5";
	mso-table-condition:odd-row;
	mso-style-priority:60;
	mso-style-unhide:no;
	mso-tstyle-shading:#D2EAF1;
	mso-tstyle-shading-themecolor:accent5;
	mso-tstyle-shading-themetint:63;
	mso-tstyle-border-left:cell-none;
	mso-tstyle-border-right:cell-none;
	mso-tstyle-border-insideh:cell-none;
	mso-tstyle-border-insidev:cell-none;}
</style>
<![endif]-->
<meta name=CREATED content="20080922;21044300">
<meta name=CHANGEDBY content="Christophe Henry">
<meta name=CHANGED content="20090326;22005200">
<meta name="Info 1" content="">
<meta name="Info 2" content="">
<meta name="Info 3" content="">
<meta name="Info 4" content="">
<meta name=CHANGEDBY content="Christophe Henry">
<meta name=CHANGEDBY content="Christophe Henry">
<meta name=CHANGEDBY content="Christophe Henry">
<meta name=CHANGEDBY content="Christophe Henry">
<meta name=CHANGEDBY content="Christophe Henry">
<meta name=CHANGEDBY content="Christophe Henry">
<meta name=CHANGEDBY content="Christophe Henry">
<meta name=CHANGEDBY content="Christophe Henry">
<meta name=CHANGEDBY content="Christophe Henry">
<meta name=CHANGEDBY content=xtoff>
<meta name=CHANGEDBY content=xtoff>
<meta name=CHANGEDBY content=xtoff>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="38914"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=DE link=blue vlink=purple style='tab-interval:35.4pt'>

<div class=Section1>

<p style='margin-top:11.9pt;margin-right:0cm;margin-bottom:14.2pt;margin-left:
0cm;page-break-after:avoid'><span lang=EN-US style='font-size:13.5pt;
font-family:"Arial","sans-serif";mso-ansi-language:EN-US'>The Msm (Meta State
Machine) library v2.0</span><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>Christophe Henry, <o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>henry UNDERSCORE christophe
AT hotmail DOT com<o:p></o:p></span></p>

<p style='margin-top:11.9pt;margin-right:0cm;margin-bottom:14.2pt;margin-left:
0cm;page-break-after:avoid'><span lang=EN-US style='font-size:13.5pt;
font-family:"Arial","sans-serif";mso-ansi-language:EN-US'>Contents</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'><a href="#_Introduction">Introduction</a><o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="#_Changes_compared_to_1">Changes compared to previous version</a><o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'><a href="#_Boost_version">Boost
version</a><o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'><a href="#_Design_Goals">Design
Goals</a><span style='mso-tab-count:1'>&nbsp; </span><o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="#_Msm_v1.x_Features">Msm v1.x Features</a><o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l34 level1 lfo1'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'><a href="#_Design_Goals">Design
Goals</a><o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l34 level1 lfo1'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'><a href="#_Founding_example">Founding
example</a><o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l34 level1 lfo1'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'><a href="#_Rows">Rows</a><o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l34 level1 lfo1'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'><a href="#_Tutorials">Tutorials</a><o:p></o:p></span></p>

<p style='margin-left:54.0pt;text-indent:-18.0pt;mso-list:l21 level1 lfo2'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'><a href="#_Your_first_finite">Your
first finite state machine</a><o:p></o:p></span></p>

<p style='margin-left:54.0pt;text-indent:-18.0pt;mso-list:l21 level1 lfo2'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'><a href="#_A_more_advanced">A more
advanced example</a><o:p></o:p></span></p>

<p style='margin-left:54.0pt;text-indent:-18.0pt;mso-list:l21 level1 lfo2'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'><a href="#_Orthogonal_States_(+Defer">Orthogonal
States (+Defer and Terminate states)</a><o:p></o:p></span></p>

<p style='margin-left:54.0pt;text-indent:-18.0pt;mso-list:l21 level1 lfo2'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'><a href="#_Adding_an_history">Adding
an history</a><o:p></o:p></span></p>

<p style='margin-left:54.0pt;text-indent:-18.0pt;mso-list:l21 level1 lfo2'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'><a href="#_Defining_flags">Using
&#8220;flags&#8221;</a><o:p></o:p></span></p>

<p style='margin-left:54.0pt;text-indent:-18.0pt;mso-list:l21 level1 lfo2'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'><a href="#_Anonymous_transitions">Anonymous
transitions</a><o:p></o:p></span></p>

<p style='margin-left:54.0pt;text-indent:-18.0pt;mso-list:l21 level1 lfo2'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'><a href="#_The_many_ways">The many
ways to enter a composite state</a><o:p></o:p></span></p>

<p style='margin-left:18.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="#_Advanced">Advanced</a><o:p></o:p></span></p>

<p style='margin-left:54.0pt;text-indent:-18.0pt;mso-list:l29 level1 lfo3'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'><a href="#_Conflicting_Transitions">Conflicting
Transitions</a><o:p></o:p></span></p>

<p style='margin-left:54.0pt;text-indent:-18.0pt;mso-list:l29 level1 lfo3'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'><a href="#_Containing_state_machine">Containing
state machine</a><o:p></o:p></span></p>

<p style='margin-left:54.0pt;text-indent:-18.0pt;mso-list:l29 level1 lfo3'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'><a href="#_Getting_a_pointer">Getting
a pointer to a state</a><o:p></o:p></span></p>

<p style='margin-left:54.0pt;text-indent:-18.0pt;mso-list:l29 level1 lfo3'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'><a href="#_Exceptions">Exceptions</a><o:p></o:p></span></p>

<p style='margin-left:54.0pt;text-indent:-18.0pt;mso-list:l29 level1 lfo3'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'><a href="#_Helpers_methods">Helpers
methods</a><o:p></o:p></span></p>

<p style='margin-left:54.0pt;text-indent:-18.0pt;mso-list:l29 level1 lfo3'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'><a href="#_Getting_more_speed">Getting
more speed</a><o:p></o:p></span></p>

<p style='margin-left:54.0pt;text-indent:-18.0pt;mso-list:l29 level1 lfo3'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'><a href="#_Processing_events_inside">Processing
events inside from within the front-end</a><o:p></o:p></span></p>

<p style='margin-left:18.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="#_Customizing_states">Customizing states</a><o:p></o:p></span></p>

<p style='margin-left:54.0pt;text-indent:-18.0pt;mso-list:l17 level1 lfo4'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'><a href="#_User-defined_base_state">User-defined
base state / Polymorphic states</a><o:p></o:p></span></p>

<p style='margin-left:54.0pt;text-indent:-18.0pt;mso-list:l17 level1 lfo4'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'><a href="#_Visiting_active_states">Visiting
active states</a><o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'><a href="#_New_Msm_v2.0">New
Msm v2.0 Features</a> <o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l23 level1 lfo5'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'><a href="#_Frontends">Frontends</a><o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l23 level1 lfo5'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'><a href="#_Functor_rows">Functor
rows</a><o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l23 level1 lfo5'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'><a href="#_eUML">eUML</a><o:p></o:p></span></p>

<p style='margin-left:72.0pt;text-indent:-18.0pt;mso-list:l23 level2 lfo5;
tab-stops:list 72.0pt'><![if !supportLists]><span lang=EN-US style='font-family:
Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="#_Transition_table">Transition table</a><o:p></o:p></span></p>

<p style='margin-left:72.0pt;text-indent:-18.0pt;mso-list:l23 level2 lfo5;
tab-stops:list 72.0pt'><![if !supportLists]><span lang=EN-US style='font-family:
Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="#_Defining_a_state">Defining a state with entry/exit functors</a><o:p></o:p></span></p>

<p style='margin-left:72.0pt;text-indent:-18.0pt;mso-list:l23 level2 lfo5;
tab-stops:list 72.0pt'><![if !supportLists]><span lang=EN-US style='font-family:
Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="#_Defining_a_state_1">Defining a simple state machine</a><o:p></o:p></span></p>

<p style='margin-left:72.0pt;text-indent:-18.0pt;mso-list:l23 level2 lfo5;
tab-stops:list 72.0pt'><![if !supportLists]><span lang=EN-US style='font-family:
Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="#_Defining_a_composite">Defining a composite state machine</a><o:p></o:p></span></p>

<p style='margin-left:72.0pt;text-indent:-18.0pt;mso-list:l23 level2 lfo5;
tab-stops:list 72.0pt'><![if !supportLists]><span lang=EN-US style='font-family:
Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="#_Anonymous_transitions_1">Anonymous transitions</a><o:p></o:p></span></p>

<p style='margin-left:72.0pt;text-indent:-18.0pt;mso-list:l23 level2 lfo5;
tab-stops:list 72.0pt'><![if !supportLists]><span lang=EN-US style='font-family:
Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="#_Fork">Fork</a><o:p></o:p></span></p>

<p style='margin-left:72.0pt;text-indent:-18.0pt;mso-list:l23 level2 lfo5;
tab-stops:list 72.0pt'><![if !supportLists]><span lang=EN-US style='font-family:
Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="#_Defining_attributes">Defining attributes</a><o:p></o:p></span></p>

<p style='margin-left:72.0pt;text-indent:-18.0pt;mso-list:l23 level2 lfo5;
tab-stops:list 72.0pt'><![if !supportLists]><span lang=EN-US style='font-family:
Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="#_Defining_flags">Defining flags</a><o:p></o:p></span></p>

<p style='margin-left:72.0pt;text-indent:-18.0pt;mso-list:l23 level2 lfo5;
tab-stops:list 72.0pt'><![if !supportLists]><span lang=EN-US style='font-family:
Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="#_Defining_deferred_events">Defining deferred events</a><o:p></o:p></span></p>

<p style='margin-left:72.0pt;text-indent:-18.0pt;mso-list:l23 level2 lfo5;
tab-stops:list 72.0pt'><![if !supportLists]><span lang=EN-US style='font-family:
Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="#_Customizing_a_state">Customizing a state machine</a> <a
href="#_Customizing_a_state">/ getting more speed</a><o:p></o:p></span></p>

<p style='margin-left:72.0pt;text-indent:-18.0pt;mso-list:l23 level2 lfo5;
tab-stops:list 72.0pt'><![if !supportLists]><span lang=EN-US style='font-family:
Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="#_Wrapping_it_up">Operators</a><o:p></o:p></span></p>

<p style='margin-left:72.0pt;text-indent:-18.0pt;mso-list:l23 level2 lfo5;
tab-stops:list 72.0pt'><![if !supportLists]><span lang=EN-US style='font-family:
Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="#_Adding_STL_support">Adding functional programming and
boost::phoenix-like STL support</a><o:p></o:p></span></p>

<p style='margin-left:72.0pt;text-indent:-18.0pt;mso-list:l23 level2 lfo5;
tab-stops:list 72.0pt'><![if !supportLists]><span lang=EN-US style='font-family:
Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="#_Binding_to_a">Binding to a function or method</a><o:p></o:p></span></p>

<p style='margin-left:72.0pt;text-indent:-18.0pt;mso-list:l23 level2 lfo5;
tab-stops:list 72.0pt'><![if !supportLists]><span lang=EN-US style='font-family:
Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="#_Some_Examples_with_1">Some examples with eUML</a><o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'><a href="#_Performance">Performance</a><o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'><a href="#_Compilers">Compilers</a><o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'><a href="#_Limitations">Limitations</a><o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'><a href="#_Acknowledgments">Acknowledgments</a><o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="#_Questions_&amp;_Answers">Questions &amp; Answers</a><o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'><a href="#_Case_Studies">Case
Studies</a><o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="#_EUML_Case_Studies">eUML Case Studies</a><o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l7 level1 lfo6'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'><a href="#_A_simple_Timer">A simple
timer</a><o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l7 level1 lfo6'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'><a href="#_A_search_function">A
search function</a><o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="#_Annex_A_Debugging">Annex A Debugging</a><o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="#_Annex_B_Metaprogramming">Annex B Metaprogramming tools</a><o:p></o:p></span></p>

<h1 style='page-break-before:always'><a name="_Introduction"></a><span
lang=EN-US style='font-size:16.0pt;font-family:"Arial","sans-serif";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US'>Introduction<o:p></o:p></span></h1>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>Msm is a framework which
enables you to build a Finite State Machine in a straightforward, descriptive
and easy-to-use manner. It requires minimal effort to generate a working
program from an UML state machine diagram. This work was inspired by the state
machine described in the book of David Abrahams and Aleksey Gurtovoy &#8220;C++
Template Metaprogramming&#8221; and adds most of what UML Designers are expecting
from an UML State Machine framework:<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l40 level1 lfo7;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Entry
and Exit Methods<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l40 level1 lfo7;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Guard
Conditions<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l40 level1 lfo7;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Sub
state machines (also called composite states in UML)<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l40 level1 lfo7;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>History<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l40 level1 lfo7;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Terminate
Pseudo-State<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l40 level1 lfo7;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Deferred
Events<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l40 level1 lfo7;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Orthogonal
regions (also called and-states)<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l40 level1 lfo7;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Explicit
entry into sub state machine states<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l40 level1 lfo7;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Fork<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l40 level1 lfo7;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Entry
/ Exit pseudo states<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l40 level1 lfo7;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Automatic
handling of conflicting transitions<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l40 level1 lfo7;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Anonymous
transitions<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>Additional features, absent
from the UML specification but nevertheless relevant were also implemented:<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l12 level1 lfo8;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Event
Queue<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l12 level1 lfo8;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>A
new concept named &#8220;flags&#8221;. This can be seen as an alternative to Boost.Statechart&#8217;s
state_downcast<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l12 level1 lfo8;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Interrupted
Pseudo-State. A kind of Terminate pseudo-state which can still be left.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l12 level1 lfo8;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Visitors,
polymorphic states when needed.<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:12.0pt'><u><span lang=EN-US style='mso-ansi-language:
EN-US'>Why Msm v2?<o:p></o:p></span></u></p>

<p style='margin-bottom:12.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'>The
new design allows different frontends so that the user now has a choice of how
to describe a state machine. Msm now proudly offers as a frontend actions made
of functors instead of actions methods and a new Domain-Specific-Embedded
Language for UML-like description of transition tables named eUML. This
frontend also allows writing actions and guards directly in the transition
table or state definition, without the need to define extra functions.<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'>Msm
was designed with the idea of helping developers build software the Model-Driven-Development
way. State machines are a very useful tool for MDD, as they allow a graphical
representation of a dynamic view from a modeled system. Msm aims to provide a
Model-Driven approach with the reversible and repeatable properties. But the
help provided by state machines usually stops with the structure definition
(states, transitions, etc.) and there is little help for actually writing the
actions, guards and stat actions. Msm now brings MDD further by providing a new
functional language for the definition of actions and guards directly in the
transition table. Functional languages have interesting properties, one of
which is relevant to MDD, the ability to be easily graphically represented.<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'>In
a UML diagram, a transition is represented as:<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shapetype
 id="_x0000_t75" coordsize="21600,21600" o:spt="75" o:preferrelative="t"
 path="m@4@5l@4@11@9@11@9@5xe" filled="f" stroked="f">
 <v:stroke joinstyle="miter"/>
 <v:formulas>
  <v:f eqn="if lineDrawn pixelLineWidth 0"/>
  <v:f eqn="sum @0 1 0"/>
  <v:f eqn="sum 0 0 @1"/>
  <v:f eqn="prod @2 1 2"/>
  <v:f eqn="prod @3 21600 pixelWidth"/>
  <v:f eqn="prod @3 21600 pixelHeight"/>
  <v:f eqn="sum @0 0 1"/>
  <v:f eqn="prod @6 1 2"/>
  <v:f eqn="prod @7 21600 pixelWidth"/>
  <v:f eqn="sum @8 21600 0"/>
  <v:f eqn="prod @7 21600 pixelHeight"/>
  <v:f eqn="sum @10 21600 0"/>
 </v:formulas>
 <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
 <o:lock v:ext="edit" aspectratio="t"/>
</v:shapetype><v:shape id="Grafik_x0020_16" o:spid="_x0000_i1037" type="#_x0000_t75"
 alt="Transition.jpg" style='width:151.2pt;height:1in;visibility:visible;
 mso-wrap-style:square'>
 <v:imagedata src="index-Dateien/image001.jpg" o:title="Transition"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=202 height=96
src="index-Dateien/image027.jpg" alt=Transition.jpg v:shapes="Grafik_x0020_16"><![endif]></span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'>Where
guard and action are usually expressed as a natural language or pseudo-code.
And this is what eUML now offers:<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'>State1
() + event1 () == State2 () [Condition1() &amp;&amp; Condition2()] /
(Action1(),Action2())<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'>UML
designers are also used to write pseudo-code in the action methods, like
++counter. This is now also possible, along with most of the STL algorithms or
container methods.<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'>To
achieve this, eUML also acts like a compile-time boost::phoenix adapted to the
state machine context, using a similar functional programming interface.<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'>All
this being defined at compile-time, there is no runtime penalty (you might even
see a speed gain) while using this new capability, only a compile-time one.<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'>EUML
also offers much more, so please have a look at the <a href="#_eUML">eUML
documentation</a>.<o:p></o:p></span></p>

<h1 style='page-break-before:always'><a name="_Changes_compared_to"></a><span
lang=EN-US style='font-size:16.0pt;font-family:"Arial","sans-serif";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></h1>

<h1 style='page-break-before:always'><a name="_Changes_compared_to_1"></a><span
lang=EN-US style='font-size:16.0pt;font-family:"Arial","sans-serif";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US'>Changes compared to previous version<o:p></o:p></span></h1>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>Experienced Msm users might
want to have a short look at a <a href="SimpleTutorial.cpp">simple tutorial</a>
to see the few changes and then move on to the <a href="#_eUML">definition of
eUML</a>.<o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>Changes from 1.20 to 2.0<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:12.0pt;margin-left:
36.0pt;text-indent:-18.0pt;mso-list:l24 level1 lfo9'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Divided the library into frontend
and backend.<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:12.0pt;margin-left:
36.0pt;text-indent:-18.0pt;mso-list:l24 level1 lfo9'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>The backend is now using a
fusion::vector to store the machine&#8217;s states, meaning that the state
machine is almost fully stack-based (with the exception of the message and
deferred events queues)<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:12.0pt;margin-left:
36.0pt;text-indent:-18.0pt;mso-list:l24 level1 lfo9'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>30% performance gain (thanks to the
effect of data locality in a fusion vector)<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:12.0pt;margin-left:
36.0pt;text-indent:-18.0pt;mso-list:l24 level1 lfo9'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Added the possibility to use
functors instead of functions for guards and action methods.<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:12.0pt;margin-left:
36.0pt;text-indent:-18.0pt;mso-list:l24 level1 lfo9'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Added eUML, a
domain-specific-embedded language.<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:12.0pt;margin-left:
36.0pt;text-indent:-18.0pt;mso-list:l24 level1 lfo9'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Added a kind of boost::phoenix for
state machines.<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:12.0pt;margin-left:
36.0pt;text-indent:-18.0pt;mso-list:l24 level1 lfo9'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Removed a few constraints for exit
pseudo states.<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:12.0pt;margin-left:
36.0pt;text-indent:-18.0pt;mso-list:l24 level1 lfo9'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Histories are now a backend policy
for more reuse possibilities.<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:12.0pt;margin-left:
36.0pt;text-indent:-18.0pt;mso-list:l24 level1 lfo9'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Copy policy disappeared as the use
of a fusion vector to store states renders obsolete the concept of deep/shallow
copying.<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:12.0pt;margin-left:
36.0pt;text-indent:-18.0pt;mso-list:l24 level1 lfo9'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Improved visitor handling (states of
a submachine are now automatically called)<o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>Several breaking changes
will require developer action:<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l15 level1 lfo10'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Previous code now becomes the
frontend, and a backend typedef must be added.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l15 level1 lfo10'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Entry, exit pseudo states and direct
entries now have a new syntax.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l15 level1 lfo10'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Entry and exit actions have a new
parameter (the state machine itself) so that the sm_ptr policy is now obsolete.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l15 level1 lfo10'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>It is unfortunately now more
complicated, with the simplest front-end, to call </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>this-&gt;process_event()</span><span
lang=EN-US style='mso-ansi-language:EN-US'> because the front-end doesn&#8217;t
have any. The other front-ends now offer a superior way to achieve this.<o:p></o:p></span></p>

<h1><a name="_Msm_v1.x_Features"></a><span lang=EN-US style='mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></h1>

<h1 style='page-break-before:always'><a name="_Boost_version"></a><span
lang=EN-US style='font-size:16.0pt;font-family:"Arial","sans-serif";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US'>Boost versions<o:p></o:p></span></h1>

<p class=MsoNormal><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US'>Msm v2 was tested with boost v 1.38, 1.39 and 1.40. If
using eUML with Boost 1.40, please use the trunk version of proto or replace
the proto file with the delivered traits.hpp.<o:p></o:p></span></p>

<h1><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></h1>

<h1><span lang=EN-US style='mso-ansi-language:EN-US'>Msm v1.x Features<o:p></o:p></span></h1>

<p><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>&nbsp;</span>This chapter will present the features
known from the 1.x versions adapted to the new Msm v2.0 syntax. <o:p></o:p></span></p>

<h2><a name="_Design_Goals"></a><span lang=EN-US style='mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US'>Design Goals<o:p></o:p></span></h2>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>While Boost.Statechart
already offers many of the aforementioned features, one may question the very
existence of the Msm framework. The following advantages are offered:<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l22 level1 lfo11;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Efficiency:
The heavily-used metaprogramming techniques described in the book allow an O
(1) double dispatch and the non-use of virtual calls. The result is a very
efficient code, at the cost of a longer compilation time and bigger executable
size.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l22 level1 lfo11;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Declarativeness:
At the heart of the framework is a transition table. Boost.Statechart is a very
good tool, but to deduce the original state machine diagram from its source
code can sometimes be quite a challenge. <o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l22 level1 lfo11;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Expressiveness:
The Domain-Specific-Language represents well the abstraction domain and
displays a high ratio of information to syntactic noise. <o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l22 level1 lfo11;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Metaprogramming
tools (see <a href="#_Annex_B_Metaprogramming">Annex B</a>) can be easily
written and add much value to your state machine.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l22 level1 lfo11;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>The
declarativeness and expressiveness of the framework favor a model-driven
approach as explained in the <a href="MsmSession_Handout.pdf">BoostCon09 paper</a>.
<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>For people working on
embedded systems, selling Boost.Statechart has got the handicap O (n)
double-dispatch, the virtual calls and the fact that many of them are coming
from the C world and thus no fans of big template argument lists or
forward-declarations.<o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>The declarative interface
of Msm is transparent, and a developer not needing the more complex features is
not required to learn them, reducing the &quot;entry cost&quot;. As needed, the
user may choose to delve further in the more advanced policies and underlying
concepts of the library.<o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>What the framework does not
yet offer:<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l46 level1 lfo12;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Built-in
multithreading. For the time being, it is not fully decided whether this should
be implemented directly in the library or if this should remain at the user's
discretion.<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>If you are looking for an
efficient and straightforward UML-based finite state machine framework, we sincerely
hope you will enjoy this work!<o:p></o:p></span></p>

<h2><a name="_Founding_example"></a><span lang=EN-US style='mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US'>Founding example<o:p></o:p></span></h2>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>Let's start with an example
taken from C++ Template Metaprogramming:<o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>int
main()</span></code><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>{</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>player
p; // an instance of the concrete state Machine</span></code><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><code><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='font-size:10.0pt;mso-ansi-language:EN-US'>p.start(); // activates the init
state (calls on_entry on the state machine and the first state)</span></b></code><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></b></p>

<p><code><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>p.process_event(open_close());
// user opens CD player</span></code><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>p.process_event(open_close());
// inserts CD and closes</span></code><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>p.process_event(cd_detected(&#8220;louie&#8221;,&#8221;louie&#8221;));</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>p.process_event(play());</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>...</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>return
0;</span></code><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>}</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>The transition table is at
the heart of the framework, and is implemented using the following DSL
(Domain-Specific-Language):<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>struct
transition_table: mpl::vector&lt;</span></code><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width="100%"
 style='width:100.0%;mso-cellspacing:0cm;mso-yfti-tbllook:1184;mso-padding-alt:
 3.0pt 3.0pt 3.0pt 3.0pt'>
 <COL WIDTH=28*><COL WIDTH=34*><COL WIDTH=37*><COL WIDTH=31*><COL WIDTH=59*><COL WIDTH=54*><COL WIDTH=14*>
 <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes'>
  <td width="11%" valign=top style='width:11.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:green'>Start</span></code></p>
  </td>
  <td width="15%" valign=top style='width:15.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:green'>Event</span></code></p>
  </td>
  <td width="12%" valign=top style='width:12.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:green'>Next</span></code></p>
  </td>
  <td width="23%" valign=top style='width:23.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:green'>Action</span></code></p>
  </td>
  <td width="21%" valign=top style='width:21.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:green'>Guard</span></code></p>
  </td>
  <td width="5%" valign=top style='width:5.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
 </tr>
 <tr style='mso-yfti-irow:1'>
  <td width="11%" valign=top style='width:11.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>row&lt;</span></code></p>
  </td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Stopped,</span></code></p>
  </td>
  <td width="15%" valign=top style='width:15.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>play,</span></code></p>
  </td>
  <td width="12%" valign=top style='width:12.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Playing,</span></code></p>
  </td>
  <td width="23%" valign=top style='width:23.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:#C5000B'>&amp;p::start_playback</span></code></p>
  </td>
  <td width="21%" valign=top style='width:21.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="5%" valign=top style='width:5.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>&gt;,</span></code></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:2'>
  <td width="11%" valign=top style='width:11.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>row&lt;</span></code></p>
  </td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Stopped,</span></code></p>
  </td>
  <td width="15%" valign=top style='width:15.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>open_close,</span></code></p>
  </td>
  <td width="12%" valign=top style='width:12.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Open,</span></code></p>
  </td>
  <td width="23%" valign=top style='width:23.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:#C5000B'>&amp;p::open_drawer</span></code></p>
  </td>
  <td width="21%" valign=top style='width:21.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="5%" valign=top style='width:5.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>&gt;,</span></code></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:3'>
  <td width="11%" valign=top style='width:11.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>row&lt;</span></code></p>
  </td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Stopped,</span></code></p>
  </td>
  <td width="15%" valign=top style='width:15.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>stop,</span></code></p>
  </td>
  <td width="12%" valign=top style='width:12.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Stopped</span></code></p>
  </td>
  <td width="23%" valign=top style='width:23.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="21%" valign=top style='width:21.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="5%" valign=top style='width:5.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>&gt;,</span></code></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:4'>
  <td width="11%" valign=top style='width:11.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>row&lt;</span></code></p>
  </td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Open,</span></code></p>
  </td>
  <td width="15%" valign=top style='width:15.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>open_close,</span></code></p>
  </td>
  <td width="12%" valign=top style='width:12.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Empty,</span></code></p>
  </td>
  <td width="23%" valign=top style='width:23.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:#C5000B'>&amp;p::close_drawer</span></code></p>
  </td>
  <td width="21%" valign=top style='width:21.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="5%" valign=top style='width:5.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>&gt;,</span></code></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:5'>
  <td width="11%" valign=top style='width:11.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>row&lt;</span></code></p>
  </td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Empty,</span></code></p>
  </td>
  <td width="15%" valign=top style='width:15.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>open_close,</span></code></p>
  </td>
  <td width="12%" valign=top style='width:12.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Open,</span></code></p>
  </td>
  <td width="23%" valign=top style='width:23.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:#C5000B'>&amp;p::open_drawer</span></code></p>
  </td>
  <td width="21%" valign=top style='width:21.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="5%" valign=top style='width:5.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>&gt;,</span></code></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:6'>
  <td width="11%" valign=top style='width:11.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>row&lt;</span></code></p>
  </td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Empty,</span></code></p>
  </td>
  <td width="15%" valign=top style='width:15.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>cd_detected,</span></code></p>
  </td>
  <td width="12%" valign=top style='width:12.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Stopped,</span></code></p>
  </td>
  <td width="23%" valign=top style='width:23.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:#C5000B'>&amp;p::store_cd_info</span></code></p>
  </td>
  <td width="21%" valign=top style='width:21.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:#C5000B'>&amp;p::good_disk_format</span></code></p>
  </td>
  <td width="5%" valign=top style='width:5.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>&gt;,</span></code></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:7'>
  <td width="11%" valign=top style='width:11.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>row&lt;</span></code></p>
  </td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Playing,</span></code></p>
  </td>
  <td width="15%" valign=top style='width:15.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>stop,</span></code></p>
  </td>
  <td width="12%" valign=top style='width:12.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Stopped,</span></code></p>
  </td>
  <td width="23%" valign=top style='width:23.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:#C5000B'>&amp;p::stop_playback</span></code></p>
  </td>
  <td width="21%" valign=top style='width:21.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="5%" valign=top style='width:5.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>&gt;,</span></code></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:8'>
  <td width="11%" valign=top style='width:11.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>row&lt;</span></code></p>
  </td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Playing,</span></code></p>
  </td>
  <td width="15%" valign=top style='width:15.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>pause,</span></code></p>
  </td>
  <td width="12%" valign=top style='width:12.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Paused,</span></code></p>
  </td>
  <td width="23%" valign=top style='width:23.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:#C5000B'>&amp;p::pause_playback</span></code></p>
  </td>
  <td width="21%" valign=top style='width:21.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="5%" valign=top style='width:5.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>&gt;,</span></code></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:9'>
  <td width="11%" valign=top style='width:11.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>row&lt;</span></code></p>
  </td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Playing,</span></code></p>
  </td>
  <td width="15%" valign=top style='width:15.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>open_close,</span></code></p>
  </td>
  <td width="12%" valign=top style='width:12.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Open,</span></code></p>
  </td>
  <td width="23%" valign=top style='width:23.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:#C5000B'>&amp;p::stop_and_open</span></code></p>
  </td>
  <td width="21%" valign=top style='width:21.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="5%" valign=top style='width:5.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>&gt;,</span></code></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:10'>
  <td width="11%" valign=top style='width:11.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>row&lt;</span></code></p>
  </td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Paused,</span></code></p>
  </td>
  <td width="15%" valign=top style='width:15.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>end_pause,</span></code></p>
  </td>
  <td width="12%" valign=top style='width:12.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Playing,</span></code></p>
  </td>
  <td width="23%" valign=top style='width:23.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:#C5000B'>&amp;p::resume_playback</span></code></p>
  </td>
  <td width="21%" valign=top style='width:21.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="5%" valign=top style='width:5.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>&gt;,</span></code></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:11'>
  <td width="11%" valign=top style='width:11.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>row&lt;</span></code></p>
  </td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Paused,</span></code></p>
  </td>
  <td width="15%" valign=top style='width:15.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>stop,</span></code></p>
  </td>
  <td width="12%" valign=top style='width:12.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Stopped,</span></code></p>
  </td>
  <td width="23%" valign=top style='width:23.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:#C5000B'>&amp;p::stop_playback</span></code></p>
  </td>
  <td width="21%" valign=top style='width:21.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="5%" valign=top style='width:5.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>&gt;,</span></code></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:12'>
  <td width="11%" valign=top style='width:11.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>row&lt;</span></code></p>
  </td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Paused,</span></code></p>
  </td>
  <td width="15%" valign=top style='width:15.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>open_close,</span></code></p>
  </td>
  <td width="12%" valign=top style='width:12.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Open,</span></code></p>
  </td>
  <td width="23%" valign=top style='width:23.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:#C5000B'>&amp;p::stop_and_open</span></code></p>
  </td>
  <td width="21%" valign=top style='width:21.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="5%" valign=top style='width:5.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>&gt;</span></code><o:p>&nbsp;</o:p></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:13;mso-yfti-lastrow:yes'>
  <td width="11%" valign=top style='width:11.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>&gt; {};</span></code></p>
  </td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="15%" valign=top style='width:15.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="12%" valign=top style='width:12.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="23%" valign=top style='width:23.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="21%" valign=top style='width:21.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="5%" valign=top style='width:5.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
 </tr>
</table>

<p style='margin-bottom:12.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>As you see, the whole state
machine structure is in the transition table.<o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>You define one row for
every transition. A transition is made of:<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l26 level1 lfo13;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>a
current state<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l26 level1 lfo13;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>an
event triggering the transition making the machine leave the current state and
moving to:<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l26 level1 lfo13;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>a
next state, which becomes the next current state<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l26 level1 lfo13;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>an
action method which gets called during the transition, if and only if<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l26 level1 lfo13;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>a
guard condition first gives its ok by returning true<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>For every <u>concrete</u>
event, the action method has the following signature:<o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:
EN-US'>void</span></code><code><span lang=EN-US style='font-size:10.0pt;
mso-ansi-language:EN-US'> action_method(<span style='color:blue'>SomeEvent
const&amp;</span>) //SomeEvent can be play,stop, etc.</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>And for the guard method:<o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:
EN-US'>bool</span></code><code><span lang=EN-US style='font-size:10.0pt;
mso-ansi-language:EN-US'> guard_method( <span style='color:blue'>SomeEvent
const&amp;</span>) //SomeEvent can be play,stop, etc.</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>The event being passed the
action/guard methods may contain data, while evident for action methods, is
also very useful for guards methods offering a nice alternative to
Boost.Statechart's explicit branching requirements.<o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>To define a state, simply
derive it from:<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l5 level1 lfo14;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><code><span lang=EN-US style='font-size:10.0pt;
mso-ansi-language:EN-US'>terminate_state&lt;&gt;</span></code><span lang=EN-US
style='mso-ansi-language:EN-US'>: if the state is a terminal pseudo-state which
ends all event processing in the state machine.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l5 level1 lfo14;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>interrupt_state&lt;EndInterruptEvent&gt;</span><span
lang=EN-US style='mso-ansi-language:EN-US'>: if the state is only interrupting
the state machine until the event </span><span lang=EN-US style='font-family:
"Courier New";mso-ansi-language:EN-US'>EndInterruptEvent </span><span
lang=EN-US style='mso-ansi-language:EN-US'>is fired.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l5 level1 lfo14;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><code><span lang=EN-US style='font-size:10.0pt;
mso-ansi-language:EN-US'>state_machine&lt;State&gt;</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'> if State must itself be a sub-
state machine (composite in UML)<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l5 level1 lfo14;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><code><span lang=EN-US style='font-size:10.0pt;
mso-ansi-language:EN-US'>state&lt;&gt; </span></code><span lang=EN-US
style='mso-ansi-language:EN-US'>if it is a normal state<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>You just need to define the
initial state:<o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>typedef
Empty initial_state;</span></code><span lang=EN-US style='font-size:10.0pt;
font-family:"Courier New";mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><code><span lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:
12.0pt;font-family:"Times New Roman","serif";mso-ansi-language:EN-US'>As shown
in the above code, you need to start the state machine by calling start(). This
is to avoid calling on_entry immediately at object creation time and allows you
to delay starting the state machine.</span></code><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<h2><a name="_Rows"></a><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US'>Rows<o:p></o:p></span></h2>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>Attentive readers will
notice that the above syntax is actually not exactly the one described in the
book which provides no guard and forces the definition of an action method.<o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>Msm therefore defines
several types of rows, for all possible combinations of transitions with or
without guard and action methods.<o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>As only the Start, Event
and Next are absolutely necessary, a quick calculation will show that we need 4
types of rows:<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l0 level1 lfo15;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>row</span><span lang=EN-US style='mso-ansi-language:
EN-US'> takes 5 arguments: start state, event, next state, action and guard.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l0 level1 lfo15;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>a_row</span><span lang=EN-US style='mso-ansi-language:
EN-US'> (&#8220;a&#8221; for action) allows defining only the action and omit
the guard condition<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l0 level1 lfo15;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>g_row</span><span lang=EN-US style='mso-ansi-language:
EN-US'> (&#8220;g&#8221; for guard) allows omitting the action method and
defining only the guard<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l0 level1 lfo15;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>_row</span><span lang=EN-US style='mso-ansi-language:
EN-US'> allows omitting action and guard methods.<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>For example:<o:p></o:p></span></p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width="100%"
 style='width:100.0%;mso-cellspacing:0cm;mso-yfti-tbllook:1184;mso-padding-alt:
 3.0pt 3.0pt 3.0pt 3.0pt'>
 <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes'>
  <td width="11%" valign=top style='width:11.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:green'>Start</span></code></p>
  </td>
  <td width="14%" valign=top style='width:14.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:green'>Event</span></code></p>
  </td>
  <td width="12%" valign=top style='width:12.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:green'>Next</span></code></p>
  </td>
  <td width="23%" valign=top style='width:23.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:green'>Action</span></code></p>
  </td>
  <td width="21%" valign=top style='width:21.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:green'>Guard</span></code></p>
  </td>
  <td width="5%" valign=top style='width:5.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
 </tr>
 <tr style='mso-yfti-irow:1'>
  <td width="11%" valign=top style='width:11.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>a_row&lt;</span></code></p>
  </td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Stopped,</span></code></p>
  </td>
  <td width="14%" valign=top style='width:14.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>play,</span></code></p>
  </td>
  <td width="12%" valign=top style='width:12.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Playing,</span></code></p>
  </td>
  <td width="23%" valign=top style='width:23.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:#C5000B'>&amp;p::start_playback</span></code></p>
  </td>
  <td width="21%" valign=top style='width:21.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="5%" valign=top style='width:5.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>&gt;</span></code><o:p>&nbsp;</o:p></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:2'>
  <td width="11%" valign=top style='width:11.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>g_row&lt;</span></code></p>
  </td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Stopped,</span></code></p>
  </td>
  <td width="14%" valign=top style='width:14.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>open_close,</span></code></p>
  </td>
  <td width="12%" valign=top style='width:12.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Open,</span></code></p>
  </td>
  <td width="23%" valign=top style='width:23.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="21%" valign=top style='width:21.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:#C5000B'>&amp;p::some_guard</span></code></p>
  </td>
  <td width="5%" valign=top style='width:5.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>&gt;</span></code><o:p>&nbsp;</o:p></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:3;mso-yfti-lastrow:yes'>
  <td width="11%" valign=top style='width:11.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>_row&lt;</span></code></p>
  </td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Stopped,</span></code></p>
  </td>
  <td width="14%" valign=top style='width:14.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>stop,</span></code></p>
  </td>
  <td width="12%" valign=top style='width:12.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Stopped</span></code></p>
  </td>
  <td width="23%" valign=top style='width:23.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="21%" valign=top style='width:21.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="5%" valign=top style='width:5.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>&gt;</span></code><o:p>&nbsp;</o:p></p>
  </td>
 </tr>
</table>

<p style='margin-bottom:0cm;margin-bottom:.0001pt'><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<h2><a name="_Tutorials"></a><span lang=EN-US style='mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US'>Tutorials<o:p></o:p></span></h2>

<h3><a name="_Your_first_finite"></a><span lang=EN-US style='mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US'>Your first finite state machine<o:p></o:p></span></h3>

<p><span lang=EN-US style='mso-ansi-language:EN-US'><a href="SimpleTutorial.cpp">SimpleTutorial.cpp</a><o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>The previously described transition
table is an easily-generated view of the following UML State Machine Diagram:<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="Grafik_x0020_15" o:spid="_x0000_i1036" type="#_x0000_t75" alt="SimpleTutorial.jpg"
 style='width:450pt;height:435.6pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="index-Dateien/image003.jpg" o:title="SimpleTutorial"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=600 height=581
src="index-Dateien/image028.jpg" alt=SimpleTutorial.jpg v:shapes="Grafik_x0020_15"><![endif]></span><span
lang=EN-US style='mso-ansi-language:EN-US'><br clear=left style='mso-special-character:
line-break'>
<o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>First we need to choose a
frontend. We first take the &#8220;standard&#8221; frontend looking much like Msm
v1.x. We need to define events, state machine and states, for example:<o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:
EN-US'>struct</span></code><code><span lang=EN-US style='font-size:10.0pt;
color:black;mso-ansi-language:EN-US'> </span></code><code><span lang=EN-US
style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>play</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> {}; </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:green;mso-ansi-language:EN-US'>//
event</span></code><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:
EN-US'>struct</span></code><code><span lang=EN-US style='font-size:10.0pt;
color:black;mso-ansi-language:EN-US'> </span></code><code><span lang=EN-US
style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>player_</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> : </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>public</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>
msm::front::</span></code><code><span lang=EN-US style='font-size:10.0pt;
color:#030003;mso-ansi-language:EN-US'>state_machine_def</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>&lt;</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>player_</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>&gt;{...}
</span></code><code><span lang=EN-US style='font-size:10.0pt;color:green;
mso-ansi-language:EN-US'>// state machine</span></code><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt'><code><span lang=EN-US
style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>struct</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>Empty</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> : </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>public</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>
msm::front::</span></code><code><span lang=EN-US style='font-size:10.0pt;
color:#030003;mso-ansi-language:EN-US'>state</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>&lt;&gt;
</span></code><code><span lang=EN-US style='font-size:10.0pt;color:green;
mso-ansi-language:EN-US'>// state</span></code><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt'><code><span lang=EN-US
style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>{</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt'><code><span lang=EN-US
style='font-size:10.0pt;color:green;mso-ansi-language:EN-US'>// every (optional)
entry/exit methods get the event and containing state machine as parameters.</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt'><code><span lang=EN-US
style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>template &lt;class
Event, class FSM&gt; </span></code><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt'><code><span lang=EN-US
style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>void</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#C5000B;mso-ansi-language:EN-US'>on_entry</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>(</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>Event
const</span></code><code><span lang=EN-US style='font-size:10.0pt;color:black;
mso-ansi-language:EN-US'>&amp;, </span></code><code><span lang=EN-US
style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>FSM&amp;</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> ) {</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>std</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>::</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>cout</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>
&lt;&lt; </span></code><code><span lang=EN-US style='font-size:10.0pt;
color:#A31515;mso-ansi-language:EN-US'>&quot;entering: Empty&quot;</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>
&lt;&lt; </span></code><code><span lang=EN-US style='font-size:10.0pt;
color:#030003;mso-ansi-language:EN-US'>std</span></code><code><span lang=EN-US
style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>::</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>endl</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>;}</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt'><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt'><code><span lang=EN-US
style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>template &lt;class
Event, class FSM &gt;</span></code><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt'><code><span lang=EN-US
style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>void</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#C5000B;mso-ansi-language:EN-US'>on_exit</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>(</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>Event
const</span></code><code><span lang=EN-US style='font-size:10.0pt;color:black;
mso-ansi-language:EN-US'>&amp;, </span></code><code><span lang=EN-US
style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>FSM&amp;</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>&nbsp; </span>) {</span></code><code><span lang=EN-US
style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>std</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>::</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>cout</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>
&lt;&lt; </span></code><code><span lang=EN-US style='font-size:10.0pt;
color:#A31515;mso-ansi-language:EN-US'>&quot;leaving: Empty&quot;</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>
&lt;&lt; </span></code><code><span lang=EN-US style='font-size:10.0pt;
color:#030003;mso-ansi-language:EN-US'>std</span></code><code><span lang=EN-US
style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>::</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>endl</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>;}</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt'><code><span lang=EN-US
style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>};</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt'><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>The </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>on_entry</span><span
lang=EN-US style='mso-ansi-language:EN-US'> and </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>on_exit</span><span
lang=EN-US style='mso-ansi-language:EN-US'> methods are optional. The argument
is the event which triggered the state switching.<o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>Next, an initial state must
be defined:<o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:
EN-US'>typedef</span></code><code><span lang=EN-US style='font-size:10.0pt;
color:black;mso-ansi-language:EN-US'> </span></code><code><span lang=EN-US
style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>Empty</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>initial_state</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>;</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>The action methods for
every transition get the event as argument:<o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:
EN-US'>void</span></code><code><span lang=EN-US style='font-size:10.0pt;
color:black;mso-ansi-language:EN-US'> </span></code><code><span lang=EN-US
style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>start_playback</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>(</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>play</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>const</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>&amp;)</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p><code><span lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:
12.0pt;font-family:"Times New Roman","serif";color:black;mso-ansi-language:
EN-US'>Guard conditions simply inhibit a transition from occurring, even if an
acceptable event arrives. The event is passed as parameter, thus allowing
event-data-dependent decisions on whether to take the transition.</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:
EN-US'>bool</span></code><code><span lang=EN-US style='font-size:10.0pt;
color:black;mso-ansi-language:EN-US'> </span></code><code><span lang=EN-US
style='font-size:10.0pt;color:#C5000B;mso-ansi-language:EN-US'>good_disk_format</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>(</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>cd_detected
const&amp;</span></code><code><span lang=EN-US style='font-size:10.0pt;
color:black;mso-ansi-language:EN-US'> evt) {...}</span></code><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt'><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt'><code><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New Roman","serif";
color:black;mso-ansi-language:EN-US'>By default, a </span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
color:black;mso-ansi-language:EN-US'>no_transition</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
font-family:"Times New Roman","serif";color:black;mso-ansi-language:EN-US'>method
is called when an unexpected event is fired. This method simply asserts when
called.</span></code><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt'><code><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New Roman","serif";
color:black;mso-ansi-language:EN-US'>It is possible to overwrite the </span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
color:black;mso-ansi-language:EN-US'>no_transition</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
font-family:"Times New Roman","serif";color:black;mso-ansi-language:EN-US'>method
to define a different error handling:</span></code><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt'><code><span lang=EN-US
style='font-size:10.0pt;color:green;mso-ansi-language:EN-US'>// Replaces the
default no-transition response.</span></code><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt'><code><span lang=EN-US
style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>template</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> &lt;</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>class</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>Event</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>&gt;</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt'><code><span lang=EN-US
style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>int</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>no_transition</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>(</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>int</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>state</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>, </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>Event</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>const</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>&amp; </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>e</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>){</span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
color:black;mso-ansi-language:EN-US'>...}</span></code><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt'><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt'><span lang=EN-US
style='mso-ansi-language:EN-US'>Finally, a backend must be chosen. For the moment,
as there is only one backend, the choice is pretty easy to do:<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>typedef</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>msm</span>::<span style='color:#030003'>back</span>::<span
style='color:#030003'>state_machine</span>&lt;<span style='color:#030003'>player_</span>&gt;
<span style='color:#030003'>player</span>;</span><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt'><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt'><code><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New Roman","serif";
color:black;mso-ansi-language:EN-US'>That's it! People familiar to the player
state machines of the boost::mpl example will notice just a few changes:</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l37 level1 lfo16;tab-stops:
list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:10.0pt;
mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:Symbol;
mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span style='mso-list:
Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><code><u><span lang=EN-US style='mso-ansi-font-size:
12.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New Roman","serif";
color:black;mso-ansi-language:EN-US'>states are now classes/structs</span></u></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
font-family:"Times New Roman","serif";color:black;mso-ansi-language:EN-US'>so
they can have data. The states get default-constructed at initialization time.</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l37 level1 lfo16;tab-stops:
list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:10.0pt;
mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:Symbol;
mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span style='mso-list:
Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><code><u><span lang=EN-US style='mso-ansi-font-size:
12.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New Roman","serif";
color:black;mso-ansi-language:EN-US'>No id as an int has to be defined</span></u></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
font-family:"Times New Roman","serif";color:black;mso-ansi-language:EN-US'>,
which allows reuse of states in other state machines. The ids get generated at
compile-time. The disadvantage is that it makes debugging harder. See <a
href="#_Annex_A_Debugging">Annex A</a> for an explanation of how to find the
generated id. A small helper to get a state array as typeid-generated names is
explained in <a href="#_Annex_A_Debugging">Annex A</a> and an example is shown
at the end of <a href="SM-2Arg.cpp">this example</a>.</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l37 level1 lfo16;tab-stops:
list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:10.0pt;
mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:Symbol;
mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span style='mso-list:
Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><code><u><span lang=EN-US style='mso-ansi-font-size:
12.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New Roman","serif";
color:black;mso-ansi-language:EN-US'>A Guard condition</span></u></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
font-family:"Times New Roman","serif";color:black;mso-ansi-language:EN-US'>was
added.</span></code><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l37 level1 lfo16;tab-stops:
list 36.0pt'><![if !supportLists]><code><span lang=EN-US style='font-size:10.0pt;
mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:Symbol;
mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span style='mso-list:
Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></code><![endif]><code><u><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New Roman","serif";
color:black;mso-ansi-language:EN-US'>A message queue</span></u></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
font-family:"Times New Roman","serif";color:black;mso-ansi-language:EN-US'>was
added so that new events can be generated during a transition.</span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
font-family:"Times New Roman","serif";mso-ansi-language:EN-US'><o:p></o:p></span></code></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l37 level1 lfo16;tab-stops:
list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:10.0pt;
mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:Symbol;
mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span style='mso-list:
Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>And
of course, one needs to define a frontend and a backend.<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l37 level1 lfo16;tab-stops:
list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:10.0pt;
mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:Symbol;
mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span style='mso-list:
Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>As
a convention, this documentation uses name+_ for frontends (</span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>player_</span><span
lang=EN-US style='mso-ansi-language:EN-US'>) and the name only (</span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>player</span><span
lang=EN-US style='mso-ansi-language:EN-US'>) for back ends.<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt'><code><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New Roman","serif";
color:black;mso-ansi-language:EN-US'>Quite easy, isn't it? You may however
think the added value is not as great as promised, which leads us to the next tutorials...<o:p></o:p></span></code></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt'><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<h3><a name="_A_more_advanced"></a><span lang=EN-US style='mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US'>A more advanced example<o:p></o:p></span></h3>

<p><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="CompositeTutorial.cpp">CompositeTutorial.cpp</a><o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>The framework would not be
a very big subset of an UML state machine if it didn't support composite
states. The UML specification isn't too clear about the difference between composite
states and sub-state machines, so Msm ignores it for simplicity and defines
that a composite state is a state machine itself.<o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>A small example is better
as a long explanation, so, we had player defined as:<o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:
EN-US'>struct</span></code><code><span lang=EN-US style='font-size:10.0pt;
color:black;mso-ansi-language:EN-US'> </span></code><code><span lang=EN-US
style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>player_</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> : </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>public</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>
msm::front::</span></code><code><span lang=EN-US style='font-size:10.0pt;
color:#030003;mso-ansi-language:EN-US'>state_machine_def</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>&lt;</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>player_</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>&gt;{...}</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>And playing was a sub-state
of it:<o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:
EN-US'>struct</span></code><code><span lang=EN-US style='font-size:10.0pt;
color:black;mso-ansi-language:EN-US'> </span></code><code><span lang=EN-US
style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>Playing</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> : </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>public</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>
msm::front::</span></code><code><span lang=EN-US style='font-size:10.0pt;
color:#030003;mso-ansi-language:EN-US'>state</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>&lt;&gt;</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'> <o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>But now we want Playing to
be a nested state machine, like the following diagram shows:<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="Grafik_x0020_14" o:spid="_x0000_i1035" type="#_x0000_t75" alt="CompositeTutorial.jpg"
 style='width:462pt;height:620.4pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="index-Dateien/image005.jpg" o:title="CompositeTutorial"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=616 height=827
src="index-Dateien/image029.jpg" alt=CompositeTutorial.jpg v:shapes="Grafik_x0020_14"><![endif]></span><span
lang=EN-US style='mso-ansi-language:EN-US'><br clear=left style='mso-special-character:
line-break'>
<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>We need to add the frontend
(</span><span lang=EN-US style='font-family:"Courier New";mso-ansi-language:
EN-US'>Playing_</span><span lang=EN-US style='mso-ansi-language:EN-US'>)
declaration to:<o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:
EN-US'>struct</span></code><code><span lang=EN-US style='font-size:10.0pt;
color:black;mso-ansi-language:EN-US'> </span></code><code><span lang=EN-US
style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>Playing_</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> : </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>public</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>
msm::Front::</span></code><code><span lang=EN-US style='font-size:10.0pt;
color:#030003;mso-ansi-language:EN-US'>state_machine_def</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>&lt;</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>Playing_</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>&gt;{...}</span></code><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";color:black;
mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>And change </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>Playing</span><span
lang=EN-US style='mso-ansi-language:EN-US'> definition to:<o:p></o:p></span></p>

<p><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New";
mso-fareast-font-family:"Times New Roman";color:blue;mso-ansi-language:EN-US;
mso-no-proof:yes'>typedef</span><span lang=EN-US style='font-size:10.0pt;
font-family:"Courier New";mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'> <span style='color:#030003'>msm</span>::<span
style='color:#030003'>back</span>::<span style='color:#030003'>state_machine</span>&lt;<span
style='color:#030003'>Playing_</span>&gt; <span style='color:#030003'>Playing</span>;<o:p></o:p></span></p>

<p><u><span lang=EN-US style='mso-ansi-language:EN-US'>Note:</span></u><span
lang=EN-US style='mso-ansi-language:EN-US'> no change to </span><code><span
lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>player</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'> is required!<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>As a transition table for </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>Playing_</span><span
lang=EN-US style='mso-ansi-language:EN-US'> we define:<o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>struct
transition_table: mpl::vector&lt;</span></code><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width="100%"
 style='width:100.0%;mso-cellspacing:0cm;mso-yfti-tbllook:1184;mso-padding-alt:
 3.0pt 3.0pt 3.0pt 3.0pt'>
 <COL WIDTH=26*><COL WIDTH=34*><COL WIDTH=50*><COL WIDTH=32*><COL WIDTH=54*><COL WIDTH=45*><COL WIDTH=13*>
 <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes'>
  <td width="10%" valign=top style='width:10.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:green'>Start</span></code></p>
  </td>
  <td width="20%" valign=top style='width:20.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:green'>Event</span></code></p>
  </td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:green'>Next</span></code></p>
  </td>
  <td width="21%" valign=top style='width:21.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:green'>Action</span></code></p>
  </td>
  <td width="18%" valign=top style='width:18.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:green'>Guard</span></code></p>
  </td>
  <td width="5%" valign=top style='width:5.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
 </tr>
 <tr style='mso-yfti-irow:1'>
  <td width="10%" valign=top style='width:10.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>a_row&lt;</span></code></p>
  </td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Song1,</span></code></p>
  </td>
  <td width="20%" valign=top style='width:20.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>NextSong,</span></code></p>
  </td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Song2,</span></code></p>
  </td>
  <td width="21%" valign=top style='width:21.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:#C5000B'>&amp;pl::start_next_song</span></code></p>
  </td>
  <td width="18%" valign=top style='width:18.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="5%" valign=top style='width:5.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>&gt;,</span></code></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:2'>
  <td width="10%" valign=top style='width:10.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>a_row&lt;</span></code></p>
  </td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Song2,</span></code></p>
  </td>
  <td width="20%" valign=top style='width:20.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>PreviousSong,</span></code></p>
  </td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Song1,</span></code></p>
  </td>
  <td width="21%" valign=top style='width:21.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:#C5000B'>&amp;pl::start_prev_song</span></code></p>
  </td>
  <td width="18%" valign=top style='width:18.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="5%" valign=top style='width:5.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>&gt;,</span></code></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:3'>
  <td width="10%" valign=top style='width:10.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>a_row&lt;</span></code></p>
  </td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Song2,</span></code></p>
  </td>
  <td width="20%" valign=top style='width:20.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>NextSong,</span></code></p>
  </td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Song3,</span></code></p>
  </td>
  <td width="21%" valign=top style='width:21.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:#C5000B'>&amp;pl::start_next_song</span></code></p>
  </td>
  <td width="18%" valign=top style='width:18.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="5%" valign=top style='width:5.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>&gt;,</span></code></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:4'>
  <td width="10%" valign=top style='width:10.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>a_row&lt;</span></code></p>
  </td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Song3,</span></code></p>
  </td>
  <td width="20%" valign=top style='width:20.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>PreviousSong,</span></code></p>
  </td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:blue'>Song2,</span></code></p>
  </td>
  <td width="21%" valign=top style='width:21.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:#C5000B'>&amp;pl::start_prev_song</span></code></p>
  </td>
  <td width="18%" valign=top style='width:18.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="5%" valign=top style='width:5.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>&gt;</span></code><o:p>&nbsp;</o:p></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:5;mso-yfti-lastrow:yes'>
  <td width="10%" valign=top style='width:10.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt'>&gt; {};</span></code></p>
  </td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="20%" valign=top style='width:20.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="13%" valign=top style='width:13.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="21%" valign=top style='width:21.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="18%" valign=top style='width:18.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="5%" valign=top style='width:5.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
 </tr>
</table>

<p style='margin-bottom:12.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<h3><a name="_Orthogonal_States_(+Defer"></a><span lang=EN-US style='mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US'>Orthogonal States (+Defer and Terminate
State)<o:p></o:p></span></h3>

<p><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="Orthogonal-deferred.cpp">Orthogonal-deferred.cpp</a><o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>This tutorial will
demonstrate the use of three more features that UML defines: Othogonal regions,
deferring of events and terminate States.<o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>It is a very common problem
in many state machines to have to handle errors. It usually involves defining a
transition from all the states to a special error state. Translation: not fun.
Luckily, UML provides some helpful concepts here. The first one is orthogonal
regions. See them as state machines running at the same time in a same state
machine and having the capability to influence one another. The effect is that
you have several active states at any time. Actually, you have always the same
number of active states as the number of regions is not variable.<o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>We can therefore keep our
state machine from the previous example and just define a new region made of
two states, </span><code><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:
EN-US'>AllOk</span></code><span lang=EN-US style='mso-ansi-language:EN-US'> and
</span><code><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>ErrorMode</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'>.<o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>AllOk</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'> is most of the time active. But the
</span><code><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>error_found</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'> error event makes the second zone
move to the new active state </span><code><span lang=EN-US style='font-size:
10.0pt;mso-ansi-language:EN-US'>ErrorMode</span></code><span lang=EN-US
style='mso-ansi-language:EN-US'>. This event does not interest the main region
so it will simply be ignored. Only if no region at all handles the event will </span><code><span
lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>no</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'>_</span><code><span lang=EN-US
style='font-size:10.0pt;mso-ansi-language:EN-US'>transition</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'> get called.<o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>Usually, when you get an
error, you do not want other events to be handled. To achieve this, we use
another UML feature, terminate states. When any region moves to a terminate
state, the state machine &#8220;terminates&#8221; (the state machine and all
its states stay alive) and all further events are ignored.<o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>This is of course not
mandatory, one can use orthogonal regions without terminate states.<o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>Also note that, as UML
mandates, every region gets a chance of handling the event, in the same order
as defined.<o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>Msm also provides a small
extension to UML, interrupt states. If you declare </span><code><span
lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>ErrorMode</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'> as interrupt state instead, the
state machine will not handle any event other than the one which ends the
interrupt. So it's like a terminate state, with the difference that you are
allowed to resume the state machine when a condition (like handling of the
original error) is met.<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>Last but not least, this
example also shows here the handling of event deferring. Let's say someone puts
a disc and immediately presses play. The event cannot be handled, yet you'd
want it to be handled at a later point and not force the user to press play
again. The solution is to define it as deferred in the </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>Empty</span><span
lang=EN-US style='mso-ansi-language:EN-US'> and </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>Open</span><span
lang=EN-US style='mso-ansi-language:EN-US'> states and get it handled in the first
state where the event is not to be deferred. It can then be handled or
rejected. In this example, only when </span><span lang=EN-US style='font-family:
"Courier New";mso-ansi-language:EN-US'>Stopped</span><span lang=EN-US
style='mso-ansi-language:EN-US'> becomes active will the event be handled as </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>Empty</span><span
lang=EN-US style='mso-ansi-language:EN-US'> and </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>Open</span><span
lang=EN-US style='mso-ansi-language:EN-US'> defer the event.<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="Bild_x0020_4" o:spid="_x0000_i1034" type="#_x0000_t75" alt="Orthogonal-deferred.jpg"
 style='width:486.6pt;height:604.2pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="index-Dateien/image007.jpg" o:title="Orthogonal-deferred"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=649 height=806
src="index-Dateien/image030.jpg" alt=Orthogonal-deferred.jpg v:shapes="Bild_x0020_4"><![endif]></span><span
lang=EN-US style='mso-ansi-language:EN-US'><br clear=left style='mso-special-character:
line-break'>
<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>Although it may sound
arcane, it is rather mundane. You only need to add these two new states and
change the definition of </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>initial_state</span><span lang=EN-US style='mso-ansi-language:
EN-US'> to reflect the second region:<o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:
EN-US'>typedef</span></code><code><span lang=EN-US style='font-size:10.0pt;
color:black;mso-ansi-language:EN-US'> </span></code><code><span lang=EN-US
style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>mpl</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>::</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>vector</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>&lt;</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>Empty</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>,</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>AllOk</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>&gt; </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>initial_state;</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><code><span lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:
12.0pt;font-family:"Times New Roman","serif";color:#030003;mso-ansi-language:
EN-US'>Now for the terminate state, simply define ErrorMode as a terminate
state:</span></code><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:
EN-US'>struct</span></code><code><span lang=EN-US style='font-size:10.0pt;
color:black;mso-ansi-language:EN-US'> </span></code><code><span lang=EN-US
style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>ErrorMode</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> : </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>public</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>
msm::front::</span></code><code><span lang=EN-US style='font-size:10.0pt;
color:#030003;mso-ansi-language:EN-US'>terminate_state&lt;&gt;</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><code><span lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:
12.0pt;font-family:"Times New Roman","serif";color:#030003;mso-ansi-language:
EN-US'>Or as an interrupt state, which can be ended with the event </span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
color:#030003;mso-ansi-language:EN-US'>end_error</span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
font-family:"Times New Roman","serif";color:#030003;mso-ansi-language:EN-US'>:</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:
EN-US'>struct</span></code><code><span lang=EN-US style='font-size:10.0pt;
color:black;mso-ansi-language:EN-US'> </span></code><code><span lang=EN-US
style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>ErrorMode</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> : </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>public</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>
msm::front::</span></code><code><span lang=EN-US style='font-size:10.0pt;
color:#030003;mso-ansi-language:EN-US'>interrupt_state&lt;end_error&gt;</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p><code><span lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:
12.0pt;font-family:"Times New Roman","serif";color:#030003;mso-ansi-language:
EN-US'>And you're done with the orthogonal regions! You don't have to give the regions
an id but be advised that there is currently no compile time enforcement of
region consistency (Msm does not yet check that the regions are truly
orthogonal)</span></code><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p><code><span lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:
12.0pt;font-family:"Times New Roman","serif";color:#030003;mso-ansi-language:
EN-US'>As for our deferred event, the following typedef in </span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
color:#030003;mso-ansi-language:EN-US'>Empty</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
font-family:"Times New Roman","serif";color:#030003;mso-ansi-language:EN-US'>and
</span></code><code><span lang=EN-US style='mso-ansi-font-size:12.0pt;
mso-bidi-font-size:12.0pt;color:#030003;mso-ansi-language:EN-US'>Open</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
font-family:"Times New Roman","serif";color:#030003;mso-ansi-language:EN-US'>will
do:</span></code><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:
EN-US'>typedef</span></code><code><span lang=EN-US style='font-size:10.0pt;
color:black;mso-ansi-language:EN-US'> </span></code><code><span lang=EN-US
style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>mpl</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>::</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>vector</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>&lt;</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>play</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>&gt; </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>deferred_events</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>;</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><code><span lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:
12.0pt;font-family:"Times New Roman","serif";color:#030003;mso-ansi-language:
EN-US'>With this, the event will be put in the deferred queue until a state
without this typedef handles or rejects it (with a call to </span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
color:#030003;mso-ansi-language:EN-US'>no_transition</span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
font-family:"Times New Roman","serif";color:#030003;mso-ansi-language:EN-US'>).<o:p></o:p></span></code></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<h3><a name="_Adding_an_history"></a><span lang=EN-US style='mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US'>Adding an history<o:p></o:p></span></h3>

<p><span lang=EN-US style='mso-ansi-language:EN-US'><a href="History.cpp">History.cpp</a><o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>UML defines two types of
histories, Shallow History and Deep History. <o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>What is it and when do you
need it? In the previous examples, if the player was playing the second song
and the user pressed pause, at the next press on the play button, the </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>Playing</span><span
lang=EN-US style='mso-ansi-language:EN-US'> state would become active and the
first song would play again. Soon would the first client complaints follow.
They'd of course demand, that if the player was paused, then it should remember
which song was playing. But it the player was stopped, then it should restart
from the first song. <o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>Now, how can it be done? Of
course, you could add a bit of programming logic and generate extra events to
make the second song start if coming from Pause. Something like:<o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>if
(Event == end_pause) </span></code><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>{</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>for
(int i=0;i&lt; song number;++i)</span></code><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>{</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>player.process_event(NextSong());</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>}</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><code><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>}</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>Not much to like in this
example, isn't it? To solve this problem, you define what is called a shallow
or a deep history.<o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>A shallow history reactivates
the last active state of a submachine when this state machine becomes active
again. <o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>The deep history does the
same recursively, so if this last active state of the submachine was itself a
submachine, its last active state would become active and this will continue
until an active state is a normal state.<o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>For example, let us have a
look at the following UML diagram:<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt'><span style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape
 id="Grafik_x0020_12" o:spid="_x0000_i1033" type="#_x0000_t75" alt="HistoryTutorial.jpg"
 style='width:427.2pt;height:617.4pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="index-Dateien/image009.jpg" o:title="HistoryTutorial"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=570 height=823
src="index-Dateien/image031.jpg" alt=HistoryTutorial.jpg v:shapes="Grafik_x0020_12"><![endif]></span><span
lang=EN-US style='mso-ansi-language:EN-US'><br clear=left style='mso-special-character:
line-break'>
<o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>As explained in the <a
href="MsmSession_Handout.pdf">BoostCon09 paper</a>, Histories are weird. First,
there can be just one. And they can have only one out transition, so if you
have orthogonal regions, you are out of luck. They also replace the initial
state symbol. And if you have deep policy, things become much worse because you
cannot easily draw a line into a submachine. To make it worse, they are not
exactly object-oriented as a on the picture, a transition should have been
drawn directly into Playing, with the History as target.<o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>Msm goes another way and
makes this a policy so you can define your own histories. Furthermore, they are
a policy of the backend. This allows you to reuse the same state machine
frontend with different history policies.<o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>Concretely, your frontend
stays unchanged:<o:p></o:p></span></p>

<p><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New";
mso-fareast-font-family:"Times New Roman";color:blue;mso-ansi-language:EN-US;
mso-no-proof:yes'>struct</span><span lang=EN-US style='font-size:10.0pt;
font-family:"Courier New";mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'> <span style='color:#030003'>Playing_</span> : <span
style='color:blue'>public</span> <span style='color:#030003'>msm</span>::<span
style='color:#030003'>front</span>::<span style='color:#030003'>state_machine_def</span>&lt;<span
style='color:#030003'>Playing_</span>&gt;</span><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>You then add the policy to
the backend:<o:p></o:p></span></p>

<p><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New";
mso-fareast-font-family:"Times New Roman";color:blue;mso-ansi-language:EN-US;
mso-no-proof:yes'>typedef</span><span lang=EN-US style='font-size:10.0pt;
font-family:"Courier New";mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'> <span style='color:#030003'>msm</span>::<span
style='color:#030003'>back</span>::<span style='color:#030003'>state_machine</span>&lt;<span
style='color:#030003'>Playing_</span>,<span style='color:#030003'>msm</span>::<span
style='color:#030003'>back</span>::<span style='color:#030003'>ShallowHistory</span>&lt;<span
style='color:#030003'>mpl</span>::<span style='color:#030003'>vector</span>&lt;<span
style='color:#030003'>end_pause</span>&gt; &gt; &gt; <span style='color:#030003'>Playing</span>;</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>This states that a shallow
history must be activated if the </span><span lang=EN-US style='font-family:
"Courier New";mso-ansi-language:EN-US'>Playing</span><span lang=EN-US
style='mso-ansi-language:EN-US'> state machine gets activated by the </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>end_pause</span><span
lang=EN-US style='mso-ansi-language:EN-US'> event and only this one (or any
other event added to the mpl::vector). If the state machine was in the </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>Stopped</span><span
lang=EN-US style='mso-ansi-language:EN-US'> state and the event </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>play</span><span
lang=EN-US style='mso-ansi-language:EN-US'> was generated, the history would
not be activated and the normal initial state would become active.<o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>By default, history is
disabled. For your convenience the library provides in addition to </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>ShallowHistory</span><span
lang=EN-US style='mso-ansi-language:EN-US'> a non-UML standard </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>AlwaysHistory</span><span
lang=EN-US style='mso-ansi-language:EN-US'> policy which always activates
history, whatever event triggers the submachine activation.<o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>Deep history is not
directly available. The reason is that it would conflict with policies which
sub- state machines could define. Of course, if say Song1 were a state machine
itself, it could use the </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>ShallowHistory</span><span lang=EN-US
style='mso-ansi-language:EN-US'> policy itself thus creating Deep History.<o:p></o:p></span></p>

<h3><a name="_Using_&#8220;flags&#8221;"></a><span lang=EN-US style='mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></h3>

<h3><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US'>Using &#8220;flags&#8221;<o:p></o:p></span></h3>

<p><span lang=EN-US style='mso-ansi-language:EN-US'><a href="Flags.cpp">Flags.cpp</a><o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>This tutorial is devoted to
a concept not defined in UML: flags. It has been added into Msm after proving
itself useful on many occasions. Please, do not be frightened as we are not
talking about ugly shortcuts made of an improbable collusion of Booleans.<o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>So what is it and what is
its use?<o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>If you look into the
Boost.Statechart documentation you'll find some code like:<o:p></o:p></span></p>

<pre><span lang=EN-US style='mso-ansi-language:EN-US'>if ( ( state_downcast&lt; const <span
style='color:blue'>NumLockOff</span> * &gt;() != 0 ) &amp;&amp;<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>( state_downcast&lt; const <span
style='color:blue'>CapsLockOff</span> * &gt;() != 0 ) &amp;&amp;<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>( state_downcast&lt; const <span
style='color:blue'>ScrollLockOff</span> * &gt;() != 0 ) )<o:p></o:p></span></pre>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>While correct, this can be
error-prone and a potential time-bomb when you add new states or orthogonal
regions.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>And most of all, it hides the real
question, which would be &#8220;Does my state machine's current state define a
special property&#8221;? In this special case &#8220;are my keys in a lock
state&#8221;? So let's apply the Fundamental Theorem of Software Engineering
and move one level of abstraction higher.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>In our player example, let's say we
need to know if the player has a loaded CD. We could do the same:<o:p></o:p></span></p>

<pre><span lang=EN-US style='mso-ansi-language:EN-US'>if ( ( state_downcast&lt; const <span
style='color:blue'>Stopped</span> * &gt;() != 0 ) &amp;&amp;<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>( state_downcast&lt; const <span
style='color:blue'>Open</span> * &gt;() != 0 ) &amp;&amp;<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>( state_downcast&lt; const <span
style='color:blue'>Paused</span> * &gt;() != 0 ) &amp;&amp;<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>( state_downcast&lt; const <span
style='color:blue'>Playing</span> * &gt;() != 0 ) )<o:p></o:p></span></pre>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Or flag these 4 states as
CDLoaded-able. You can do it like this:<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><code><span
lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>typedef</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>mpl</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>::</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>vector1</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>&lt;</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>CDLoaded</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>&gt; </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>flag_list</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>;</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Inside each of the above states. You
can even define a list of flags, for example in </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>Playing</span><span
lang=EN-US style='mso-ansi-language:EN-US'>:<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><code><span
lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>typedef</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>mpl</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>::</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>vector2</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>&lt;</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>PlayingPaused</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>,</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>CDLoaded</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>&gt; </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>flag_list</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>;</span></code><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";color:black;
mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>This means that </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>Playing</span><span
lang=EN-US style='mso-ansi-language:EN-US'> supports both properties.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Now to check if your player has a
loaded CD, check if your flag is active in the current state:<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>player</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>p</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>;</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>if (</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>p</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>.</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>is_flag_active</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>&lt;</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>CDLoaded</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>&gt;())
...</span></code><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>And what if you have orthogonal
regions? How to decide if a state machine is in a flagged state? By default,
you keep the same code and the current states will be OR'ed, meaning if one of
the active states has the flag, then </span><span lang=EN-US style='font-family:
"Courier New";mso-ansi-language:EN-US'>is_flag_active</span><span lang=EN-US
style='mso-ansi-language:EN-US'> returns true. Of course, in some cases, you
might want that all of the active states are flagged for the state to be
active. You can also AND the active states:<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>if (</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>p</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>.</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>is_flag_active</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>&lt;</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>CDLoaded</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>,</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>player::Flag_AND</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>&gt;())
...</span></code><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>The following diagram displays the
flag situation in the tutorial.<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="Grafik_x0020_11"
 o:spid="_x0000_i1032" type="#_x0000_t75" alt="FlagsTutorial.jpg" style='width:462pt;
 height:655.2pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="index-Dateien/image011.jpg" o:title="FlagsTutorial"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=616 height=874
src="index-Dateien/image032.jpg" alt=FlagsTutorial.jpg v:shapes="Grafik_x0020_11"><![endif]></span><span
lang=EN-US style='mso-ansi-language:EN-US'><br clear=left style='mso-special-character:
line-break'>
<o:p></o:p></span></p>

<span lang=EN-US style='font-size:12.0pt;font-family:"Times New Roman","serif";
mso-fareast-font-family:"Times New Roman";mso-fareast-theme-font:minor-fareast;
mso-ansi-language:EN-US;mso-fareast-language:DE;mso-bidi-language:AR-SA'><br
clear=all style='mso-special-character:line-break;page-break-before:always'>
</span>

<p style='page-break-before:always;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Anonymous_transitions"></a><span lang=EN-US style='mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US'>Anonymous transitions<o:p></o:p></span></h3>

<p style='page-break-before:always;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="Grafik_x0020_13"
 o:spid="_x0000_i1031" type="#_x0000_t75" alt="Anonymous.jpg" style='width:333pt;
 height:331.8pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="index-Dateien/image013.jpg" o:title="Anonymous"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=444 height=442
src="index-Dateien/image033.jpg" alt=Anonymous.jpg v:shapes="Grafik_x0020_13"><![endif]></span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='page-break-before:always;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Anonymous transitions are
transitions without a named event. This means that the transition automatically
fires when the predecessor state is entered (to be exact, after the entry
condition). Otherwise it is a normal transition with actions and guards. <o:p></o:p></span></p>

<p style='page-break-before:always;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Why would you need something like
that? A possible case would be if a part of your state machine implements some
algorithm, where states are steps of the algorithm implementation. Then, using
several anonymous transitions with different guard conditions, you are actually
implementing some if/else statement.<o:p></o:p></span></p>

<p style='page-break-before:always;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Another possible use would be a
real-time system called at regular intervals and always doing the same thing,
meaning implementing the same algorithm. The advantage is that once you know
how long a transition takes to execute on the system, by calculating the
longest path (the number of transitions from start to end), you can pretty much
know how long your algorithm will take in the worst case, which in turns tells
you how big of a time frame you are to request from a scheduler.<o:p></o:p></span></p>

<p style='page-break-before:always;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>What is the cost of this feature? If
you do not use any anonymous transition, nothing because Msm will recognize it
and suppress the functionality. If you do use it, it will cost you a second </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>process_event</span><span
lang=EN-US style='mso-ansi-language:EN-US'> after each event processing, thus
doubling the execution time, which is not as bad as it sounds as Msm&#8217;s
execution speed is high anyway.<o:p></o:p></span></p>

<p style='page-break-before:always;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>To define such a transition, use
&#8220;none&#8221; in the transition table for the standard Msm front-end, or
for the <a href="#_Functor_rows">functor-based</a> front-end, for example:<o:p></o:p></span></p>

<p style='page-break-before:always;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>row</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> &lt; <span
style='color:#030003'>State3</span><span style='mso-spacerun:yes'>&nbsp;
</span>, <span style='color:#030003'>none</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>, <span
style='color:#030003'>State4</span><span style='mso-spacerun:yes'>&nbsp;
</span>, &amp;<span style='color:#030003'>p</span>::<span style='color:#030003'>State3ToState4</span><span
style='mso-spacerun:yes'>&nbsp; </span>, &amp;<span style='color:#030003'>p</span>::<span
style='color:#030003'>always_true</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&gt;</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='page-break-before:always;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Or:<o:p></o:p></span></p>

<p style='page-break-before:always;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>Row</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> &lt; <span
style='color:#030003'>State3</span><span style='mso-spacerun:yes'>&nbsp;
</span>, <span style='color:#030003'>none</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>, <span
style='color:#030003'>State4</span><span style='mso-spacerun:yes'>&nbsp;
</span>, <span style='color:#030003'>State3ToState4</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>, <span
style='color:#030003'>always_true</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>&gt;</span><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='page-break-before:always;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='page-break-before:always;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>If you are using <a href="#_eUML">eUML</a>,
it is even easier. Instead of source state + event == next state &#8230; you
omit the &#8220;+&#8221; part, so the transition would become:<o:p></o:p></span></p>

<p style='page-break-before:always;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>State3</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>() == <span
style='color:#030003'>State4</span>() [<span style='color:#030003'>always_true</span>()]
/ <span style='color:#030003'>State3ToState4</span>()</span><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='page-break-before:always;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Please have a look at the tutorials,
there is one defined for <a href="AnonymousTutorial.cpp">plain old Msm</a>, one
for <a href="AnonymousTutorialWithFunctors.cpp">functors</a>, and one <a
href="AnonymousTutorialEuml.cpp">using eUML</a>.<br clear=all style='mso-special-character:
line-break;page-break-before:always'>
<o:p></o:p></span></p>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_The_many_ways"></a><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US'>The many ways to enter a composite state<o:p></o:p></span></h3>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Please have a look at the <a
href="DirectEntryTutorial.cpp">DirectEntryTutorial</a>.<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>This tutorial is for expert UML
designers, and most designers will fortunately never need any of the explained
concepts, with the possible exception of exit points.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Let us count the ways to enter a
composite state, as specified by UML:<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l13 level1 lfo17;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><u><span lang=EN-US style='mso-ansi-language:
EN-US'>Default entry</span></u><span lang=EN-US style='mso-ansi-language:EN-US'>:
A transition leads to the edge of a composite state. This is the default entry,
as seen in the previous tutorials. The initial state in each orthogonal region
becomes active.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l13 level1 lfo17;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><u><span lang=EN-US style='mso-ansi-language:
EN-US'>Shallow/Deep History entry</span></u><span lang=EN-US style='mso-ansi-language:
EN-US'>: See History tutorial.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l13 level1 lfo17;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><u><span lang=EN-US style='mso-ansi-language:
EN-US'>Explicit entry</span></u><span lang=EN-US style='mso-ansi-language:EN-US'>:
if a transition goes to a sub-state of a composite state, this state becomes
active and like in the previous examples, its entry action is executed after
the entry action from the composite state.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l13 level1 lfo17;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><u><span lang=EN-US style='mso-ansi-language:
EN-US'>Fork</span></u><span lang=EN-US style='mso-ansi-language:EN-US'>: an
explicit entry into more than one region.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l13 level1 lfo17;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><u><span lang=EN-US style='mso-ansi-language:
EN-US'>Entry point entry</span></u><span lang=EN-US style='mso-ansi-language:
EN-US'>: Entering a submachine through an entry point pseudo state. A pseudo
state is defined as connecting exactly one transition ending on the pseudo
state outside of the submachine to one transition inside the submachine and
having the pseudo state as source. There are two differences with explicit
entries. First you have two transitions, meaning two actions (but just one
guard as UML forbids guard conditions on the inside transition), second you
have only one transition inside the composite. It is supposed to provide some
kind of encapsulation.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l13 level1 lfo17;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>If
the entered composite has more than one region, the regions not directly
entered are starting at the initial state.<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Exiting is somehow easier:<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l8 level1 lfo18;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>&#8220;Standard&#8221;
exit: a transition originating from the edge of a composite state to another
state<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l8 level1 lfo18;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Exit
point pseudo state: connects one transition inside a composite state to a
transition outside the composite and leading to another (outside) state.<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Msm (almost) fully supports these
features. Almost because there is currently one limitation, that it is only
possible to explicitly enter a sub- composite of the target composite and not
exit it &#8220;upwards&#8221; this way. To exit, Msm just supports the two
previously described methods.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Sounds a bit complicated? Let us
explain using an example where all of the previously named methods are used:<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:12.0pt;page-break-before:always;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="Grafik_x0020_10"
 o:spid="_x0000_i1030" type="#_x0000_t75" alt="entry tutorial.jpg" style='width:475.8pt;
 height:574.8pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="index-Dateien/image015.jpg" o:title="entry tutorial"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=634 height=766
src="index-Dateien/image034.jpg" alt="entry tutorial.jpg" v:shapes="Grafik_x0020_10"><![endif]></span><span
lang=EN-US style='mso-ansi-language:EN-US'><br clear=left style='mso-special-character:
line-break'>
<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>We find in this diagram:<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo19;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>A
&#8220;normal&#8221; entering into </span><span lang=EN-US style='font-family:
"Courier New";mso-ansi-language:EN-US'>SubFsm2</span><span lang=EN-US
style='mso-ansi-language:EN-US'> triggered by </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>event1</span><span
lang=EN-US style='mso-ansi-language:EN-US'> and back to </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>State1</span><span
lang=EN-US style='mso-ansi-language:EN-US'> using the same event. In each zone
is the initial state activated, i.e. </span><span lang=EN-US style='font-family:
"Courier New";mso-ansi-language:EN-US'>SubState1</span><span lang=EN-US
style='mso-ansi-language:EN-US'> and </span><span lang=EN-US style='font-family:
"Courier New";mso-ansi-language:EN-US'>SubState1b</span><span lang=EN-US
style='mso-ansi-language:EN-US'>.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo19;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>An
explicit entry into </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>SubFsm2::SubState2</span><span lang=EN-US
style='mso-ansi-language:EN-US'> for zone &#8220;</span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>a</span><span
lang=EN-US style='mso-ansi-language:EN-US'>&#8221; with </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>event2</span><span
lang=EN-US style='mso-ansi-language:EN-US'> as trigger, meaning that in region
&#8220;</span><span lang=EN-US style='font-family:"Courier New";mso-ansi-language:
EN-US'>b</span><span lang=EN-US style='mso-ansi-language:EN-US'>&#8221; the
initial state, </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>SubState1b</span><span lang=EN-US style='mso-ansi-language:
EN-US'>, activated.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo19;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>A
fork into zones &#8220;</span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>a</span><span lang=EN-US style='mso-ansi-language:
EN-US'>&#8221; and &#8220;</span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>b</span><span lang=EN-US style='mso-ansi-language:
EN-US'>&#8221; to the explicit entries </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>SubState2</span><span
lang=EN-US style='mso-ansi-language:EN-US'> and </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>SubState2b</span><span
lang=EN-US style='mso-ansi-language:EN-US'>, triggered by </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>event3</span><span
lang=EN-US style='mso-ansi-language:EN-US'>. Both states become active so no
zone is default activated (if we had a third zone, it would be).<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo19;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>A
connection of two transitions through an entry pseudo state, </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>SubFsm2::PseudoEntry1</span><span
lang=EN-US style='mso-ansi-language:EN-US'>, triggered by </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>event4</span><span
lang=EN-US style='mso-ansi-language:EN-US'> and triggering also the second
transition on the same event (both transitions must be triggered by the same
event). Zone &#8220;</span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>b</span><span lang=EN-US style='mso-ansi-language:
EN-US'>&#8221; gets default-activated and </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>SubState1b</span><span
lang=EN-US style='mso-ansi-language:EN-US'> becomes active.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo19;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>An
exit from </span><span lang=EN-US style='font-family:"Courier New";mso-ansi-language:
EN-US'>SubFsm2</span><span lang=EN-US style='mso-ansi-language:EN-US'> using an
exit pseudo-state, </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>PseudoExit1</span><span lang=EN-US style='mso-ansi-language:
EN-US'>, triggered by </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>event5</span><span lang=EN-US style='mso-ansi-language:
EN-US'> and connecting two transitions using the same event. Again, the event
is forwarded to the second transition and both regions are exited, as </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>SubFsm2</span><span
lang=EN-US style='mso-ansi-language:EN-US'> becomes inactive. Note that if no
transition is defined from </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>PseudoExit1</span><span lang=EN-US style='mso-ansi-language:
EN-US'>, an error (as defined in the UML standard) will be detected and </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>no_transition</span><span
lang=EN-US style='mso-ansi-language:EN-US'> called.<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Sounds like an awful lot of code to
write? Not at all, as Msm offers an easy syntax. <o:p></o:p></span></p>

<h4 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US'>Explicit entry<o:p></o:p></span></h4>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>First, to define that a state is an
explicit entry, you have to make it a state and mark it as explicit, giving as
template parameters the zone id (the zone id starts with 0 and corresponds to
the first initial state of the </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>initial_state</span><span lang=EN-US style='mso-ansi-language:
EN-US'> type sequence).<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>struct</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
</span><span lang=EN-US style='font-family:"Courier New";color:#030003;
mso-ansi-language:EN-US'>SubState2</span><span lang=EN-US style='font-family:
"Courier New";color:black;mso-ansi-language:EN-US'> : </span><span lang=EN-US
style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>public</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
msm::front::</span><span lang=EN-US style='font-family:"Courier New";
color:#030003;mso-ansi-language:EN-US'>state</span><span lang=EN-US
style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>&lt;&gt;
, </span><span lang=EN-US style='font-family:"Courier New";color:blue;
mso-ansi-language:EN-US'>public</span><span lang=EN-US style='font-family:"Courier New";
color:black;mso-ansi-language:EN-US'> msm::front::</span><span lang=EN-US
style='font-family:"Courier New";color:#030003;mso-ansi-language:EN-US'>explicit_entry</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>&lt;0&gt;<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>And define the
submachine as:<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>typedef</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>msm</span>::<span style='color:#030003'>back</span>::<span
style='color:#030003'>state_machine</span>&lt;<span style='color:#030003'>SubFsm2_</span>&gt;
<span style='color:#030003'>SubFsm2</span>;<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>You can then use it as
target in a transition with </span><span lang=EN-US style='font-family:"Courier New";
color:black;mso-ansi-language:EN-US'>State1</span><span lang=EN-US
style='color:black;mso-ansi-language:EN-US'> as source:</span><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width="100%"
 style='width:100.0%;mso-cellspacing:0cm;mso-yfti-tbllook:1184;mso-padding-alt:
 3.0pt 3.0pt 3.0pt 3.0pt'>
 <COL WIDTH=25*><COL WIDTH=36*><COL WIDTH=41*><COL WIDTH=76*><COL WIDTH=77*>
 <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes;mso-yfti-lastrow:yes'>
  <td width="10%" valign=top style='width:10.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-size:
  10.0pt;font-family:"Courier New";color:#030003'>_row &lt;</span></p>
  </td>
  <td width="14%" valign=top style='width:14.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>State1,</span></p>
  </td>
  <td width="16%" valign=top style='width:16.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>Event2,</span></p>
  </td>
  <td width="30%" valign=top style='width:30.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>SubFsm2::direct&lt; SubFsm2_::SubState2&gt;</span></p>
  </td>
  <td width="30%" valign=top style='width:30.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>&gt;,</span></p>
  </td>
 </tr>
</table>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>The syntax deserves some
explanation. </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>SubFsm2_</span><span lang=EN-US style='mso-ansi-language:
EN-US'> is a front end. </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>SubState2</span><span lang=EN-US style='mso-ansi-language:
EN-US'> is a nested state, therefore the </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>SubFsm2_::SubState2</span><span
lang=EN-US style='mso-ansi-language:EN-US'> syntax. The containing machine
(containing </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>State1</span><span lang=EN-US style='mso-ansi-language:
EN-US'> and </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>SubFsm2</span><span lang=EN-US style='mso-ansi-language:
EN-US'>) refers to the backend instance (</span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>SubFsm2</span><span
lang=EN-US style='mso-ansi-language:EN-US'>). </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>SubFsm2::direct</span><span
lang=EN-US style='mso-ansi-language:EN-US'> states that a direct entry is
desired.<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>While the syntax might seem a bit
cumbersome, it is an improvement from Msm v1.x which could not support several
instances of SubFsm2.<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>We could now have </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>SubFsm2a::direct&lt;SubFsm2_::SubState2&gt;</span><span
lang=EN-US style='mso-ansi-language:EN-US'> and </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>SubFsm2b::direct&lt;SubFsm2_::SubState2&gt;</span><span
lang=EN-US style='mso-ansi-language:EN-US'>. Msm v1.x also needed an ugly extra
constructor in the submachine. This is now gone.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>We here use a _row but
it can be any of the available rows.</span><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='mso-ansi-language:EN-US'>Note (also valid for forks)</span></u><span
lang=EN-US style='mso-ansi-language:EN-US'>: in order to make compile time more
bearable for the more standard cases, and unlike initial states, explicit entry
states which are also not found in the transition table do NOT get
automatically created. To explicitly create such states, you need to add in the
state machine containing the explicit states a simple typedef giving a sequence
of states to be created like:<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>typedef</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
mpl::vector&lt;SubState2,SubState2b&gt; explicit_creation;</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Of course, if these states are found
in the transition table, which is the common case, this is not necessary. The
tutorial makes use of this typedef for teaching purposes.<o:p></o:p></span></p>

<h4 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Fork_1"></a><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US'>Fork<o:p></o:p></span></h4>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>Need a fork instead of
an explicit entry? Then, as a fork is an entry into states of different
regions, we need to give it a list of target states:</span><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width="100%"
 style='width:100.0%;mso-cellspacing:0cm;mso-yfti-tbllook:1184;mso-padding-alt:
 3.0pt 3.0pt 3.0pt 3.0pt'>
 <COL WIDTH=25*><COL WIDTH=36*><COL WIDTH=41*><COL WIDTH=127*><COL WIDTH=27*>
 <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes;mso-yfti-lastrow:yes'>
  <td width="10%" valign=top style='width:10.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-size:
  10.0pt;font-family:"Courier New";color:#030003'>_row &lt;</span></p>
  </td>
  <td width="14%" valign=top style='width:14.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>State1,</span></p>
  </td>
  <td width="16%" valign=top style='width:16.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>Event3,</span></p>
  </td>
  <td width="50%" valign=top style='width:50.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span lang=EN-US
  style='font-family:"Courier New";mso-ansi-language:EN-US'>mpl::vector&lt;SubFsm2::direct&lt;
  SubFsm2_::SubState2&gt;, SubFsm2::direct &lt;SubFsm2_::SubState2b&gt; &gt;</span><span
  lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>
  </td>
  <td width="11%" valign=top style='width:11.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>&gt;,</span></p>
  </td>
 </tr>
</table>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>With SubState2 defined
as before and SubState2b defined as being in the second zone (Caution: Msm does
not check yet that the zone is correct):</span><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>struct</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
</span><span lang=EN-US style='font-family:"Courier New";color:#030003;
mso-ansi-language:EN-US'>SubState2b</span><span lang=EN-US style='font-family:
"Courier New";color:black;mso-ansi-language:EN-US'> : </span><span lang=EN-US
style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>public</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
msm::front::</span><span lang=EN-US style='font-family:"Courier New";
color:#030003;mso-ansi-language:EN-US'>state</span><span lang=EN-US
style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>&lt;&gt;
, </span><span lang=EN-US style='font-family:"Courier New";color:blue;
mso-ansi-language:EN-US'>public</span><span lang=EN-US style='font-family:"Courier New";
color:black;mso-ansi-language:EN-US'> msm::front::</span><span lang=EN-US
style='font-family:"Courier New";color:#030003;mso-ansi-language:EN-US'>explicit_entry</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>&lt;1&gt;</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<h4 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US'>Entry pseudo states<o:p></o:p></span></h4>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>To define an entry
pseudo state, you need derive from the corresponding class and give the zone
id:</span><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>struct</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
</span><span lang=EN-US style='font-family:"Courier New";color:#030003;
mso-ansi-language:EN-US'>PseudoEntry1</span><span lang=EN-US style='font-family:
"Courier New";color:black;mso-ansi-language:EN-US'> : </span><span lang=EN-US
style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>public</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
msm::front::</span><span lang=EN-US style='font-family:"Courier New";
color:#030003;mso-ansi-language:EN-US'>entry_pseudo_state</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>&lt;0&gt;</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>And add the
corresponding transition in Fsm's transition table:</span><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width="100%"
 style='width:100.0%;mso-cellspacing:0cm;mso-yfti-tbllook:1184;mso-padding-alt:
 3.0pt 3.0pt 3.0pt 3.0pt'>
 <COL WIDTH=25*><COL WIDTH=36*><COL WIDTH=41*><COL WIDTH=127*><COL WIDTH=27*>
 <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes;mso-yfti-lastrow:yes'>
  <td width="10%" valign=top style='width:10.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-size:
  10.0pt;font-family:"Courier New";color:#030003'>_row &lt;</span></p>
  </td>
  <td width="14%" valign=top style='width:14.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>State1,</span></p>
  </td>
  <td width="16%" valign=top style='width:16.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>Event4,</span></p>
  </td>
  <td width="50%" valign=top style='width:50.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span lang=EN-US
  style='font-family:"Courier New";mso-ansi-language:EN-US'>SubFsm2::entry_pt&lt;SubFsm2_::PseudoEntry1&gt;
  </span><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>
  </td>
  <td width="11%" valign=top style='width:11.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>&gt;,</span></p>
  </td>
 </tr>
</table>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>And another in the
SubFsm2_ submachine definition (remember that UML defines an entry point as a
connection between two transitions), for example this time with an action
method:</span><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width="100%"
 style='width:100.0%;mso-cellspacing:0cm;mso-yfti-tbllook:1184;mso-padding-alt:
 3.0pt 3.0pt 3.0pt 3.0pt'>
 <COL WIDTH=24*><COL WIDTH=52*><COL WIDTH=23*><COL WIDTH=29*><COL WIDTH=109*><COL WIDTH=19*>
 <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes;mso-yfti-lastrow:yes'>
  <td width="9%" valign=top style='width:9.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-size:
  10.0pt;font-family:"Courier New";color:#030003'>_row &lt;</span></p>
  </td>
  <td width="20%" valign=top style='width:20.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>PseudoEntry1,</span></p>
  </td>
  <td width="9%" valign=top style='width:9.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>Event4,</span></p>
  </td>
  <td width="11%" valign=top style='width:11.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>SubState3,</span></p>
  </td>
  <td width="42%" valign=top style='width:42.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>&amp;SubFsm2_::entry_action</span></p>
  </td>
  <td width="8%" valign=top style='width:8.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>&gt;,</span></p>
  </td>
 </tr>
</table>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<h4 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US'>Exit pseudo states<o:p></o:p></span></h4>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>And finally, exit pseudo
states are to be used almost the same way, but defined differently: it takes as
template argument the event to be forwarded (no region id is necessary):</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>struct</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
</span><span lang=EN-US style='font-family:"Courier New";color:#030003;
mso-ansi-language:EN-US'>PseudoExit1</span><span lang=EN-US style='font-family:
"Courier New";color:black;mso-ansi-language:EN-US'> : </span><span lang=EN-US
style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>public</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
</span><span lang=EN-US style='font-family:"Courier New";color:#030003;
mso-ansi-language:EN-US'>exit_pseudo_state</span><span lang=EN-US
style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>&lt;</span><span
lang=EN-US style='font-family:"Courier New";color:#030003;mso-ansi-language:
EN-US'>event6</span><span lang=EN-US style='font-family:"Courier New";
color:black;mso-ansi-language:EN-US'>&gt; </span><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>And you need, as for
entry pseudo states, two transitions, one in SubFsm2_:</span><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width="100%"
 style='width:100.0%;mso-cellspacing:0cm;mso-yfti-tbllook:1184;mso-padding-alt:
 3.0pt 3.0pt 3.0pt 3.0pt'>
 <COL WIDTH=24*><COL WIDTH=44*><COL WIDTH=32*><COL WIDTH=50*><COL WIDTH=107*>
 <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes;mso-yfti-lastrow:yes'>
  <td width="9%" valign=top style='width:9.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-size:
  10.0pt;font-family:"Courier New";color:#030003'>_row &lt;</span></p>
  </td>
  <td width="17%" valign=top style='width:17.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>SubState3,</span></p>
  </td>
  <td width="12%" valign=top style='width:12.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>Event5,</span></p>
  </td>
  <td width="20%" valign=top style='width:20.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>PseudoExit1</span></p>
  </td>
  <td width="42%" valign=top style='width:42.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>&gt;,</span></p>
  </td>
 </tr>
</table>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>And one in the containing state
machine:<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width="100%"
 style='width:100.0%;mso-cellspacing:0cm;mso-yfti-tbllook:1184;mso-padding-alt:
 3.0pt 3.0pt 3.0pt 3.0pt'>
 <COL WIDTH=24*><COL WIDTH=44*><COL WIDTH=32*><COL WIDTH=50*><COL WIDTH=107*>
 <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes;mso-yfti-lastrow:yes'>
  <td width="9%" valign=top style='width:9.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-size:
  10.0pt;font-family:"Courier New";color:#030003'>_row &lt;</span></p>
  </td>
  <td width="17%" valign=top style='width:17.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span lang=EN-US
  style='font-family:"Courier New";mso-ansi-language:EN-US'>SubFsm2::exit_pt&lt;SubFsm2_::PseudoExit1&gt;,</span><span
  lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>
  </td>
  <td width="12%" valign=top style='width:12.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>Event6,</span></p>
  </td>
  <td width="20%" valign=top style='width:20.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>State2</span></p>
  </td>
  <td width="42%" valign=top style='width:42.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>&gt;,</span></p>
  </td>
 </tr>
</table>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='mso-ansi-language:EN-US'>Important note 1:</span></u><span
lang=EN-US style='mso-ansi-language:EN-US'> UML defines transiting to an entry
pseudo state and having either no second transition or one with a guard as an
error but defines no error handling. Msm will tolerate this behavior; the entry
pseudo state will simply be the newly active state.<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='mso-ansi-language:EN-US'>Important note 2:</span></u><span
lang=EN-US style='mso-ansi-language:EN-US'> UML defines transiting to an exit
pseudo state and having no second transition as an error, and also defines no
error handling. Therefore, it was decided to implement exit pseudo state as
terminate states and the containing composite not properly exited will stay
terminated as it was technically &#8220;exited&#8221;.<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='mso-ansi-language:EN-US'>Important note 3:</span></u><span
lang=EN-US style='mso-ansi-language:EN-US'> UML states that for the exit point,
the same event must be used in both transitions. Msm relaxes this rule and only
wants the event on the inside transition to be convertible to the one of the
outside transition. In our case, </span><span lang=EN-US style='font-family:
"Courier New";mso-ansi-language:EN-US'>event6</span><span lang=EN-US
style='mso-ansi-language:EN-US'> is convertible from </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>event5</span><span
lang=EN-US style='mso-ansi-language:EN-US'>. Notice that the forwarded event
must be named in the exit point definition. For example, we could define </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>event6</span><span
lang=EN-US style='mso-ansi-language:EN-US'> as simply as:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>struct</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>event6</span> <o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>{<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:#030003'>event6</span>(){}<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:blue'>template</span>
&lt;<span style='color:blue'>class</span> <span style='color:#030003'>Event</span>&gt;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:#030003'>event6</span>(<span
style='color:#030003'>Event</span> <span style='color:blue'>const</span>&amp;){}<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>};</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<h2 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Advanced"></a><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US'>Advanced<o:p></o:p></span></h2>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Conflicting_Transitions"></a><span lang=EN-US style='mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US'>Conflicting Transitions<o:p></o:p></span></h3>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>According to the UML standard, two
transitions are said to be in conflict if they can both trigger an exit from
the same state with the same event, meaning if at a certain time and for a
given event, these two transitions can be triggered.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>There are two kinds of conflicts,
both supported by Msm:<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l42 level1 lfo20;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>For
a given source state, several transitions have been defined, triggered by the
same event but <u>different guards</u>.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l42 level1 lfo20;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>An
internal transition of a composite state conflicts with a transition causing an
exit from the composite state.<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Unfortunately, UML does not fully
specify the correct behavior. Msm supports what UML specifies, that the most
nested transition has the higher priority.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>If two transitions at the same depth
are possible, there is no specification (except that the user has to take care
of having guards which uniquely decide of the valid transition), so Msm gives
higher priority to the last defined in the transition table.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>So, for example you can define (see
in <a href="SimpleTutorial.cpp">SimpleTutorial</a>):<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width="100%"
 style='width:100.0%;mso-cellspacing:0cm;mso-yfti-tbllook:1184;mso-padding-alt:
 3.0pt 3.0pt 3.0pt 3.0pt'>
 <COL WIDTH=21*><COL WIDTH=17*><COL WIDTH=26*><COL WIDTH=48*><COL WIDTH=48*><COL WIDTH=48*><COL WIDTH=49*>
 <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes'>
  <td width="8%" valign=top style='width:8.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
  <td width="7%" valign=top style='width:7.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:green'>Start</span></code></p>
  </td>
  <td width="10%" valign=top style='width:10.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:green'>Event</span></code></p>
  </td>
  <td width="19%" valign=top style='width:19.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:green'>Next</span></code></p>
  </td>
  <td width="19%" valign=top style='width:19.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:green'>Action</span></code></p>
  </td>
  <td width="19%" valign=top style='width:19.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><code><span
  style='font-size:10.0pt;color:green'>Guard</span></code></p>
  </td>
  <td width="19%" valign=top style='width:19.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
 </tr>
 <tr style='mso-yfti-irow:1'>
  <td width="8%" valign=top style='width:8.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-size:
  10.0pt;font-family:"Courier New";color:#030003'>_row &lt;</span></p>
  </td>
  <td width="7%" valign=top style='width:7.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>Empty,</span></p>
  </td>
  <td width="10%" valign=top style='width:10.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>cd_detected,</span></p>
  </td>
  <td width="19%" valign=top style='width:19.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>Stopped</span></p>
  </td>
  <td width="19%" valign=top style='width:19.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>&amp;fsm::store_cd_info</span></p>
  </td>
  <td width="19%" valign=top style='width:19.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>&amp;fsm::good_disk_format</span></p>
  </td>
  <td width="19%" valign=top style='width:19.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>&gt;,</span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:2;mso-yfti-lastrow:yes'>
  <td width="8%" valign=top style='width:8.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-size:
  10.0pt;font-family:"Courier New";color:#030003'>_row &lt;</span></p>
  </td>
  <td width="7%" valign=top style='width:7.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>Empty,</span></p>
  </td>
  <td width="10%" valign=top style='width:10.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>cd_detected,</span></p>
  </td>
  <td width="19%" valign=top style='width:19.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>Playing</span></p>
  </td>
  <td width="19%" valign=top style='width:19.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>&amp;fsm::store_cd_info</span></p>
  </td>
  <td width="19%" valign=top style='width:19.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal style='mso-margin-top-alt:auto'><span style='font-family:
  "Courier New"'>&amp;fsm::auto_start</span></p>
  </td>
  <td width="19%" valign=top style='width:19.0%;padding:3.0pt 3.0pt 3.0pt 3.0pt'></td>
 </tr>
</table>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>The last transition has the highest
priority so only if </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>auto_start</span><span lang=EN-US style='mso-ansi-language:
EN-US'> returns false is the other transition tested.<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>The highest priority given to deeper
transitions makes sense. If we remember that exit points connects two
transitions, you want that the inside one gets tested first to really exit.<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Containing_state_machine"></a><span lang=EN-US style='mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US'>Containing state machine
(deprecated)<o:p></o:p></span></h3>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>This feature is still supported in
Msm v2.0 but made obsolete by the fact that every guard/action/entry
action/exit action get the state machine passed as argument.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>All of the states defined in the state machine are created upon program
initialization. This has the huge advantage of a reduced syntactic noise. The
cost is a small loss of control of the user on the state creation and access.
Quite fast came from the beta testers the request of a way for a state to get
access to its containing state machine. This is implemented via another policy.
Basically, a state needs to change its declaration to:<o:p></o:p></span></i></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><code><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:10.0pt;
color:blue;mso-ansi-language:EN-US'>struct</span></i></code><code><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:10.0pt;
color:black;mso-ansi-language:EN-US'> </span></i></code><code><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:10.0pt;
color:#030003;mso-ansi-language:EN-US'>Stopped</span></i></code><code><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:10.0pt;
color:black;mso-ansi-language:EN-US'> : </span></i></code><code><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:10.0pt;
color:blue;mso-ansi-language:EN-US'>public</span></i></code><code><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:10.0pt;
color:black;mso-ansi-language:EN-US'> msm::front::</span></i></code><code><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:10.0pt;
color:#030003;mso-ansi-language:EN-US'>state</span></i></code><code><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:10.0pt;
color:black;mso-ansi-language:EN-US'>&lt;</span></i></code><code><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:10.0pt;
color:#030003;mso-ansi-language:EN-US'>sm_ptr</span></i></code><code><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:10.0pt;
color:black;mso-ansi-language:EN-US'>&gt;</span></i></code><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p>&nbsp;</o:p></span></i></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>And to provide a set_sm_ptr function:<o:p></o:p></span></i></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><code><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:10.0pt;
color:blue;mso-ansi-language:EN-US'>void</span></i></code><code><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:10.0pt;
color:black;mso-ansi-language:EN-US'> </span></i></code><code><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:10.0pt;
color:#030003;mso-ansi-language:EN-US'>set_sm_ptr</span></i></code><code><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:10.0pt;
color:black;mso-ansi-language:EN-US'>(</span></i></code><code><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:10.0pt;
color:blue;mso-ansi-language:EN-US'>player</span></i></code><code><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:10.0pt;
color:black;mso-ansi-language:EN-US'>* </span></i></code><code><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:10.0pt;
color:#030003;mso-ansi-language:EN-US'>pl</span></i></code><code><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='font-size:10.0pt;
color:black;mso-ansi-language:EN-US'>)</span></i></code><i style='mso-bidi-font-style:
normal'><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></i></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p>&nbsp;</o:p></span></i></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'>to get a pointer to the containing state machine. The same applies to
terminate_state / interrupt_state and entry_pseudo_state / exit_pseudo_state.<o:p></o:p></span></i></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><i
style='mso-bidi-font-style:normal'><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p>&nbsp;</o:p></span></i></p>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Getting_a_pointer"></a><span lang=EN-US style='mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US'>Getting a pointer to a state<o:p></o:p></span></h3>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>It is sometimes necessary to have
the client code get access to the states' data. After all, the states are
created once for good and hang around as long as the state machine does so why
not use it? You simply just need sometimes to get information about any state,
even inactive ones. An example is if you want to write a coverage tool and know
how many times a state was visited. How to do it? Again, quite simply:<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><code><span
lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>player::Stopped</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>* </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>tempstate</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> = </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>p</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>.</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>get_state</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>&lt;</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>player::Stopped*</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>&gt;();</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>or</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><code><span
lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>player::Stopped&amp;</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>tempstate2</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> = </span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>p</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>.</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:#030003;mso-ansi-language:EN-US'>get_state</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>&lt;</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:blue;mso-ansi-language:EN-US'>player::Stopped&amp;</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'>&gt;();</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>Depending on your
personal taste.</span><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Copying"></a><a name="_Exceptions"></a><code><span lang=EN-US
style='mso-ansi-font-size:13.5pt;mso-bidi-font-size:14.0pt;font-family:"Times New Roman","serif";
mso-ansi-language:EN-US'>Exceptions</span></code><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></h3>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
font-family:"Times New Roman","serif";mso-ansi-language:EN-US'>Normally, you
should not need exceptions. UML also says little about exceptions. To handle
errors, the best UML-safe method is to add an orthogonal region, like
previously shown.</span></code><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
font-family:"Times New Roman","serif";mso-ansi-language:EN-US'>Of course,
errors happen. In this case, the state machine is said to be unstable, because
a transition may have been partially executed. The framework offers a chance to
set it straight by catching std::exception and calling: </span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
color:blue;mso-ansi-language:EN-US'>void</span></code><code><span lang=EN-US
style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
color:black;mso-ansi-language:EN-US'>exception_caught (std::exception&amp; e)</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
font-family:"Times New Roman","serif";color:black;mso-ansi-language:EN-US'>thus
giving you a chance to handle the exception. <o:p></o:p></span></code></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
font-family:"Times New Roman","serif";color:black;mso-ansi-language:EN-US'>Embedded
systems often require no exception. You can disable this feature by defining a <a
href="#_Getting_more_speed">typedef</a>. EUML also offers <a
href="#_Customizing_a_state">a way</a> to do it.</span></code><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Helpers_methods"></a><code><span lang=EN-US style='mso-ansi-font-size:
13.5pt;mso-bidi-font-size:14.0pt;font-family:"Times New Roman","serif";
mso-ansi-language:EN-US'>Helpers methods</span></code><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></h3>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
font-family:"Times New Roman","serif";color:black;mso-ansi-language:EN-US'>msm::back::state_machine
also provides a few helper methods which you might need but will probably not:</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l43 level1 lfo21;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><code><span lang=EN-US style='mso-ansi-font-size:
12.0pt;mso-bidi-font-size:12.0pt;color:blue;mso-ansi-language:EN-US'>const</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
color:#030003;mso-ansi-language:EN-US'>std</span></code><code><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-US'>::</span></code><code><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;color:#030003;
mso-ansi-language:EN-US'>vector</span></code><code><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-US'>&lt;</span></code><code><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;color:blue;
mso-ansi-language:EN-US'>int</span></code><code><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-US'>&gt;&amp; </span></code><code><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;color:#030003;
mso-ansi-language:EN-US'>current_state</span></code><code><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-US'>() </span></code><code><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;color:blue;
mso-ansi-language:EN-US'>const</span></code><code><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New Roman","serif";
color:black;mso-ansi-language:EN-US'>: the ids of currently active states</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l43 level1 lfo21;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><code><span lang=EN-US style='mso-ansi-font-size:
12.0pt;mso-bidi-font-size:12.0pt;color:blue;mso-ansi-language:EN-US'>const</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
color:#030003;mso-ansi-language:EN-US'>BaseState</span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
color:black;mso-ansi-language:EN-US'>* </span></code><code><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;color:#030003;
mso-ansi-language:EN-US'>get_state_by_id</span></code><code><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-US'>(</span></code><code><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;color:blue;
mso-ansi-language:EN-US'>int</span></code><code><span lang=EN-US
style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
color:#030003;mso-ansi-language:EN-US'>id</span></code><code><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-US'>) </span></code><code><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;color:blue;
mso-ansi-language:EN-US'>const</span></code><code><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New Roman","serif";
color:black;mso-ansi-language:EN-US'>: returns the state with the given id as a
pointer to a (user- or default-) base state. It executes in O(number of
states).</span></code><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l43 level1 lfo21;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><code><span lang=EN-US style='mso-ansi-font-size:
12.0pt;mso-bidi-font-size:12.0pt;color:blue;mso-ansi-language:EN-US'>bool</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
color:#030003;mso-ansi-language:EN-US'>is_contained</span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
color:black;mso-ansi-language:EN-US'>() </span></code><code><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;color:blue;
mso-ansi-language:EN-US'>const</span></code><code><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New Roman","serif";
color:black;mso-ansi-language:EN-US'>: returns true if the state machine is used
as a composite in another state machine, false otherwise.</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Getting_more_speed"></a><code><span lang=EN-US style='mso-ansi-font-size:
13.5pt;mso-bidi-font-size:14.0pt;font-family:"Times New Roman","serif";
mso-ansi-language:EN-US'>Getting more speed</span></code><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></h3>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
font-family:"Times New Roman","serif";color:black;mso-ansi-language:EN-US'>Msm
is offering many UML features at a high-speed, but sometimes, you just need
more speed and are ready to give up some features in exchange.</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
font-family:"Times New Roman","serif";color:black;mso-ansi-language:EN-US'>A </span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
color:black;mso-ansi-language:EN-US'>process_event</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
font-family:"Times New Roman","serif";color:black;mso-ansi-language:EN-US'>is
doing 5 different jobs:</span></code><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l18 level1 lfo22;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><code><span lang=EN-US style='mso-ansi-font-size:
12.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New Roman","serif";
color:black;mso-ansi-language:EN-US'>checking for terminate/interrupt states</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l18 level1 lfo22;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><code><span lang=EN-US style='mso-ansi-font-size:
12.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New Roman","serif";
color:black;mso-ansi-language:EN-US'>handling the message queue (for
entry/exit/transition actions generating themselves events)</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l18 level1 lfo22;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><code><span lang=EN-US style='mso-ansi-font-size:
12.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New Roman","serif";
color:black;mso-ansi-language:EN-US'>handling deferred events</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l18 level1 lfo22;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><code><span lang=EN-US style='mso-ansi-font-size:
12.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New Roman","serif";
color:black;mso-ansi-language:EN-US'>catching exceptions</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l18 level1 lfo22;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><code><span lang=EN-US style='mso-ansi-font-size:
12.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New Roman","serif";
color:black;mso-ansi-language:EN-US'>handling the state switching and action
calls</span></code><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
font-family:"Times New Roman","serif";color:black;mso-ansi-language:EN-US'>Of these
jobs, only the last is absolutely necessary to a state machine (its core job),
the other ones are nice-to-haves which cost CPU time. In many cases, it is not
so important, but in embedded systems, this can lead to ad-hoc state machine
implementations.</span></code><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
font-family:"Times New Roman","serif";color:black;mso-ansi-language:EN-US'>Msm
detects itself if a concrete state machine makes use of terminate/interrupt
states and deferred events and deactivates them if not used. For the other two,
if you want them out, you need to help by indicating in your implementation
that you want them out. This is done with two simple typedefs, for example:</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
color:green;mso-ansi-language:EN-US'>// Concrete FSM implementation </span></code><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>struct</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
</span><span lang=EN-US style='font-family:"Courier New";color:#030003;
mso-ansi-language:EN-US'>player_</span><span lang=EN-US style='font-family:
"Courier New";color:black;mso-ansi-language:EN-US'> : </span><span lang=EN-US
style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>public</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
msm::front::</span><span lang=EN-US style='font-family:"Courier New";
color:#030003;mso-ansi-language:EN-US'>state_machine_def</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>&lt;</span><span
lang=EN-US style='font-family:"Courier New";color:#030003;mso-ansi-language:
EN-US'>player_</span><span lang=EN-US style='font-family:"Courier New";
color:black;mso-ansi-language:EN-US'>&gt;</span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>{</span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:green;mso-ansi-language:EN-US'>//
no need for exception handling or message queue</span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>typedef</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
</span><span lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:
EN-US'>int</span><span lang=EN-US style='font-family:"Courier New";color:black;
mso-ansi-language:EN-US'> </span><span lang=EN-US style='font-family:"Courier New";
color:#030003;mso-ansi-language:EN-US'>no_exception_thrown</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>;</span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>typedef</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
</span><span lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:
EN-US'>int</span><span lang=EN-US style='font-family:"Courier New";color:black;
mso-ansi-language:EN-US'> </span><span lang=EN-US style='font-family:"Courier New";
color:#030003;mso-ansi-language:EN-US'>no_message_queue</span><span lang=EN-US
style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>;</span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
color:black;mso-ansi-language:EN-US'>...</span></code><code><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;color:green;
mso-ansi-language:EN-US'>// rest of implementation</span></code><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
font-family:"Times New Roman","serif";color:black;mso-ansi-language:EN-US'>What
is the gain? It will depend on your compiler and target system, so please refer
to the <a href="#_Performance">performance page</a> (where an example is also provided).
If you use none of these extras, a </span></code><code><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-US'>process_event</span></code><code><span lang=EN-US
style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
font-family:"Times New Roman","serif";color:black;mso-ansi-language:EN-US'>can
execute up to 4 times faster. On a Q6600, an average transition execution lasts
45ns with a full state machine, 10ns in the minimal case.</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Processing_events_inside"></a><span lang=EN-US style='mso-ansi-language:
EN-US'>Processing events inside from within the front-end<o:p></o:p></span></h3>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>It was possible in Msm v1 to call
this-&gt;process_event() from within an action. But front-ends are now
independent from back-ends and have therefore no such function. There are 3
possible ways to do it:<o:p></o:p></span></p>

<p class=MsoListParagraph style='text-indent:-18.0pt;mso-list:l6 level1 lfo23;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>(Not recommended) Before the
front-end definition, forward declare the front-end. Then declare the back-end.
You can now in your front-end cast to the back-end: <o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>struct player_;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>typedef msm::back::state_machine&lt;player_ &gt; player;<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt;mso-list:l6 level1 lfo23;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Use a functor &#8220;<a
href="#_Functor_rows">Row</a>&#8221; transition. These rows offer an FSM
template argument. This argument is the concrete (back-end) state machine on
which process_event can be called.<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt;mso-list:l6 level1 lfo23;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>eUML functors have the same
property.<o:p></o:p></span></p>

<h2 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Customizing_states"></a><code><span lang=EN-US style='mso-ansi-font-size:
18.0pt;mso-bidi-font-size:16.0pt;font-family:"Times New Roman","serif";
mso-ansi-language:EN-US'>Customizing states</span></code><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></h2>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>By default, all states derive from </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>msm::default_base_state</span><span
lang=EN-US style='mso-ansi-language:EN-US'>, which is neither polymorphic nor
has any other useful purpose than to define a base for all states. The
following part will describe the customization possibilities offered by Msm.<o:p></o:p></span></p>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_User-defined_base_state"></a><code><span lang=EN-US style='mso-ansi-font-size:
13.5pt;mso-bidi-font-size:14.0pt;font-family:"Times New Roman","serif";
mso-ansi-language:EN-US'>User-defined base state / Polymorphic states</span></code><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></h3>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Sometimes you will need states to be
polymorphic. You might want to use </span><span lang=EN-US style='font-family:
"Courier New";mso-ansi-language:EN-US'>typeid</span><span lang=EN-US
style='mso-ansi-language:EN-US'> on them, like the tutorials do for logging.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>You might also need some added
functionality in form of a virtual method.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Msm offers these possibilities by
allowing the base state to be user-defined. To do this, you need two simple
changes:<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l32 level1 lfo24;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>add
the non-default base state in your </span><span lang=EN-US style='font-family:
"Courier New";mso-ansi-language:EN-US'>msm::front::state&lt;&gt; </span><span
lang=EN-US style='mso-ansi-language:EN-US'>definition, as first template
argument (except for </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>interrupt_states</span><span lang=EN-US
style='mso-ansi-language:EN-US'> for which it is the second argument, the first
one being the event ending the interrupt), for example, </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>my_base_state</span><span
lang=EN-US style='mso-ansi-language:EN-US'> being your new base state for <u>all
states</u> in a given state machine: <br>
</span><code><span lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:
12.0pt;color:blue;mso-ansi-language:EN-US'>struct</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
color:#030003;mso-ansi-language:EN-US'>Empty</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
color:black;mso-ansi-language:EN-US'>: </span></code><code><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;color:blue;
mso-ansi-language:EN-US'>public</span></code><code><span lang=EN-US
style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> msm::front::</span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
color:#030003;mso-ansi-language:EN-US'>state</span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
color:black;mso-ansi-language:EN-US'>&lt;my_base_state&gt;</span></code><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";color:black;
mso-ansi-language:EN-US'><br>
</span><code><span lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:
12.0pt;font-family:"Times New Roman","serif";color:black;mso-ansi-language:
EN-US'>Now, </span></code><code><span lang=EN-US style='mso-ansi-font-size:
12.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:EN-US'>my_base_state</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
font-family:"Times New Roman","serif";color:black;mso-ansi-language:EN-US'>is
your new base state. If it has a virtual function, your states become
polymorphic. Msm also provides a default polymorphic base type for your
convenience, </span></code><code><span lang=EN-US style='mso-ansi-font-size:
12.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:EN-US'>msm::front::polymorphic_</span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
color:#030003;mso-ansi-language:EN-US'>state</span></code><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l32 level1 lfo24;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><code><span lang=EN-US style='mso-ansi-font-size:
12.0pt;mso-bidi-font-size:12.0pt;font-family:"Times New Roman","serif";
color:#030003;mso-ansi-language:EN-US'>Add the user-defined base state in the
state machine frontend definition, as a second template argument, for example:</span></code><span
lang=EN-US style='color:#030003;mso-ansi-language:EN-US'><br>
</span><code><span lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:
12.0pt;color:blue;mso-ansi-language:EN-US'>struct</span></code><code><span
lang=EN-US style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> </span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
color:#030003;mso-ansi-language:EN-US'>player_ </span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
color:black;mso-ansi-language:EN-US'>: </span></code><code><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;color:blue;
mso-ansi-language:EN-US'>public</span></code><code><span lang=EN-US
style='font-size:10.0pt;color:black;mso-ansi-language:EN-US'> msm::front::</span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
color:#030003;mso-ansi-language:EN-US'>state_machine</span></code><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
color:black;mso-ansi-language:EN-US'>&lt;</span></code><code><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;color:#030003;
mso-ansi-language:EN-US'>player_</span></code><code><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-US'>,</span></code><code><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;color:#030003;
mso-ansi-language:EN-US'>my_base_state</span></code><code><span lang=EN-US
style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-US'>&gt;</span></code><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><code><span
lang=EN-US style='mso-ansi-font-size:12.0pt;mso-bidi-font-size:12.0pt;
font-family:"Times New Roman","serif";color:black;mso-ansi-language:EN-US'>You
now have polymorphic states. Please have a look at <a href="SM-0arg.cpp">an
example using polymorphic states</a> and the concept presented in the next
paragraph, visitors.</span></code><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Visiting_active_states"></a><span lang=EN-US style='mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US'>Visiting active states<o:p></o:p></span></h3>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>In some cases, having only the id or
a pointer-to-base of the currently active states is not enough. You might want
to call non-virtually a method of the currently active states. It will not be
said that Msm forces the </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>virtual</span><span lang=EN-US style='mso-ansi-language:
EN-US'> keyword down your throat! <o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>To achieve this goal, Msm provides
its own variation of a visitor pattern using the previously described
user-defined state technique. If you add to your user-defined base state an </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>accept_sig</span><span
lang=EN-US style='mso-ansi-language:EN-US'> typedef giving the return value
(unused for the moment) and signature and provide an </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>accept</span><span
lang=EN-US style='mso-ansi-language:EN-US'> method with this signature, calling
</span><span lang=EN-US style='font-family:"Courier New";mso-ansi-language:
EN-US'>state_machine::visit_current_states</span><span lang=EN-US
style='mso-ansi-language:EN-US'> will cause </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>accept</span><span
lang=EN-US style='mso-ansi-language:EN-US'> to be called on the currently
active states. Typically, you will also want to provide an empty default </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>accept</span><span
lang=EN-US style='mso-ansi-language:EN-US'> in your base state in order in
order not to force all your states to implement </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>accept</span><span
lang=EN-US style='mso-ansi-language:EN-US'>. For example your base state could
be:<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>struct</span><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'> </span><span
lang=EN-US style='font-family:"Courier New";color:#030003;mso-ansi-language:
EN-US'>my_visitable_state</span><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>{</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:green;mso-ansi-language:EN-US'>//
signature of the accept function</span><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>typedef</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
</span><span lang=EN-US style='font-family:"Courier New";color:#030003;
mso-ansi-language:EN-US'>args</span><span lang=EN-US style='font-family:"Courier New";
color:black;mso-ansi-language:EN-US'>&lt;</span><span lang=EN-US
style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>void</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>&gt;
</span><span lang=EN-US style='font-family:"Courier New";color:#030003;
mso-ansi-language:EN-US'>accept_sig</span><span lang=EN-US style='font-family:
"Courier New";color:black;mso-ansi-language:EN-US'>;</span><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:green;mso-ansi-language:EN-US'>//
we also want polymorphic states</span><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>virtual</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
~</span><span lang=EN-US style='font-family:"Courier New";color:#030003;
mso-ansi-language:EN-US'>my_visitable_state</span><span lang=EN-US
style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>() {}</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:green;mso-ansi-language:EN-US'>//
default implementation for states who do not need to be visited</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>void</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
</span><span lang=EN-US style='font-family:"Courier New";color:#030003;
mso-ansi-language:EN-US'>accept</span><span lang=EN-US style='font-family:"Courier New";
color:black;mso-ansi-language:EN-US'>() </span><span lang=EN-US
style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>const</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
{}</span><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>};</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>This makes your states
polymorphic and visitable. In this case, </span><span lang=EN-US
style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>accept</span><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'> is made const and takes
no argument. It could also be:</span><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>struct</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
</span><span lang=EN-US style='font-family:"Courier New";color:#030003;
mso-ansi-language:EN-US'>SomeVisitor</span><span lang=EN-US style='font-family:
"Courier New";color:black;mso-ansi-language:EN-US'> {&#8230;};</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>struct</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
</span><span lang=EN-US style='font-family:"Courier New";color:#030003;
mso-ansi-language:EN-US'>my_visitable_state</span><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>{</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:green;mso-ansi-language:EN-US'>//
signature of the accept function</span><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>typedef</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
</span><span lang=EN-US style='font-family:"Courier New";color:#030003;
mso-ansi-language:EN-US'>args</span><span lang=EN-US style='font-family:"Courier New";
color:black;mso-ansi-language:EN-US'>&lt;</span><span lang=EN-US
style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>void</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>,</span><span
lang=EN-US style='font-family:"Courier New";color:#030003;mso-ansi-language:
EN-US'>SomeVisitor</span><span lang=EN-US style='font-family:"Courier New";
color:black;mso-ansi-language:EN-US'>&amp;&gt; </span><span lang=EN-US
style='font-family:"Courier New";color:#030003;mso-ansi-language:EN-US'>accept_sig</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>;</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:green;mso-ansi-language:EN-US'>//
we also want polymorphic states</span><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>virtual</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
~</span><span lang=EN-US style='font-family:"Courier New";color:#030003;
mso-ansi-language:EN-US'>my_visitable_state</span><span lang=EN-US
style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>() {}</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:green;mso-ansi-language:EN-US'>//
default implementation for states who do not need to be visited</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>void</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
</span><span lang=EN-US style='font-family:"Courier New";color:#030003;
mso-ansi-language:EN-US'>accept</span><span lang=EN-US style='font-family:"Courier New";
color:black;mso-ansi-language:EN-US'>(</span><span lang=EN-US style='font-family:
"Courier New";color:#030003;mso-ansi-language:EN-US'>SomeVisitor</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>&amp;)
</span><span lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:
EN-US'>const</span><span lang=EN-US style='font-family:"Courier New";
color:black;mso-ansi-language:EN-US'> {}</span><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>};</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>And now, </span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>accept</span><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'> will take one argument.
It could also be non-const. </span><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>By default, </span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>accept</span><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'> takes up to 2
arguments. To get more, add a #define </span><span lang=EN-US style='font-size:
10.0pt;color:#030003;mso-ansi-language:EN-US'>BOOST_MSM_VISITOR_ARG_SIZE</span><span
lang=EN-US style='color:#030003;mso-ansi-language:EN-US'> to another value
before including state_machine.hpp. For example:</span><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>#define</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
</span><span lang=EN-US style='font-family:"Courier New";color:#030003;
mso-ansi-language:EN-US'>BOOST_MSM_VISITOR_ARG_SIZE</span><span lang=EN-US
style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'> 3</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>#include</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
</span><span lang=EN-US style='font-family:"Courier New";color:#A31515;
mso-ansi-language:EN-US'>&lt;boost/msm/back/state_machine.hpp&gt;<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>#include</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
</span><span lang=EN-US style='font-family:"Courier New";color:#A31515;
mso-ansi-language:EN-US'>&lt;boost/msm/front/state_machine_def.hpp&gt;</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:#030003;mso-ansi-language:EN-US'>...</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>struct</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
</span><span lang=EN-US style='font-family:"Courier New";color:#030003;
mso-ansi-language:EN-US'>my_visitable_state</span><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>{</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:green;mso-ansi-language:EN-US'>//
signature of the accept function</span><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>typedef</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
</span><span lang=EN-US style='font-family:"Courier New";color:#030003;
mso-ansi-language:EN-US'>args</span><span lang=EN-US style='font-family:"Courier New";
color:black;mso-ansi-language:EN-US'>&lt;</span><span lang=EN-US
style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>void</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>,</span><span
lang=EN-US style='font-family:"Courier New";color:#030003;mso-ansi-language:
EN-US'>SomeVisitor</span><span lang=EN-US style='font-family:"Courier New";
color:black;mso-ansi-language:EN-US'>&amp;,</span><span lang=EN-US
style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>int</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>,</span><span
lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>const</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
</span><span lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:
EN-US'>char</span><span lang=EN-US style='font-family:"Courier New";color:black;
mso-ansi-language:EN-US'>*&gt; </span><span lang=EN-US style='font-family:"Courier New";
color:#030003;mso-ansi-language:EN-US'>accept_sig</span><span lang=EN-US
style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>;</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:green;mso-ansi-language:EN-US'>//
we also want polymorphic states</span><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>virtual</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
~</span><span lang=EN-US style='font-family:"Courier New";color:#030003;
mso-ansi-language:EN-US'>my_visitable_state</span><span lang=EN-US
style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>() {}</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:green;mso-ansi-language:EN-US'>//
default implementation for states who do not need to be visited. Not const</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>void</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
</span><span lang=EN-US style='font-family:"Courier New";color:#030003;
mso-ansi-language:EN-US'>accept</span><span lang=EN-US style='font-family:"Courier New";
color:black;mso-ansi-language:EN-US'>(</span><span lang=EN-US style='font-family:
"Courier New";color:#030003;mso-ansi-language:EN-US'>SomeVisitor</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>&amp;,</span><span
lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>int</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>,</span><span
lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>const</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
</span><span lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:
EN-US'>char</span><span lang=EN-US style='font-family:"Courier New";color:black;
mso-ansi-language:EN-US'>*) {}</span><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>};</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>You now only need
implement </span><span lang=EN-US style='font-family:"Courier New";color:black;
mso-ansi-language:EN-US'>accept</span><span lang=EN-US style='color:black;
mso-ansi-language:EN-US'> in states needing it. Note that </span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>accept</span><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'> will be called on ALL
active states <u>and also automatically on sub-states of a composite</u>. </span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>Important warning:</span></u><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'> The method </span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>visit_current_states</span><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'> takes its parameter by
value, so if the signature of the accept function is to contain a parameter passed
by reference, pass this parameter with a boost:ref/cref to avoid undesired
copies or slicing. So, for example, in the above case, call:</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";color:#030003;
mso-ansi-language:EN-US'>SomeVisitor</span><span lang=EN-US style='font-size:
10.0pt;font-family:"Courier New";color:black;mso-ansi-language:EN-US'> </span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";color:#030003;
mso-ansi-language:EN-US'>vis</span><span lang=EN-US style='font-size:10.0pt;
font-family:"Courier New";color:black;mso-ansi-language:EN-US'>;</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";color:#030003;
mso-ansi-language:EN-US'>sm</span><span lang=EN-US style='font-size:10.0pt;
font-family:"Courier New";color:black;mso-ansi-language:EN-US'>.</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";color:#030003;
mso-ansi-language:EN-US'>visit_current_states</span><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";color:black;mso-ansi-language:
EN-US'>(</span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New";
color:#030003;mso-ansi-language:EN-US'>boost</span><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";color:black;mso-ansi-language:
EN-US'>::</span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New";
color:#030003;mso-ansi-language:EN-US'>ref</span><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";color:black;mso-ansi-language:
EN-US'>(</span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New";
color:#030003;mso-ansi-language:EN-US'>vis</span><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";color:black;mso-ansi-language:
EN-US'>));</span><span lang=EN-US style='font-family:"Courier New";color:black;
mso-ansi-language:EN-US'> </span><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>Please have a look at
the example using accept with <a href="SM-2Arg.cpp">2 arguments</a>.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<h1 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_New_Msm_v2.0"></a><span lang=EN-US style='mso-ansi-language:EN-US'>New
Msm v2.0 Features <o:p></o:p></span></h1>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>This chapter will introduce the new
features of Msm. This is actually just the beginning of the story; more, much
more will come!<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>We will first warm up with a front-end
based on functors before moving on the eUML, which will provide us with a much
bigger amount of fun.<o:p></o:p></span></p>

<h2 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Frontends"></a><span lang=EN-US style='mso-ansi-language:EN-US'>Frontends<o:p></o:p></span></h2>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Msm is now divided between front
&#8211;ends and back-ends. Well, at the moment, there is just one back-end. On
the front-end side, there is more to see.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>One goal of the redesign in Msm v2.0
is to offer users more state machine description languages than just the
standard Msm described above. For example, it would be possible to make a
front-end looking like Boost.Statechart but using Msm as back-end. In the 1.x
series, each new language would have required making huge changes to the
library. Now, everybody can build his own description language (in case one
gets bored with the ones provided) without changes to the library. For those
who feel like being a language writer, please feel free to contact me.<o:p></o:p></span></p>

<h2 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Functor_rows"></a><span lang=EN-US style='mso-ansi-language:EN-US'>Functor
rows<o:p></o:p></span></h2>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>The rows which Msm offers come in
different flavors. We saw the a_row, g_row, _row, row. This is already much to
know, so why define new rows?<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>These types have some disadvantages:<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt;mso-list:l20 level1 lfo25;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>They are more typing and information
than we would wish. This means syntactic noise.<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt;mso-list:l20 level1 lfo25;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Function pointers are weird in C++.<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt;mso-list:l20 level1 lfo25;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>The action/guard signature is limited
and does not allow for more variations of parameters (source state, target
state, current state machine, etc.)<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt;mso-list:l20 level1 lfo25;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>It is not easy to reuse action code
from a state machine to another.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>To solve these problems, Msm v2.0 is
based on functors. Concretely, how is this looking like? For example, in our
first tutorial we could change the transition table to:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:green;mso-ansi-language:EN-US;mso-no-proof:yes'>//<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>Start<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Event<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Next<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Action<span style='mso-tab-count:3'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Guard<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:green;mso-ansi-language:EN-US;mso-no-proof:yes'>//<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;
</span>+---------+-------------+---------+---------------------+----------------------+<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>Row</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span>&lt; <span style='color:#030003'>Stopped</span>
, <span style='color:#030003'>play</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>, <span
style='color:#030003'>Playing</span> , <span style='color:#030003'>ActionSequence</span>&lt;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:212.4pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:#030003'>mpl</span>::<span style='color:#030003'>vector</span>&lt;<span
style='color:#030003'>TestFct</span>,<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:212.4pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>start_playback</span><span lang=EN-US style='font-size:10.0pt;
font-family:"Courier New";mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'>&gt; &gt;<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='color:#030003'><o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>,<span style='color:#030003'>DummyGuard</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>&gt;,<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>Row</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span>&lt; <span style='color:#030003'>Stopped</span>
, <span style='color:#030003'>open_close</span><span
style='mso-spacerun:yes'>&nbsp; </span>, <span style='color:#030003'>Open</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>, <span style='color:#030003'>open_drawer</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>, <span style='color:#030003'>none</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>&gt;,<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>Row</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span>&lt; <span style='color:#030003'>Stopped</span>
, <span style='color:#030003'>stop</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>, <span
style='color:#030003'>Stopped</span> , <span style='color:#030003'>none</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>, <span style='color:#030003'>none</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>&gt;,<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:green;mso-ansi-language:EN-US;mso-no-proof:yes'>//<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;
</span>+---------+-------------+---------+---------------------+----------------------+<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>Row</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span>&lt; <span style='color:#030003'>Open</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>, <span style='color:#030003'>open_close</span><span
style='mso-spacerun:yes'>&nbsp; </span>, <span style='color:#030003'>Empty</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span>, <span style='color:#030003'>close_drawer</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>, <span
style='color:#030003'>none</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>&gt;,<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:green;mso-ansi-language:EN-US;mso-no-proof:yes'>//<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;
</span>+---------+-------------+---------+---------------------+----------------------+<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>Row</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span>&lt; <span style='color:#030003'>Empty</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span>, <span style='color:#030003'>open_close</span><span
style='mso-spacerun:yes'>&nbsp; </span>, <span style='color:#030003'>Open</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>, <span style='color:#030003'>open_drawer</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>, <span style='color:#030003'>none</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>&gt;,<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>Row</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='mso-spacerun:yes'>&nbsp;&nbsp;</span>&lt; <span style='color:#030003'>Empty</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span>, <span style='color:#030003'>cd_detected</span>
, <span style='color:#030003'>Stopped</span> , <span style='color:#030003'>store_cd_info</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>, <span
style='color:#030003'>good_disk_format</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>&gt;,<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>g_row</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> &lt; <span
style='color:#030003'>Empty</span><span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>, <span style='color:#030003'>cd_detected</span> , <span
style='color:#030003'>Playing</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>, &amp;<span style='color:#030003'>p</span>::<span style='color:#030003'>auto_start</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&gt;,<span
style='color:green'>// yes we can mix rows!</span><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>&#8230;</span><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:green;mso-ansi-language:EN-US;mso-no-proof:yes'>// more rows</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>In a nutshell, what is all this?<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt;mso-list:l14 level1 lfo26;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Row is a template type with 5
arguments. Where no guard, action or event (see <a
href="#_Anonymous_transitions">anonymous transitions</a>) is needed, write
&#8220;none&#8221;.<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt;mso-list:l14 level1 lfo26;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>You can mix new rows with the old
g_row, a_row, etc.<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt;mso-list:l14 level1 lfo26;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>&#8220;Row&#8221; allows reusing
your functors in other state machines. State machine function pointers cannot
offer this easily.<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt;mso-list:l14 level1 lfo26;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>It is possible to write
combinations. For example, the &#8220;ActionSequence&#8221; type is using a
list of actions to execute in sequence when the transition fires. So the action
in the first transition is equivalent to
&#8220;TestFct(&#8230;);start_playback(&#8230;);&#8221;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>What is exactly a functor looking
like? For example, store_cd_info is defined as:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>struct</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>store_cd_info</span> <o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>{<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:blue'>template</span>
&lt;<span style='color:blue'>class</span> <span style='color:#030003'>FSM</span>,<span
style='color:blue'>class</span> <span style='color:#030003'>EVT</span>,<span
style='color:blue'>class</span> <span style='color:#030003'>SourceState</span>,<span
style='color:blue'>class</span> <span style='color:#030003'>TargetState</span>&gt;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:blue'>void</span>
<span style='color:blue'>operator</span>()(<span style='color:#030003'>FSM</span>&amp;
<span style='color:#030003'>fsm</span>,<span style='color:#030003'>EVT</span> <span
style='color:blue'>const</span>&amp; ,<span style='color:#030003'>SourceState</span>&amp;
,<span style='color:#030003'>TargetState</span>&amp; )<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:#030003'>cout</span> &lt;&lt; <span style='color:#A31515'>&quot;player::store_cd_info&quot;</span>
&lt;&lt; <span style='color:#030003'>endl</span>;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:#030003'>fsm</span>.<span style='color:#030003'>process_event</span>(<span
style='color:#030003'>play</span>());<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>};<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>It is a functor object taking as
template arguments, the back-end state machine, event, and source and target states.
<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Notice how the functor places a new
event into the queue without knowing the exact type of the state machine. The
functor can now be easily reused in other state machines.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>What if we defined a functor
pre-incrementing an attribute in the source while another functor compares the
result with say, 8? We could write
Equal_&lt;Pre_inc_&lt;Src_data&gt;,Int_&lt;8&gt; &gt; where Equal_ is a functor
comparing his two template arguments for equality, Pre_inc_ will pre-increment
his template type, Src_data is a user-provided functor returning a reference to
some internal state data and Int_ a wrapper around integer types.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Wait, stop a minute. We can combine
functors?<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>&nbsp;</span><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>We can, and why stop here?
Wouldn&#8217;t we like to define guards like: <o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>&#8220;</span><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>good_disk_format
&amp;&amp; (some_condition || some_other_condition)&#8221; <o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>&lt;=&gt;
<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>And_&lt;good_disk_format,Or_&lt;
some_condition , some_other_condition&gt;.</span><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Well, it happens that Msm v2.0
defines just this. There are And_, Not_, Or_... functors for most operators and
even functors wrapping STL container methods or algorithms. Interested? Read
on, it&#8217;s now going to get much more fun.<o:p></o:p></span></p>

<h2 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_eUML"></a><span lang=EN-US style='mso-ansi-language:EN-US'>eUML<o:p></o:p></span></h2>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>Important note</span></u><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>: eUML requires a
compiler supporting the C++0x decltype/typeof feature (from example VC &gt;= 9,
g++ &gt;= 4.3. VC8 is partially supported)<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>The previous example is
ok for simple actions but frankly, it is an awful lot to type and the
readability isn&#8217;t great, so it would be nice to write code looking like
C++ directly inside the transition table, like UML designers like to do on
their state machine diagrams. This is what eUML is for.<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>eUML is a
(Boost.)Proto-based compile-time domain specific embedded language. It provides
grammars which allow the definition of actions/guards directly inside the
transition table or entry/exit in the state definition. It is defined in the
namespace </span><u><span lang=EN-US style='font-family:"Courier New";
color:black;mso-ansi-language:EN-US'>msm::front::euml</span></u><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>.<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>There are grammars for
actions, guards, flags, attributes, deferred events, initial states.<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>It also relies on
Boost.Typeof as a wrapper around the new decltype C++0x feature to provide a
compile-time evaluation of all the grammars. Unfortunately, all the underlying
Boost libraries are not Typeof-enabled, so for the moment, you will need a
compiler where Typeof is natively implemented (like VC8-9-10, g++ &gt;= 4.3)<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>To play with grammars,
we need one change compared to the plain Msm v1.x frontend; we need to make all
actors (states, events, actions) of state machines proto terminals:<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l41 level1 lfo27;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";color:black;
mso-ansi-language:EN-US'><span style='mso-list:Ignore'>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='color:black;mso-ansi-language:
EN-US'>States need to inherit from </span><span lang=EN-US style='font-family:
"Courier New";color:black;mso-ansi-language:EN-US'>euml_state&lt;state&gt;</span><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'> or be created using the
</span><span lang=EN-US style='font-family:"Courier New";color:black;
mso-ansi-language:EN-US'>build_state</span><span lang=EN-US style='color:black;
mso-ansi-language:EN-US'> function (described later)<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l41 level1 lfo27;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";color:black;
mso-ansi-language:EN-US'><span style='mso-list:Ignore'>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='color:black;mso-ansi-language:
EN-US'>Events need to inherit from </span><span lang=EN-US style='font-family:
"Courier New";color:black;mso-ansi-language:EN-US'>euml_event&lt;event&gt;</span><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l41 level1 lfo27;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";color:black;
mso-ansi-language:EN-US'><span style='mso-list:Ignore'>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='color:black;mso-ansi-language:
EN-US'>Flags need to inherit from </span><span lang=EN-US style='font-family:
"Courier New";color:black;mso-ansi-language:EN-US'>euml_flag&lt;flag&gt;</span><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l41 level1 lfo27;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";color:black;
mso-ansi-language:EN-US'><span style='mso-list:Ignore'>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='color:black;mso-ansi-language:
EN-US'>Action (transition, entry, exit) and guards need to inherit from </span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>euml_action&lt;action&gt;</span><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>Examples will be
provided in the next paragraphs. The basic eUML features can be found in:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-top:12.0pt;margin-right:36.45pt;margin-bottom:
0cm;margin-left:36.45pt;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='font-size:11.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:black;mso-ansi-language:EN'>#include &lt;
msm/front/euml/euml.hpp&gt;<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Transition_table"></a><span lang=EN-US style='color:black;mso-ansi-language:
EN-US'>To include STL support (at possible cost of longer compilation times),
include also:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-top:12.0pt;margin-right:36.45pt;margin-bottom:
0cm;margin-left:36.45pt;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='font-size:11.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:black;mso-ansi-language:EN'>#include &lt;
msm/front/euml/stl.hpp&gt;<o:p></o:p></span></p>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='mso-ansi-language:EN'><o:p>&nbsp;</o:p></span></h3>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Simple transition table<o:p></o:p></span></h3>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>The previously defined
transition table can be defined using eUML as:<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>typedef</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>BOOST_TYPEOF</span>(<span style='color:#030003'>build_stt<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>((<span style='color:#030003'>Stopped</span>()
+ <span style='color:#030003'>play</span>()<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>== <span
style='color:#030003'>Playing</span>()<span style='mso-spacerun:yes'>&nbsp;
</span>[DummyGuard()] / (TestFct(),<span style='color:#030003'>start_playback</span>())
,<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:#030003'>Stopped</span>() + <span style='color:#030003'>open_close</span>()<span
style='mso-spacerun:yes'>&nbsp; </span>== <span style='color:#030003'>Open</span>()<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>/ <span
style='color:#030003'>open_drawer</span>(),<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:#030003'>Stopped</span>() + <span style='color:#030003'>stop</span>()<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>== <span
style='color:#030003'>Stopped</span>(),<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:green'>//<span style='mso-spacerun:yes'>&nbsp;
</span>+------------------------------------------------------------------------------+<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:#030003'>Open</span>()<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>+ <span style='color:#030003'>open_close</span>()<span
style='mso-spacerun:yes'>&nbsp; </span>== <span style='color:#030003'>Empty</span>()<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>/ <span style='color:#030003'>close_drawer</span>(),<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:green'>//<span style='mso-spacerun:yes'>&nbsp;
</span>+------------------------------------------------------------------------------+<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:#030003'>Empty</span>()<span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>+ <span style='color:#030003'>open_close</span>()<span
style='mso-spacerun:yes'>&nbsp; </span>== <span style='color:#030003'>Open</span>()<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>/ <span
style='color:#030003'>open_drawer</span>(),<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:#030003'>Empty</span>()<span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>+ <span style='color:#030003'>cd_detected</span>() == <span
style='color:#030003'>Stopped</span>()<span style='mso-spacerun:yes'>&nbsp;
</span>[<span style='color:#030003'>good_disk_format</span>()] / <span
style='color:#030003'>store_cd_info</span>(),<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:green'>//<span style='mso-spacerun:yes'>&nbsp;
</span>+------------------------------------------------------------------------------+<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:green;mso-ansi-language:EN-US;mso-no-proof:yes'>//<span
style='mso-spacerun:yes'>&nbsp; </span>more rows</span><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:green'>//<span style='mso-spacerun:yes'>&nbsp; </span>+------------------------------------------------------------------------------+<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>) ) ) <span style='color:#030003'>transition_table</span>;<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>UML defines guards
between &#8220;[ ]&#8221; and actions after a &#8220;/&#8221;, so this is
already more readable for UML designers. UML also allows designers to define
several actions sequentially (our previous </span><span lang=EN-US
style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>ActionSequence</span><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>) separated by a comma.
The first transition does just this: 2 actions separated by a comma and
enclosed inside parenthesis to respect C++ operator precedence.<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>Notice the parenthesis
after each functor/state/event names. This is the way Typeof works: it
evaluates the function (in this case </span><span lang=EN-US style='font-family:
"Courier New";color:black;mso-ansi-language:EN-US'>build_stt</span><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>) and therefore needs
concrete arguments, that&#8217;s why we give him default-constructed arguments,
like states and events. And in case you ask, no constructor call actually
happens, so there is no performance penalty.<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>UML also allows
designers to define more complicated guards, like </span><span lang=EN-US
style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>[</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>good_disk_format
&amp;&amp; (some_condition || some_other_condition)</span><span lang=EN-US
style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>]</span><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>. This was possible with
our previously defined functors, but eUML makes it more readable, for example
the guard becomes in eUML: </span><span lang=EN-US style='font-family:"Courier New";
color:black;mso-ansi-language:EN-US'>[</span><span lang=EN-US style='font-size:
10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>good_disk_format()
&amp;&amp; (some_condition() || some_other_condition())</span><span lang=EN-US
style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>] </span><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>with </span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>some_condition</span><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'> and </span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>some_other_condition</span><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'> being functors, which
you could define as:<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>struct</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>some_condition</span> : <b style='mso-bidi-font-weight:
normal'><span style='color:#030003'>euml_action</span>&lt;<span
style='color:#030003'> some_condition</span> &gt;</b><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>{<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:green'>//
called inside a transition action</span><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:blue'>template</span>
&lt;<span style='color:blue'>class</span> <span style='color:#030003'>FSM</span>,<span
style='color:blue'>class</span> <span style='color:#030003'>EVT</span>,<span
style='color:blue'>class</span> <span style='color:#030003'>SourceState</span>,<span
style='color:blue'>class</span> <span style='color:#030003'>TargetState</span>&gt;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:blue'>bool</span>
<span style='color:blue'>operator</span>()(<span style='color:#030003'>FSM</span>&amp;
,<span style='color:#030003'>EVT</span> <span style='color:blue'>const</span>&amp;
<span style='color:#030003'>evt</span>,<span style='color:#030003'>SourceState</span>&amp;
,<span style='color:#030003'>TargetState</span>&amp; )<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp; </span><span style='color:green'>// whatever</span><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:blue'>return</span> <span style='color:blue'>true</span>;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>};</span><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>The only differences with our
previous functors is that they return a bool (guards are in UML actions
returning a bool and producing no side-effect), and they must inherit from </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>euml_action</span><span
lang=EN-US style='mso-ansi-language:EN-US'> in order to enable the grammar. The
same is also necessary for events which must inherit from euml_event:<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>struct</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>play</span> : <b style='mso-bidi-font-weight:normal'><span
style='color:#030003'>euml_event</span>&lt;<span style='color:#030003'>play</span>&gt;</b>{};<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Defining_a_state"></a><span lang=EN-US style='mso-ansi-language:EN-US'>Defining
a state with entry/exit functors<o:p></o:p></span></h3>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>It is also possible to use the same
action grammar with state entry and exit actions:<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>typedef</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>BOOST_TYPEOF</span>(<span style='color:#030003'>euml</span>::<span
style='color:#030003'>build_state</span>( (<span style='color:#030003'>Empty_Entry</span>(),<span
style='color:#030003'>Dummy_Entry</span>())<span style='color:green'>/*2 entry
actions*/</span>,<span style='color:#030003'>Empty_Exit</span>()<span
style='color:green'>/*1 exit action*/</span> )) <span style='color:#030003'>Empty</span>;</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>This means that Empty is defined as
a state with an entry action made of two sub-actions, </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>Empty_Entry</span><span
lang=EN-US style='mso-ansi-language:EN-US'> and </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>Dummy_Entry </span><span
lang=EN-US style='mso-ansi-language:EN-US'>(enclosed inside parenthesis), and
an exit action, </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>Empty_Exit</span><span lang=EN-US style='mso-ansi-language:
EN-US'>.<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>There are several overloads of the </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>build_state</span><span
lang=EN-US style='mso-ansi-language:EN-US'> function:<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>build_state</span><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>(): </span><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'>state without entry or exit action.</span><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>build_state</span><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>(Expr1): </span><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'>state with entry but no exit action.</span><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>build_state</span><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>(Expr1,Expr2): </span><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'>state with entry and exit action.</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>build_state</span><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>(Expr1,Expr2,Attributes): </span><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'>state with entry and exit action, defining some
attributes (read further on).<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>build_state</span><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>(Expr1,Expr2,Attributes,Configure): </span><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'>state with entry and exit action, defining some
attributes (read further on) and flags (plain msm flags) or deferred events
(plain msm deferred events).</span><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>build_state</span><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>(Expr1,Expr2,Attributes,Configure,Base):
</span><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>state with entry and exit action,
defining some attributes (read further on), flags and deferred events (plain
msm deferred events) and a non-default base state (as defined in plain Msm).<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'>A </span><span lang=EN-US style='font-family:"Courier New";
mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:
yes'>NoAction</span><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'> is also defined, which does, well,
nothing except being a placeholder (needed for example as entry action if we
have no entry but an exit).</span><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>Expr1</span><span
lang=EN-US style='mso-ansi-language:EN-US'> and </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>Expr2</span><span
lang=EN-US style='mso-ansi-language:EN-US'> are a sequence of actions, obeying
the same action grammar as in the transition table (following the
&#8220;/&#8221; symbol).<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>The state functors have a slightly
different signature as there is no source and target state but only a current
state (entry/exit actions are transition-independent), for example:<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>struct</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>Empty_Entry</span> : <b style='mso-bidi-font-weight:normal'><span
style='color:#030003'>euml_action</span>&lt;<span style='color:#030003'>Empty_Entry</span>&gt;</b><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>{<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:blue'>template</span> &lt;<span style='color:blue'>class</span> <span
style='color:#030003'>Event</span>,<span style='color:blue'>class</span> <span
style='color:#030003'>FSM</span>,<span style='color:blue'>class</span> <span
style='color:#030003'>STATE</span>&gt;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><b
style='mso-bidi-font-weight:normal'><span style='color:blue'>void</span> <span
style='color:blue'>operator</span>()(<span style='color:#030003'>Event</span> <span
style='color:blue'>const</span>&amp;,<span style='color:#030003'>FSM</span>&amp;,<span
style='color:#030003'>STATE</span>&amp; )<o:p></o:p></b></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:#030003'>std</span>::<span style='color:#030003'>cout</span>
&lt;&lt; <span style='color:#A31515'>&quot;entering: Empty&quot;</span>
&lt;&lt; <span style='color:#030003'>std</span>::<span style='color:#030003'>endl</span>;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>};</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Notice again the </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>euml_action</span><span
lang=EN-US style='mso-ansi-language:EN-US'>, to make the functor play nice with
the grammar.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Likewise, eUML provides other
state-building functions for other types of states:<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>build_terminal_state </span><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";color:#030003;
mso-ansi-language:EN-US;mso-no-proof:yes'>takes the same arguments as </span><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>build_state</span><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";color:#030003;
mso-ansi-language:EN-US;mso-no-proof:yes'> and defines, well, a terminate
state.</span><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>build_interrupt_state </span><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";color:#030003;
mso-ansi-language:EN-US;mso-no-proof:yes'>takes the same arguments as </span><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>build_state</span><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";color:#030003;
mso-ansi-language:EN-US;mso-no-proof:yes'> and defines an interrupt state.</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>build_exit_state </span><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";color:#030003;
mso-ansi-language:EN-US;mso-no-proof:yes'>takes the same arguments as </span><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>build_state</span><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";color:#030003;
mso-ansi-language:EN-US;mso-no-proof:yes'> and defines an exit pseudo state.</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>build_entry_state </span><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";color:#030003;
mso-ansi-language:EN-US;mso-no-proof:yes'>takes the same arguments as </span><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>build_state</span><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";color:#030003;
mso-ansi-language:EN-US;mso-no-proof:yes'> and defines an interrupt state. The
region index to be entered is defined as an int template argument, so </span><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>build_entry_state&lt;0&gt;</span><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";color:#030003;
mso-ansi-language:EN-US;mso-no-proof:yes'> defines an entry state into the
first region of a submachine.</span><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>build_explicit_entry_state
</span><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>takes the same
arguments as </span><span lang=EN-US style='font-family:"Courier New";
mso-fareast-font-family:"Times New Roman";color:#030003;mso-ansi-language:EN-US;
mso-no-proof:yes'>build_state</span><span lang=EN-US style='mso-fareast-font-family:
"Times New Roman";color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'> and
defines an explicit entry state. The region index to be entered is defined as
an int template argument, so </span><span lang=EN-US style='font-family:"Courier New";
mso-fareast-font-family:"Times New Roman";color:#030003;mso-ansi-language:EN-US;
mso-no-proof:yes'>build_explicit_entry_state&lt;0&gt;</span><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";color:#030003;mso-ansi-language:
EN-US;mso-no-proof:yes'> defines an explicit entry state into the first region
of a submachine.</span><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Defining_a_state_1"></a><a name="_Defining_a_simple"></a><span
lang=EN-US style='mso-ansi-language:EN-US'>Defining a simple state machine<o:p></o:p></span></h3>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Sometimes you might want to define
the same way a state machine on the fly (if, for example, you need to provide
an on_entry/on_exit for this state machine as a functor). For this, there is also
a function, </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>build_sm</span><span lang=EN-US style='mso-ansi-language:
EN-US'>, which has up to 8 arguments:<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>build_sm(Stt,
Init)</span><span lang=EN-US style='mso-ansi-language:EN-US'>: simplest state
machine where only the transition table and initial state(s) are defined.<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>build_sm(Stt,
Init, Expr1)</span><span lang=EN-US style='mso-ansi-language:EN-US'>: state
machine where the transition table, initial state and entry action are defined.<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>build_sm(Stt,
Init, Expr1, Expr2)</span><span lang=EN-US style='mso-ansi-language:EN-US'>:
state machine where the transition table, initial state, entry and exit actions
are defined.<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>build_sm(Stt,
Init, Expr1, Expr2, Attributes)</span><span lang=EN-US style='mso-ansi-language:
EN-US'>: state machine where the transition table, initial state, entry and
exit actions are defined. Furthermore, some attributes are added (read further
on).</span><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>build_sm(Stt,
Init, Expr1, Expr2, Attributes, Configure)</span><span lang=EN-US
style='mso-ansi-language:EN-US'>: state machine where the transition table,
initial state, entry and exit actions are defined. Furthermore, some attributes
(read further on)</span><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>, flags, deferred events and <a
href="#_Customizing_a_state">configuration capabilities</a> (no message queue /
no exception catching) </span><span lang=EN-US style='mso-ansi-language:EN-US'>are
added.<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>build_sm(Stt,
Init, Expr1, Expr2, Attributes, Flags, Deferred , Base)</span><span lang=EN-US
style='mso-ansi-language:EN-US'>: state machine where the transition table,
initial state, entry and exit actions are defined. Furthermore, attributes
(read further on), </span><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>flags , deferred events and
configuration capabilities (no message queue / no exception catching) </span><span
lang=EN-US style='mso-ansi-language:EN-US'>are added and a non-default base
state (see <a href="#_User-defined_base_state">base state</a>) is defined.<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>For example, a minimum state machine
could be defined like:<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:green;mso-ansi-language:EN-US;mso-no-proof:yes'>//
define transition table</span><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>typedef</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>BOOST_TYPEOF</span>(<span style='color:#030003'>build_stt</span>(<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span>( <span style='mso-tab-count:1'>&nbsp;&nbsp; </span><span
style='color:#030003'>Stopped</span>() + <span style='color:#030003'>play</span>()<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>== <span
style='color:#030003'>Playing</span>()<span style='mso-spacerun:yes'>&nbsp;
</span>/ <span style='color:#030003'>start_playback</span>(),<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:#030003'>Stopped</span>() + <span style='color:#030003'>open_close</span>()<span
style='mso-spacerun:yes'>&nbsp; </span>== <span style='color:#030003'>Open</span>()<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>/ <span
style='color:#030003'>open_drawer</span>(),<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:#030003'>Stopped</span>() + <span style='color:#030003'>stop</span>()<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>== <span
style='color:#030003'>Stopped</span>(),<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:green'>//<span style='mso-spacerun:yes'>&nbsp; </span>+------------------------------------------------------------------------------+<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:#030003'>Open</span>()<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>+ <span style='color:#030003'>open_close</span>()<span
style='mso-spacerun:yes'>&nbsp; </span>== <span style='color:#030003'>Empty</span>()<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>/ <span style='color:#030003'>close_drawer</span>(),<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:green'>//<span style='mso-spacerun:yes'>&nbsp;
</span>+------------------------------------------------------------------------------+<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:#030003'>Empty</span>()<span style='mso-spacerun:yes'>&nbsp;&nbsp;
</span>+ <span style='color:#030003'>open_close</span>()<span
style='mso-spacerun:yes'>&nbsp; </span>== <span style='color:#030003'>Open</span>()<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>/ <span
style='color:#030003'>open_drawer</span>(),<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:#030003'>Paused</span>()<span style='mso-spacerun:yes'>&nbsp;
</span>+ <span style='color:#030003'>open_close</span>()<span
style='mso-spacerun:yes'>&nbsp; </span>== <span style='color:#030003'>Open</span>()<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>/ <span
style='color:#030003'>stop_and_open</span>()<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:green'>//<span style='mso-spacerun:yes'>&nbsp;
</span>+------------------------------------------------------------------------------+<o:p></o:p></span></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>) ) )
<span style='color:#030003'>transition_table</span>;<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:green;mso-ansi-language:EN-US;mso-no-proof:yes'>//
declare state machine</span><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>typedef</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>BOOST_TYPEOF</span>(<span style='color:#030003'>build_sm</span>(
<span style='color:#030003'>transition_table</span>(),init_ &lt;&lt; <span
style='color:#030003'>Empty</span>() )) <span style='color:#030003'>player_</span>;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'>To define more initial states (and thus more orthogonal
regions), &#8220;shift left&#8221; some, for example, if we had another initial
state named AllOk :<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:green;mso-ansi-language:EN-US;mso-no-proof:yes'>//
declare state machine</span><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>typedef</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>BOOST_TYPEOF</span>(<span style='color:#030003'>build_sm</span>(
<span style='color:#030003'>transition_table</span>(),init_ &lt;&lt; <span
style='color:#030003'>Empty</span>() &lt;&lt; AllOk() )) <span
style='color:#030003'>player_</span>;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'>This is yet another grammar allowing initial state
definition.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><u><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'>Note for VC9: <o:p></o:p></span></u></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'>This defined </span><span lang=EN-US style='font-family:"Courier New";
mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:
yes'>build_sm</span><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'> syntax works most of the time. But
once in a while, VC9 will display the problem shown in the next section (not
enough heap space). For example, this <a href="EumlSimple.cpp">simple
performance test</a>, while really simple, will display the bug. To correct it,
the same solution works:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>#ifndef</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>BOOST_MSVC<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:green'>//
create a state machine &quot;on the fly&quot; for Playing. VC9 will NOT accept
this<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:blue'>typedef</span>
<span style='color:#030003'>BOOST_TYPEOF</span>(<span style='color:#030003'>build_sm</span>(<span
style='mso-spacerun:yes'>&nbsp; </span><span style='color:#030003'>transition_table</span>(),init_
&lt;&lt; <span style='color:#030003'>Empty</span>() &lt;&lt; AllOk() )) <span
style='color:#030003'>player_</span>;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>#else<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:green'>//
but this definition is ok for VC9. But again, not for g++.<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:blue'>struct</span>
<span style='color:#030003'>player_</span> : <span style='color:blue'>public</span>
<span style='color:#030003'>BOOST_TYPEOF</span>(<span style='color:#030003'>build_sm</span>(<span
style='mso-spacerun:yes'>&nbsp; </span><span style='color:#030003'>transition_table</span>(),init_
&lt;&lt; <span style='color:#030003'>Empty</span>() &lt;&lt; AllOk() )) <o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>};<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>#endif<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'><o:p>&nbsp;</o:p></span></p>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Defining_a_composite"></a><span lang=EN-US style='mso-ansi-language:
EN-US'>Defining a composite state machine<o:p></o:p></span></h3>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'>As you probably noticed in the <a href="#_A_more_advanced">composite
tutorial</a>, defining a composite state simply means putting a state machine
in the transition table of another state machine. This is the same with eUML.
One only needs define a second state machine and reference it in the transition
table of the containing state machine.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><u><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'>Note:</span></u><span lang=EN-US style='mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> VC9 and VC10 Beta1
seem to have a problem defining composite states inside a same compilation unit
with eUML and you get an error after a long waiting time (</span><span
lang=EN-US style='font-size:12.5pt;font-family:Consolas;mso-fareast-font-family:
"Times New Roman";mso-bidi-font-family:Consolas;mso-ansi-language:EN-US'>fatal
error C1060: compiler is out of heap space</span><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'>).<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'>To avoid this, use a simple workaround provided in the <a
href="CompositeTutorialEuml.cpp">composite tutorial</a>. Define at least one of
both machines this way:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>#ifndef</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>BOOST_MSVC<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:green'>//
create a state machine &quot;on the fly&quot; for Playing. VC9 will NOT accept
this<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:blue'>typedef</span>
<span style='color:#030003'>BOOST_TYPEOF</span>(<span style='color:#030003'>build_sm</span>(<span
style='mso-spacerun:yes'>&nbsp; </span><span style='color:#030003'>playing_transition_table</span>(),
<span style='color:green'>//STT<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='color:#030003'>init_</span> &lt;&lt; <span
style='color:#030003'>Song1</span>() <span style='color:green'>// Init State<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>)) <span style='color:#030003'>Playing_</span>;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>#else<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:green'>//
but this definition is ok for VC9. But again, not for g++.<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:blue'>struct</span>
<span style='color:#030003'>Playing_</span> : <span style='color:blue'>public</span>
<span style='color:#030003'>BOOST_TYPEOF</span>(<span style='color:#030003'>build_sm</span>(<span
style='mso-spacerun:yes'>&nbsp; </span><span style='color:#030003'>playing_transition_table</span>(),
<span style='color:green'>//STT<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='color:#030003'>init_</span> &lt;&lt; <span
style='color:#030003'>Song1</span>() <span style='color:green'>// Init State<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>)) <o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>};<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>#endif<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'>The world of compilers is full of surprises, isn&#8217;t it?<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'><o:p>&nbsp;</o:p></span></p>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Anonymous_transitions_1"></a><span lang=EN-US style='mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>Anonymous
transitions<o:p></o:p></span></h3>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'>Anonymous transitions are (<a
href="#_Anonymous_transitions">see above</a>) transitions without a named event
which are therefore triggered immediately when the source state becomre active,
provided a guard allows it.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'>As there is no event, to define such a transition,
simply omit the &#8220;+&#8221; part of the transition, for example:<o:p></o:p></span></p>

<p style='page-break-before:always;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>State3</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>() == <span
style='color:#030003'>State4</span>() [<span style='color:#030003'>always_true</span>()]
/ <span style='color:#030003'>State3ToState4</span>()</span><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'><o:p>&nbsp;</o:p></span></p>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Fork"></a><span lang=EN-US style='mso-ansi-language:EN-US'>Fork<o:p></o:p></span></h3>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'>A <a href="#_Fork_1">fork</a> is a direct entry into
several regions of a composite substate. EUML also supports this by allowing
the user to define a list of entry states separated by a comma and enclosed
inside parenthesis, for eaxample:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>State1()<span
style='mso-spacerun:yes'>&nbsp; </span>+ event3()<span
style='mso-spacerun:yes'>&nbsp; </span>== (SubFsm2::direct&lt;SubState2&gt;(),
SubFsm2::direct&lt;SubState2b&gt;(), SubFsm2::direct&lt;SubState2c&gt;())<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'>Please have a look at the <a href="DirectEntryEuml.cpp">tutorial</a>.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'><o:p>&nbsp;</o:p></span></p>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Defining_attributes"></a><span lang=EN-US style='mso-ansi-language:EN-US'>Defining
attributes<o:p></o:p></span></h3>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>We now want to make our grammar more
useful. Very often, one needs only very simple action methods, for example </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>++Counter</span><span
lang=EN-US style='mso-ansi-language:EN-US'> or </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>Counter &gt; 5</span><span
lang=EN-US style='mso-ansi-language:EN-US'> where </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>Counter</span><span
lang=EN-US style='mso-ansi-language:EN-US'> is usually defined as some
attribute of the class containing the state machine. <o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Unlike many expensive tools which
one can find on the market, states within Msm are also classes so they can have
attributes, and we would also like to provide them with attributes.<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>We need a way to declare attributes
in the state (or state machine) declaration contained in </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'><a
href="#_Defining_a_state">build_state</a></span><span lang=EN-US
style='mso-ansi-language:EN-US'> or </span><span lang=EN-US style='font-family:
"Courier New";mso-ansi-language:EN-US'><a href="#_Defining_a_simple">build_sm</a></span><span
lang=EN-US style='mso-ansi-language:EN-US'>. EUML provides another grammar
(similar to the initial states grammar) to achieve this:<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>typedef</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>BOOST_TYPEOF</span>(<span style='color:#030003'>build_state</span>(
(<span style='color:#030003'>Empty_Entry</span>(),<span style='color:#030003'>Dummy_Entry</span>()),(<span
style='color:#030003'>Empty_Exit</span>()),<b style='mso-bidi-font-weight:normal'>attributes_
&lt;&lt; int() &lt;&lt; std::map&lt;int,int&gt;() &lt;&lt; bool()</b> )) <span
style='color:#030003'>Empty</span>;</span><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>We now defined a state
&#8220;Empty&#8221; containing 3 attributes:<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l31 level1 lfo28;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>An int, at index 0<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l31 level1 lfo28;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>A std::map&lt;int,int&gt; at index 1<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l31 level1 lfo28;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>A bool at index 2.<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Events sometimes also need some
attributes, so the same grammar can also apply to them but needs to be called
explicitly using the type of the </span><span lang=EN-US style='font-family:
"Courier New";mso-ansi-language:EN-US'>build_attributes</span><span lang=EN-US
style='mso-ansi-language:EN-US'> function. For example, the following code
gives a </span><span lang=EN-US style='font-family:"Courier New";mso-ansi-language:
EN-US'>string</span><span lang=EN-US style='mso-ansi-language:EN-US'> and </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>DiskTypeEnum</span><span
lang=EN-US style='mso-ansi-language:EN-US'> attributes to an event:<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>typedef
BOOST_TYPEOF(build_attributes</span><span lang=EN-US style='font-size:10.0pt;
font-family:"Courier New";mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'>(attributes_ &lt;&lt; <span style='color:#030003'>std</span>::<span
style='color:#030003'>string()</span> &lt;&lt; <span style='color:#030003'>DiskTypeEnum()</span>
)) cd_detected_attributes;</span><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>struct</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>cd_detected</span> : <span style='color:#030003'>euml_event</span>&lt;<span
style='color:#030003'>cd_detected</span>&gt;, cd_detected_attributes<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>{<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:#030003'>cd_detected</span>(){}<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:#030003'>cd_detected</span>(<span style='color:#030003'>std</span>::<span
style='color:#030003'>string</span> <span style='color:#030003'>name</span>, <span
style='color:#030003'>DiskTypeEnum</span> <span style='color:#030003'>diskType</span>)<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:green'>// initialize attributes 0 and 1</span><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style='color:
#030003'>get_attributes&lt;0&gt;</span>()=<span style='color:#030003'>name</span>;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:#030003'>get_attributes&lt;1&gt;</span>()=<span style='color:#030003'>diskType</span>;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>};</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>We can now reference these
attributes in our grammar. To this aim, eUML provides several functors:<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l39 level1 lfo29;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>State_</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>&lt;x&gt;</span><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'>: used in a <b style='mso-bidi-font-weight:normal'>state
action (entry or exit)</b>, returns per reference, the x attribute of the
state. For example, </span><span lang=EN-US style='font-family:"Courier New";
mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:
yes'>State_</span><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>&lt;0&gt;() applied to the previously
defined </span><span lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>Entry</span><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'> state would return an int&amp;.</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l39 level1 lfo29;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>Source_</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>&lt;x&gt;</span><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'>: used in a <b style='mso-bidi-font-weight:normal'>transition</b>
action/guard, returns per reference, the x attribute of the transition source
state. </span><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l39 level1 lfo29;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>Target_</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>&lt;x&gt;</span><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'>: used in a <b style='mso-bidi-font-weight:normal'>transition</b>
action/guard, returns per reference, the x attribute of the transition target
state. </span><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l39 level1 lfo29;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>State_Attribute_</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>&lt;State,x&gt;</span><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'>: used <b style='mso-bidi-font-weight:normal'>anywhere</b>,
returns per reference, the x attribute of the state machine&#8217;s inner </span><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>State</span><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'>.</span><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l39 level1 lfo29;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>Event_</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>&lt;x&gt;</span><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'>: used <b style='mso-bidi-font-weight:normal'>anywhere</b>,
returns per reference, the x attribute of the event.</span><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l39 level1 lfo29;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>Fsm_&lt;x&gt;
</span><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>: used <b style='mso-bidi-font-weight:
normal'>anywhere</b>, per reference, the x attribute of the current state
machine.</span><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'>EUML also provides the same functionality as functions,
to make the whole thing more &#8220;functional&#8221;:<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt;mso-list:l11 level1 lfo30;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>state_() used </span><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'>in a <b style='mso-bidi-font-weight:normal'>state
action (entry or exit)</b>, returns per reference the current state.</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt;mso-list:l11 level1 lfo30;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'>source_()</span><span lang=EN-US style='mso-ansi-language:
EN-US'> used </span><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>in a <b style='mso-bidi-font-weight:
normal'>transition</b> action/guard, returns per reference, the transition
source state.</span><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt;mso-list:l11 level1 lfo30;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'>target_()</span><span lang=EN-US style='mso-ansi-language:
EN-US'> used </span><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>in a <b style='mso-bidi-font-weight:
normal'>transition</b> action/guard, returns per reference, the transition
target state.</span><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt;mso-list:l11 level1 lfo30;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'>event_()</span><span lang=EN-US style='mso-ansi-language:
EN-US'> used </span><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'>anywhere</span></b><span lang=EN-US style='mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>, returns per
reference, the current event.</span><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt;mso-list:l11 level1 lfo30;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'>fsm_()</span><span lang=EN-US style='mso-ansi-language:
EN-US'> used </span><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'>anywhere</span></b><span lang=EN-US style='mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>, returns per
reference, the current state machine.</span><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt;mso-list:l11 level1 lfo30;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'>substate_(substate name() [, state machine])</span><span
lang=EN-US style='mso-ansi-language:EN-US'> used </span><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>anywhere</span></b><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'>, returns per reference, the given substate of the current
state machine or of the one passed as 2<sup>nd</sup> parameter.</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt;mso-list:l11 level1 lfo30;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'>attribute_(target(),index())</span><span lang=EN-US
style='mso-ansi-language:EN-US'> used </span><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>anywhere</span></b><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'>, returns per reference, the attribute &#8220;index&#8221; of
&#8220;target&#8221;, target being a state, an event or a state machine.</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>A few examples will help understand
these new concepts.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Using the previous definitions of </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>Empty</span><span
lang=EN-US style='mso-ansi-language:EN-US'> and </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>cd_detected</span><span
lang=EN-US style='mso-ansi-language:EN-US'>: <o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Defining_flags"></a><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>State1() +
cd_detected() == Empty() / ++Target_&lt;0&gt;()<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Will increment the int attribute of
Empty (the target in this transition). The same can be done the functional way
using:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>State1() +
cd_detected() == Empty() / ++attribute_(target_() , Int_&lt;0&gt;() )<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Or even:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>State1() +
cd_detected() == Empty() / ++attribute_(substate_(Empty()) , Int_&lt;0&gt;() )<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Which one to use is dependent on
your personal preference. Note, however, that the function form tends to break
compilers faster than the functor form.<o:p></o:p></span></p>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></h3>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Defining flags<o:p></o:p></span></h3>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>You remember from the </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'><a
href="#_Defining_a_state">build_state</a></span><span lang=EN-US
style='mso-ansi-language:EN-US'> and </span><span lang=EN-US style='font-family:
"Courier New";mso-ansi-language:EN-US'><a href="#_Defining_a_state_1">build_sm</a></span><span
lang=EN-US style='mso-ansi-language:EN-US'> signatures that just after
attributes, we can define flags, <a href="#_Using_">like in the standard Msm v1
frontend</a>. To do this, we have a grammar very similar to the attributes
grammar, for example:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:green;mso-ansi-language:EN-US;mso-no-proof:yes'>// state not defining any
entry or exit<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>typedef</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>BOOST_TYPEOF</span>(<span style='color:#030003'>build_state</span>(<span
style='color:#030003'>NoAction</span>(),<span style='color:#030003'>NoAction</span>(),<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='color:#030003'>attributes_</span> &lt;&lt; <span
style='color:#030003'>no_attributes_</span>,<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='color:#030003'>configure_</span>&lt;&lt; <span
style='color:#030003'>PlayingPaused</span>() &lt;&lt; <span style='color:#030003'>CDLoaded</span>()
)) <span style='color:#030003'>Paused</span>;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>We now defined that Paused will get
2 flags, </span><span lang=EN-US style='font-family:"Courier New";mso-ansi-language:
EN-US'>PlayingPaused</span><span lang=EN-US style='mso-ansi-language:EN-US'>
and </span><span lang=EN-US style='font-family:"Courier New";mso-ansi-language:
EN-US'>CDLoaded</span><span lang=EN-US style='mso-ansi-language:EN-US'>,
defined, for example as:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>struct
CDLoaded : euml_flag&lt;CDLoaded&gt; {};<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>This corresponds to the following
standard Msm definition of Paused:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:green;mso-ansi-language:EN-US;mso-no-proof:yes'>// state not defining any
entry or exit<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>struct</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>Paused</span> : <span style='color:blue'>public</span> <span
style='color:#030003'>msm</span>::<span style='color:#030003'>front</span>::<span
style='color:#030003'>state</span>&lt;&gt;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>{<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><b style='mso-bidi-font-weight:
normal'><span style='color:blue'>typedef</span> <span style='color:#030003'>mpl</span>::<span
style='color:#030003'>vector2</span>&lt;<span style='color:#030003'>PlayingPaused</span>,<span
style='color:#030003'>CDLoaded</span>&gt;<span style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:#030003'>flag_list</span>;</b><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>};<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>This way, nobody needs to know
metaprogramming techniques to define a state machine. Under the hood, what you
get really is mpl::vector2.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='mso-ansi-language:EN-US'>Note</span></u><span lang=EN-US
style='mso-ansi-language:EN-US'>: As we use the version of </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>build_state</span><span
lang=EN-US style='mso-ansi-language:EN-US'> with 4 arguments, we need to tell
eUML that we need no attributes. Similarly to a &#8220;</span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>cout &lt;&lt; endl</span><span
lang=EN-US style='mso-ansi-language:EN-US'>&#8221;, we need a &#8220;</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>attributes_</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> &lt;&lt; <span
style='color:#030003'>no_attributes</span></span><span lang=EN-US
style='font-size:10.0pt;mso-fareast-font-family:"Times New Roman";color:#030003;
mso-ansi-language:EN-US;mso-no-proof:yes'>_&#8221; syntax.</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Defining_deferred_events"></a><span lang=EN-US style='mso-ansi-language:
EN-US'>Defining deferred events<o:p></o:p></span></h3>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>EUML also supports defining <a
href="#_Orthogonal_States_(+Defer">deferred events</a> in the state (state
machine) definition. To this aim, we can reuse the previous flag grammar. For
example:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>typedef</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>BOOST_TYPEOF</span>(<span style='color:#030003'>build_state</span>(<span
style='color:#030003'>Empty_Entry</span>(),<span style='color:#030003'>Empty_Exit</span>(),<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='color:#030003'>attributes_</span> &lt;&lt; <span
style='color:#030003'>no_attributes_</span>,<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='color:#030003'>configure_</span> &lt;&lt; <span
style='color:#030003'>play</span>() )) <span style='color:#030003'>Empty</span>;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>This replaces the standard Msm
definition:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>struct</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>Empty</span> : <span style='color:blue'>public</span> <span
style='color:#030003'>msm</span>::<span style='color:#030003'>front</span>::<span
style='color:#030003'>state</span>&lt;&gt; <o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>{<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:green'>//
if the play event arrives in this state, defer it until a state handles it or<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:green'>//
rejects it<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><b style='mso-bidi-font-weight:
normal'><span style='color:blue'>typedef</span> <span style='color:#030003'>mpl</span>::<span
style='color:#030003'>vector</span>&lt;<span style='color:#030003'>play</span>&gt;
<span style='color:#030003'>deferred_events</span>;<o:p></o:p></b></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:green'>//
every (optional) entry/exit methods get the event passed.<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:blue'>template</span>
&lt;<span style='color:blue'>class</span> <span style='color:#030003'>Event</span>,<span
style='color:blue'>class</span> <span style='color:#030003'>FSM</span>&gt;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:blue'>void</span>
<span style='color:#030003'>on_entry</span>(<span style='color:#030003'>Event</span>
<span style='color:blue'>const</span>&amp;,<span style='color:#030003'>FSM</span>&amp;
) {<span style='color:#030003'>std</span>::<span style='color:#030003'>cout</span>
&lt;&lt; <span style='color:#A31515'>&quot;entering: Empty&quot;</span>
&lt;&lt; <span style='color:#030003'>std</span>::<span style='color:#030003'>endl</span>;}<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:blue'>template</span>
&lt;<span style='color:blue'>class</span> <span style='color:#030003'>Event</span>,<span
style='color:blue'>class</span> <span style='color:#030003'>FSM</span>&gt;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:blue'>void</span>
<span style='color:#030003'>on_exit</span>(<span style='color:#030003'>Event</span>
<span style='color:blue'>const</span>&amp;,<span style='color:#030003'>FSM</span>&amp;
) {<span style='color:#030003'>std</span>::<span style='color:#030003'>cout</span>
&lt;&lt; <span style='color:#A31515'>&quot;leaving: Empty&quot;</span> &lt;&lt;
<span style='color:#030003'>std</span>::<span style='color:#030003'>endl</span>;}<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>};<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>You can define flags and deferred
events using the same grammar, so the following code is also possible:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>configure_</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> &lt;&lt; <span
style='color:#030003'>PlayingPaused</span>() &lt;&lt; <span style='color:#030003'>CDLoaded</span>()
&lt;&lt; <span style='color:#030003'>play</span>()</span><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p><span style='text-decoration:
 none'>&nbsp;</span></o:p></span></u></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='mso-ansi-language:EN-US'>Note</span></u><span lang=EN-US
style='mso-ansi-language:EN-US'>: As we use the version of </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>build_state</span><span
lang=EN-US style='mso-ansi-language:EN-US'> with 5 arguments, we need to tell
eUML that we need no attributes. Similarly to a &#8220;</span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>cout &lt;&lt; endl</span><span
lang=EN-US style='mso-ansi-language:EN-US'>&#8221;, we need a &#8220;</span><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>attributes_</span><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'> &lt;&lt; <span style='color:#030003'>no_attributes</span></span><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";color:#030003;
mso-ansi-language:EN-US;mso-no-proof:yes'>_&#8221; syntax to indicate we have
no attributes.</span><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Customizing_a_state"></a><span lang=EN-US style='mso-ansi-language:EN-US'>Customizing
a state machine / getting more speed<o:p></o:p></span></h3>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>In the part about <a
href="#_Getting_more_speed">getting more speed</a> we saw that Msm offers a way
to deactivate the message queue and/or exception handling. EUML also supports
these features reusing the </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>configure_</span><span lang=EN-US style='mso-ansi-language:
EN-US'> grammar. To have these options activated, left-shift them into
configure. The options are named </span><span lang=EN-US style='font-family:
"Courier New";mso-ansi-language:EN-US'>no_exception</span><span lang=EN-US
style='mso-ansi-language:EN-US'> and </span><span lang=EN-US style='font-family:
"Courier New";mso-ansi-language:EN-US'>no_msg_queue</span><span lang=EN-US
style='mso-ansi-language:EN-US'>.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Supposing we have a state machine
defining the same deferred events and flags as the previous state, the
configuration would become:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>configure_</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> &lt;&lt; <span
style='color:#030003'>PlayingPaused</span>() &lt;&lt; <span style='color:#030003'>CDLoaded</span>()
&lt;&lt; <span style='color:#030003'>play</span>() &lt;&lt; no_exception()
&lt;&lt; no_msg_queue()</span><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Wrapping_it_up"></a><span lang=EN-US style='mso-ansi-language:EN-US'>Operators<o:p></o:p></span></h3>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>We now have a way to access state
and event data, define flags and deferred events, all we need is now a way to
do something useful with them. To this aim, the grammar overloads most
operators so that our language looks like real C++.<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>For guards, we have the logical
operators at our disposal:<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l16 level1 lfo31;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>And<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l16 level1 lfo31;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Or<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l16 level1 lfo31;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Not<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l16 level1 lfo31;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Comparison: ==, &lt;=, &gt;=, &lt;,
&gt;<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>For actions and guards, we have most
of C++ operators at our disposal:<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l9 level1 lfo32;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Pre/post increment/decrement<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l9 level1 lfo32;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>+, -, *, /, %, bitwise (&amp;,|,^)<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l9 level1 lfo32;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Subscript (for the moment, just for
vector and map)<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l9 level1 lfo32;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Assign: =, +=, -=, *=, /=, %=,
&lt;&lt;=, &gt;&gt;=<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l9 level1 lfo32;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>&lt;&lt;, &gt;&gt;<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l9 level1 lfo32;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Dereferencing.<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='mso-ansi-language:EN'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='mso-ansi-language:EN'>Operators can be found in:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-top:12.0pt;margin-right:36.45pt;margin-bottom:
0cm;margin-left:36.45pt;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='font-size:11.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:black;mso-ansi-language:EN'>#include &lt;
msm/front/euml/operator.hpp&gt;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-top:12.0pt;margin-right:36.45pt;margin-bottom:
0cm;margin-left:36.45pt;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='font-size:11.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:black;mso-ansi-language:EN'>#include &lt;
msm/front/euml/euml.hpp&gt;<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='mso-ansi-language:EN'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>EUML also provides flow control
syntax:<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l45 level1 lfo33;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>if_then_else_(guard,
action, action)</span><span lang=EN-US style='mso-ansi-language:EN-US'> where
guard respects the guard grammar and action the action sequence grammar.<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l45 level1 lfo33;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>if_then_(guard,
action)</span><span lang=EN-US style='mso-ansi-language:EN-US'> where guard
respects the guard grammar and action the action sequence grammar.<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l45 level1 lfo33;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>while_(guard,
action)</span><span lang=EN-US style='mso-ansi-language:EN-US'> where guard
respects the guard grammar and action the action sequence grammar.<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l45 level1 lfo33;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>do_while_(guard,
action)</span><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>&nbsp; </span>where guard respects the guard grammar
and action the action sequence grammar.<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l45 level1 lfo33;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>for_(action,
guard, action, action)</span><span lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>&nbsp; </span>where guard respects the guard grammar
and action the action sequence grammar.<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>EUML provides functors to support
Msm state machine functionality:<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l3 level1 lfo34;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>process_(some_event()
[, some state machine] [, some state machine] [, some state machine] [, some
state machine])</span><span lang=EN-US style='mso-ansi-language:EN-US'> will
call </span><span lang=EN-US style='font-family:"Courier New";mso-ansi-language:
EN-US'>process_event (some_event())</span><span lang=EN-US style='mso-ansi-language:
EN-US'> on the current state machine or on the one(s) passed as 2<sup>nd</sup>
, 3<sup>rd</sup>, 4<sup>th</sup>, 5<sup>th</sup> argument. This allow sending
events to several external machines.<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l3 level1 lfo34;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>process2_(some_event(),Value
[, some state machine] [, some state machine] [, some state machine])</span><span
lang=EN-US style='mso-ansi-language:EN-US'> will call </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>process_event
(some_event(Value))</span><span lang=EN-US style='mso-ansi-language:EN-US'> on
the current state machine or on the one(s) passed as 3<sup>rd</sup>, 4<sup>th</sup>,
5<sup>th</sup> argument.<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l3 level1 lfo34;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>is_
flag_(some_flag()[, some state machine])</span><span lang=EN-US
style='mso-ansi-language:EN-US'> will call </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>is_flag_active</span><span
lang=EN-US style='mso-ansi-language:EN-US'> on the current state machine or on
the one passed as 2<sup>nd</sup> argument.<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l3 level1 lfo34;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>Predicate_&lt;some
predicate&gt;</span><span lang=EN-US style='mso-ansi-language:EN-US'>: Used in <a
href="#_Adding_functional_programming">STL algorithms</a>. Wraps unary/binary
functions to make them eUML-compatible so that they can be used in STL
algorithms.<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Basic types are also provided:<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l3 level1 lfo34;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>Int_&lt;int&gt;</span><span
lang=EN-US style='mso-ansi-language:EN-US'>: 5 is not a type but </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>Int_&lt;5&gt;</span><span
lang=EN-US style='mso-ansi-language:EN-US'> is and can be used in the action
grammars. <o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l3 level1 lfo34;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>Size_t_&lt;size_t&gt;</span><span
lang=EN-US style='mso-ansi-language:EN-US'>: Wrapper around size_t<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l3 level1 lfo34;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>Char_&lt;char&gt;</span><span
lang=EN-US style='mso-ansi-language:EN-US'>: Wrapper around char<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l3 level1 lfo34;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>String_&lt;mpl::string&gt;</span><span
lang=EN-US style='mso-ansi-language:EN-US'>: Wrapper around std::string. Needs
Boost &gt;= 1.40. You can then define a string in an action, for example
String_&lt;mpl::string&lt;&#8217;Hell&#8217;,&#8217;o
wo&#8217;,&#8217;rld&#8217;&gt; &gt;(). Please refer to the <a
href="http://www.boost.org/doc/libs/1_40_0/libs/mpl/doc/refmanual/string.html">MPL
documentation</a>. This is the one case where you will see some Metaprogramming.<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l3 level1 lfo34;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>True_</span><span
lang=EN-US style='mso-ansi-language:EN-US'> and </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>False_</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>You can therefore pretty much put
whatever you want as action and guard, as long as the operators are supported
and that you respect the grammar:<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l47 level1 lfo35;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Guards are not a sequence and must
return a bool.<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l47 level1 lfo35;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Actions can be sequences, separated
by commas and return nothing.<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Some examples will help understand
all this:<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l27 level1 lfo36;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>[(<span
style='color:#030003'>Event_</span>&lt;1&gt;()==<span style='color:#030003'>
Int_</span>&lt;<span style='color:#030003'>DISK_CD</span>&gt;())] </span><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'>is a guard returning true if the second event attribute
is DISK_CD</span><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l27 level1 lfo36;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>[(attribute_(<span
style='color:#030003'>event_(),Int_</span>&lt;1&gt;())==<span style='color:
#030003'> Int_</span>&lt;<span style='color:#030003'>DISK_CD</span>&gt;())] </span><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'>means the same</span><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l27 level1 lfo36;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>[(if_then_else_(
True_(),Guard1(),Guard2()))] </span><span lang=EN-US style='mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>is a guard
returning the result of calling </span><span lang=EN-US style='font-family:
"Courier New";mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'>Guard1</span><span lang=EN-US style='mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> (True_ will, well,
return true).</span><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l27 level1 lfo36;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>/(store_cd_info(),process_(play()))</span><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'>is a transition action calling the user-defined functor
</span><span lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>store_cd_info</span><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'> and then immediately process the event </span><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>play</span><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'>.</span><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l27 level1 lfo36;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-size:10.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='font-size:10.0pt;
font-family:"Courier New";mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'>(for(NoAction(),Current_&lt;1&gt;()[
Int_&lt;0&gt;()]&lt;=
Int_&lt;5&gt;(),(++Current_&lt;1&gt;()[Int_&lt;0&gt;()],++Current_&lt;0&gt;()),
Current_&lt;0&gt;()+= Int_&lt;3&gt;() )) </span><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'>is a contrived expression, used in an entry (as </span><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>Current_</span><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'> is used) and meaning: for(; second attribute[0] &lt;= 5;
(++second attribute[0],++first attribute);first attribute +=3 )</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='mso-ansi-language:EN-US'>Note</span></u><span lang=EN-US
style='mso-ansi-language:EN-US'>: do not forget the () after every functor, as
we need to evaluate the expression and thus pretend to create a functor object.
<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Notice that we have lots of operators,
functors and functions like </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>build_stt</span><span lang=EN-US style='mso-ansi-language:
EN-US'> but all is compile-time, there is no run-time penalty as the code is
not really called but simply evaluated. Now try to do this with your local
javac compiler&#8230;<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>The following table lists the
operators and basic functors supported:<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<table class=MsoTableLightListAccent1 border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none;mso-border-alt:solid #4F81BD 1.0pt;
 mso-border-themecolor:accent1;mso-yfti-tbllook:1184;mso-padding-alt:0cm 5.4pt 0cm 5.4pt'>
 <tr style='mso-yfti-irow:-1;mso-yfti-firstrow:yes'>
  <td width=437 valign=top style='width:261.95pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:solid #4F81BD 1.0pt;mso-border-left-themecolor:
  accent1;border-bottom:none;border-right:none;background:#4F81BD;mso-background-themecolor:
  accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:5'><b><span lang=EN style='color:white;mso-themecolor:background1;
  mso-ansi-language:EN'>eUML function / operator<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;background:#4F81BD;mso-background-themecolor:
  accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:1'><b><span lang=EN style='color:white;mso-themecolor:background1;
  mso-ansi-language:EN'>Description<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;background:#4F81BD;mso-background-themecolor:
  accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:1'><b><span lang=EN style='color:white;mso-themecolor:background1;
  mso-ansi-language:EN'>Example<o:p></o:p></span></b></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:none;
  border-right:solid #4F81BD 1.0pt;mso-border-right-themecolor:accent1;
  background:#4F81BD;mso-background-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:1'><b><span lang=EN style='color:white;mso-themecolor:background1;
  mso-ansi-language:EN'>Functor<o:p></o:p></span></b></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:0'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:68'><b><span lang=EN style='mso-ansi-language:EN'>&amp;&amp;<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Calls lazily
  Action1&amp;&amp; Action2<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Action1()
  &amp;&amp; Action2()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>And_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:1'>
  <td width=437 valign=top style='width:261.95pt;border-top:none;border-left:
  solid #4F81BD 1.0pt;mso-border-left-themecolor:accent1;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:EN'>||<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;border-bottom:
  solid #4F81BD 1.0pt;mso-border-bottom-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Calls lazily Action1|| Action2<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;border-bottom:
  solid #4F81BD 1.0pt;mso-border-bottom-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Action1() || Action2()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border-top:none;border-left:
  none;border-bottom:solid #4F81BD 1.0pt;mso-border-bottom-themecolor:accent1;
  border-right:solid #4F81BD 1.0pt;mso-border-right-themecolor:accent1;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Or_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:2'>
  <td width=437 valign=top style='width:261.95pt;border-top:none;border-left:
  solid #4F81BD 1.0pt;mso-border-left-themecolor:accent1;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;mso-border-top-alt:
  solid #4F81BD 1.0pt;mso-border-top-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:68'><b><span lang=EN style='mso-ansi-language:EN'>!<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;border-bottom:
  solid #4F81BD 1.0pt;mso-border-bottom-themecolor:accent1;mso-border-top-alt:
  solid #4F81BD 1.0pt;mso-border-top-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Calls lazily
  !Action1<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;border-bottom:
  solid #4F81BD 1.0pt;mso-border-bottom-themecolor:accent1;mso-border-top-alt:
  solid #4F81BD 1.0pt;mso-border-top-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>!Action1()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border-top:none;border-left:
  none;border-bottom:solid #4F81BD 1.0pt;mso-border-bottom-themecolor:accent1;
  border-right:solid #4F81BD 1.0pt;mso-border-right-themecolor:accent1;
  mso-border-top-alt:solid #4F81BD 1.0pt;mso-border-top-themecolor:accent1;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Not_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:3'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:EN'>!=<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Calls lazily Action1 != Action2<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Action1() != Action2()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>NotEqualTo_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:4'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:68'><b><span lang=EN style='mso-ansi-language:EN'>==<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Calls lazily
  Action1 == Action2<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Action1() ==
  Action2()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>EqualTo_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:5'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:EN'>&gt;<o:p>&nbsp;</o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Calls lazily Action1 &gt; Action2<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Action1() &gt; Action2()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Greater_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:6'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:68'><b><span lang=EN style='mso-ansi-language:EN'>&gt;=<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Calls lazily
  Action1 &gt;= Action2<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Action1() &gt;=
  Action2()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Greater_Equal_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:7'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:EN'>&lt;<o:p>&nbsp;</o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Calls lazily Action1 &lt; Action2<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Action1() &lt; Action2()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Less_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:8'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:68'><b><span lang=EN style='mso-ansi-language:EN'>&lt;=<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Calls lazily
  Action1 &lt;= Action2<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Action1() &lt;=
  Action2()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Less_Equal_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:9'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:EN'>&amp; (see
  below)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Calls lazily Action1 &amp; Action2<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Action1() &amp; Action2()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Bitwise_And_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:10'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:68'><b><span lang=EN style='mso-ansi-language:EN'>| (see below)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Calls lazily
  Action1 | Action2<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Action1() |
  Action2()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Bitwise_Or_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:11'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:EN'>^ (see below)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Calls lazily Action1 ^ Action2<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Action1() ^ Action2()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Bitwise_Xor_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:12'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:68'><b><span lang=EN style='mso-ansi-language:EN'>-- (see
  below)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Calls lazily
  --Action1 / Action1--.<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>--Action1()
  (predecrement)<o:p></o:p></span></p>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Action1()--
  (postdecrement)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Pre_Dec_<o:p></o:p></span></p>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Post_Dec_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:13'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:EN'>++ (see below)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Calls lazily ++Action1 / Action1++<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>++Action1() (preincrement)<o:p></o:p></span></p>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Action1++ (postincrement)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Pre_Inc_<o:p></o:p></span></p>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Post_Inc_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:14'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:68'><b><span lang=EN style='mso-ansi-language:EN'>/ (see below)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Calls lazily
  Action1 / Action2<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Action1() /
  Action2()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Divides_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:15'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:EN'>/= (see below)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Calls lazily Action1 /= Action2<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Action1() /= Action2()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Divides_Assign_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:16'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:68'><b><span lang=EN style='mso-ansi-language:EN'>* (see below)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Calls lazily
  Action1 * Action2<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Action1() *
  Action2()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Multiplies_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:17'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:EN'>*= (see below)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Calls lazily Action1 *= Action2<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Action1() *= Action2()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Multiplies_Assign_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:18'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:68'><b><span lang=EN style='mso-ansi-language:EN'>+ (see below)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Calls lazily
  Action1 + Action2<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Action1() +
  Action2()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Plus_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:19'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:EN'>+<span
  style='mso-spacerun:yes'>&nbsp; </span>(unary)<span
  style='mso-spacerun:yes'>&nbsp; </span>(see below)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Calls lazily +Action1<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>+Action1()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Unary_Plus_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:20'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:68'><b><span lang=EN style='mso-ansi-language:EN'>+= (see
  below)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Calls lazily
  Action1 += Action2<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Action1() +=
  Action2()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Plus_Assign_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:21'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:EN'>-<span
  style='mso-spacerun:yes'>&nbsp; </span>(binary)<span
  style='mso-spacerun:yes'>&nbsp; </span>(see below)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Calls lazily Action1 - Action2<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Action1() - Action2()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Minus_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:22'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:68'><b><span lang=EN style='mso-ansi-language:EN'>-<span
  style='mso-spacerun:yes'>&nbsp; </span>(unary) (see below)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Calls lazily
  -Action1<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>-Action1()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Unary_Minus_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:23'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:EN'>-= (see below)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Calls lazily Action1 -= Action2<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Action1() -= Action2()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Minus_Assign_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:24'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:68'><b><span lang=EN style='mso-ansi-language:EN'>% (see below)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Calls lazily
  Action1 % Action2<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Action1() %
  Action2()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Modulus_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:25'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:EN'>%= (see below)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Calls lazily Action1 %= Action2<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Action1() %= Action2()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Modulus_Assign_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:26'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:68'><b><span lang=EN style='mso-ansi-language:EN'>&gt;&gt; (see
  below)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Calls lazily
  Action1 &gt;&gt; Action2<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Action1()
  &gt;&gt; Action2()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>ShiftRight_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:27'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:EN'>&gt;&gt;= (see
  below)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Calls lazily Action1 &gt;&gt;= Action2<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Action1() &gt;&gt;= Action2()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>ShiftRight_Assign_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:28'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:68'><b><span lang=EN style='mso-ansi-language:EN'>&lt;&lt; (see
  below)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Calls lazily
  Action1 &lt;&lt; Action2<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Action1()
  &lt;&lt; Action2()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>ShiftLeft_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:29'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:EN'>&lt;&lt;= (see
  below)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Calls lazily Action1 &lt;&lt;= Action2<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Action1() &lt;&lt;= Action2()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>ShiftLeft_Assign_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:30'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:68'><b><span lang=EN style='mso-ansi-language:EN'>[] </span></b><span
  lang=EN style='mso-ansi-language:EN;mso-bidi-font-weight:bold'>(works on vector,
  map, arrays)<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Calls lazily
  Action1 [Action2]<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Action1()
  [Action2()]<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Subscript_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:31'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:EN'>if_then_else_(Condition,Action1,Action2)<o:p></o:p></span></b></p>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:EN'>(see below)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Returns either the result of calling
  Action1 or the result of calling Action2<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
  mso-ansi-language:EN-US'>if_then_else_(Condition1(),++Source_&lt;0&gt;(),<o:p></o:p></span></p>
  <p class=MsoNormal><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
  mso-ansi-language:EN-US'><span
  style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span>--Source_&lt;0&gt;())<o:p></o:p></span></p>
  <p class=MsoNormal><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
  mso-ansi-language:EN-US'>[if_then_else_(Condition1(),True_(), False())]<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
  mso-ansi-language:EN-US'>If_Else_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:32'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:68'><b><span lang=EN style='mso-ansi-language:EN'>if_then_(Condition,Action)<o:p></o:p></span></b></p>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:68'><b><span lang=EN style='mso-ansi-language:EN'>(see below)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Returns the
  result of calling Action<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'></td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN-US
  style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US'>If_Then_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:33'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:EN'>while_(Condition,
  Body)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>While Condition(), calls Body(). Returns
  nothing.<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
  mso-ansi-language:EN-US'>while_(Source_&lt;0&gt;() &lt;=
  Int_&lt;5&gt;(),<span
  style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span>++Source_&lt;0&gt;())<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
  mso-ansi-language:EN-US'>While_Do_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:34'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:68'><b><span lang=EN style='mso-ansi-language:EN'>do_while(Condition,
  Body)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Calls Body()
  while Condition(). Returns nothing.<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN-US
  style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US'>do_while_(Source_&lt;0&gt;()
  &lt;= Int_&lt;5&gt;(),<span
  style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span>++Source_&lt;0&gt;())<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN-US
  style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US'>Do_While_</span><span
  lang=EN-US style='font-size:10.0pt;mso-fareast-font-family:"Times New Roman";
  mso-ansi-language:EN-US'><o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:35'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:EN'>for_(Begin,Stop,EndLoop,Body)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Calls
  for(Begin();Stop();EndLoop()){Body();}<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
  mso-ansi-language:EN-US'>for_(Source_&lt;0&gt;()=Int_&lt;0&gt;(),Source_&lt;0&gt;()
  &lt;= Int_&lt;5&gt;(), ++Source_&lt;0&gt;(),Action1())<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>For_Loop_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:36'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN-US
  style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US'>Event_&lt;some_int&gt;()<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Returns the
  some_int attribute of the currently processed event.<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-fareast-font-family:
  "Times New Roman";mso-ansi-language:EN'>[Source_&lt;0&gt;() ==
  Event_&lt;1&gt;()]<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Event_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:37'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN-US
  style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US'>Source_&lt;some_int&gt;()<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Returns the some_int attribute of the
  source state from the currently triggered transition.<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
  mso-ansi-language:EN-US'>++Source_&lt;0&gt;()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Source_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:38'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN-US
  style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US'>Target_&lt;some_int&gt;()<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Returns the
  some_int attribute of the target state from the currently triggered
  transition.<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN-US
  style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US'>++Target_&lt;0&gt;()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Target_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:39'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN-US
  style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US'>State_&lt;some_int&gt;()<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Returns the some_int attribute of the current
  state (valid inside an entry/exit state action).<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
  mso-ansi-language:EN-US'>++State_&lt;0&gt;()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>State_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:40'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN-US
  style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US'>State_attribute_&lt;state,
  some_int&gt;()<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Returns the
  some_int attribute of the given state from the current state machine.<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN-US
  style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US'>++State_Attribute_&lt;Empty,0&gt;()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>State_Attribute_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:41'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN-US
  style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US'>Fsm_&lt;some_int&gt;()<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Returns the some_int attribute of the
  current state machine (valid inside an entry/exit state action or a
  transition).<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
  mso-ansi-language:EN-US'>++Fsm_&lt;0&gt;()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Fsm_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:42'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span style='mso-fareast-font-family:
  "Times New Roman"'>Int_&lt;some_int&gt;()<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Wrappers around
  the value some_int<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-fareast-font-family:
  "Times New Roman";mso-ansi-language:EN'>Int_&lt;5&gt;()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Int_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:43'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span style='mso-fareast-font-family:
  "Times New Roman"'>Size_t_&lt;some_size&gt;()<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Wrappers around the value some_size<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-fareast-font-family:"Times New Roman";
  mso-ansi-language:EN'>Size_t_&lt;5&gt;()<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Size_t_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:44'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span style='mso-fareast-font-family:
  "Times New Roman"'>True_()<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Creates a
  functor always returning true.<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN-US
  style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US'>[if_then_else_(Condition1(),True_(),
  False())]<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>True_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:45'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:EN'>False_()<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Creates a functor always returning
  false.<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
  mso-ansi-language:EN-US'>[if_then_else_(Condition1(),True_(), False())]<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>False_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:46'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:68'><b><span lang=EN style='mso-ansi-language:EN'>process_(Event
  [,fsm1] [,fsm2] [,fsm3] [,fsm4])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Processes Event
  on the current state machine (if no fsm specified) or on up to 4 state
  machines returned by an appropriate functor.<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-fareast-font-family:
  "Times New Roman";mso-ansi-language:EN'>process_(play()) // current fsm<o:p></o:p></span></p>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-fareast-font-family:
  "Times New Roman";mso-ansi-language:EN'>process_(play(),fsm_()) // current
  fsm<o:p></o:p></span></p>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-fareast-font-family:
  "Times New Roman";mso-ansi-language:EN'>process_(play(), fsm1(),fsm2()) // 2
  state machines<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN-US
  style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US'>Process_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:47'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:EN'>process2_(Event,
  Data [,fsm1] [,fsm2] [,fsm3])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Processes Event on the current state
  machine (if no fsm specified) or on up to 2 state machines returned by an
  appropriate functor. The event is copy-constructed from what Data() returns.<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-fareast-font-family:"Times New Roman";
  mso-ansi-language:EN'>process2_(play(), Event_&lt;1&gt;()) // current fsm<o:p></o:p></span></p>
  <p class=MsoNormal><span lang=EN style='mso-fareast-font-family:"Times New Roman";
  mso-ansi-language:EN'>process2_(play(), Event_&lt;1&gt;(), fsm_()) // current<o:p></o:p></span></p>
  <p class=MsoNormal><span lang=EN style='mso-fareast-font-family:"Times New Roman";
  mso-ansi-language:EN'>process2_(play(), Event_&lt;1&gt;(), fsm1(),fsm2()) //
  2 state machines<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
  mso-ansi-language:EN-US'>Process2_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:48'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:68'><b><span lang=EN style='mso-ansi-language:EN'>is_flag_(Flag
  [,fsm])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Calls
  is_flag_active() on the current state machine or the one returned by calling
  fsm()<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-fareast-font-family:
  "Times New Roman";mso-ansi-language:EN'>is_flag_(CDLoaded()) // current fsm<o:p></o:p></span></p>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-fareast-font-family:
  "Times New Roman";mso-ansi-language:EN'>is_flag_(CDLoaded(),fsm_()) //
  current fsm<o:p></o:p></span></p>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-fareast-font-family:
  "Times New Roman";mso-ansi-language:EN'>is_flag_(CDLoaded(), some_fsm()) //
  another fsm<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-fareast-font-family:
  "Times New Roman";mso-ansi-language:EN'>Get_Flag_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:49'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:EN'>attribute_(Target,
  Index)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Returns the attribute at index Index
  from Target<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-fareast-font-family:"Times New Roman";
  mso-ansi-language:EN'>clear_(attribute_(fsm_(), Int_&lt;0&gt;()))<o:p></o:p></span></p>
  <p class=MsoNormal><span lang=EN style='mso-fareast-font-family:"Times New Roman";
  mso-ansi-language:EN'>Calls clear() on the first attribute of the current fsm
  (probably a STL container)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>GetAttribute_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:50'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:68'><b><span lang=EN style='mso-ansi-language:EN'>event_()<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Returns the
  current event (as const reference)<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-fareast-font-family:
  "Times New Roman";mso-ansi-language:EN'>[attribute_(event_(),Int_&lt;0&gt;())
  &gt; 0]<o:p></o:p></span></p>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-fareast-font-family:
  "Times New Roman";mso-ansi-language:EN'>Guard evaluating to true if the first
  attribute of the current event is &gt; 0<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN-US
  style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US'>GetEvent_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:51'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:EN'>source_()<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Returns the source state of the
  currently triggered transition (as reference)<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-fareast-font-family:"Times New Roman";
  mso-ansi-language:EN'>[attribute_(source_(),Int_&lt;0&gt;()) &gt; 0]<o:p></o:p></span></p>
  <p class=MsoNormal><span lang=EN style='mso-fareast-font-family:"Times New Roman";
  mso-ansi-language:EN'>Guard evaluating to true if the first attribute of the
  source state is &gt; 0<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
  mso-ansi-language:EN-US'>GetSource_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:52'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:68'><b><span lang=EN style='mso-ansi-language:EN'>target_()<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Returns the
  target state of the currently triggered transition (as reference)<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-fareast-font-family:
  "Times New Roman";mso-ansi-language:EN'>[attribute_(target_(),Int_&lt;0&gt;())
  &gt; 0]<o:p></o:p></span></p>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-fareast-font-family:
  "Times New Roman";mso-ansi-language:EN'>Guard evaluating to true if the first
  attribute of the target state is &gt; 0<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN-US
  style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US'>GetTarget_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:53'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:EN'>state_()<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Returns the source state of the
  currently active state (as reference). Valid inside a state entry/exit
  action.<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-fareast-font-family:"Times New Roman";
  mso-ansi-language:EN'>++attribute_(state_(),Int_&lt;0&gt;())<o:p></o:p></span></p>
  <p class=MsoNormal><span lang=EN style='mso-fareast-font-family:"Times New Roman";
  mso-ansi-language:EN'>Preincrements the first attribute of the current state<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
  mso-ansi-language:EN-US'>GetState_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:54'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:68'><b><span lang=EN style='mso-ansi-language:EN'>fsm_()<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:EN'>Returns the
  current state machine (as reference). Valid inside a state entry/exit action
  or a transition.<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-fareast-font-family:
  "Times New Roman";mso-ansi-language:EN'>++attribute_(fsm_(),Int_&lt;0&gt;())<o:p></o:p></span></p>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-fareast-font-family:
  "Times New Roman";mso-ansi-language:EN'>Preincrements the first attribute of
  the current state machine<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN-US
  style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US'>GetFsm_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:55;mso-yfti-lastrow:yes'>
  <td width=437 valign=top style='width:261.95pt;border-top:none;border-left:
  solid #4F81BD 1.0pt;mso-border-left-themecolor:accent1;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
  mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:EN'>substate_(state_name
  [,fsm])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;border-bottom:
  solid #4F81BD 1.0pt;mso-border-bottom-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
  lang=EN style='mso-ansi-language:EN'>Returns (as reference) the state
  state_name referenced in the current state machine or the one given as
  argument.<o:p></o:p></span></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;border-bottom:
  solid #4F81BD 1.0pt;mso-border-bottom-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
  mso-ansi-language:EN-US'>++attribute_(substate_(Empty())</span><span lang=EN
  style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN'>,Int_&lt;0&gt;()</span><span
  lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
  EN-US'>) // current fsm <o:p></o:p></span></p>
  <p class=MsoNormal><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
  mso-ansi-language:EN-US'>++attribute_(substate_(Empty(),fsm_())</span><span
  lang=EN style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
  EN'>,Int_&lt;0&gt;()</span><span lang=EN-US style='mso-fareast-font-family:
  "Times New Roman";mso-ansi-language:EN-US'>) // same<o:p></o:p></span></p>
  <p class=MsoNormal><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
  mso-ansi-language:EN-US'>++attribute_(substate_(Empty(),some_fsm())</span><span
  lang=EN style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
  EN'>,Int_&lt;0&gt;()</span><span lang=EN-US style='mso-fareast-font-family:
  "Times New Roman";mso-ansi-language:EN-US'>) // preincrements the first
  attribute of Empty from another state machine.<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border-top:none;border-left:
  none;border-bottom:solid #4F81BD 1.0pt;mso-border-bottom-themecolor:accent1;
  border-right:solid #4F81BD 1.0pt;mso-border-right-themecolor:accent1;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
  mso-ansi-language:EN-US'>SubState_<o:p></o:p></span></p>
  </td>
 </tr>
</table>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Note on if_then_ / if_then_else_and
functors used with operators returning a value:<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>The default return value of these
functions is a bool to allow easier guard writing. If your functor needs to
return something else, you will need to indicate this, for example, NoAction
(doing nothing) is defined as:<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>struct</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>NoAction</span> : <span style='color:#030003'>euml_action</span>&lt;<span
style='color:#030003'>NoAction</span>&gt;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>{<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:green'>//
return value if used inside a state action (entry/exit)<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:blue'>template</span>
&lt;<span style='color:blue'>class</span> <span style='color:#030003'>Event</span>,<span
style='color:blue'>class</span> <span style='color:#030003'>FSM</span>,<span
style='color:blue'>class</span> <span style='color:#030003'>STATE</span> &gt;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:blue'>struct</span>
<span style='color:#030003'>state_action_result</span> <o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:blue'>typedef</span> <span style='color:blue'>bool</span> <span
style='color:#030003'>type</span>;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>};<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:green'>//
return value if used inside a transition (action/guard)<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:blue'>template</span>
&lt;<span style='color:blue'>class</span> <span style='color:#030003'>EVT</span>,<span
style='color:blue'>class</span> <span style='color:#030003'>FSM</span>,<span
style='color:blue'>class</span> <span style='color:#030003'>SourceState</span>,<span
style='color:blue'>class</span> <span style='color:#030003'>TargetState</span>&gt;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:blue'>struct</span>
<span style='color:#030003'>transition_action_result</span> <o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:blue'>typedef</span> <span style='color:blue'>bool</span> <span
style='color:#030003'>type</span>;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>};<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:green'>//
this functor can be used in both modes, state action and transition action<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:blue'>typedef</span>
::<span style='color:#030003'>boost</span>::<span style='color:#030003'>mpl</span>::<span
style='color:#030003'>set</span>&lt;<span style='color:#030003'>state_action_tag</span>,<span
style='color:#030003'>action_tag</span>&gt; <span style='color:#030003'>tag_type</span>;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:green'>//
state action<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:blue'>template</span>
&lt;<span style='color:blue'>class</span> <span style='color:#030003'>Event</span>,<span
style='color:blue'>class</span> <span style='color:#030003'>FSM</span>,<span
style='color:blue'>class</span> <span style='color:#030003'>STATE</span>&gt;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:blue'>bool</span>
<span style='color:blue'>operator</span>()(<span style='color:#030003'>Event</span>
<span style='color:blue'>const</span>&amp;,<span style='color:#030003'>FSM</span>&amp;,<span
style='color:#030003'>STATE</span>&amp; )<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:green'>// does nothing<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:blue'>return</span> <span style='color:blue'>true</span>;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:green'>//
transition action<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:blue'>template</span>
&lt;<span style='color:blue'>class</span> <span style='color:#030003'>EVT</span>,<span
style='color:blue'>class</span> <span style='color:#030003'>FSM</span>,<span
style='color:blue'>class</span> <span style='color:#030003'>SourceState</span>,<span
style='color:blue'>class</span> <span style='color:#030003'>TargetState</span>&gt;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:blue'>bool</span>
<span style='color:blue'>operator</span>()(<span style='color:#030003'>EVT</span>
<span style='color:blue'>const</span>&amp; <span style='color:#030003'>evt</span>
,<span style='color:#030003'>FSM</span>&amp; ,<span style='color:#030003'>SourceState</span>&amp;
,<span style='color:#030003'>TargetState</span>&amp;)<span style='color:blue'>const<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:green'>// does nothing<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:blue'>return</span> <span style='color:blue'>true</span>;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>};</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Your functors will usually not need
this. You will only need these extra declarations if your functors are to be
used in combination with eUML functions (if_then_else_ , STL algorithms) or
operators returning a value (++, +=, etc.). If you simply need simple guards
/actions like [Condition1() &amp;&amp; Condition2()] / (Action1(),Action2()),
you do not need to declare the return type.<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>This declaration is not very nice
and you might want to have a look at <a href="#_Binding_to_a">a much easier way</a>
to build eUML functors.<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Adding_STL_support"></a><a name="_Adding_functional_programming"></a><span
lang=EN-US style='mso-ansi-language:EN-US'>Adding functional programming and
boost::phoenix-like STL support<o:p></o:p></span></h3>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>All objects do not use only standard
C++ operators. Soon, we will also need more complex code in our actions.
Therefore, eUML comes in with a lot of functors to simplify your day-to-day
programming. For almost every algorithm or container method of the STL, a
corresponding eUML function is defined. Like boost::phoenix, &#8220;.&#8221;
And &#8220;-&gt;&#8221; of call on objects are replaced by a functional
programming paradigm, for example:<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l25 level1 lfo37;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>begin_(container),
end_(container): returns iterators of a container.<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l25 level1 lfo37;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>empty_(container):
returns container.empty()<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l25 level1 lfo37;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>clear_(container):
container.clear()<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l25 level1 lfo37;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>transform_
: std::transform<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>In a nutshell, almost every STL
method or algorithm is matched by a corresponding functor, which can then be
used in the transition table or state actions. The following tables explain in
detail the possible argument combination and the underlying functor, so that
this possibility is not reserved to eUML but also to the functor-based
front-end previously explained.<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>The file structure of this
Phoenix-like library matches the one of Boost.Phoenix:<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>All STL functors are to be found in:<i
style='mso-bidi-font-style:normal'><o:p></o:p></i></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:36.45pt;margin-bottom:
0cm;margin-left:36.45pt;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='font-size:9.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-fareast-font-family:"Times New Roman";color:black;mso-ansi-language:EN'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:36.45pt;margin-bottom:
0cm;margin-left:36.45pt;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='font-size:11.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:black;mso-ansi-language:EN'>#include
&lt;msm/front/euml/algorithm.hpp&gt;<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='mso-ansi-language:EN'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>The algorithms are also divided into
sub-headers, matching the phoenix structure for simplicity:<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:36.45pt;margin-bottom:
0cm;margin-left:36.45pt;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='font-size:11.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:black;mso-ansi-language:EN'>#include &lt;
msm/front/euml/iteration.hpp&gt;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-top:12.0pt;margin-right:36.45pt;margin-bottom:
0cm;margin-left:36.45pt;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='font-size:11.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:black;mso-ansi-language:EN'>#include &lt;
msm/front/euml/transformation.hpp&gt;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-top:12.0pt;margin-right:36.45pt;margin-bottom:
0cm;margin-left:36.45pt;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='font-size:11.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:black;mso-ansi-language:EN'>#include &lt;
msm/front/euml/querying.hpp&gt;<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='mso-ansi-language:EN'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='mso-ansi-language:EN'>Container methods can be found in:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-top:12.0pt;margin-right:36.45pt;margin-bottom:
0cm;margin-left:36.45pt;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='font-size:11.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:black;mso-ansi-language:EN'>#include &lt; msm/front/euml/container.hpp&gt;<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='mso-ansi-language:EN'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='mso-ansi-language:EN'>Or one can simply include the whole STL
support (you will also need to include euml.hpp):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-top:12.0pt;margin-right:36.45pt;margin-bottom:
0cm;margin-left:36.45pt;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='font-size:11.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:black;mso-ansi-language:EN'>#include &lt;
msm/front/euml/stl.hpp&gt;<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='mso-ansi-language:EN'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='mso-ansi-language:EN'>The following tables illustrate the
supported algorithms and container methods:<o:p></o:p></span></p>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='mso-ansi-language:EN'><o:p>&nbsp;</o:p></span></p>

<table class=MsoTableLightListAccent1 border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none;mso-border-alt:solid #4F81BD 1.0pt;
 mso-border-themecolor:accent1;mso-yfti-tbllook:1184;mso-padding-alt:0cm 5.4pt 0cm 5.4pt'>
 <tr style='mso-yfti-irow:-1;mso-yfti-firstrow:yes'>
  <td width=437 valign=top style='width:261.95pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:solid #4F81BD 1.0pt;mso-border-left-themecolor:
  accent1;border-bottom:none;border-right:none;background:#4F81BD;mso-background-themecolor:
  accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:5'><b><span lang=EN style='color:
  white;mso-themecolor:background1;mso-ansi-language:EN'>STL functions in
  iteration.hpp<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;background:#4F81BD;mso-background-themecolor:
  accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:1'><b><span lang=EN style='color:
  white;mso-themecolor:background1;mso-ansi-language:EN'>eUML function<o:p></o:p></span></b></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:none;
  border-right:solid #4F81BD 1.0pt;mso-border-right-themecolor:accent1;
  background:#4F81BD;mso-background-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:1'><b><span lang=EN style='color:
  white;mso-themecolor:background1;mso-ansi-language:EN'>Functor<o:p></o:p></span></b></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:0'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>for_each(first, last, unary op)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>for_each_(first,last, unary op</span><span lang=EN style='mso-ascii-font-family:
  "Times New Roman";mso-ascii-theme-font:minor-fareast;mso-hansi-font-family:
  "Times New Roman";mso-hansi-theme-font:minor-fareast;mso-bidi-font-family:
  "Times New Roman";mso-bidi-theme-font:minor-fareast;mso-ansi-language:EN'>&#7491;</span><span
  lang=EN style='mso-ansi-language:EN'>)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>ForEach_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:1;mso-yfti-lastrow:yes'>
  <td width=437 valign=top style='width:261.95pt;border-top:none;border-left:
  solid #4F81BD 1.0pt;mso-border-left-themecolor:accent1;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>accumulate(first, last, init [,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;border-bottom:
  solid #4F81BD 1.0pt;mso-border-bottom-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>accumulate_(first,
  last, init [,op&#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border-top:none;border-left:
  none;border-bottom:solid #4F81BD 1.0pt;mso-border-bottom-themecolor:accent1;
  border-right:solid #4F81BD 1.0pt;mso-border-right-themecolor:accent1;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>Accumulate_<o:p></o:p></span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='mso-ansi-language:EN'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='mso-ansi-language:EN'><o:p>&nbsp;</o:p></span></p>

<table class=MsoTableLightListAccent1 border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none;mso-border-alt:solid #4F81BD 1.0pt;
 mso-border-themecolor:accent1;mso-yfti-tbllook:1184;mso-padding-alt:0cm 5.4pt 0cm 5.4pt'>
 <tr style='mso-yfti-irow:-1;mso-yfti-firstrow:yes'>
  <td width=437 valign=top style='width:261.95pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:solid #4F81BD 1.0pt;mso-border-left-themecolor:
  accent1;border-bottom:none;border-right:none;background:#4F81BD;mso-background-themecolor:
  accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:5'><b><span lang=EN style='color:
  white;mso-themecolor:background1;mso-ansi-language:EN'>STL functions in
  querying.hpp<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;background:#4F81BD;mso-background-themecolor:
  accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:1'><b><span lang=EN style='color:
  white;mso-themecolor:background1;mso-ansi-language:EN'>eUML function<o:p></o:p></span></b></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:none;
  border-right:solid #4F81BD 1.0pt;mso-border-right-themecolor:accent1;
  background:#4F81BD;mso-background-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:1'><b><span lang=EN style='color:
  white;mso-themecolor:background1;mso-ansi-language:EN'>Functor<o:p></o:p></span></b></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:0'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>find(first, last, value)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>find_(first, last, value)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Find_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:1'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>find_if(first, last, value)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>find_if_(first,
  last, value)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>FindIf_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:2'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>lower_bound(first, last, value[,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>lower_bound_(first, last, value [,op&#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>LowerBound_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:3'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>upper_bound(first, last, value[,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>upper_bound_(first,
  last, value [,op&#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>UpperBound_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:4'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>equal_range(first, last, value[,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>equal_range _(first, last, value [,op&#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>EqualRange_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:5'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>binary_search(first, last, value[,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>binary_search_(first,
  last, value [,op&#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>BinarySearch_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:6'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>min_element(first, last[,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>min_element_(first, last[,op&#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>MinElement_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:7'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>max_element(first, last[,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>max_element_(first,
  last[,op&#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>MaxElement_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:8'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>adjacent_find(first, last[,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>adjacent_find _(first, last[,op&#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>AdjacentFind_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:9'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>find_end(first1, last1, first2, last2 [,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>find_end_(
  first1, last1, first2, last2 [,op &#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>FindEnd_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:10'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>find_first_of(first1, last1, first2, last2
  [,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>find_first_of_( first1, last1, first2, last2 [,op &#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>FindFirstOf_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:11'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>equal(first1, last1, first2 [,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>equal_( first1,
  last1, first2 [,op &#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>Equal_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:12'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>search(first1, last1, first2, last2 [,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>search_( first1, last1, first2, last2 [,op &#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Search_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:13'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>includes(first1, last1, first2, last2 [,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>includes_(
  first1, last1, first2, last2 [,op &#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>Includes_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:14'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>lexicographical_compare<o:p></o:p></span></b></p>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>(first1, last1, first2, last2 [,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>lexicographical_compare_<o:p></o:p></span></p>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>( first1, last1, first2, last2 [,op &#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>LexicographicalCompare_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:15'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>count(first, last, value[,size])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>count_(first,
  last, value [,size])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>Count_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:16'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>count_if(first, last, op[,size])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>count_if_(first, last, op &#7491; [,size])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>CountIf_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:17'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>distance(first, last)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>distance_(first,
  last)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>Distance_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:18;mso-yfti-lastrow:yes'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>mismatch(first1, last1, first2 [,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>mismatch _( first1, last1, first2 [,op &#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Mismatch_<o:p></o:p></span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='mso-ansi-language:EN'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='mso-ansi-language:EN'><o:p>&nbsp;</o:p></span></p>

<table class=MsoTableLightListAccent1 border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none;mso-border-alt:solid #4F81BD 1.0pt;
 mso-border-themecolor:accent1;mso-yfti-tbllook:1184;mso-padding-alt:0cm 5.4pt 0cm 5.4pt'>
 <tr style='mso-yfti-irow:-1;mso-yfti-firstrow:yes'>
  <td width=437 valign=top style='width:261.95pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:solid #4F81BD 1.0pt;mso-border-left-themecolor:
  accent1;border-bottom:none;border-right:none;background:#4F81BD;mso-background-themecolor:
  accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:5'><b><span lang=EN style='color:
  white;mso-themecolor:background1;mso-ansi-language:EN'>STL functions in
  transformation.hpp<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;background:#4F81BD;mso-background-themecolor:
  accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:1'><b><span lang=EN style='color:
  white;mso-themecolor:background1;mso-ansi-language:EN'>eUML function<o:p></o:p></span></b></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:none;
  border-right:solid #4F81BD 1.0pt;mso-border-right-themecolor:accent1;
  background:#4F81BD;mso-background-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:1'><b><span lang=EN style='color:
  white;mso-themecolor:background1;mso-ansi-language:EN'>Functor<o:p></o:p></span></b></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:0'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>copy(first, last, result)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>copy_(first, last, result)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Copy_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:1'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>copy_backward(first, last, result)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>copy_backward_(first,
  last, result)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>CopyBackward_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:2'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>reverse(first, last)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>reverse_(first, last)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Reverse_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:3'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>reverse_copy(first, last,result)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>reverse_copy_(first,
  last , result)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>Reverse Copy_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:4'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>remove(first, last, value)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>remove_(first, last, value)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Remove_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:5'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>remove_if(first, last , op)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>remove_if_(first,
  last , op&#7491;)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>RemoveIf_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:6'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>remove_copy(first, last , output, value)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>remove_copy_(first, last , output, value)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>RemoveCopy_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:7'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>remove_copy_if(first, last, output, op)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>remove_copy_if_(first,
  last, output, op&#7491;)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>RemoveCopy If_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:8'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>fill(first, last, value)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>fill_(first, last, value)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Fill_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:9'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>fill_n(first, size, value)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>fill_n_(first,
  size, value)&#7495;<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>FillN_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:10'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>generate(first, last, generator)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>generate_(first, last, generator&#7491;)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Generate_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:11'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>generate_n(first, size, generator)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>generate_(first,
  size, generator&#7491;)&#7495;<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>GenerateN_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:12'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>unique(first, last [,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>unique_(first, last [,op&#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Unique_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:13'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>unique_copy(first, last, output [,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>unique_copy_(first,
  last, output [,op&#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>UniqueCopy_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:14'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>random_shuffle(first, last [,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>random_shuffle_(first, last [,op&#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>RandomShuffle_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:15'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>rotate_copy(first, middle, last, output)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>rotate_copy_(first,
  middle, last, output)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>RotateCopy_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:16'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>partition (first, last [,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>partition_ (first, last [,op&#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Partition_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:17'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>stable_partition (first, last [,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>stable_partition_
  (first, last [,op&#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>StablePartition_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:18'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>stable_sort(first, last [,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>stable_sort_(first, last [,op&#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>StableSort_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:19'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>sort(first, last [,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>sort_(first,
  last [,op&#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>Sort_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:20'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>partial_sort(first, middle, last [,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>partial_sort_(first, middle, last [,op&#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>PartialSort_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:21'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>partial_sort_copy<o:p></o:p></span></b></p>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>(first, last, res_first, res_last [,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>partial_sort_copy_<o:p></o:p></span></p>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>(first, last,
  res_first, res_last [,op&#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>PartialSortCopy_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:22'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>nth_element(first, nth, last [,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>nth_element_(first, nth, last [,op&#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>NthElement_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:23;height:23.35pt'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt;height:23.35pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>merge(first1, last1, first2, last2, output [,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt;
  height:23.35pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>merge_( first1,
  last1, first2, last2, output [,op &#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt;height:23.35pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>Merge_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:24'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>inplace_merge(first, middle, last [,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>inplace_merge_(first, middle, last [,op&#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>InplaceMerge_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:25'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>set_union(first1, last1, first2, last2, output [,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>set_union_(first1,
  last1, first2, last2, output [,op &#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>SetUnion_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:26'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>push_heap(first, last [,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>push_heap_(first, last [,op &#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>PushHeap_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:27'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>pop_heap(first, last [,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>pop_heap_(first,
  last [,op &#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>PopHeap_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:28'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>make_heap(first, last [,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>make_heap_(first, last [,op &#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>MakeHeap_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:29'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>sort_heap(first, last [,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>sort_heap_(first,
  last [,op &#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>SortHeap_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:30'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>next_permutation(first, last [,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>next_permutation_(first, last [,op &#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>NextPermutation_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:31'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>prev_permutation(first, last [,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>prev_permutation_(first,
  last [,op &#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>PrevPermutation_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:32'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>inner_product(first1, last1, first2, init <o:p></o:p></span></b></p>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>[,op1] [,op2])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>inner_product_(first1, last1, first2, init <o:p></o:p></span></p>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>[,op1&#7491;] [,op2&#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>InnerProduct_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:33'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>partial_sum(first, last, output [,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>partial_sum_(first,
  last, output [,op&#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>PartialSum_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:34'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>adjacent_difference(first, last, output [,op])<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>adjacent_difference_(first, last, output [,op&#7491;])<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>AdjacentDifference_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:35'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>replace(first, last, old_value, new_value)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>replace_(first,
  last, old_value, new_value)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>Replace_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:36'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>replace_if(first, last, op, new_value)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>replace_if_(first, last, op&#7491;, new_value)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>ReplaceIf_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:37'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>replace_copy(first, last, result, old_value, new_value)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>replace_copy_(first,
  last, result, old_value, new_value)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>ReplaceCopy_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:38'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>replace_copy_if(first, last, result, op,
  new_value)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>replace_copy_if_(first, last, result, op&#7491;, new_value)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>ReplaceCopyIf_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:39;mso-yfti-lastrow:yes'>
  <td width=437 valign=top style='width:261.95pt;border-top:none;border-left:
  solid #4F81BD 1.0pt;mso-border-left-themecolor:accent1;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>rotate(first, middle, last)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;border-bottom:
  solid #4F81BD 1.0pt;mso-border-bottom-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>rotate_(first, middle,
  last)&#7495;<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border-top:none;border-left:
  none;border-bottom:solid #4F81BD 1.0pt;mso-border-bottom-themecolor:accent1;
  border-right:solid #4F81BD 1.0pt;mso-border-right-themecolor:accent1;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>Rotate_<o:p></o:p></span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Some_Examples_with"></a><span lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<table class=MsoTableLightListAccent1 border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none;mso-border-alt:solid #4F81BD 1.0pt;
 mso-border-themecolor:accent1;mso-yfti-tbllook:1184;mso-padding-alt:0cm 5.4pt 0cm 5.4pt'>
 <tr style='mso-yfti-irow:-1;mso-yfti-firstrow:yes'>
  <td width=437 valign=top style='width:261.95pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:solid #4F81BD 1.0pt;mso-border-left-themecolor:
  accent1;border-bottom:none;border-right:none;background:#4F81BD;mso-background-themecolor:
  accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:5'><b><span lang=EN style='color:
  white;mso-themecolor:background1;mso-ansi-language:EN'>STL container
  methods(common) in container.hpp<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;background:#4F81BD;mso-background-themecolor:
  accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:1'><b><span lang=EN style='color:
  white;mso-themecolor:background1;mso-ansi-language:EN'>eUML function<o:p></o:p></span></b></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:none;
  border-right:solid #4F81BD 1.0pt;mso-border-right-themecolor:accent1;
  background:#4F81BD;mso-background-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:1'><b><span lang=EN style='color:
  white;mso-themecolor:background1;mso-ansi-language:EN'>Functor<o:p></o:p></span></b></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:0'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>front<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>container::reference front_(container)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Front_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:1'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>back<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>container::reference
  back_(container)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>Back_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:2'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>begin<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>container::iterator begin_(container)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Begin_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:3'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>end<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>container::iterator
  end_(container)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>End_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:4'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>rbegin<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>container::reverse_iterator rbegin_(container)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>RBegin_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:5'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>rend<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>container::reverse_iterator
  rend_(container)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>REnd_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:6'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>push_back<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>void push_back_(container, value)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Push_Back_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:7'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>pop_back<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>void
  pop_back_(container, value)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>Pop_Back_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:8'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>push_front<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>void push_front_(container, value)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Push_Front_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:9'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>pop_front<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>void
  pop_front_(container, value)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>Pop_Front_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:10'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>clear<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>void clear_(container)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Clear_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:11'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>capacity<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>size_type
  capacity_(container)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>Capacity_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:12'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>size<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>size_type size_(container)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Size_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:13'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>max_size<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>size_type
  max_size_(container)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>Max_Size_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:14'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>reserve<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>void reserve_(container, value)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Reserve _<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:15'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>resize<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>void
  resize_(container, value)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>Resize _<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:16'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>iterator insert(pos, const T&amp; value)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>iterator insert_(container, pos, value)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Insert_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:17'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>void insert(pos, first, last)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>void insert_(
  container , pos, first, last)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>Insert_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:18'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>void insert(pos, number ,<span
  style='mso-spacerun:yes'>&nbsp; </span>const T&amp; value)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>void insert_( container , pos, number, value)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Insert_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:19'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>void swap(other_container&amp;)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>void swap_(
  container , other_container)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>Swap_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:20'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>iterator erase(pos)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>void erase_( container , pos)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Erase_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:21'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>iterator erase(first, last)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>void erase_(
  container , first, last)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>Erase_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:22;mso-yfti-lastrow:yes'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>bool empty<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>bool empty_( container)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Empty_<o:p></o:p></span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<table class=MsoTableLightListAccent1 border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none;mso-border-alt:solid #4F81BD 1.0pt;
 mso-border-themecolor:accent1;mso-yfti-tbllook:1184;mso-padding-alt:0cm 5.4pt 0cm 5.4pt'>
 <tr style='mso-yfti-irow:-1;mso-yfti-firstrow:yes'>
  <td width=437 valign=top style='width:261.95pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:solid #4F81BD 1.0pt;mso-border-left-themecolor:
  accent1;border-bottom:none;border-right:none;background:#4F81BD;mso-background-themecolor:
  accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:5'><b><span lang=EN style='color:
  white;mso-themecolor:background1;mso-ansi-language:EN'>std::list methods in
  container.hpp<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;background:#4F81BD;mso-background-themecolor:
  accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:1'><b><span lang=EN style='color:
  white;mso-themecolor:background1;mso-ansi-language:EN'>eUML function<o:p></o:p></span></b></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:none;
  border-right:solid #4F81BD 1.0pt;mso-border-right-themecolor:accent1;
  background:#4F81BD;mso-background-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:1'><b><span lang=EN style='color:
  white;mso-themecolor:background1;mso-ansi-language:EN'>Functor<o:p></o:p></span></b></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:0'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>remove (const T&amp; value)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>void list_remove_(container, value)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>ListRemove_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:1'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>remove_if (op)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>void
  list_remove_if_(container, op&#7491;)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>ListRemove_If_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:2'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>merge(list&amp;)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>void list_merge_(container, other_list)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>ListMerge_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:3'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>merge(list&amp;, op)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>void
  list_merge_(container, other_list, op&#7491;)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>ListMerge_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:4'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>splice(iterator, list&amp;)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>void splice_(container, iterator, other_list)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Splice_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:5'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>splice(iterator, list&amp;, iterator)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>void
  splice_(container, iterator, other_list, iterator)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>Splice_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:6'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>splice(iterator, list&amp;, first, last)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>void splice_(container, iterator, other_list, first, last)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Splice_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:7'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>reverse<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>void
  list_reverse_(container)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>ListReverse_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:8'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>unique<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>void list_unique_(container)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>ListUnique_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:9'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>unique(op)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>void
  list_unique_(container, op&#7491;)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>ListUnique_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:10'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>sort<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>void list_sort_(container)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>ListSort_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:11;mso-yfti-lastrow:yes'>
  <td width=437 valign=top style='width:261.95pt;border-top:none;border-left:
  solid #4F81BD 1.0pt;mso-border-left-themecolor:accent1;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>sort(op)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;border-bottom:
  solid #4F81BD 1.0pt;mso-border-bottom-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>void
  list_sort_(container, op&#7491;)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border-top:none;border-left:
  none;border-bottom:solid #4F81BD 1.0pt;mso-border-bottom-themecolor:accent1;
  border-right:solid #4F81BD 1.0pt;mso-border-right-themecolor:accent1;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>ListSort _<o:p></o:p></span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<table class=MsoTableLightListAccent1 border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none;mso-border-alt:solid #4F81BD 1.0pt;
 mso-border-themecolor:accent1;mso-yfti-tbllook:1184;mso-padding-alt:0cm 5.4pt 0cm 5.4pt'>
 <tr style='mso-yfti-irow:-1;mso-yfti-firstrow:yes'>
  <td width=437 valign=top style='width:261.95pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:solid #4F81BD 1.0pt;mso-border-left-themecolor:
  accent1;border-bottom:none;border-right:none;background:#4F81BD;mso-background-themecolor:
  accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:5'><b><span lang=EN style='color:
  white;mso-themecolor:background1;mso-ansi-language:EN'>Associative container
  methods in container.hpp<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;background:#4F81BD;mso-background-themecolor:
  accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:1'><b><span lang=EN style='color:
  white;mso-themecolor:background1;mso-ansi-language:EN'>eUML function<o:p></o:p></span></b></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:none;
  border-right:solid #4F81BD 1.0pt;mso-border-right-themecolor:accent1;
  background:#4F81BD;mso-background-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:1'><b><span lang=EN style='color:
  white;mso-themecolor:background1;mso-ansi-language:EN'>Functor<o:p></o:p></span></b></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:0'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>iterator insert(pos, const T&amp; value)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>iterator insert_(container, pos, value)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Insert_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:1'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>void insert(first, last)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>void insert_(
  container , first, last)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>Insert_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:2'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>pair&lt;iterator, bool&gt; insert(const T&amp;
  value)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>pair&lt;iterator, bool&gt; insert_( container , value)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Insert_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:3'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>void erase(pos)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>void associative_erase_(
  container , pos)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>Associative_Erase_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:4'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>void erase(first, last)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>void associative_erase_( container , first, last)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Associative_Erase_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:5'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>size_type erase(const key_type&amp;)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>size_type
  associative_erase_( container , key)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>Associative_Erase_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:6'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>iterator find(const key_type&amp;)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>iterator associative_find_( container , key)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Associative_Find_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:7'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>size_type count(const key_type&amp;)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>size_type
  associative_count_( container , key)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>AssociativeCount_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:8'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>iterator lower_bound(const key_type&amp;)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>iterator associative_lower_bound_( container , key)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Associative_Lower_Bound_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:9'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>iterator upper_bound(const key_type&amp;)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>iterator
  associative_upper_bound_( container , key)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>Associative_Upper_Bound_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:10;mso-yfti-lastrow:yes'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>pair&lt;iterator, iterator&gt; equal_range(const
  key_type&amp;)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>pair&lt;iterator, iterator&gt; associative_equal_range_( container , key)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Associative_Equal_Range_<o:p></o:p></span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<table class=MsoTableLightListAccent1 border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none;mso-border-alt:solid #4F81BD 1.0pt;
 mso-border-themecolor:accent1;mso-yfti-tbllook:1184;mso-padding-alt:0cm 5.4pt 0cm 5.4pt'>
 <tr style='mso-yfti-irow:-1;mso-yfti-firstrow:yes'>
  <td width=437 valign=top style='width:261.95pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:solid #4F81BD 1.0pt;mso-border-left-themecolor:
  accent1;border-bottom:none;border-right:none;background:#4F81BD;mso-background-themecolor:
  accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:5'><b><span lang=EN style='color:
  white;mso-themecolor:background1;mso-ansi-language:EN'>std::pair in
  container.hpp<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;background:#4F81BD;mso-background-themecolor:
  accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:1'><b><span lang=EN style='color:
  white;mso-themecolor:background1;mso-ansi-language:EN'>eUML function<o:p></o:p></span></b></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:none;
  border-right:solid #4F81BD 1.0pt;mso-border-right-themecolor:accent1;
  background:#4F81BD;mso-background-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:1'><b><span lang=EN style='color:
  white;mso-themecolor:background1;mso-ansi-language:EN'>Functor<o:p></o:p></span></b></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:0'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>first<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>first_type first_(pair&lt;T1, T2&gt;)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>First_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:1;mso-yfti-lastrow:yes'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>second<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>second_type
  second_(pair&lt;T1, T2&gt;)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>Second_<o:p></o:p></span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<table class=MsoTableLightListAccent1 border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none;mso-border-alt:solid #4F81BD 1.0pt;
 mso-border-themecolor:accent1;mso-yfti-tbllook:1184;mso-padding-alt:0cm 5.4pt 0cm 5.4pt'>
 <tr style='mso-yfti-irow:-1;mso-yfti-firstrow:yes'>
  <td width=437 valign=top style='width:261.95pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:solid #4F81BD 1.0pt;mso-border-left-themecolor:
  accent1;border-bottom:none;border-right:none;background:#4F81BD;mso-background-themecolor:
  accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:5'><b><span lang=EN style='color:
  white;mso-themecolor:background1;mso-ansi-language:EN'>std::string method in
  container.hpp<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;background:#4F81BD;mso-background-themecolor:
  accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:1'><b><span lang=EN style='color:
  white;mso-themecolor:background1;mso-ansi-language:EN'>eUML function<o:p></o:p></span></b></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:none;
  border-right:solid #4F81BD 1.0pt;mso-border-right-themecolor:accent1;
  background:#4F81BD;mso-background-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:1'><b><span lang=EN style='color:
  white;mso-themecolor:background1;mso-ansi-language:EN'>Functor<o:p></o:p></span></b></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:0'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>substr (size_type<span
  style='mso-spacerun:yes'>&nbsp; </span>pos, size_type size)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>string substr_(container, pos, length)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Substr_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:1'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>int compare(string)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>int string_compare_(container,
  another_string)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>StringCompare_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:2'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>int compare(char*)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>int string_compare_(container, another_string)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>StringCompare_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:3'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>int compare(size_type<span style='mso-spacerun:yes'>&nbsp; </span>pos,
  size_type size, string)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>int
  string_compare_(container, pos, size,<span style='mso-spacerun:yes'>&nbsp;
  </span>another_string)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>StringCompare_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:4'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>int compare (size_type<span
  style='mso-spacerun:yes'>&nbsp; </span>pos, size_type size, string, size_type
  length)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>int string_compare_(container, pos, size,<span
  style='mso-spacerun:yes'>&nbsp; </span>another_string, length)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>StringCompare_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:5'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>string&amp; append(const string&amp;)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>string&amp; append_(container,
  another_string)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>Append_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:6'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>string&amp; append (charT*)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>string&amp; append_(container, another_string)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Append _<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:7'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>string&amp; append (string , size_type<span
  style='mso-spacerun:yes'>&nbsp; </span>pos, size_type size)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>string&amp;
  append_(container, other_string, pos, size)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>Append _<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:8'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>string&amp; append (charT*, size_type size)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>string&amp; append_(container, another_string, length)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Append _<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:9'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>string&amp; append (size_type size, charT)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>string&amp;
  append_(container, size,<span style='mso-spacerun:yes'>&nbsp; </span>char)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>Append _<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:10'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>string&amp; append (iterator begin, iterator
  end)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>string&amp; append_(container, begin, end)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>Append _<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:11'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>string&amp; insert (size_type pos, charT*)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>string&amp;
  string_insert_(container, pos, other_string)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>StringInsert_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:12'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>string&amp; insert(size_type pos,
  charT*,size_type n)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>string&amp; string_insert_(container, pos, other_string, n)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>StringInsert_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:13'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>string&amp; insert(size_type pos,size_type n, charT c)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>string&amp;
  string_insert_(container, pos, n, c)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>StringInsert_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:14'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>string&amp; insert (size_type pos, const
  string&amp;)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>string&amp; string_insert_(container, pos, other_string)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>StringInsert_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:15'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>string&amp; insert (size_type pos, const string&amp;, size_type pos1,
  size_type n)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>string&amp;
  string_insert_(container, pos, other_string, pos1, n)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>StringInsert_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:16'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>string&amp; erase(size_type pos=0, size_type
  n=npos)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>string&amp; string_erase_(container, pos, n)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>StringErase_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:17'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>string&amp; assign(const string&amp;)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>string&amp;
  string_assign_(container, another_string)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>StringAssign_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:18'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>string&amp; assign(const charT*)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>string&amp; string_assign_(container, another_string)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>StringAssign_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:19'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>string&amp; assign(const string&amp;, size_type pos, size_type n)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>string&amp;
  string_assign_(container, another_string, pos, n)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>StringAssign_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:20'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>string&amp; assign(const charT*, size_type n)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>string&amp; string_assign_(container, another_string, n)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>StringAssign_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:21'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>string&amp; assign(size_type n, charT c)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>string&amp;
  string_assign_(container, n, c)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>StringAssign_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:22'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>string&amp; assign(iterator first, iterator
  last)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>string&amp; string_assign_(container, first, last)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>StringAssign_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:23'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>string&amp; replace(size_type pos, size_type n, const string&amp;)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>string&amp;
  string_replace_(container, pos, n, another_string)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>StringReplace_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:24'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>string&amp; replace(size_type pos, size_type n,
  const charT*, size_type n1)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>string&amp; string_replace_(container, pos, n, another_string, n1)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>StringReplace_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:25'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>string&amp; replace(size_type pos, size_type n, const charT*)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>string&amp;
  string_replace_(container, pos, n, another_string)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>StringReplace_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:26'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>string&amp; replace(size_type pos, size_type n,
  size_type n1, charT c)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>string&amp; string_replace_(container, pos, n, n1, c)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>StringReplace_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:27'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>string&amp; replace(iterator first, iterator last, const string&amp;)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>string&amp;
  string_replace_(container, first, last, another_string)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>StringReplace_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:28'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>string&amp; replace(iterator first, iterator
  last, const charT*, size_type n)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>string&amp; string_replace_(container, first, last, another_string, n)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>StringReplace_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:29'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>string&amp; replace(iterator first, iterator last, const charT*)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>string&amp; string_replace_(container,
  first, last, another_string)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>StringReplace_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:30'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>string&amp; replace(iterator first, iterator
  last, size_type n, charT c)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>string&amp; string_replace_(container, first, last, n, c)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>StringReplace_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:31'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>string&amp; replace(iterator first, iterator last, iterator f, iterator
  l)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>string&amp;
  string_replace_(container, first, last, f, l)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>StringReplace_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:32'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>const charT* c_str()<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>const charT* c_str_(container)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>CStr_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:33'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>const charT* data()<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>const charT* string_data_(container)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>StringData_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:34'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>size_type copy(charT* buf, size_type n,
  size_type pos = 0)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>size_type string_copy_(container, buf, n, pos)<o:p></o:p></span></p>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>size_type string_copy_(container, buf, n)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>StringCopy_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:35'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>size_type find(charT* s, size_type pos, size_type n)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>size_type
  string_find_(container, s, pos, n)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>StringFind_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:36'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>size_type find(charT* s, size_type pos=0)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>size_type string_find_(container, s, pos)<o:p></o:p></span></p>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>size_type string_find_(container, s)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>StringFind_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:37'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>size_type find(const string&amp; s, size_type pos=0)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>size_type
  string_find_(container, s, pos)<o:p></o:p></span></p>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>size_type
  string_find_(container, s)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>StringFind_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:38'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>size_type find(charT c, size_type pos=0)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>size_type string_find_(container, c, pos)<o:p></o:p></span></p>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>size_type string_find_(container, c)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>StringFind_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:39'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>size_type rfind(charT* s, size_type pos, size_type n)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>size_type
  string_rfind_(container, s, pos, n)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>StringRFind_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:40'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>size_type rfind(charT* s, size_type pos=npos)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>size_type string_rfind_(container, s, pos)<o:p></o:p></span></p>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>size_type string_rfind_(container, s)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>StringRFind_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:41'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>size_type rfind(const string&amp; s, size_type pos=npos)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>size_type
  string_rfind_(container, s, pos)<o:p></o:p></span></p>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>size_type
  string_rfind_(container, s)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>StringRFind_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:42'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>size_type rfind(charT c, size_type pos=npos)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>size_type string_rfind_(container, c, pos)<o:p></o:p></span></p>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>size_type string_rfind_(container, c)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>StringRFind_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:43'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>size_type find_first_of(charT* s, size_type pos, size_type n)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>size_type
  find_first_of_(container, s, pos, n)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>StringFindFirstOf_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:44'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>size_type find_first_of (charT* s, size_type
  pos=0)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>size_type find_first_of_(container, s, pos)<o:p></o:p></span></p>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>size_type find_first_of_(container, s)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>StringFindFirstOf_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:45'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>size_type find_first_of (const string&amp; s, size_type pos=0)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>size_type find_first_of_(container,
  s, pos)<o:p></o:p></span></p>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>size_type
  find_first_of_(container, s)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>StringFindFirstOf_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:46'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>size_type find_first_of (charT c, size_type
  pos=0)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>size_type find_first_of_(container, c, pos)<o:p></o:p></span></p>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>size_type find_first_of_(container, c)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>StringFindFirstOf_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:47'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>size_type find_first_not_of(charT* s, size_type pos, size_type n)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>size_type
  find_first_not_of_(container, s, pos, n)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>StringFindFirstNotOf_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:48'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>size_type find_first_not_of (charT* s, size_type
  pos=0)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>size_type find_first_not_of_(container, s, pos)<o:p></o:p></span></p>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>size_type find_first_not_of_(container, s)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>StringFindFirstNotOf_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:49'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>size_type find_first_not_of (const string&amp; s, size_type pos=0)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>size_type
  find_first_not_of_(container, s, pos)<o:p></o:p></span></p>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>size_type
  find_first_not_of_(container, s)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>StringFindFirstNotOf_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:50'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>size_type find_first_not_of (charT c, size_type
  pos=0)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>size_type find_first_not_of_(container, c, pos)<o:p></o:p></span></p>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>size_type find_first_not_of_(container, c)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>StringFindFirstNotOf_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:51'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>size_type find_last_of(charT* s, size_type pos, size_type n)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>size_type find_last_of_(container,
  s, pos, n)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>StringFindLastOf_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:52'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>size_type find_last_of (charT* s, size_type
  pos=npos)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>size_type find_last_of_(container, s, pos)<o:p></o:p></span></p>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>size_type find_last_of_(container, s)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>StringFindLastOf_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:53'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>size_type find_last_of (const string&amp; s, size_type pos=npos)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>size_type
  find_last_of_(container, s, pos)<o:p></o:p></span></p>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>size_type
  find_last_of_(container, s)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>StringFindLastOf_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:54'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>size_type find_last_of (charT c, size_type
  pos=npos)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>size_type find_last_of_(container, c, pos)<o:p></o:p></span></p>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>size_type find_last_of_(container, c)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>StringFindLastOf_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:55'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>size_type find_last_not_of(charT* s, size_type pos, size_type n)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>size_type
  find_last_not_of_(container, s, pos, n)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>StringFindLastNotOf_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:56'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>size_type find_last_not_of (charT* s, size_type pos=npos)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>size_type find_last_not_of_(container, s, pos)<o:p></o:p></span></p>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>size_type find_last_of_(container, s)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>StringFindLastNotOf_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:57'>
  <td width=437 valign=top style='width:261.95pt;border:none;border-left:solid #4F81BD 1.0pt;
  mso-border-left-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:4'><b><span lang=EN style='mso-ansi-language:
  EN'>size_type find_last_not_of (const string&amp; s, size_type pos=npos)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>size_type
  find_last_not_of_(container, s, pos)<o:p></o:p></span></p>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>size_type find_last_not_of_(container,
  s)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:none;border-right:solid #4F81BD 1.0pt;
  mso-border-right-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN style='mso-ansi-language:EN'>StringFindLastNotOf_<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:58;mso-yfti-lastrow:yes'>
  <td width=437 valign=top style='width:261.95pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:68'><b><span lang=EN
  style='mso-ansi-language:EN'>size_type find_last_not_of (charT c, size_type
  pos=npos)<o:p></o:p></span></b></p>
  </td>
  <td width=437 valign=top style='width:262.25pt;border-top:solid #4F81BD 1.0pt;
  mso-border-top-themecolor:accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;
  mso-border-bottom-themecolor:accent1;border-right:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>size_type find_last_not_of_(container, c, pos)<o:p></o:p></span></p>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>size_type find_last_not_of_(container, c)<o:p></o:p></span></p>
  </td>
  <td width=248 valign=top style='width:148.85pt;border:solid #4F81BD 1.0pt;
  mso-border-themecolor:accent1;border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='mso-yfti-cnfc:64'><span lang=EN style='mso-ansi-language:
  EN'>StringFindLastNotOf_<o:p></o:p></span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Notes:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='mso-ansi-language:EN'>&#7491;: algorithms requiring a predicate
need to make them eUML compatible by wrapping them inside a Predicate_ functor.
For example, std::less&lt;int&gt; =&gt; Predicate_&lt;std::less&lt;int&gt;
&gt;()<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='mso-ansi-language:EN'>&#7495;: If using the SGI STL
implementation, these functors use the SGI return value.</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<h3 style='text-align:justify;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Binding_to_a"></a><span lang=EN-US style='mso-ansi-language:EN-US'>Binding
to a function or method<o:p></o:p></span></h3>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Boost::phoenix/bind/lambda provide a
way of binding a function to some arguments. <o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>It is hard to provide the exact same
functionality compile-time (I&#8217;ll be grateful for a solution though).
Furthermore, bind does not fit well into the nice flow of functional
programming and are usually not incredibly readable. On the other hand,
providing wrappers around all STL methods or algorithms will hardly be
sufficient. At some point, a user will want to call his own functions / methods
inside his transition table or state action.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>EUML provides two macros (sorry
about that) to convert a function or method into a eUML-compatible functor for
use in action / guard declarations.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Let&#8217;s suppose we wrote a function
printing the typeid of its parameter:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>template</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> &lt;<span
style='color:blue'>class</span> <span style='color:#030003'>T</span>&gt;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>int</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>do_print</span>(<span style='color:#030003'>T</span>&amp;
<span style='color:#030003'>t</span> ) {<span style='color:#030003'>std</span>::<span
style='color:#030003'>cout</span> &lt;&lt; <span style='color:#A31515'>&quot;print(T):&quot;</span>
&lt;&lt; <span style='color:blue'>typeid</span>(<span style='color:#030003'>T</span>).<span
style='color:#030003'>name</span>() &lt;&lt; <span style='color:#030003'>std</span>::<span
style='color:#030003'>endl</span>;<span style='color:blue'>return</span> 1;}<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>We can create a functor from it:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>MSM_EUML_FUNCTION</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>(<span
style='color:#030003'>PrintState_</span> , <span style='color:#030003'>do_print</span>
, <span style='color:#030003'>print_</span> , <span style='color:blue'>int</span>
, <span style='color:blue'>int</span> )</span><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>This creates from the function </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>do_print</span><span
lang=EN-US style='mso-ansi-language:EN-US'> (the second argument), a functor </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>PrintState_</span><span
lang=EN-US style='mso-ansi-language:EN-US'> (the first argument) and an eUML
function </span><span lang=EN-US style='font-family:"Courier New";mso-ansi-language:
EN-US'>print_</span><span lang=EN-US style='mso-ansi-language:EN-US'> (the
third argument). The 2 ints declare the return value of the function in the
context of a transition and of a state action. We now have valid eUML functors
and can use them, for example in a state action:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>typedef</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>BOOST_TYPEOF</span>(<span style='color:#030003'>build_state</span>(
(<span style='color:#030003'>print_</span>(<span style='color:#030003'>state_</span>()),NoAction()
)) SomeState;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>This declares a state printing its
own name at each entry.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>We can also enable methods to play
with eUML. Let&#8217;s have a look at the following event:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>typedef</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>BOOST_TYPEOF</span>(<span style='color:#030003'>build_attributes</span>(<span
style='color:#030003'>attributes_</span> &lt;&lt; <span style='color:#030003'>string</span>()<span
style='color:green'>/*m_song*/</span> )) <span style='color:#030003'>FoundDef</span>;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>struct</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>Found</span> : <span style='color:#030003'>euml_event</span>&lt;<span
style='color:#030003'>Found</span>&gt;,<span style='color:#030003'>FoundDef<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>{<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:blue'>int</span>
<span style='color:#030003'>foo</span>()<span style='color:blue'>const</span> {<span
style='color:#030003'>std</span>::<span style='color:#030003'>cout</span>
&lt;&lt; <span style='color:#A31515'>&quot;foo()&quot;</span> &lt;&lt; <span
style='color:#030003'>std</span>::<span style='color:#030003'>endl</span>; <span
style='color:blue'>return</span> 0;}<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:blue'>int</span>
<span style='color:#030003'>foo</span>(<span style='color:blue'>int</span> <span
style='color:#030003'>i</span>)<span style='color:blue'>const</span> {<span
style='color:#030003'>std</span>::<span style='color:#030003'>cout</span>
&lt;&lt; <span style='color:#A31515'>&quot;foo(int):&quot;</span> &lt;&lt; <span
style='color:#030003'>i</span> &lt;&lt; <span style='color:#030003'>std</span>::<span
style='color:#030003'>endl</span>; <span style='color:blue'>return</span> 1;}<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span style='color:blue'>int</span>
<span style='color:#030003'>foo</span>(<span style='color:blue'>int</span> <span
style='color:#030003'>i</span>,<span style='color:blue'>int</span> <span
style='color:#030003'>j</span>)<span style='color:blue'>const</span> {<span
style='color:#030003'>std</span>::<span style='color:#030003'>cout</span>
&lt;&lt; <span style='color:#A31515'>&quot;foo(int,int):&quot;</span> &lt;&lt; <span
style='color:#030003'>i</span> &lt;&lt;<span style='color:#A31515'>&quot;,&quot;</span>
&lt;&lt; <span style='color:#030003'>j</span> &lt;&lt; <span style='color:#030003'>std</span>::<span
style='color:#030003'>endl</span>; <span style='color:blue'>return</span> 2;}<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>};</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>This event declares three overloaded
foo methods. We enable all three for eUML:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>MSM_EUML_METHOD</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>(<span
style='color:#030003'>FoundFoo_</span> , <span style='color:#030003'>foo</span>
, <span style='color:#030003'>foo_</span> , <span style='color:blue'>int</span>
, <span style='color:blue'>int</span> )</span><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>And can now use them, for example:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>typedef</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>BOOST_TYPEOF</span>(<span style='color:#030003'>build_state</span>(
(<span style='color:#030003'>foo_</span>(<span style='color:#030003'>event_</span>(),<span
style='color:#030003'>Int_</span>&lt;0&gt;()),NoAction() )) SomeState;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>This will call the second version of
foo.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>We can also call the third version:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>typedef</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>BOOST_TYPEOF</span>(<span style='color:#030003'>build_state</span>(
(<span style='color:#030003'>foo_</span>(<span style='color:#030003'>event_</span>(),<span
style='color:#030003'>Int_</span>&lt;0&gt;(),<span style='color:#030003'>Int_</span>&lt;0&gt;()),NoAction()
)) SomeState;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>We now have a way to bind a method
of an event, state or state machine or a simple function with a nicer syntax than
a normal bind.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Some_Examples_with_1"></a><span lang=EN-US style='mso-ansi-language:
EN-US'>Some examples with eUML<o:p></o:p></span></h3>

<p style='margin-bottom:0cm;margin-bottom:.0001pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>A few concrete examples also make
use of the possibilities offered by eUML and are provided to help you master
these new concepts faster:<o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l25 level1 lfo37;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="SimpleTutorialEuml.cpp">an eUML version of the simple tutorial</a><o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l25 level1 lfo37;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="CompositeTutorialEuml.cpp">an eUML version of the composite tutorial</a><o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l25 level1 lfo37;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="DirectEntryEuml.cpp">an eUML version of the entry tutorial</a><o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l25 level1 lfo37;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="FlagsTutorialEuml.cpp">an eUML version of the flags tutorial</a><o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l25 level1 lfo37;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="HistoryEuml.cpp">an eUML version of the history tutorial</a><o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l25 level1 lfo37;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="OrthogonalDeferredEuml.cpp">an eUML version of the orthogonal-deferred
tutorial</a><o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l25 level1 lfo37;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="AnonymousTutorialEuml.cpp">an eUML version of anonymous transitions</a><o:p></o:p></span></p>

<p style='margin-top:5.0pt;margin-right:0cm;margin-bottom:0cm;margin-left:36.0pt;
margin-bottom:.0001pt;text-indent:-18.0pt;mso-list:l25 level1 lfo37;tab-stops:
45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'><a
href="#_EUML_Case_Studies">a few case studies (timer, algorithm implementation
as a state machine)</a><o:p></o:p></span></p>

<h1 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Performance"></a><span lang=EN-US style='mso-ansi-language:EN-US'>Performance</span><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US'><o:p></o:p></span></h1>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Tests were made on different PCs
running Windows XP and Vista and compiled with VC9 SP1 or Ubuntu and compiled
with g++ 4.2 and 4.3.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>For these tests, the same player
state machine was written using Boost.Statechart, as a <a href="SC%20Simple.cpp">state
machine with only simple states</a> and as a <a href="SC%20Composite.cpp">state
machine with a composite state</a>. <o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>The same <a href="MsmSimple.cpp">simple</a>
and <a href="MsmComposite.cpp">composite</a> state machines are implemented
with Msm2 with standard frontend, the simple one also with <a
href="EumlSimple.cpp">eUML</a>.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>As these simple machines need no terminate/interrupt
states, no message queue and have no-throw guarantee on their actions, the Msm
state machines are defined with minimum functionality.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>VC9:<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l10 level1 lfo38;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>The
simple test completes 36 times faster with Msm than with Boost.Statechart<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l10 level1 lfo38;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>The
composite test completes 18 times faster with Msm<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l10 level1 lfo38;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>The
fastest version is with eUML. It completes 47 times faster than
Boost.Statechart. A transition costs on my Q6600 9ns.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>gcc 4.2.3:<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l30 level1 lfo39;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>the
simple test completes 33 times faster with Msm<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l30 level1 lfo39;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>the
composite test completes 25 times faster with Msm<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<h1 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Executable size<o:p></o:p></span></h1>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>There are some worries that Msm
generates huge code. Is it true? It depends on the compiler. <o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>On VC9, the test state machines used
in the performance section produce executables of 14kB (for simple and eUML) and
21kB (for the composite). This includes the test code and iostreams. By
comparison, an empty executable with iostreams generated by VC9 has a size of
7kB. Boost.Statechart generates executables of 43kB and 54kB. As a bonus, eUML
comes for &#8220;free&#8221; in terms of executable size. You even get a speed
gain.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>With g++, it seems to be true, even
though I admit not being a g++ expert. A good size state machine can generate
an executable of 600kB, and with eUML you can get to 1.5MB. I tried with -O0 to
&#8211;O3 and did not manage to get it smaller. I&#8217;d be happy with some
help about how to make g++ come at a reasonable level.<o:p></o:p></span></p>

<h1 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Compilers"></a><span lang=EN-US style='mso-ansi-language:EN-US'>Compilers<o:p></o:p></span></h1>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Msm v2 was successfully tested with:<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l19 level1 lfo40;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>VC8,
VC9SP1, VC10 Beta1<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l19 level1 lfo40;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>g++
4.1 and higher<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l19 level1 lfo40;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Green
Hills Software MULTI for ARM v5.0.5 patch 4416 (Simple and Composite tutorials)<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>EUML will only work with:<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l19 level1 lfo40;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>VC8
(partly). You cannot, however use any overloaded function (like splice) and
compile times and RAM consumption explode.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l19 level1 lfo40;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>VC9SP1,
VC10 Beta1-2<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l19 level1 lfo40;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>g++
4.3 and higher (previous versions lack native typeof support)<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<h1 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Limitations"></a>Limitation</h1>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l33 level1 lfo41;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Compilation
times that are going to make you storm the CFO's office and make sure you get a
shiny octocore with 8GB RAM by next week, unless he's interested in paying you
watch the compiler agonize for hours... (Make sure you ask for dual 24&quot; as
well, it doesn't hurt).<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l33 level1 lfo41;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>eUML
allows very long constructs but will also quickly increase your compile time on
some compilers (VC9, VC10 Beta1) with buggy decltype support (I suspect some at
least quadratic algorithms there).<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l33 level1 lfo41;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Quick
need to overwrite the mpl::vector/list default-size-limit of 20 and fusion
default vector size of 10 if more than 10 states found in a state machine.<o:p></o:p></span></p>

<h1 style='margin-left:23.55pt;text-indent:-23.55pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:16.0pt;font-family:"Arial","sans-serif";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></h1>

<h1 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Compilers&#8217; corner<o:p></o:p></span></h1>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Compilers are sometimes full of
surprises and such strange errors happened in the course of the development
that I wanted to list the most fun for readers&#8217; entertainment.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='mso-ansi-language:EN-US'>VC8</span></u><span lang=EN-US
style='mso-ansi-language:EN-US'>:<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>template &lt;class StateType&gt;<br>
typename ::boost::enable_if&lt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; typename
::boost::mpl::and_&lt;typename ::boost::mpl::not_&lt;typename
has_exit_pseudo_states&lt;StateType&gt;::type&gt;::type,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span
style='mso-spacerun:yes'>&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>typename
::boost::mpl::not_&lt;typename is_pseudo_exit&lt;StateType&gt;::type&gt;::type<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &gt;::type,BaseState*&gt;::type<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>I get following error:<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>error C2770: invalid explicit
template argument(s) for '`global<br>
namespace'::boost::enable_if&lt;is_pseudo_exit&lt;StateType&gt;::type,BaseState*&gt;::type<br>
boost::msm::state_machine&lt;Derived,HistoryPolicy,BaseState&gt;::add_state&lt;ContainingSM&gt;::new_state_helper(boost::msm::dummy&lt;__formal&gt;)<br>
const'<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>If I now remove the first
&#8220;::&#8221; in ::boost::mpl , the compiler shuts up. So in this case, it
is not possible to follow Boost&#8217;s guidelines.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='mso-ansi-language:EN-US'>VC9</span></u><span lang=EN-US
style='mso-ansi-language:EN-US'>:<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l28 level1 lfo42;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>This one is my all times&#8217;
favorite. Do you know why the exit pseudo states are referenced in the
transition table with a &#8220;</span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>submachine::exit_pt</span><span lang=EN-US
style='mso-ansi-language:EN-US'>&#8221; ? Because &#8220;</span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>exit</span><span
lang=EN-US style='mso-ansi-language:EN-US'>&#8221; will crash the compiler.
&#8220;</span><span lang=EN-US style='font-family:"Courier New";mso-ansi-language:
EN-US'>Exit</span><span lang=EN-US style='mso-ansi-language:EN-US'>&#8221; is
not possible either because it will crash the compiler on one machine, but not
on another (the compiler was installed from the same disk).<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l28 level1 lfo42;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>If you look at the definition of
back::state_machine you will notice an extra template parameter named &#8220;</span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>WorkaroundVC9</span><span
lang=EN-US style='mso-ansi-language:EN-US'>&#8221;. It happened that when the
CopyPolicy was removed, the compiler crashed, asking to simplify the program,
which was simpler because with one less template argument. Note: VC10 beta
seems to have solved the problem.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l28 level1 lfo42;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Typeof: While g++ and VC9 compile
&#8220;standard&#8221; state machines in comparable times, Typeof (while in
both ways natively supported) seems to behave in a quadratic complexity with
VC9 and VC10.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='mso-ansi-language:EN-US'>g++ 4.x</span></u><span lang=EN-US
style='mso-ansi-language:EN-US'>:<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Boring compiler, almost all is
working almost as expected. Being not a language lawyer I am unsure about the
following case &#8220;<a href="#_Defining_a_state_1">Typeof problem</a>&#8221;.
VC9 and g++ disagree on the question if you can derive from the BOOST_TYPEOF
generated type without first defining a typedef. I will be thankful for an
answer on this.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>I only found two ways to break the
compiler:<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l36 level1 lfo48;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Add more eUML constructs until
something explodes. <o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l36 level1 lfo48;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>The </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>build_terminate</span><span
lang=EN-US style='mso-ansi-language:EN-US'> function uses 2 </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>mpl::push_back</span><span
lang=EN-US style='mso-ansi-language:EN-US'> instead of </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>mpl::insert_range</span><span
lang=EN-US style='mso-ansi-language:EN-US'> because g++ would not accept
insert_range.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>On the minus side, the generated
code seems to be huge compared to what VC generates.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>You can test your compiler&#8217;s
decltype implementation with <a href="CompilerStressTestEuml.cpp">the following
stress test</a> and reactivate the commented-out code until the compiler
crashes.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<h1 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Acknowledgments"></a>Acknowledgments</h1>

<h2 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Msm2:<o:p></o:p></span></h2>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l38 level1 lfo43;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>eUML
was made possible by Boost.Proto and Boost.Typeof<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l38 level1 lfo43;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Thanks
to Eric Niebler for his patience correcting my grammar errors<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l38 level1 lfo43;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Special
thanks to Joel de Guzman who gave me very good ideas at the BoostCon09. These
ideas were the starting point of the redesign. Any time again, Joel </span><span
lang=EN-US style='font-family:Wingdings;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";mso-ansi-language:EN-US;mso-char-type:
symbol;mso-symbol-font-family:Wingdings'><span style='mso-char-type:symbol;
mso-symbol-font-family:Wingdings'>J</span></span><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l38 level1 lfo43;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Thanks
to Richard O&#8217;Hara for making Green Hills bring a patch in less than 1
week, thus adding one more compiler to the supported list.<o:p></o:p></span></p>

<h2 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'>Msm1</h2>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l38 level1 lfo43;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>The
original version of this framework is based on the brilliant work of David
Abrahams and Aleksey Gurtovoy who laid down the base and the principles of the
framework in their excellent book, &#8220;C++ template Metaprogramming&#8221;.
The implementation also makes heavy use of the boost::mpl.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l38 level1 lfo43;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Thanks
to Jeff Flinn for his idea of the user-defined base state and his review which
allowed Msm to be presented at the BoostCon09.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l38 level1 lfo43;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Thanks
to my Msm v1beta testers, <a
href="mailto:woch%20AT%20hrz%20DOT%20tu%20MINUS%20chemnitz%20DOT%20de">Christoph
Woskowski</a> and <a href="mailto:f%20DOT%20alt%20AT%20gmx%20DOT%20net">Franz
Alt</a> for using the framework with little documentation and to my private
reviewer, <a
href="mailto:%20edouard%20DOT%20alligand%20AT%20bureau14%20DOT%20fr">Edouard
Alligand</a>.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<h1 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Used libraries:<o:p></o:p></span></h1>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt;mso-list:l4 level1 lfo44;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Boost::bind<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt;mso-list:l4 level1 lfo44;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Boost::mpl<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt;mso-list:l4 level1 lfo44;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Boost::fusion<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt;mso-list:l4 level1 lfo44;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Boost::proto<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt;mso-list:l4 level1 lfo44;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Boost::typeof<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt;mso-list:l4 level1 lfo44;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Boost:TypeTraits<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt;mso-list:l4 level1 lfo44;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Boost::utility<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt;mso-list:l4 level1 lfo44;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:
Symbol;mso-ansi-language:EN-US'><span style='mso-list:Ignore'>&middot;<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='mso-ansi-language:EN-US'>Boost::function<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<h1 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Questions_&amp;_Answers"></a>Questions &amp; Answers</h1>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='mso-ansi-language:EN-US'>Question</span></u><span lang=EN-US
style='mso-ansi-language:EN-US'>: on_entry gets as argument, the sent event.
What event do I get when the state becomes default-activated (because it is an
initial state)?<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='mso-ansi-language:EN-US'>Answer</span></u><span lang=EN-US
style='mso-ansi-language:EN-US'>: To allow you to know that the state was
default-activated, Msm generates a boost::msm::InitEvent default event.<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='mso-ansi-language:EN-US'>Question</span></u><span lang=EN-US
style='mso-ansi-language:EN-US'>: Why do I see no call to </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>no_transition</span><span
lang=EN-US style='mso-ansi-language:EN-US'> in my composite state?<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='mso-ansi-language:EN-US'>Answer</span></u><span lang=EN-US
style='mso-ansi-language:EN-US'>: Because of the priority rule defined by UML.
It says that in case of transition conflict, the most inner state has a higher
priority. So after asking the inner state, the containing composite has to be
also asked to handle the transition. So it makes more sense to call his </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>no_transition</span><span
lang=EN-US style='mso-ansi-language:EN-US'>.<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='mso-ansi-language:EN-US'>Question</span></u><span lang=EN-US
style='mso-ansi-language:EN-US'>: Why do I get a compile error saying the
compiler cannot convert to a function ...</span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>Fsm::*(some_event)</span><span
lang=EN-US style='mso-ansi-language:EN-US'>?<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='mso-ansi-language:EN-US'>Answer</span></u><span lang=EN-US
style='mso-ansi-language:EN-US'>: Probably you defined a transition triggered
by the event </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>some_event</span><span lang=EN-US style='mso-ansi-language:
EN-US'>, but used a guard/action method taking another event.<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='mso-ansi-language:EN-US'>Question</span></u><span lang=EN-US
style='mso-ansi-language:EN-US'>: Why do I get a compile error saying something
like &#8220;too few&#8221; or &#8220;too many&#8221; template arguments?<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='mso-ansi-language:EN-US'>Answer</span></u><span lang=EN-US
style='mso-ansi-language:EN-US'>: Probably you defined a transition in form of
a a_row where you wanted just a _row or the other way around.<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='mso-ansi-language:EN-US'>Question</span></u><span lang=EN-US
style='mso-ansi-language:EN-US'>: Why do I get a very long compile error when I
define more than 20 rows in the transition table?<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='mso-ansi-language:EN-US'>Answer</span></u><span lang=EN-US
style='mso-ansi-language:EN-US'>: Msm uses Boost.MPL under the hood and this is
the default maximum size. Please define the following 2 macros before including
any Msm headers:<o:p></o:p></span></p>

<div id=limit-vector-size>

<div id=configuration-limit-example><pre><span lang=EN-US style='mso-ansi-language:
EN-US'>#define BOOST_MPL_CFG_NO_PREPROCESSED_HEADERS<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'>#define BOOST_MPL_LIMIT_VECTOR_SIZE 30 // or whatever you need<o:p></o:p></span></pre><pre><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></pre></div>

</div>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='mso-ansi-language:EN-US'>Question</span></u><span lang=EN-US
style='mso-ansi-language:EN-US'>: Why do I get a very long compile error when I
define more than 10 states in a state machine?<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='mso-ansi-language:EN-US'>Answer</span></u><span lang=EN-US
style='mso-ansi-language:EN-US'>: Msm uses Boost.Fusion under the hood and this
is the default maximum size. Please define the following macro before including
any Msm headers:<o:p></o:p></span></p>

<pre><span lang=EN-US style='mso-ansi-language:EN-US'>#define FUSION_MAX_VECTOR_SIZE 20 // or whatever you need<o:p></o:p></span></pre>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='mso-ansi-language:EN-US'>Question</span></u><span lang=EN-US
style='mso-ansi-language:EN-US'>: why do I get this error with VC9? </span><span
lang=EN-US style='font-size:12.5pt;font-family:Consolas;mso-fareast-font-family:
"Times New Roman";mso-bidi-font-family:Consolas;mso-ansi-language:EN-US'>fatal
error C1060: compiler is out of heap space<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='mso-ansi-language:EN-US'>Answer:</span></u><span lang=EN-US
style='mso-ansi-language:EN-US'><span style='mso-spacerun:yes'>&nbsp;
</span>This is a compiler bug. For a workaround, check <a
href="#_Defining_a_composite">here</a>.<o:p></o:p></span></p>

<h1 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Case_Studies"></a><span lang=EN-US style='mso-ansi-language:EN-US'>Case
Studies<o:p></o:p></span></h1>

<h2 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><i><span
lang=EN-US style='font-size:14.0pt;font-family:"Arial","sans-serif";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US'>Explicit Entry vs Orthogonal zones<o:p></o:p></span></i></h2>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Let us try to implement the state
machine defined in a paper from David Harel (Figure 8 in <a
href="http://www.wisdom.weizmann.ac.il/~dharel/SCANNED.PAPERS/Statecharts.pdf">http://www.wisdom.weizmann.ac.il/~dharel/SCANNED.PAPERS/Statecharts.pdf</a>).<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>We will discuss here two possible
implementations. The first one, shown in the figure 8, is using the UML
equivalent of what Harel uses in this chart, explicit entries, described in a <a
href="#_The_many_ways">previous tutorial</a>.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Please have a look at the <a
href="HarelWithEntry.cpp">source code implementation with Msm</a>.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>The biggest advantage of using this
method is that the code is very simple and easy to understand.<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Now, this method has quite a few
disadvantages. <o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>First, we notice that
&#8220;alarm-beeps&#8221; has an implementation visible to the outside world.
This particularity is being used and this leads to three states with close
names, &#8220;alarm1 beeps&#8221;, &#8220;alarm2 beeps&#8221;, &#8220;both
beep&#8221;. If you think that this starts sounding like duplication of
information, you are not the only one. The second point is about design and
reuse. Let us imagine what could happen if Harel really was working for a
company producing watches.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l44 level1 lfo45;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Harel
would implement this state machine.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l44 level1 lfo45;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Some
time later, he would be asked to do the same for a new model of watch. But this
model would have 3 alarms.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l44 level1 lfo45;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Or
maybe 4 alarms?<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l44 level1 lfo45;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>The
alarm could be triggered with only a few seconds interval.<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Please keep in mind that these
companies produce hundreds of slightly different products, which makes this
quite a realistic scenario.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>What would be the result? New states
like &#8220;alarm3 beeps&#8221; or &#8220;three beep&#8221; + &#8220;both
beep&#8221; (backward compatibility). Maintenance would quickly become a
nightmare. The reason? A breach of encapsulation caused by &#8220;alarm
beeps&#8221; letting other state machines use its internals.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Luckily, UML provides not only the
dangerous explicit entry weapons but also some much more powerful ones, which
Msm also supports, for example orthogonal regions and instances of a same state
machine.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Let us redesign Alarm-Beeps by:<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l35 level1 lfo46;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Encapsulating
the alarm functionality in its own state (machine).<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l35 level1 lfo46;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Defining
orthogonal regions, one for each sub alarm instance. This way it can easily be
extended to support new alarms. This leads to the following diagram:<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="Grafik_x0020_5"
 o:spid="_x0000_i1029" type="#_x0000_t75" alt="clock.jpg" style='width:415.8pt;
 height:388.8pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="index-Dateien/image017.jpg" o:title="clock"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=554 height=518
src="index-Dateien/image035.jpg" alt=clock.jpg v:shapes="Grafik_x0020_5"><![endif]></span><span
lang=EN-US style='mso-ansi-language:EN-US'><br clear=left style='mso-special-character:
line-break'>
<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>As you see, it is quite simple. You
only need define an instance of Alarm in each zone. To add a new alarm is as
simple as adding a new instance. The Alarm submachine is simply defined as:<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="Grafik_x0020_6"
 o:spid="_x0000_i1028" type="#_x0000_t75" alt="alarm.jpg" style='width:350.4pt;
 height:229.2pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="index-Dateien/image019.jpg" o:title="alarm"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=467 height=306
src="index-Dateien/image036.jpg" alt=alarm.jpg v:shapes="Grafik_x0020_6"><![endif]></span><span
lang=EN-US style='mso-ansi-language:EN-US'><br clear=left style='mso-special-character:
line-break'>
<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>All what still has to be done is to
forward the event in the entry method of </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>alarmBeeps</span><span
lang=EN-US style='mso-ansi-language:EN-US'> to give each alarm instance a
chance to handle or reject the event in its </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>check_beep</span><span
lang=EN-US style='mso-ansi-language:EN-US'> guard condition.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>To make implementation easier, each
alarm is identified by a bit and </span><span lang=EN-US style='font-family:
"Courier New";mso-ansi-language:EN-US'>check_beep </span><span lang=EN-US
style='mso-ansi-language:EN-US'>is simply calling operator&amp; to decide if it
wants to accept the event.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>How are instances defined with Msm?
Msm knows only types, not instances, so you need to define Alarms with
different types, for example using a template type: <o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>template</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
&lt;</span><span lang=EN-US style='font-family:"Courier New";color:blue;
mso-ansi-language:EN-US'>int</span><span lang=EN-US style='font-family:"Courier New";
color:black;mso-ansi-language:EN-US'> Index&gt; </span><span lang=EN-US
style='font-family:"Courier New";color:blue;mso-ansi-language:EN-US'>struct</span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>
Alarm_ : public msm::front::state_machine_def&lt;Alarm&lt;Index&gt; &gt;<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>And identify each
instance in </span><span lang=EN-US style='font-family:"Courier New";
color:black;mso-ansi-language:EN-US'>alarmBeeps</span><span lang=EN-US
style='color:black;mso-ansi-language:EN-US'> as Alarm&lt;1&gt;, Alarm&lt;2&gt;,
etc.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>typedef
msm::back::state_machine&lt;Alarm_&lt;1&gt; &gt; Alarm1;<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>typedef
msm::back::state_machine&lt;Alarm_&lt;2&gt; &gt; Alarm2;<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>in the </span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>initial_state</span><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'> typedef of </span><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>alarmBeeps</span><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>, which can therefore do
without a single row in its transition table:<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>typedef
mpl::vector&lt;Alarm&lt;1&gt;,Alarm&lt;2&gt; &gt; initial_state;<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";color:black;mso-ansi-language:EN-US'>struct
mpl::vector&lt;Alarm1,Alarm2&gt; initial_state;<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>This way, if Harel ever needs to
support a third alarm, he simply needs a third entry in this typedef. Notice
how having front-ends and back-ends elegantly solves this problem while staying
generic. Notice also that it is now possible to have each alarm instance use
different history policies.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='color:black;mso-ansi-language:EN-US'>Please have a look at
the example <a href="HarelWithoutEntry.cpp">not using any explicit entry</a>.</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Which of both methods should you
use? It is a matter of taste and you will hear different opinions from
different designers. If you need something fast and with a short life cycle,
then you could consider the method with explicit entries. If you are more
interested in reusable design, then the method using instances is for you. The
personal preference of the author goes to, you guessed it, the second one.<o:p></o:p></span></p>

<h1 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_EUML_Case_Studies"></a><span lang=EN-US style='mso-ansi-language:EN-US'>eUML
Case Studies<o:p></o:p></span></h1>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Learning a new language is not
trivial, and as a few examples are better than 1000 words, let us try a few
concrete examples based on cases a bit less academic than the player examples.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>These case studies have two main
goals: show concrete examples of EUML to help users get to speed and provide
reasons why a model-based approach will help your reasoning.<o:p></o:p></span></p>

<h2 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_A_simple_Timer"></a><span lang=EN-US style='mso-ansi-language:EN-US'>A
simple timer<o:p></o:p></span></h2>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Let us imagine we get to implement a
piece of clock watch functionality, the countdown. We get the following
specification:<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt;mso-list:l25 level1 lfo37;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>When
the user enters a countdown value and presses the start button, the countdown
has to start. The sent event contains the countdown value </span>in<span
lang=EN-US style='mso-ansi-language:EN-US'> seconds<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt;mso-list:l25 level1 lfo37;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>When
the countdown is finished, the clock has to ring for exactly 5s.<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt;mso-list:l25 level1 lfo37;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>At
any time, the user can stop the countdown or ringing by pressing the stop
button.<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt;mso-list:l25 level1 lfo37;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>The
ringing can be stopped by pressing any button (start or stop)<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt;mso-list:l25 level1 lfo37;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>The
clock gets constant tick events. We unfortunately have an imprecise timer. To
compensate, the tick event will contain the time elapsed since last tick.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>The following UML diagram shows how
a UML designer might want to solve the problem (note, in UML, guards are
surrounded by &#8220;[ ]&#8221; and actions follow a &#8220; / &#8220;):<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="Grafik_x0020_7"
 o:spid="_x0000_i1027" type="#_x0000_t75" alt="Timer.jpg" style='width:445.8pt;
 height:471pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="index-Dateien/image021.jpg" o:title="Timer"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=594 height=628
src="index-Dateien/image037.jpg" alt=Timer.jpg v:shapes="Grafik_x0020_7"><![endif]></span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>In a nutshell, </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>Started</span><span
lang=EN-US style='mso-ansi-language:EN-US'> contains a counter, which is
initialized with the event countdown data (</span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>start_timer.m_timer</span><span
lang=EN-US style='mso-ansi-language:EN-US'>) in the action method (written after
a slash) of the transition fired by the </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>start_timer</span><span
lang=EN-US style='mso-ansi-language:EN-US'> event. <o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>While </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>Started</span><span
lang=EN-US style='mso-ansi-language:EN-US'> is active, it gets the tick events.
At every tick, the </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>m_counter</span><span lang=EN-US style='mso-ansi-language:
EN-US'> attribute of the state is decremented by the event </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>m_tick</span><span
lang=EN-US style='mso-ansi-language:EN-US'> value. When the counter is 0, a </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>start_ringing</span><span
lang=EN-US style='mso-ansi-language:EN-US'> event is triggered from inside the
transition and queued into the event queue of Msm. At the end of handling of
the </span><span lang=EN-US style='font-family:"Courier New";mso-ansi-language:
EN-US'>tick</span><span lang=EN-US style='mso-ansi-language:EN-US'> event, this
event is processed and </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>Ringing</span><span lang=EN-US style='mso-ansi-language:
EN-US'> becomes active. Notice how UML is now extended with C++ operator rules:
</span><span lang=EN-US style='font-family:"Courier New";mso-ansi-language:
EN-US'>Source.m_counter -= Event.m_tick</span><span lang=EN-US
style='mso-ansi-language:EN-US'> returns the new value </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>of Source.m_counter</span><span
lang=EN-US style='mso-ansi-language:EN-US'> which then gets compared to 0.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>We are now in </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>Ringing</span><span
lang=EN-US style='mso-ansi-language:EN-US'>, which now gets to process the </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>tick</span><span
lang=EN-US style='mso-ansi-language:EN-US'> events. Again, this state has a
counter, the counter is decremented by the </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>tick</span><span
lang=EN-US style='mso-ansi-language:EN-US'> value and if the counter is equal
to 0, we move back to </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>Stopped</span><span lang=EN-US style='mso-ansi-language:
EN-US'>. To avoid repeating the previous solution and for the extra fun, we use
another solution to the same problem, transition conflict. From </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>Ringing</span><span
lang=EN-US style='mso-ansi-language:EN-US'>, 2 transitions can handle the </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>tick</span><span
lang=EN-US style='mso-ansi-language:EN-US'> event. We therefore define 2
mutually exclusive guards: the one moving back to </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>Ringing</span><span
lang=EN-US style='mso-ansi-language:EN-US'> is true if </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>counter &#8211; tick
&gt; 0</span><span lang=EN-US style='mso-ansi-language:EN-US'> (and the counter
is then decremented by the tick value), the one moving back to </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>Stopped</span><span
lang=EN-US style='mso-ansi-language:EN-US'> is true if counter </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>&#8211;
tick &lt;= 0</span><span lang=EN-US style='mso-ansi-language:EN-US'>. <o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Otherwise, if any button
(start/stop) is pressed, we move back to </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>Stopped</span><span
lang=EN-US style='mso-ansi-language:EN-US'>.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Now, ideally, in a model-driven
approach, if a problem is solved by a design, the code should be equivalent.
But instead in most cases, a developer will have to understand this
specification and reimplement it in (hopefully) C++. This can lead to errors
and definitely leads to lost time.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>With eUML, the code is equivalent to
the model (and could be parsed back to the model if necessary). So let&#8217;s
go back to what we wrote in the model and analyze the conversion:<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt;mso-list:l25 level1 lfo37;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Target.m_counter
= Event.m_timer =&gt; </span><span lang=EN-US style='font-size:10.0pt;
font-family:"Courier New";mso-fareast-font-family:"Times New Roman";color:#030003;
mso-ansi-language:EN-US;mso-no-proof:yes'>Target_</span><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>&lt;<span style='color:#030003'>m_counter</span>&gt;()=
<span style='color:#030003'>Event_</span>&lt;<span style='color:#030003'>m_timer</span>&gt;()</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt;mso-list:l25 level1 lfo37;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>if
(Source.m_counter -= Event.m_tick) &lt;= 0 process (start_ringing) =&gt; </span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";color:#030003;mso-ansi-language:EN-US;mso-no-proof:yes'>if_then_</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'>( (<span
style='color:#030003'>Source_</span>&lt;<span style='color:#030003'>m_counter</span>&gt;()
-= <span style='color:#030003'>Event_</span>&lt;<span style='color:#030003'>m_tick</span>&gt;())
&lt;= <span style='color:#030003'>Int_</span>&lt;0&gt;(),<span
style='color:#030003'> process_</span>(<span style='color:#030003'>start_ringing</span>())
)</span><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'> </span><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt;mso-list:l25 level1 lfo37;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Target.m_ringing_counter
= RINGING_TIME =&gt; </span><span lang=EN-US style='font-size:10.0pt;
font-family:"Courier New";mso-fareast-font-family:"Times New Roman";color:#030003;
mso-ansi-language:EN-US;mso-no-proof:yes'>Target_</span><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>&lt;<span style='color:#030003'>m_ringing_cpt</span>&gt;()
= <span style='color:#030003'>Int_</span>&lt;<span style='color:#030003'>RINGING_TIME</span>&gt;()</span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt;mso-list:l25 level1 lfo37;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><![if !supportLists]><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US'><span style='mso-list:Ignore'>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>[
Source.m_ringing_cpt &#8211; Event.m_tick &gt; 0] / Source.m_ringing_cpt -=
Event.m_tick =&gt; </span><span lang=EN-US style='font-size:10.0pt;font-family:
"Courier New";mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'>[ <span style='color:#030003'>Source_</span>&lt;<span
style='color:#030003'>m_ringing_cpt</span>&gt;() - <span style='color:#030003'>Event_</span>&lt;<span
style='color:#030003'>m_tick</span>&gt;() &gt; <span style='color:#030003'>Int_</span>&lt;0&gt;()
] </span><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoListParagraphCxSpLast style='margin-left:460.8pt;mso-add-space:
auto;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp; </span>/ (<span style='color:#030003'>Source_</span>&lt;<span
style='color:#030003'>m_ringing_cpt</span>&gt;() -= <span style='color:#030003'>Event_</span>&lt;<span
style='color:#030003'>m_tick</span>&gt;() )</span><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>As you see, the conversion model to
code is pretty simple, thus reducing errors. And both models (UML model and
code) are equivalent, so it is easy to build a mapping function from one to the
other.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Of course, the <a
href="SimpleTimer.cpp">code example</a> is also provided.<o:p></o:p></span></p>

<h2 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_A_search_function"></a><span lang=EN-US style='mso-ansi-language:EN-US'>A
search function<o:p></o:p></span></h2>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>The previous example is a standard
application for state machines. But we want to push our model-driven approach
further by using a state machine to write an algorithm. I already see some at
the back of the room looking perplexed. Well, why not? Usually, UML designers
like to use Activity Diagrams to do this, but mostly for documentation purposes
because Activity Diagrams are hard to define with a precision needed for
automatic code generation. On the other hand, state machines have a very strict
formalism which enables code generation while being &#8220;cousin&#8221; with
Activity Diagrams.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Let&#8217;s suppose we are asked to
write the song function of an iPod. It is a pretty simple function: the
function takes as arguments the list of all songs and the letters typed by the
user so far and returns the matching songs (the ones containing the
user-provided letters).<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>The algorithm would be something
like:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>For each
song in the player<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span>If (song.find (letters) != npos)<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Result.push_back
(song)<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>We can also understand it as a kind
of </span><span lang=EN-US style='font-family:"Courier New";mso-ansi-language:
EN-US'>copy_if</span><span lang=EN-US style='mso-ansi-language:EN-US'>. <o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>We now want to do this using a
model-driven approach with state machines. I suggest the following machine:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="Grafik_x0020_8"
 o:spid="_x0000_i1026" type="#_x0000_t75" alt="iPodSearch.jpg" style='width:231pt;
 height:200.4pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="index-Dateien/image023.jpg" o:title="iPodSearch"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=308 height=267
src="index-Dateien/image038.jpg" alt=iPodSearch.jpg v:shapes="Grafik_x0020_8"><![endif]></span><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>Foreach</span><span
lang=EN-US style='mso-ansi-language:EN-US'> sends one </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>OneSong</span><span
lang=EN-US style='mso-ansi-language:EN-US'> event for every song of the song
list. If </span><span lang=EN-US style='font-family:"Courier New";mso-ansi-language:
EN-US'>StringFind</span><span lang=EN-US style='mso-ansi-language:EN-US'> finds
the user-provided letters in the song, it sends a </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>Found</span><span
lang=EN-US style='mso-ansi-language:EN-US'> event, if not a </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>NotFound</span><span
lang=EN-US style='mso-ansi-language:EN-US'>. When </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>Insert</span><span
lang=EN-US style='mso-ansi-language:EN-US'> becomes active, it inserts the song
into the result list.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>While this clearly intends to start building
an algorithm library, this example will be kept not generic to display the use
of eUML.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>We define in the state machine 2
containers, one with the input songs, and one with the result.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>In </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>Foreach</span><span
lang=EN-US style='mso-ansi-language:EN-US'> we add as attribute an iterator on
the input list.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>In </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>StringFind</span><span
lang=EN-US style='mso-ansi-language:EN-US'> we add as attribute a string (the
provided letters to search).<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>In </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>Insert</span><span
lang=EN-US style='mso-ansi-language:EN-US'> we define no attribute. The result
will be directly pushed into the second container of the state machine.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>The </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>OneSong</span><span
lang=EN-US style='mso-ansi-language:EN-US'>, </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>Found</span><span
lang=EN-US style='mso-ansi-language:EN-US'> and </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>NotFound</span><span
lang=EN-US style='mso-ansi-language:EN-US'> events will contain as attribute
the processed song.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>The complete algorithm will be
implemented in the entry actions of every state.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Foreach: </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>if (Foreach.iterator
!= Input.end()) process (OneSong)</span><span lang=EN-US style='mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>StringFind: if </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>(Event.attribute.find(State.attribute)
!= npos) process (Found); else process (NotFound);</span><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Insert: </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>Fsm.result.push_back(Event.attribute);
process(Done) ;</span><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>We can now implement this in eUML:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='mso-ansi-language:EN-US'>Foreach</span></u><span lang=EN-US
style='mso-ansi-language:EN-US'>: <o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>typedef</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>BOOST_TYPEOF</span>(<span style='color:#030003'>build_state</span>(
<span style='color:#030003'>if_then_</span>( <span style='color:#030003'>State_</span>&lt;<span
style='color:#030003'>m_src_it</span>&gt;() != <span style='color:#030003'>end_</span>(<span
style='color:#030003'>Fsm_</span>&lt;<span style='color:#030003'>m_src_container</span>&gt;()),<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
style='color:#030003'>process2_</span>(<span style='color:#030003'>OneSong</span>(),<span
style='color:#030003'>*</span>(<span style='color:#030003'>State_</span>&lt;<span
style='color:#030003'>m_src_it</span>&gt;()++)) ),<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='color:#030003'>NoAction</span>(), <o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='color:#030003'>attributes_</span> &lt;&lt; <span
style='color:#030003'>vector</span>&lt;<span style='color:#030003'>OneSong</span>&gt;::<span
style='color:#030003'>iterator</span>()<span style='color:green'>/*m_src_it*/</span>
)) <span style='color:#030003'>Foreach</span>;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>We define one attribute in Foreach, an
iterator on the Input list. <o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Entry:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span>State_ means &#8220;current
state&#8221;, so in this case Foreach. <o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>State_&lt;m_src_it&gt; (with m_src_it defined to be 0, so the first and
only attribute) refers to the iterator attribute.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span>Fsm_ refers to the current state machine
containing Input and Result lists.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Fsm_&lt;m_src_container&gt; refers to the Input list.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>end_(&#8230;) is
the past-the-end iterator on this Input list.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>&nbsp;</span><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>process2</span><span
lang=EN-US style='mso-ansi-language:EN-US'>_ deserves a bit of explanation.
There are 2 process functions. </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>process_(Event)</span><span lang=EN-US
style='mso-ansi-language:EN-US'> will call </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>process_event</span><span
lang=EN-US style='mso-ansi-language:EN-US'> on the state machine with a <i
style='mso-bidi-font-style:normal'>default-constructed</i> event. </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>process2_</span><span
lang=EN-US style='mso-ansi-language:EN-US'>(Event,Value) will process the event
initialized with the given value. This means that we are going to send an event
</span><span lang=EN-US style='font-family:"Courier New";mso-ansi-language:
EN-US'>OneSong</span><span lang=EN-US style='mso-ansi-language:EN-US'>
initialized with the value referenced by the iterator, which is afterwards
(post) incremented.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>So, every time </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>Foreach</span><span
lang=EN-US style='mso-ansi-language:EN-US'> will be entered, a song will be
sent as event, then the iterator incremented, until all songs are sent.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='mso-ansi-language:EN-US'>StringFind</span></u><span
lang=EN-US style='mso-ansi-language:EN-US'>:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>typedef</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>BOOST_TYPEOF</span>(<span style='color:#030003'>build_state</span>(
<span style='color:#030003'>if_then_else_</span>( <span style='color:#030003'>string_find_</span>(<span
style='color:#030003'>Event_</span>&lt;<span style='color:#030003'>m_song</span>&gt;(),<span
style='color:#030003'>State_</span>&lt;<span style='color:#030003'>m_letters</span>&gt;())
!= <span style='color:#030003'>Npos_</span>&lt;<span style='color:#030003'>string</span>&gt;()
,<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='color:#030003'>process2_</span>(<span style='color:#030003'>Found</span>(),<span
style='color:#030003'>Event_</span>&lt;<span style='color:#030003'>m_song</span>&gt;()),<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='color:#030003'>process2_</span>(<span style='color:#030003'>NotFound</span>(),<span
style='color:#030003'>Event_</span>&lt;<span style='color:#030003'>m_song</span>&gt;())
) ,<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
style='color:#030003'>NoAction</span>(), <o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='color:#030003'>attributes_</span> &lt;&lt; <span
style='color:#030003'>string</span>()<span style='color:green'>/*m_letters*/</span>
)) <o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='color:#030003'>StringFind</span>;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>StringFind</span><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'> is given as attribute the user-provided letters.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'>Entry:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'><span style='mso-spacerun:yes'>&nbsp;&nbsp; </span></span><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>string_find_(string, string)</span><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'> is a function which is going to look for the second
string in the first one. </span><span lang=EN-US style='font-family:"Courier New";
mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:
yes'>State_&lt;m_letters&gt;</span><span lang=EN-US style='mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> is the first and
only attribute of the </span><span lang=EN-US style='font-family:"Courier New";
mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:
yes'>StringFind</span><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'> state.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'><span style='mso-spacerun:yes'>&nbsp;&nbsp; </span>If
the string is found</span><span lang=EN-US style='font-family:"Courier New";
mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:
yes'>, process2_</span><span lang=EN-US style='mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'> will send a </span><span lang=EN-US
style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>Found</span><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'> event initialized with the incoming event&#8217;s (</span><span
lang=EN-US style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>OneSong</span><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'>) attribute (the song), a </span><span lang=EN-US
style='font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'>NotFound</span><span lang=EN-US
style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;
mso-no-proof:yes'> event otherwise.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><u><span
lang=EN-US style='mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-US;mso-no-proof:yes'>Insert:<o:p></o:p></span></u></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>typedef</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>BOOST_TYPEOF</span>(<span style='color:#030003'>build_state</span>(
(<span style='color:#030003'>push_back_</span>(<span style='color:#030003'>Fsm_</span>&lt;<span
style='color:#030003'>m_tgt_container</span>&gt;(),<span style='color:#030003'>Event_</span>&lt;<span
style='color:#030003'>m_song</span>&gt;()) ,<span style='color:#030003'>process_</span>(<span
style='color:#030003'>Done</span>())),<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='color:#030003'>NoAction</span>() )) <span style='color:
#030003'>Insert</span>;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>This state has no attribute and simply
calls the function </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>push_back_(container, element)</span><span lang=EN-US
style='mso-ansi-language:EN-US'> on the state machine&#8217;s result list, then
sends a Done event, thus moving back to Foreach, which will send the next song,
etc.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Notice the several statements (</span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>push_back_,
process_)</span><span lang=EN-US style='mso-ansi-language:EN-US'> enclosed
inside parenthesis to generate a sequence of actions.<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>The state machine only provides a
simple transition table corresponding to the diagram with Foreach as initial
state and defining a source and result container:<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:green;mso-ansi-language:EN-US;mso-no-proof:yes'>// replaces the old
transition table<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>typedef</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>BOOST_TYPEOF</span>(<span style='color:#030003'>build_stt<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>((<span style='color:#030003'>Foreach</span>()<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>+ <span
style='color:#030003'>OneSong</span>()<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>== <span
style='color:#030003'>StringFind</span>() ,<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:#030003'>StringFind</span>()<span style='mso-spacerun:yes'>&nbsp;
</span>+ <span style='color:#030003'>Found</span>()<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>== <span
style='color:#030003'>Insert</span>()<span style='mso-spacerun:yes'>&nbsp;
</span>,<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:#030003'>StringFind</span>()<span style='mso-spacerun:yes'>&nbsp;
</span>+ <span style='color:#030003'>NotFound</span>()<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>== <span style='color:#030003'>Foreach</span>()
,<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:#030003'>Insert</span>()<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>+ <span
style='color:#030003'>Done</span>()<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>== <span
style='color:#030003'>Foreach</span>()<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='color:green'>//<span style='mso-spacerun:yes'>&nbsp; </span>+------------------------------------------------------------------------------+<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>) ) ) <span style='color:#030003'>transition_table</span>;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:green;mso-ansi-language:EN-US;mso-no-proof:yes'>// create a state machine
&quot;on the fly&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
color:blue;mso-ansi-language:EN-US;mso-no-proof:yes'>typedef</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'> <span
style='color:#030003'>BOOST_TYPEOF</span>(<span style='color:#030003'>build_sm</span>(<span
style='mso-spacerun:yes'>&nbsp; </span><span style='color:#030003'>transition_table</span>(),
<span style='color:green'>//STT<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='color:#030003'>init_</span> &lt;&lt; <span
style='color:#030003'>Foreach</span>(), <span style='color:green'>// Init<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='color:#030003'>NoAction</span>(), <span style='color:green'>//
Entry<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='color:#030003'>NoAction</span>(), <span style='color:green'>//
Exit<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='color:#030003'>attributes_</span> &lt;&lt; <span
style='color:#030003'>vector</span>&lt;<span style='color:#030003'>OneSong</span>&gt;()
<span style='color:green'>/*m_src_container*/</span> <span style='color:green'>//
song list<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>&lt;&lt;
<span style='color:#030003'>vector</span>&lt;<span style='color:#030003'>OneSong</span>&gt;()
<span style='color:green'>/*m_tgt_container*/</span>, <span style='color:green'>//
result<o:p></o:p></span></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='color:#030003'>flags_</span>&lt;&lt; <span
style='color:#030003'>no_flags_</span>,<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='color:#030003'>defer_</span> &lt;&lt; <span
style='color:#030003'>no_defer_</span><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>)) <span style='color:#030003'>iPodSearch_</span>;<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-no-proof:yes'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>An <a href="iPodSearchEuml.cpp">example
program</a> is also provided.<o:p></o:p></span></p>

<h1 style='page-break-before:always;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Annex_A_Debugging"></a><span lang=EN-US style='font-size:16.0pt;
font-family:"Arial","sans-serif";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US'>Annex A Debugging<o:p></o:p></span></h1>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Normally, one does not need to know
the ids generated for all the states of a state machine, unless for debugging
purposes, like the </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>pstate</span><span lang=EN-US style='mso-ansi-language:
EN-US'> function does in the tutorials in order to display the name of the
current state. The next annex will show how to automatically display
typeid-generated names, but these are not very readable on all platforms, so it
can help to know how the ids are generated. <o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>The ids are generated using the
transition table, from the &#8220;Start&#8221; column up to down, then from the
&#8220;Next&#8221; column, up to down, as shown in the next image:<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='mso-no-proof:yes'><!--[if gte vml 1]><v:shape id="Grafik_x0020_9"
 o:spid="_x0000_i1025" type="#_x0000_t75" alt="AnnexA.jpg" style='width:598.2pt;
 height:384.6pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="index-Dateien/image025.jpg" o:title="AnnexA"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=798 height=513
src="index-Dateien/image039.jpg" alt=AnnexA.jpg v:shapes="Grafik_x0020_9"><![endif]></span><span
lang=EN-US style='mso-ansi-language:EN-US'><br clear=left style='mso-special-character:
line-break'>
<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>Stopped</span><span
lang=EN-US style='mso-ansi-language:EN-US'> will get id 0, </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>Open</span><span
lang=EN-US style='mso-ansi-language:EN-US'> id 1, </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>ErrorMode</span><span
lang=EN-US style='mso-ansi-language:EN-US'> id 6 and </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>SleepMode</span><span
lang=EN-US style='mso-ansi-language:EN-US'> (seen only in the &#8220;Next&#8221;
column) id 7.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>If you have some implicitly created
states, like transition-less initial states or states created using the </span><span
lang=EN-US style='font-family:"Courier New";mso-ansi-language:EN-US'>explicit_creation</span><span
lang=EN-US style='mso-ansi-language:EN-US'> typedef, these will be added as a
source at the end of the transition table.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>If you have composite states, a row will
be added for them at the end of the table, after the automatically or
explicitly created states, which can change their id.<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>The next help you will need for
debugging would be to call the </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>current_state</span><span lang=EN-US style='mso-ansi-language:
EN-US'> method of the </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>state_machine</span><span lang=EN-US style='mso-ansi-language:
EN-US'> class, then the </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>display_type</span><span lang=EN-US style='mso-ansi-language:
EN-US'> helper to generate a readable name from the id.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>If you do not want to go through the
transition table to fill an array of names, the library provides another
helper, </span><span lang=EN-US style='font-family:"Courier New";mso-ansi-language:
EN-US'>fill_state_names</span><span lang=EN-US style='mso-ansi-language:EN-US'>,
which, given an array of sufficient size (please see Annex B to know how many
states are defined in the state machine), will fill it with typeid-generated
names.<o:p></o:p></span></p>

<h1 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name="_Annex_B_Metaprogramming"></a><span lang=EN-US style='font-size:16.0pt;
font-family:"Arial","sans-serif";mso-fareast-font-family:"Times New Roman";
mso-ansi-language:EN-US'>Annex B Metaprogramming tools<o:p></o:p></span></h1>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>We can find for the transition table
even more uses than what we have seen so far. Let's suppose you need to write a
coverage tool. A state machine would be perfect for such a job, if only it
could provide some information about its structure. As a matter of fact, thanks
to the transition table and Boost.Mpl, it does.<o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>What would you need for a coverage
tool? You'd probably need to know how many states are defined in the state
machine, and how many events can be fired. This way you could log the fired
events and the states visited in the life of a concrete machine and be able to
perform some coverage analysis, like &#8220;fired 65% of all possible events
and visited 80% of the states defined in the state machine&#8221;.<o:p></o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>To achieve this, Msm provides a few
useful tools:<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l2 level1 lfo47;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>generate_state_set&lt;transition table&gt;</span><span
lang=EN-US style='mso-ansi-language:EN-US'>: returns a mpl::set of all the
states defined in the table.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l2 level1 lfo47;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>generate_event_set&lt;transition table&gt;</span><span
lang=EN-US style='mso-ansi-language:EN-US'>: returns a mpl::set of all the
events defined in the table.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l2 level1 lfo47;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Using
</span><span lang=EN-US style='font-family:"Courier New";mso-ansi-language:
EN-US'>mpl::size&lt;&gt;::value</span><span lang=EN-US style='mso-ansi-language:
EN-US'> you can get the number of elements in the set.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l2 level1 lfo47;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>display_type </span><span lang=EN-US style='mso-ansi-language:
EN-US'>defines an </span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>operator()</span><span lang=EN-US style='mso-ansi-language:
EN-US'> sending t</span><span lang=EN-US style='font-family:"Courier New";
mso-ansi-language:EN-US'>ypeid(Type).name() </span><span lang=EN-US
style='mso-ansi-language:EN-US'>to </span><span lang=EN-US style='font-family:
"Courier New";mso-ansi-language:EN-US'>cout</span><span lang=EN-US
style='mso-ansi-language:EN-US'>.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l2 level1 lfo47;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Using
a mpl::for_each on the result of </span><span lang=EN-US style='font-family:
"Courier New";mso-ansi-language:EN-US'>generate_state_set </span><span
lang=EN-US style='mso-ansi-language:EN-US'>and </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>generate_event_set </span><span
lang=EN-US style='mso-ansi-language:EN-US'>passing </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>display_type</span><span
lang=EN-US style='mso-ansi-language:EN-US'> as argument will display all the
states of the state machine.<o:p></o:p></span></p>

<p style='margin-left:36.0pt;text-indent:-18.0pt;mso-list:l2 level1 lfo47;
tab-stops:list 36.0pt'><![if !supportLists]><span lang=EN-US style='font-size:
10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;mso-ansi-language:EN-US'><span
style='mso-list:Ignore'>&middot;<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='mso-ansi-language:EN-US'>Let's
suppose you need even more and recursively find the states and events defined in
the composite states and thus also having a transition table. No problem!
Calling </span><span lang=EN-US style='font-family:"Courier New";mso-ansi-language:
EN-US'>recursive_get_transition_table&lt;Composite&gt;</span><span lang=EN-US
style='mso-ansi-language:EN-US'> will return you the transition table of the
composite state, recursively adding the transition tables of all sub-state
machines and sub-sub...-sub-state machines. Then call </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>generate_state_set </span><span
lang=EN-US style='mso-ansi-language:EN-US'>or </span><span lang=EN-US
style='font-family:"Courier New";mso-ansi-language:EN-US'>generate_event_set </span><span
lang=EN-US style='mso-ansi-language:EN-US'>on the result to get the full list
of states and events. <o:p></o:p></span></p>

<p style='margin-bottom:12.0pt;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Again, please have a look at the end
of <a href="SM-2Arg.cpp">this example</a> to see the tools in action.<o:p></o:p></span></p>

</div>

</body>

</html>
