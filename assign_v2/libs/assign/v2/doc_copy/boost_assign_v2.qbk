[library Boost.Assign
    [quickbook 1.5]
    [version 2.0]
    [authors [Thorsten, Ottosen],[Rogard, Erwann]]
    [copyright 2003-2004 Thorsten Ottosen, 2010 Erwann Rogard]
    [license
        Distributed under the Boost Software License, Version 1.0.
        (See accompanying file LICENSE_1_0.txt or copy at
        [@http://www.boost.org/LICENSE_1_0.txt])
    ]
    [id boost_assign_v2]
]

[/Support]

[def __TO__												[@http://www.boost.org/users/people/thorsten_ottosen.html TO]]
[def __ER__												[@mailto:erDOTciDOT2020ATgmailDOTcom ER]]

[template tpl_user_mailing_list[var]					[@http://www.boost.org/community/groups.html#users [var]]]
[def __user_mailing_list__      						[tpl_user_mailing_list Boost Users Mailing List]]
[def __url_boost_assign_v2_mini_review__ 				[@http://lists.boost.org/Archives/boost/2010/06/168028.php mini-review]]

[/ C++  ]

[def __cpp03__ 											C++03]
[def __cpp0x__ 											C++0x]
[template tpl_cpp03[var] 								[@http://en.wikipedia.org/wiki/C%2B%2B03 [var]]]
[template tpl_cpp0x[var] 								[@http://www2.research.att.com/~bs/C++0xFAQ.html [var]]]
[def __url_cpp03__ 										[tpl_cpp03 __cpp03__]]
[def __url_cpp0x__ 										[tpl_cpp0x __cpp0x__]]

[/ Platform]

[def __mac_os__ 										OS X 10.6.5]
[def __mac_default_compiler__ 							gcc4.2]
[def __mac_processor__ 									2.4 Ghz Intel Core 2 Duo]
[def __mac_mem__ 										4GB 1067 Mhz DDR3]
[def __fink__ 											Fink]
[template tpl_fink[var] 								[@http://www.finkproject.org/ [var]]]
[def __url_fink__ 										[tpl_fink __fink__]]

[/ Libraries ]

[def __callout__										[@http://www.boost.org/doc/libs/1_45_0/doc/html/quickbook/syntax.html#quickbook.syntax.phrase.anchors callout]]

[def __boost_assign_v1__ 								Boost.Assign 1.0]
[template tpl_boost_assign_v1[var] 						[@../../../../../libs/assign/doc/index.html [var]]]
[def __url_boost_assign_v1__ 							[tpl_boost_assign_v1 __boost_assign_v1__]]

[def __boost_assign_v2__ 								Boost.Assign 2.0]
[template tpl_boost_assign_v2[var] 						[@./index.html [var]]]
[def __url_boost_assign_v2__ 							[tpl_boost_assign_v2 __boost_assign_v2__]]

[def __boost__											Boost]
[template tpl_boost[var] 								[@http://www.boost.org [var]]]
[def __url_boost__ 										[tpl_boost __boost__]]

[template tpl_boost_array[var] 							[@http://www.boost.org/doc/libs/release/doc/html/array.html [var]]]

[template tpl_mpl[var] 									[@http://www.boost.org/libs/mpl/index.html [var]]]
[def __mpl__ 											[tpl_mpl MPL]]

[template tpl_stl[var] 									[@http://en.wikipedia.org/wiki/Standard_Template_Library [var]]]
[def __stl__ 											[tpl_stl STL]]

[template tpl_stl_assoc[var] 							[@http://www.sgi.com/tech/stl/AssociativeContainer.html [var]]]
[template tpl_stl_seq[var] 								[@http://www.sgi.com/tech/stl/Sequence.html [var]]]
[template tpl_stl_adapter[var]							[@http://flylib.com/books/en/2.674.1.106/1/ [var]]]
[template tpl_stl_deque[var] 							[@http://www.sgi.com/tech/stl/Deque.html [var]]]
[template tpl_stl_cont[var]								[@http://www.sgi.com/tech/stl/Container.html [var]]]

[template tpl_lambda[var] 								[@http://www.boost.org/doc/libs/release/doc/html/lambda.html [var]]]
[def __lambda__											[tpl_lambda lambda]]

[template tpl_ptr_container[var] 						[@http://www.boost.org/doc/libs/release/libs/ptr_container/doc/ptr_container.html [var]]]

[template tpl_range[var] 								[@http://www.boost.org/doc/libs/release/libs/range/index.html [var]]]
[template tpl_range_adaptor[var] 						[@http://svn.boost.org/svn/boost/trunk/libs/range/doc/html/range/reference/adaptors.html [var]]]
[template tpl_range_adaptor_compose[var] 				[@http://svn.boost.org/svn/boost/trunk/libs/range/doc/html/range/reference/adaptors/introduction.html#range.reference.adaptors.introduction.composition_of_adaptors [var]]]
[template tpl_range_algo[var] 							[@http://svn.boost.org/svn/boost/trunk/libs/range/doc/html/range/reference/algorithms.html [var]]]
[template tpl_range_join[var]							[@http://svn.boost.org/svn/boost/trunk/boost/range/join.hpp [var]]]
[template tpl_itr[var]						            [@http://svn.boost.org/svn/boost/trunk/libs/range/doc/html/range/reference/utilities/iterator_range.html [var]]]

[template tpl_operators[var]							[@http://www.boost.org/doc/libs/release/libs/utility/operators.htm [var]]]
[template tpl_boost_typeof[var]							[@http://www.boost.org/doc/libs/1_35_0/doc/html/typeof.html [var]]]

[/Concepts]

[template tpl_meta_fun[var] 							[@http://svn.boost.org/svn/boost/trunk/libs/mpl/doc/refmanual/metafunction.html [var]]]
[template tpl_meta_fun_class[var]						[@http://svn.boost.org/svn/boost/trunk/libs/mpl/doc/refmanual/metafunction-class.html [var]]]
[template tpl_concept_range[var] 						[@http://svn.boost.org/svn/boost/trunk/libs/range/doc/html/range/concepts/overview.html [var]]]
[template tpl_crtp[var] 								[@http://en.wikipedia.org/wiki/Curiously_recurring_template_pattern [var]]]
[template tpl_class_tpl[var] 							[@http://publib.boulder.ibm.com/infocenter/comphelp/v8v101/index.jsp?topic=%2Fcom.ibm.xlcpp8a.doc%2Flanguage%2Fref%2Fclass_templates.htm [var]]]
[template tpl_pipe[var]									[@http://en.wikipedia.org/wiki/Vertical_bar#Pipe [var]]]

[/Files]

[template tpl_boost_trunk [var]							[@http://svn.boost.org/svn/boost/trunk [var]]]
[def __boost_trunk__									[tpl_boost_trunk [^boost-trunk]]]

[template tpl_boost_type [var]							[@http://svn.boost.org/svn/boost/trunk/boost/type.hpp [var]]]
[def __boost_type__										[@http://svn.boost.org/svn/boost/trunk/boost/type.hpp boost::type]]

[template tpl_dir_boost_assign_v2[var] 					[@../../../../../boost/assign/v2 [var]]]
[def __dir_boost_assign_v2__ 							[tpl_dir_boost_assign_v2 boost/assign/v2]]

[template tpl_dir_libs_assign_v2[var] 					[@../../ [var]]]
[def __dir_libs_assign_v2__ 							[tpl_dir_libs_assign_v2 libs/assign/v2]]

[template tpl_dir_libs_assign_v2_example [var] 			[@../../example [var]]]
[def __dir_libs_assign_v2_example__ 					[tpl_dir_libs_assign_v2_example libs/assign/v2/example]]

[template tpl_test[var] 								[@../../test/ [var]] ] 
[template tpl_run_eff[var] 								[@../../speed/results [var]] ] 

[/ Templates]

[template tpl_join[a b][a][b]]
[template tpl_typeof[object][tpl_join [object]..__type_ext__]]
[template tpl_seq[index first last] [index] = [first], ..., [last]]
[template tpl_sub[var index] [var]\[[index]\] ]
[template tpl_sub_sub[var index1 index2] [var]\[[index1],[index2]\]]
[template tpl_module[HEADER DESCRIPTION]

[heading Header]
[HEADER]

[heading Description]
[DESCRIPTION]

] 
[template tpl_feature[HEADER DESCRIPTION SYNTAX EXAMPLE]

[heading Header]
[HEADER]

[heading Description]
[DESCRIPTION]

[heading Synopsis]
[SYNTAX]

[heading Examples]
[EXAMPLE]

] 

[template tpl_feature_sem[HEADER DESCRIPTION SYNTAX SEMANTICS EXAMPLE]

[heading Header]
[HEADER]

[heading Description]
[DESCRIPTION]

[heading Synopsis]
[SYNTAX]

[heading Semantics]
[SEMANTICS]

[heading Examples]
[EXAMPLE]

] 

[/Internal]

[def __arg__ 											arg]
[def __argn__ 											argn]
[def __args__											args...]
[def __args1__											args1...]
[def __argsn__											argsn...]
[def __ellipsis__										...]
[def __array__											ar]
[def __array_type__										Ar]
[def __cont__											cont]
[def __cont_type__										C]
[def __csv_form__										Csv form]
[def __dev_only__		 								End-users may wish to skip this part. ]
[def __describe_chain__ 								Chains two ranges, with particular attention to reference arrays]
[def __describe_alt_syntax__							Alternative syntax]
[def __describe_options__ 								List of options.  The special case [^m = 0] means an empty list]
[def __explicit_header__ 								This header has to be explicitly included]
[def __f__												f]
[def __f_type__											F]
[def __functor_form__									Functor form]
[def __fun_as_arg_list__								as_arg_list]
[def __fun_convert__ 									convert]
[def __fun_converter__									converter]
[def __fun_constructor__								constructor]
[def __fun_csv__										csv]
[def __fun_csv_deque__									csv_deque]
[def __fun_deque__										deque]
[def __fun_new__										new_ptr]
[def __fun_ref_array__									ref::array]
[def __fun_ref_csv_array__								ref::csv_array]
[def __fun_put__										put]
[def __generate__    									generate]
[def __header_include_chain__ 							[@../../../../../boost/assign/v2/include/chain.hpp boost/assign/v2/include/chain.hpp]]
[def __header_include_convert__ 						[@../../../../../boost/assign/v2/include/convert.hpp boost/assign/v2/include/convert.hpp]]
[def __header_include_converter__ 						[@../../../../../boost/assign/v2/include/converter.hpp boost/assign/v2/include/converter.hpp]]
[def __header_include_csv__ 							[@../../../../../boost/assign/v2/include/csv.hpp boost/assign/v2/include/csv.hpp]]
[def __header_include_deque__ 							[@../../../../../boost/assign/v2/include/deque.hpp boost/assign/v2/include/deque.hpp]]
[def __header_include_operator__						[@../../../../../boost/assign/v2/include/operator.hpp boost/assign/v2/include/operator.hpp]]
[def __header_include_put__ 							[@../../../../../boost/assign/v2/include.hpp boost/assign/v2/include.hpp]]
[def __header_include_ref__								[@../../../../../boost/assign/v2/include/ref.hpp boost/assign/v2/include/ref.hpp]]
[def __header_include_pipe__ 							[@../../../../../boost/assign/v2/include/pipe.hpp boost/assign/v2/include/pipe.hpp]]
[def __invoke_options__ 								% option1 ... % optionm]
[def __interpreter__ 									interpreter]
[def __key__											k]
[def __key_type__										K]
[def __kwd_chain__										_chain]
[def __kwd_convert__									_convert]
[def __kwd_csv_put__									_csv_put]
[def __kwd_data__										_data]
[def __kwd_fun__										_fun]
[def __kwd_ref_get__									ref::_get]
[def __kwd_identity__									_identity]
[def __kwd_insert__										_insert]
[def __kwd_iterate__									_iterate]
[def __kwd_key__										_key]
[def __kwd_mapped__										_mapped]
[def __kwd_std_modifier__								_std_modifier]
[def __kwd_nil__										_nil]
[def __kwd_push__										_push]
[def __kwd_push_back__									_push_back]
[def __kwd_push_front__									_push_front]
[def __kwd_put__										_put]
[def __kwd_repeat__										_repeat]
[def __kwd_use_default__								_use_default]
[def __link_detail__									[link boost_assign_v2.reference.detail.keyword.nil Detail]]
[def __link_deque__										[link boost_assign_v2.reference.deque Deque]]
[def __link_interpreter__								[link boost_assign_v2.reference.interpreter Interpreter]]
[def __link_option__									[link boost_assign_v2.reference.option Option]]
[def __link_put__										[link boost_assign_v2.reference.put Put]]
[def __link_ref__										[link boost_assign_v2.reference.ref Ref]]
[def __link_chain__ 									[link boost_assign_v2.reference.chain Utility.Chain]]
[def __link_conversion__ 								[link boost_assign_v2.reference.conversion Conversion]]
[def __link_csv__ 										[link boost_assign_v2.reference.csv Csv]]
[def __list_options__ 									o1, ..., om]
[def __mapped__											d]
[def __mapped_type__									D]
[def __modifier_tag__									'''<replaceable>modifier-tag</replaceable>''']
[def __option_modifier__								option-modifier]
[def __option_arg__ 									'''<replaceable>option-arg</replaceable>''']
[def __option_requirement__ 							Headers in directory [link boost_assign_v2.reference.option [^boost/assign/v2/option]] overload `operator%`. A header from this directory has to be included [*after] that of the object to be passed as first argument to `operator%`. ]
[def __modulo__ 										`operator%`]
[def __ns_as2__											boost::assign::v2]
[def __object__ 										object]
[def __object_data_generator__ 							data-generator]
[def __object_interpreter__ 							interpreter]
[def __object_modifier__ 								modifier]
[def __option__											option]
[def __operator_and__ 									`operator&&`]
[def __pipe__ 											`operator|`]
[def __pipe_form__ 										Pipe form]
[def __range__											r]
[def __range_type__										R]
[def __ref_wrapper__									w]
[def __ref_array__										rw]
[def __unspecified__ 									'''<replaceable>unspecified</replaceable>''']
[def __value__											t]
[def __value_n__ 										[tpl_join __value__..n]]
[def __value_type__										T]
[def __values__ 										__value__...]

[section:intro Introduction]
[import ../tutorial.cpp]

This library is an upgrade of __url_boost_assign_v1__ that redefines all the functionality, with optional C++0x support 
and new features. It expresses repetitive statements for assigning or inserting elements via a basic grammar:
[tutorial_assign]

Here's an overview of the features of the interpreter returned by `__fun_put__( __cont__ )`:

* The functor interface exhibited above need not be restricted to unary i.e it is variadic. The arguments are internally forwarded to 
a data-member generator whose result is then passed to an appropriate modifier of `__cont__`. 
* These components are automatically deduced to ensure that [link boost_assign_v2.reference.put `__fun_put__`] works across different container categories.
* This default behaviour can be overriden by passing composable options, via `operator%`, to the interpreter. 
* New options, which can potentially encapsulate complex semantics, can be created by [link option_modifier invoking macros] that manage the overhead.
* Operator `|` is overloaded as a [link boost_assign_v2.reference.pipe ['piping] ] alternative to `__fun_put__` i.e. it returns the modified
container, thereby facilitating integration with [tpl_range_algo range algorithms]. 
* A variant of `__fun_put__`, [link boost_assign_v2.reference.deque `deque<>`], generates a container.

Independently of `__fun_put__`, this library provides a framework, identified by namespace [link boost_assign_v2.reference.ref `ref`], 
for generating an [tpl_boost_array array] of reference wrappers, for short, a ['reference-array]. 

Other functionality that is adjunct to either the ['put] or ['ref] frameworks are the following:

* [link boost_assign_v2.reference.chain Chaining] ranges, with special consideration for those created using the ['ref] functionaltiy
* [link boost_assign_v2.reference.conversion Conversion] from ranges to containers
* Replacing successive unary functor [footnote Usually, `__fun_put__( __cont__ )`]  calls over a sequence by a single function 
invocation, [link boost_assign_v2.reference.csv `__fun_csv__`]

[endsect][/intro]

[def __link_org__ [link boost_assign_v2.org Organization]]

[section:org Organization]
[include org.qbk]
[endsect][/org]

[section:tut Tutorial]
[include tut.qbk]
[endsect][/tut]

[section:conv Conventions]
[include conv.qbk]
[endsect][/conv]

[section:reference Reference]

[section:chain Chain]
[include chain.qbk]
[endsect][/chain]

[section:conversion Conversion]
[include conversion.qbk]
[endsect][/conversion]

[section:csv Csv]
[include csv.qbk]
[endsect][/csv]

[section:detail Detail]

[tpl_module 
	[@../../../../../boost/assign/v2/detail.hpp boost/assign/v2/detail/detail.hpp]
	..Functionality that is used by various parts of the library
]

[section:keyword Keyword]
[include detail_keyword.qbk]
[endsect][/keyword]

[section:config Config]
[include config.qbk]
[endsect][/config]

[section:traits Traits]
[include detail_traits.qbk]
[endsect][/traits]

[endsect][/ detail]

[section:include Include]
[include include.qbk]
[endsect]

[section:interpreter Interpreter]
[include interpreter.qbk]
[endsect][/ interpreter]

[section:deque Deque]
[include deque.qbk]
[endsect][/deque]

[section:option Option]
[include option.qbk]
[endsect][/option]

[section:pipe Pipe]
[include pipe.qbk]
[endsect][/pipe]

[section:put Put]
[include put.qbk]
[endsect][/put]

[section:ref Ref]
[include ref.qbk]
[endsect][/ref]

[endsect][/reference]

[section:apx Appendix]
[section:cont Containers]
[include containers.qbk]
[endsect][/endsect]
[section:perf Performance]
[include perf.qbk]
[endsect][/perf]
[section:port Portability]
[include port.qbk]
[endsect][/port]
[endsect][/apx]
