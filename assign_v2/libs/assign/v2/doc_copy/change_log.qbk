[section:v2 \[Proposal for\] Upgrading from __boost__ v1.4x : __boost_assign_v2__]

The change in organization is laid out in section [link org Organization]. This upgrade is a follow up to a __url_boost_assign_v2_mini_review__ in which
only a subset of the present upgrade was considered. Here are the changes that can be traced to this mini-review:

* The pair of functions in __url_boost_assign_v1__, `ref_list_of` and `cref_list_of`, are replaced by a single function, 
[link ref_array `__fun_ref_array__`], that resolves lvalue/const-ness and the number of arguments
automatically (thus eliminating the need for size template parameter). 
* A function, [link ref_csv_array `__fun_ref_csv_array__`], whose invocation is equivalent to  
[link ref_array `__fun_ref_array__`] followed by successive functor calls. 
* A [tpl_range_adaptor range adaptor] for [link chain chaining] ranges, with special consideration for reference-arrays.

In addition, this library addresses some demands that surfaced during the mini-review:

* Generalizes the functor/csv duality throughout the library. 
* Supports __url_cpp0x__ features. Functions are typically variadic, declaring arguments as `Args&&...` and, where applicable, forward to an 
implementation using `std::forward<Args>`.  Under __url_cpp03__, these aspects are emulated within some limits that can be [link config configured]. 
* Removes the ambiguity, as to whether the creation of an empty array or a default constructed element is triggered by a nullary call to a container 
generator. See [link tut_empty here].

Finally, the most significant change pertains to the replacement of `list_of` and list-inserters by [link deque `__fun_deque__`] and 
[link put `__fun_put__`], respectively. In this new framework, each features derives most of its functionality from a crtp class, [link interpreter_crtp 
`interpreter_crtp`]. Refer to the [link intro introduction] for an overview. Section [link perf Performance] contains a speed comparison of 
expressions under __url_boost_assign_v1__ and their nearest analogue under __url_boost_assign_v2__.  

Some miscellanea tools, such as [link conversion conversion], that were previously embedded in an object, such as that returned by `list_of`, are now provided
as free functions. This sacrifice in convenience must be balanced against safety and code decoupling. Some features were left out altogether, such
as comparison operators, so as to avoid redundancy with [@http://svn.boost.org/svn/boost/trunk/libs/range/doc/html/range/reference/utilities.html range
utilities].

[endsect][/ v2 ]

