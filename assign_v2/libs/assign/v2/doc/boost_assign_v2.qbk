[library Boost.Assign
    [quickbook 1.5]
    [version 2.0]
    [authors [Thorsten, Ottosen],[Rogard, Erwann]]
    [copyright 2003-2004 Thorsten Ottosen, 2011 Erwann Rogard]
    [license
        Distributed under the Boost Software License, Version 1.0.
        (See accompanying file LICENSE_1_0.txt or copy at
        [@http://www.boost.org/LICENSE_1_0.txt])
    ]
    [id boost_assign_v2]
]

[/Support]

[def __TO__												[@http://www.boost.org/users/people/thorsten_ottosen.html TO]]
[def __ER__												[@mailto:erDOTciDOT2020ATgmailDOTcom ER]]

[template tpl_user_mailing_list[var]					[@http://www.boost.org/community/groups.html#users [var]]]
[def __user_mailing_list__      						[tpl_user_mailing_list Boost Users Mailing List]]
[def __url_boost_assign_v2_mini_review__ 				[@http://lists.boost.org/Archives/boost/2010/06/168028.php mini-review]]

[/ C++  ]

[def __cpp03__ 											C++03]
[def __cpp0x__ 											C++0x]
[template tpl_cpp03[var] 								[@http://en.wikipedia.org/wiki/C%2B%2B03 [var]]]
[template tpl_cpp0x[var] 								[@http://www2.research.att.com/~bs/C++0xFAQ.html [var]]]
[def __url_cpp03__ 										[tpl_cpp03 __cpp03__]]
[def __url_cpp0x__ 										[tpl_cpp0x __cpp0x__]]

[/ Platform]

[def __mac_os__ 										OS X 10.6.5]
[def __mac_default_compiler__ 							gcc4.2]
[def __mac_processor__ 									2.4 Ghz Intel Core 2 Duo]
[def __mac_mem__ 										4GB 1067 Mhz DDR3]
[def __fink__ 											Fink]
[template tpl_fink[var] 								[@http://www.finkproject.org/ [var]]]
[def __url_fink__ 										[tpl_fink __fink__]]

[/ Libraries ]

[def __callout__										[@http://www.boost.org/doc/libs/1_45_0/doc/html/quickbook/syntax.html#quickbook.syntax.phrase.anchors callout]]

[def __boost_assign_v1__ 								Boost.Assign 1.0]
[template tpl_boost_assign_v1[var] 						[@../../../../../libs/assign/doc/index.html [var]]]
[def __url_boost_assign_v1__ 							[tpl_boost_assign_v1 __boost_assign_v1__]]

[def __boost_assign_v2__ 								Boost.Assign 2.0]
[template tpl_boost_assign_v2[var] 						[@./index.html [var]]]
[def __url_boost_assign_v2__ 							[tpl_boost_assign_v2 __boost_assign_v2__]]

[def __boost__											Boost]
[template tpl_boost[var] 								[@http://www.boost.org [var]]]
[def __url_boost__ 										[tpl_boost __boost__]]

[template tpl_boost_array[var] 							[@http://www.boost.org/doc/libs/release/doc/html/array.html [var]]]
[template tpl_multi_array[var] 							[@http://www.boost.org/doc/libs/release/doc/html/multi_array.html [var]]]

[template tpl_mpl[var] 									[@http://www.boost.org/libs/mpl/index.html [var]]]
[def __mpl__ 											[tpl_mpl MPL]]

[template tpl_stl[var] 									[@http://en.wikipedia.org/wiki/Standard_Template_Library [var]]]
[def __stl__ 											[tpl_stl STL]]

[template tpl_stl_assoc[var] 							[@http://www.sgi.com/tech/stl/AssociativeContainer.html [var]]]
[template tpl_stl_seq[var] 								[@http://www.sgi.com/tech/stl/Sequence.html [var]]]
[template tpl_stl_adapter[var]							[@http://msdn.microsoft.com/en-us/library/1fe2x6kt(v=vs.80).aspx [var]]]
[template tpl_stl_deque[var] 							[@http://www.sgi.com/tech/stl/Deque.html [var]]]
[template tpl_stl_cont[var]								[@http://www.sgi.com/tech/stl/Container.html [var]]]

[template tpl_lambda[var] 								[@http://www.boost.org/doc/libs/release/doc/html/lambda.html [var]]]
[def __lambda__											[tpl_lambda lambda]]

[template tpl_ptr_container[var] 						[@http://www.boost.org/doc/libs/release/libs/ptr_container/doc/ptr_container.html [var]]]

[template tpl_range[var] 								[@http://www.boost.org/doc/libs/release/libs/range/index.html [var]]]
[template tpl_range_adaptor[var] 						[@http://svn.boost.org/svn/boost/trunk/libs/range/doc/html/range/reference/adaptors.html [var]]]
[template tpl_range_adaptor_compose[var] 				[@http://svn.boost.org/svn/boost/trunk/libs/range/doc/html/range/reference/adaptors/introduction.html#range.reference.adaptors.introduction.composition_of_adaptors [var]]]
[template tpl_range_algo[var] 							[@http://svn.boost.org/svn/boost/trunk/libs/range/doc/html/range/reference/algorithms.html [var]]]
[template tpl_range_join[var]							[@http://svn.boost.org/svn/boost/trunk/boost/range/join.hpp [var]]]
[template tpl_itr[var]						            [@http://svn.boost.org/svn/boost/trunk/libs/range/doc/html/range/reference/utilities/iterator_range.html [var]]]

[template tpl_operators[var]							[@http://www.boost.org/doc/libs/release/libs/utility/operators.htm [var]]]
[template tpl_boost_typeof[var]							[@http://www.boost.org/doc/libs/1_35_0/doc/html/typeof.html [var]]]

[/Concepts]

[template tpl_meta_fun[var] 							[@http://svn.boost.org/svn/boost/trunk/libs/mpl/doc/refmanual/metafunction.html [var]]]
[template tpl_meta_fun_class[var]						[@http://svn.boost.org/svn/boost/trunk/libs/mpl/doc/refmanual/metafunction-class.html [var]]]
[template tpl_concept_range[var] 						[@http://svn.boost.org/svn/boost/trunk/libs/range/doc/html/range/concepts/overview.html [var]]]
[template tpl_crtp[var] 								[@http://en.wikipedia.org/wiki/Curiously_recurring_template_pattern [var]]]
[template tpl_class_tpl[var] 							[@http://publib.boulder.ibm.com/infocenter/comphelp/v8v101/index.jsp?topic=%2Fcom.ibm.xlcpp8a.doc%2Flanguage%2Fref%2Fclass_templates.htm [var]]]
[template tpl_pipe[var]									[@http://en.wikipedia.org/wiki/Vertical_bar#Pipe [var]]]

[/Files]

[template tpl_boost_trunk [var]							[@http://svn.boost.org/svn/boost/trunk [var]]]
[def __boost_trunk__									[tpl_boost_trunk [^boost-trunk]]]

[template tpl_boost_type [var]							[@http://svn.boost.org/svn/boost/trunk/boost/type.hpp [var]]]
[def __boost_type__										[@http://svn.boost.org/svn/boost/trunk/boost/type.hpp boost::type]]

[template tpl_dir_boost_assign_v2[var] 					[@../../../../../boost/assign/v2 [var]]]
[def __dir_boost_assign_v2__ 							[tpl_dir_boost_assign_v2 boost/assign/v2]]

[template tpl_dir_libs_assign_v2[var] 					[@../../ [var]]]
[def __dir_libs_assign_v2__ 							[tpl_dir_libs_assign_v2 libs/assign/v2]]

[template tpl_dir_libs_assign_v2_example [var] 			[@../../example [var]]]
[def __dir_libs_assign_v2_example__ 					[tpl_dir_libs_assign_v2_example libs/assign/v2/example]]

[template tpl_test[var] 								[@../../test/ [var]] ] 
[template tpl_run_eff[var] 								[@../../speed/results [var]] ] 

[/ Templates]

[template tpl_join[a b][a][b]]
[template tpl_typeof[object][tpl_join [object]..__type_ext__]]
[template tpl_seq[index first last] [index] = [first], ..., [last]]
[template tpl_sub[var index] [var]\[[index]\] ]
[template tpl_sub_sub[var index1 index2] [var]\[[index1],[index2]\]]
[template tpl_module[HEADER DESCRIPTION]

[heading Header]
[HEADER]

[heading Description]
[DESCRIPTION]

] 
[template tpl_feature[HEADER DESCRIPTION SYNTAX EXAMPLE]

[heading Header]
[HEADER]

[heading Description]
[DESCRIPTION]

[heading Synopsis]
[SYNTAX]

[heading Example]
[EXAMPLE]

] 

[template tpl_feature_sem[HEADER DESCRIPTION SYNTAX SEMANTICS EXAMPLE]

[heading Header]
[HEADER]

[heading Description]
[DESCRIPTION]

[heading Synopsis]
[SYNTAX]

[heading Semantics]
[SEMANTICS]

[heading Example]
[EXAMPLE]

] 

[/Internal]

[def __arg__ 											arg]
[def __argn__ 											argn]
[def __args__											args...]
[def __args1__											args1...]
[def __argsn__											argsn...]
[def __ellipsis__										...]
[def __array__											ar]
[def __array_type__										Ar]
[def __cont__											cont]
[def __cont_type__										C]
[def __csv_form__										Csv form]
[def __dev_only__		 								End-users may wish to skip this part. ]
[def __describe_chain__ 								Chains two ranges, with particular attention to reference arrays]
[def __describe_alt_syntax__							Alternative syntax]
[def __describe_options__ 								List of options.  The special case [^m = 0] means an empty list]
[def __element_type__									E]
[def __explicit_header__ 								This header has to be explicitly included]
[def __f__												f]
[def __f_type__											F]
[def __functor_form__									Functor form]
[def __fun_as_arg_list__								as_arg_list]
[def __fun_convert__ 									convert]
[def __fun_converter__									converter]
[def __fun_constructor__								constructor]
[def __fun_csv_deque__									csv_deque]
[def __fun_deque__										deque]
[def __fun_new__										new_ptr]
[def __fun_ref_array__									ref::array]
[def __fun_ref_csv_array__								ref::csv_array]
[def __fun_put__										put]
[def __generate__    									generate]
[def __invoke_options__ 								% option1 ... % optionm]
[def __compose_options__ 								option1 % ... % optionm]
[def __interpreter__ 									interpreter]
[def __key__											k]
[def __key_type__										K]
[def __kwd_chain__										_chain]
[def __fun_convert__									convert]
[def __fun_csv_put__									csv_put]
[def __kwd_data__										_data]
[def __kwd_element__									_element]
[def __kwd_ref_get__									ref::_get]
[def __kwd_identity__									_identity]
[def __kwd_insert__										_insert]
[def __kwd_iterate__									_iterate]
[def __kwd_key__										_key]
[def __kwd_mapped__										_mapped]
[def __kwd_nil__										_nil]
[def __kwd_push__										_push]
[def __kwd_push_back__									_push_back]
[def __kwd_push_front__									_push_front]
[def __kwd_put__										_put]
[def __kwd_option__										_option]
[def __kwd_repeat__										_repeat]
[def __kwd_row_major__									_row_major]
[def __kwd_std_modifier__								_std_modifier]
[def __kwd_use_default__								_use_default]
[def __kwd_value__										_value]
[def __list_options__ 									o1, ..., om]
[def __mapped__											d]
[def __mapped_type__									D]
[def __modifier_tag__									'''<replaceable>modifier-tag</replaceable>''']
[def __option_modifier__								option-modifier]
[def __option_arg__ 									'''<replaceable>option-arg</replaceable>''']
[def __modulo__ 										`operator%`]
[def __ns_as2__											boost::assign::v2]
[def __object__ 										object]
[def __object_data_generator__ 							data-generator]
[def __object_interpreter__ 							interpreter]
[def __object_modifier__ 								modifier]
[def __option__											option]
[def __operator_and__ 									`operator&&`]
[def __pipe__ 											`operator|`]
[def __pipe_form__ 										Pipe form]
[def __range__											r]
[def __range_type__										R]
[def __ref_wrapper__									w]
[def __ref_array__										rw]
[def __unspecified__ 									'''<replaceable>unspecified</replaceable>''']
[def __value__											t]
[def __value_n__ 										[tpl_join __value__..n]]
[def __value_type__										T]
[def __values__ 										__value__...]

[section:intro Introduction]
[import ../tutorial.cpp]
[#intro]

This library is an upgrade of __url_boost_assign_v1__ that redefines its functionality, with optional C++0x support 
and new features. It expresses repetitive statements for assigning or inserting elements via a basic grammar
[footnote It may help to look at [@http://www.sgi.com/tech/stl/basic_string.html `std::string`]'s overloaded constructors]:
[tutorial_map]

The above example catpures the basic aspects of this library:

* The ['interpreter] returned by [link boost_assign_v2.reference.put `__fun_put__`] forwards its arguments to a ['data-generator]
* The result is inserted in the container, by invoking a modifier which is deduced from the container's type, such that 
[link boost_assign_v2.reference.put `__fun_put__`] works uniformly across different container categories. See supported 
[link containers containers].

Related features include:

* Operator `%` is used for passing options that override the default behavior described above. [link option_modifier Macros] are
provided to create new options.
* Operator `|` expresses a ['piping] alternative to `__fun_put__` i.e. it returns the modified
container, thereby facilitating integration with [tpl_range_algo range algorithms]. 
* A variant of `__fun_put__`, [link boost_assign_v2.reference.deque `deque<>`], generates a container.

Functionality that is adjunct to or independent of ['put] is itemized below:

* [link boost_assign_v2.reference.chain Chaining] ranges, with special consideration for those created using the ['ref] functionalty (below)
* [link boost_assign_v2.reference.conversion Conversion] from ranges to containers
* A framework, delineated by namespace [link boost_assign_v2.reference.ref `ref`], for generating an [tpl_boost_array array] 
of reference wrappers, for short, a ['reference-array]. 

[endsect][/intro]

[def __link_org__ [link boost_assign_v2.org Organization]]

[section:org Organization]
[include org.qbk]
[endsect][/org]

[section:tut Tutorial]
[include tut.qbk]
[endsect][/tut]

[section:reference Reference]

[heading Conventions]

This reference adheres to conventions laid out [link doc_conv here].

[section:chain Chain]
[include chain.qbk]
[endsect][/chain]

[section:conversion Conversion]
[#conversion]
[include conversion.qbk]
[endsect][/conversion]

[section:deque Deque]
[include deque.qbk]
[endsect][/deque]

[section:interpreter Interpreter]
[include interpreter.qbk]
[endsect][/ interpreter]

[section:include Include]
[include include.qbk]
[endsect]

[section:option Option]
[include option.qbk]
[endsect][/option]

[section:put Put]
[include put.qbk]
[endsect][/put]

[section:ref Ref]
[include ref.qbk]
[endsect][/ref]

[section:support Support]

[tpl_module 
	[@../../../../../boost/assign/v2/support.hpp boost/assign/v2/detail/support.hpp]
	..Functionality that supports various parts of the library
]

[section:config Config]
[include config.qbk]
[endsect][/config]

[section:keyword Keyword]
[include support_keyword.qbk]
[endsect][/keyword]

[section:traits Traits]
[include support_traits.qbk]
[endsect][/traits]

[endsect][/ support]

[endsect][/reference]

[section:apx Appendix]
[section:acknow Acknowledgement]

[heading __boost_assign_v1__]

The idea for an assignment/initialization library is not new. The  functionality of this library 
resembles Leor Zolman's STL Container Initialization Library a great deal, but it does not rely on 
string parsing to achieve its goals. 

Special thanks to 

* Leor Zolman for our many discussion that eventually led to this library.
* Tom Brinkman for being review manager.
* Joaquín Muñoz for vc6/vc7 portability.
* Pavel Vozenilek for his countless suggestions, improvements and  portability fixes. 
* Rene Rivera for Code Warrior portability.     

The following books have helped or were influential:

* Scott. Meyers, "More Effective C++", Item 7, Addison Wesley, 1996       
* K. Czarnecki and U.W. Eisenecker, "Generative programming", Addison-Wesley, 2000        
* [@http://www.oonumerics.org/blitz/ Blitz]
* Gabriel Dos Reis and Bjarne Stroustrup, 
 [@http://anubis.dkuug.dk/jtc1/sc22/wg21/docs/papers/2003/n1509.pdf Generalized Initializer Lists], 2003


[heading __boost_assign_v2__ ]

Evidently, __boost_assign_v2__ owes much to __boost_assign_v1__, but it is also influenced by [tpl_range Boost.Range] ([link chain chaining] and piping).

Special thanks to 

* Manuel Peinado Gallego whose [@http://gist.github.com/287791 work] and discussions have 
inspired the changes proposed in the __url_boost_assign_v2_mini_review__.
* Thorsten Ottosen and John Bytheway have shaped this new version of the library and its documentation, through their feedback as review managers of the
__url_boost_assign_v2_mini_review__ and the main review, respectively. 

The following books have helped or were influential:

* Abrahams, David and Gurtovoy, Aleksey,
 [@http://portal.acm.org/citation.cfm?id=1044941# C++ Template Metaprogramming]: Concepts, Tools, and Techniques from Boost and Beyond (C++ in Depth Series),
 2004, Addison-Wesley Professional.

[endsect][/ history_ano]
[section:change_log Change_log]
[include change_log.qbk]
[endsect][/change_log]
[section:cont Containers]
[include containers.qbk]
[endsect][/endsect]
[section:conv Doc conventions]
[include conv.qbk]
[endsect][/conv]
[section:perf Performance]
[include perf.qbk]
[endsect][/perf]
[section:port Portability]
[include port.qbk]
[endsect][/port]
[section:support Support]

To get help or make a suggestion, post to the __user_mailing_list__, making sure to notify 
__TO__ and __ER__ by cc-ing them.

[endsect][/support]
[endsect][/apx]

