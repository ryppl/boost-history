// TODO
// wewnetrzny typ pudelek zmienic na geometry::box<geometry::point>
//   do kopiowania pudelek uzytkownik -> internal uzyc specjlnej funkcji
// przydalaby sie inna struktura wezlow - w tej powielane sa dane
//   node <- internal_node, node <- leaf_node
//   traktowanie liscia jako wezla wewnetrznego tez jest bez sensu (nie widze dobrej sytuacji)

// czy translator powinien zwracac geometry::model::point czy Point
// a jesli zalozymy ze uzytkownik przechowuje Polygon to powinien on byc przechowywany z Boxem czy nie
// to przechowuje pair<Box, Polygon> lub jesli przechowuje Box pisze sobie nowy translator

// czy wewnatrz struktury powinny byc przechowywane: Box i geometry::box<Point>
// czy geometry::box<geometry::point<traits::dimension<Point>::value>, ...>

// 1. box wewnatrz wezlow
// 2. bounding object w lisciach

// 3. jakis automatyczny przechowywacz innych obiektow? polygon, segment
//   powinien istniec automatyczny translator obiekt -> box
//   i box/point przechowywany w lisciach razem z obiektem