#  (C) Copyright William E. Kempf 2001.
#  (C) Copyright 2007 Anthony Williams.
#  (C) Copyright 2008-2009 Vicente Botet Escriba.
#  Distributed under the Boost Software License, Version 1.0. (See accompanying
#  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#
# Boost.InterThreads test Jamfile
#
# Additional configuration variables used:
#   1. PTW32 may be used on Win32 platforms to specify that the pthreads-win32
#      library should be used instead of "native" threads. This feature is
#      mostly used for testing and it's generally recommended you use the
#      native threading libraries instead. PTW32 should be set to be a list
#      of two strings, the first specifying the installation path of the
#      pthreads-win32 library and the second specifying which library
#      variant to link against (see the pthreads-win32 documentation).
#      Example: jam -sPTW32="c:\pthreads-win32 pthreadVCE.lib"

# bring in rules for testing
import testing ;

project
    : requirements
#       <library>/boost/test//boost_unit_test_framework/<link>static
#       <library>/boost/thread//boost_thread/<link>static
        <library>/boost_1_39_0/libs/test/build//boost_unit_test_framework/<link>static
        <library>/boost_1_39_0/libs/thread/build//boost_thread/<link>static
        <library>../../tp/build//boost_threadpool/<link>static

        <include>.
        <include>../../..
        <include>/boost_1_39_0
        <threading>multi
#       <target-os>cygwin
#       <interthreadapi>pthread
#       <variant>debug
#       <define>BOOST_THREAD_HAS_THREAD_ATTR

    ;

rule async-run ( sources * )
{
    return
    [ run $(sources)  :  :  : <link>static ]
#    [ run $(sources)  ../../../../libs/thread/build//boost_thread  :  :  :              : $(sources[1]:B)_lib ]
    ;
}



{
    test-suite "tests"
        :
#           [ async-run test_basic_threader.cpp ]
           [ async-run test_immediate.cpp ]
           [ async-run test_launcher.cpp ]
           [ async-run test_threader.cpp ]
           [ async-run test_thread_pool.cpp ]
#          [ async-run test_thread_decorator.cpp ]
    ;
    test-suite "example"
        :
          [ async-run ../example/hello_world.cpp ]
          [ async-run ../example/multiple_algorithms.cpp ]
          [ async-run ../example/parallel_sort.cpp ]
          [ async-run ../example/parallel_sort2.cpp ]


    ;
}
