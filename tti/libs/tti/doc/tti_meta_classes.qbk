[section:tti_metaclasses Macro Metafunctions as Metadata]

As specified in the Boost MPL library, there are two ways to pass metafunctions 
as metadata, and both ways fall under the Boost MPL terminology of 'lambda expressions':

* As a metafunction class
* As a placeholder expression

Using a placeholder expression is the easiest way and does not require the programmer to create
a metafunction class for passing the metadata. The syntax for this is fairly simple. The syntax 
for passing a macro metafunction becomes 'macrometafunction<\_>' etc. depending 
on how many parameters are bring passed. Thus for two parameters we would have 
'macrometafunction<\_,\_>' etc., with another placeholder ('\_') added for each subsequent parameter.

However using a placeholder expression may not be the fastest way when considering compile-time 
speed. Because of this the TTI library provides a set of macros for each of the macro metafunctions 
which generate a corresponding metafunction class. We will call this set of macros 
the 'metafunction class macros'.

These macros take exactly the same macro parameters as their corresponding 
macro metafunctions. They generate a corresponding metafunction class rather 
than a metafunction itself, which allows us to pass our macro metafunctions 
as metadata, just as using placeholder expressions allows us to do.

For these metafunction class macros there is a simple form and a complex form name
just as there is for the macro metafunctions. For each macro metafunction, 
the name for the corresponding metafunction class macro is the macro 
metafunction name with the sequence 'MTFC\_' ( for "MeTaFunction Class" )
following the TTI\_ ( or TTI\_VM\_ ) portion of the macro metafunction name. 
The subsequent metafunction class name, using the simple form, is the same name as 
the corresponding macro metafunction name but with 'mtfc\_' prepended to the name. 

As with the complex form name of the macro metafunctions,
the complex form name of the corresponding metafunction class macros is 
completely determined by the first 'trait' parameter. 

In the following table I do not specify the macro parameters
as they are exactly the same as those for their corresponding macro
metafunction:

[table:tbmetaclasses TTI Metafunction Classes
  [
    [Macro Metafunction]
    [Metafunction Class Macro]
    [Metafunction Class Name]
  ]
  [
    [[macroref TTI_HAS_TYPE]]
    [[macroref TTI_MTFC_HAS_TYPE]]
    [tti::mtfc\_has\_type\_'name']
  ]
  [
    [[macroref TTI_TRAIT_HAS_TYPE]]
    [[macroref TTI_MTFC_TRAIT_HAS_TYPE]]
    [tti::'trait']
  ]
  [
    [[macroref TTI_HAS_TEMPLATE]]
    [[macroref TTI_MTFC_HAS_TEMPLATE]]
    [tti::mtfc\_has\_template\_'name']
  ]
  [
    [[macroref TTI_TRAIT_HAS_TEMPLATE]]
    [[macroref TTI_MTFC_TRAIT_HAS_TEMPLATE]]
    [tti::'trait']
  ]
  [
    [[macroref TTI_HAS_TEMPLATE_CHECK_PARAMS]]
    [[macroref TTI_MTFC_HAS_TEMPLATE_CHECK_PARAMS]]
    [tti::mtfc\_has\_template\_check\_params\_'name']
  ]
  [
    [[macroref TTI_TRAIT_HAS_TEMPLATE_CHECK_PARAMS]]
    [[macroref TTI_MTFC_TRAIT_HAS_TEMPLATE_CHECK_PARAMS]]
    [tti::'trait']
  ]
  [
    [[macroref TTI_VM_HAS_TEMPLATE_CHECK_PARAMS]]
    [[macroref TTI_VM_MTFC_HAS_TEMPLATE_CHECK_PARAMS]]
    [tti::mtfc\_has\_template\_check\_params\_'name']
  ]
  [
    [[macroref TTI_VM_TRAIT_HAS_TEMPLATE_CHECK_PARAMS]]
    [[macroref TTI_VM_MTFC_TRAIT_HAS_TEMPLATE_CHECK_PARAMS]]
    [tti::'trait']
  ]
  [
    [[macroref TTI_HAS_MEMBER]]
    [[macroref TTI_MTFC_HAS_MEMBER]]
    [tti::mtfc\_has\_member\_'name']
  ]
  [
    [[macroref TTI_TRAIT_HAS_MEMBER]]
    [[macroref TTI_MTFC_TRAIT_HAS_MEMBER]]
    [tti::'trait']
  ]
  [
    [[macroref TTI_HAS_MEMBER_DATA]]
    [[macroref TTI_MTFC_HAS_MEMBER_DATA]]
    [tti::mtfc\_has\_member\_data\_'name']
  ]
  [
    [[macroref TTI_TRAIT_HAS_MEMBER_DATA]]
    [[macroref TTI_MTFC_TRAIT_HAS_MEMBER_DATA]]
    [tti::'trait']
  ]
  [
    [[macroref TTI_HAS_MEMBER_FUNCTION]]
    [[macroref TTI_MTFC_HAS_MEMBER_FUNCTION]]
    [tti::mtfc\_has\_member\_function\_'name']
  ]
  [
    [[macroref TTI_TRAIT_HAS_MEMBER_FUNCTION]]
    [[macroref TTI_MTFC_TRAIT_HAS_MEMBER_FUNCTION]]
    [tti::'trait']
  ]
  [
    [[macroref TTI_HAS_STATIC_MEMBER]]
    [[macroref TTI_MTFC_HAS_STATIC_MEMBER]]
    [tti::has\_static\_member\_'name']
  ]
  [
    [[macroref TTI_TRAIT_HAS_STATIC_MEMBER]]
    [[macroref TTI_MTFC_TRAIT_HAS_STATIC_MEMBER]]
    [tti::'trait']
  ]
  [
    [[macroref TTI_HAS_STATIC_MEMBER_FUNCTION]]
    [[macroref TTI_MTFC_HAS_STATIC_MEMBER_FUNCTION]]
    [tti::has\_static\_member\_function\_'name']
  ]
  [
    [[macroref TTI_TRAIT_HAS_STATIC_MEMBER_FUNCTION]]
    [[macroref TTI_MTFC_TRAIT_HAS_STATIC_MEMBER_FUNCTION]]
    [tti::'trait']
  ]
]  
  
[endsect]
