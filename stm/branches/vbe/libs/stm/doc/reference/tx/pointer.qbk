[/
  (C) Copyright 2009 Justin E. Gottchlich. 
  (C) Copyright 2009 Vicente J. Botet Escriba
 /
 / Distributed under the Boost Software License, Version 1.0. (See accompanying
 / file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 /]


[/==========================================================================================]
[section:tx_pointer_hpp Header `<boost/stm/tx/pointer.hpp>`]
[/==========================================================================================]

    namespace boost { namespace stm { namespace tx {

        template <typename T> class pointer;
        template <typename T>
        struct has_shallow_copy_semantics<tx::pointer<T> >;

    }}}

[section Template Class `tx::pointer<>`]

    template <typename T>
    class pointer : public proxy_cache< pointer<T>, T* > {
    public:
        pointer();
        pointer(pointer const& r);
        template<class U>
        pointer(pointer<U> const& r);

        template<class U, class V, class B>
        pointer(proxy_cache<U, V*, B> const& rhs);

        pointer(T* v);
        template <typename U>
        pointer(U* v);

        template<class U, class V, class B>
        pointer& operator=(proxy_cache<U, V*, B> const& rhs);

        T* operator->() const;
        T& operator*() const;

        pointer(pointer const& rhs, stm::shallow_t);
        // shallow assignment
        pointer& shallow_assign(pointer const& rhs);

    };

[endsect]


[endsect]

