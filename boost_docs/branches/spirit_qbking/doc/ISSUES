Note:
 The abstract looking sentences after the asterix' are strings to search for. This page is also less helpful than it could be.


How do you use the [copyright *] part of the document-header to assign copyright to multiple people each with different years? It's not massively important, but worth getting right.


trees.html

 * 'See the example file xml_grammar.hpp (in libs/spirit/example/...'
   The file doesn't exist.

organisation.html

 * '[*error_handling]. The framework would not be complete...'
   The format of this is a bit confusing. Why is error_handling written like a class/function name? Is it one?

confix.html

 * The top-level header 'confix parsers' seems needless. I've removed it.
 * Link needed for `as_parser`.
 * Is 'expr' used as an abbreviation? For example in the context of 'expr parser'. It may be confused easily with the `expr` that comes up in the example code.

list_parsers.html

 * 'parser generators are described here and here'
   Sort out the links here.

functor_parser.html

 * '(see In-depth: The Parser)'
   Link this up

regular_expression_parser.html

 * Link to 'The Scanner Business'

distinct.html

 * Add link for ASM.1.

lazy_parser.qbk

 * First word should link to docs section on Spirit's Closures.

 * 'When `base` is being parsed, in your semantic action, store a pointer to the selected ?( base | ('`' >> base >> '`') ) in a closure variable'

select_parser.qbk

 * Link at bottom of page referring to PHOENIX_LIMIT should be more direct. (also present in closures.qbk)

switch_parser.qbk

 * Got a link for Sam Nabialek?

portability.qbk

 * 'Spirit v1.6.x'
   Link to the newest in the series

   etc... for all pages

style.qbk

 * Sort links on this page.
 * It would be better if the page 'Boost coding guidelines' was hosted on the boost website, rather than a login-only yahoo groups page.

rationale.qbk

 * 'Spirit is greedy --using straight forward, naive RD'
   
parametric_parsers.qbk

 * 'This parser takes in a function or functor (function object)'
   Add a link here.

functional.qbk

 * 'It is obvious that the authors of STL know and practice FP'
   Not that I (know nor) disagree, but a citation here would be nice. ;)

 * Some internal links near the bottom.

closures.qbk

 * 'And, with recursive rules'
   Link.

 * 'in the [link __Functional__] chapter.'
   Should be an internal link, previously to functional.html

 * '[link __lambda expressions__]'
   Int. link

 * The sectioning style (esp. below the example) seems inconsistent with the rest of the docs

 * Link to PHOENIX_LIMIT

 * '[link __parser_context__]'
   Int. lin k

 * Could do with an HTML source-mode (lookat: won't templates make source-mode markup not enough?)

 * Caption for the image (theme/closure1.png) displaced.

basic_concepts.qbk

  * The first paragraph, titled 'The Parser', could do with a 'All will become clear, honest,' or something similar because it's a bit of a headful if you don't know what each term means`.

  * '(lhs), `ch+p(',') ;`'
    Should the colon really be there?`

  * Link for LEX?

scanner.qbk

 * Check placing of '[$../theme/lens.gif]' in headings works ok. If it does, there are more places these could go (ie. places they are in the current html docs.
`
 * Check the wording at the top of section 'direct_parsing'

 * 'example in the numerics chapter'
   Fix internal link

 * '__directive.html__' and '__scanner__' x2
   Internal link

 * In fact, plenty of internal linkage issues.

techniques.qbk

  * Link to 'scanner business'

  * Link to 'No.1 FAQ'?

  * 'such as that proposed by David Abrahams in c|c++m'
    This should be more explicit, since it's proposed (and accepted, I think) for C++0x.

  * Internal links in section rule_with_multiple_scanner (lots)

  * Int links in general.

numerics.qbk

 * Link to primitives

 * Int. links
