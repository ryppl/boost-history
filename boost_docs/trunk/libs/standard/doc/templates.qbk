[/
 / Copyright (c) 2007 Andrew Sutton
 /
 / Distributed under the Boost Software License, Version 1.0. (See accompanying
 / file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 /]

[/ Formatting Macros /]
[template super[x]'''<superscript>'''[x]'''</superscript>''']
[template sub[x]'''<subscript>'''[x]'''</subscript>''']

[/ Quick Reference Templates /]
[template Destructible[] [link
    standards.concepts.utilities.destructible
    [^Destructible]]]
[template DefaultConstructible[] [link
    standard.concepts.utilities.default_constructible
    [^DefaultConstructible]]]
[template CopyConstructible[] [link
    standard.concepts.utilities.copy_constructible
    [^CopyConstructible]]]
[template Assignable[] [link
    standard.concepts.utilities.assignable
    [^Assignable]]]
[template EqualityComparable[] [link
    standard.concepts.utilities.equality_comparable
    [^EqualityComparable]]]
[template LessThanComparable[] [link
    standard.concepts.utilities.less_than_comparable
    [^LessThanComparable]]]

[template Container[] [link
    standard.concepts.containers.general_concepts.container
    [^Container]]]
[template ForwardContainer[] [link
    standard.concepts.containers.general_concepts.forward_container
    [^ForwardContainer]]]
[template ReversibleContainer[] [link
    standard.concepts.containers.general_concepts.reversible_container
    [^ReversibleContainer]]]
[template RandomAccessContainer[] [link
    standard.concepts.containers.general_concepts.random_access_container
    [^RandomAccessContainer]]]

[template Iterator[] [link
    standard.concepts.iterators.iterator
    [^Iterator]]]
[template InputIterator[] [link
    standard.concepts.iterators.input_iterator
    [^InputIterator]]]
[template OutputIterator[] [link
    standard.concepts.iterators.output_iterator
    [^OutputIterator]]]
[template ForwardIterator[] [link
    standard.concepts.iterators.forward_iterator
    [^ForwardIterator]]]
[template BidirectionalIterator[] [link
    standard.concepts.iterators.bidirectional_iterator
    [^BidirectionalIterator]]]
[template RandomAccessIterator[] [link
    standard.concepts.iterators.random_access_iterator
    [^RandomAccessIterator]]]