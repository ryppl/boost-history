[article Boostbook
    [quickbook 1.4]
    [copyright 2003-2005 Douglas Gregor]
    [purpose Boostbook Documentation Format]
    [license
        Distributed under the Boost Software License, Version 1.0.
        (See accompanying file LICENSE_1_0.txt or copy at
        [@http://www.boost.org/LICENSE_1_0.txt])
    ]
    [authors [Gregor, Douglas] ]
    [category docs]
]

[section Introduction]

The BoostBook documentation format is an extension of
[@http://www.docbook.org/ DocBook], an SGML- or XML-based format for describing
documentation. BoostBook augments DocBook with semantic markup that aids in the
documentation of C++ libraries, specifically the
[@http://www.boost.org/ Boost C++ libraries], by providing the ability to
express and refer to C++ constructs such as namespaces, classes, overloaded
functions, templates, and specializations.

BoostBook offers additional features more specific to its use for documenting
the [@http://www.boost.org/ Boost C++ libraries]. These features are intended to
eliminate or reduce the need for duplication of information and to aid in
documenting portions of Boost that might otherwise not be documented.
Examples of Boost-centric features include:

* [*Testsuites]: Testsuites in Boost are created by writing an appropriate
Jamfile and including that Jamfile in [^status/Jamfile]. If the testsuites
are documented (as in the
[@http://www.boost.org/libs/multi_array/doc/test_cases.html MultiArray library]),
the documentation is maintained separately from the testcase Jamfile, leading
to duplication of information and the possibility of having the documentation
out of sync with the Jamfile. BoostBook contains elements that describe a
testsuite for both purposes: the BoostBook stylesheets can generate documentation
for the testcases and also generate an appropriate Jamfile to integrate the
testcases with the regression testing system.

* [*Example programs]: Example programs in documentation need to be duplicated
in testcases to ensure that the examples compile and execute correctly.
Keeping the two copies in sync is a tedious and error-prone task. For instance,
the following code snippet persisted for six months:

    std::cout << f(5, 3) >> std::endl;

The BoostBook format allows testcases to be generated by weaving together
program fragments from example programs in the documentation. This capability
is integrated with testsuite generation so that example programs are normal
tests in BoostBook.

[endsect]

[include getting_started.qbk]
[include documenting.qbk]
[include together.qbk]
[include params.qbk]
[xinclude reference.xml]
