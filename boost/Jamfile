if --help in $(ARGV)
{
    ECHO "
Usage:
    bjam [options] [install|stage]

    * install               Installs to the configured location(s).
    * stage                 Stages the build products only to common stage location.

Options:
    --help                  This message.

Locations:
    --prefix=PREFIX         Install architecture independent files here.
                            Default; C:\\Boost on Win32
                            Default; /usr/local on Unix. Linux, etc.
    --exec-prefix=EPREFIX   Install architecture dependent files here.
                            Default; PREFIX
    --libdir=DIR            Install libraries here.
                            Default; EPREFIX/lib
    --includedir=DIR        Install source headers here.
                            Default; PREFIX/include
    --builddir=DIR          Build in this location instead of building
                            within the distribution tree. Recomended!
    --stagedir=DIR          When staging only, stage to the location.
                            Default; ./stage

Features:
    --with-python[=PYTHON_ROOT]
                            Build Boost.Python libraries with the Python
                            devel packages located at PYTHON_ROOT. The
                            Boost.Python libraries are built if possible
                            by default.
                            Default PYTHON_ROOT; C:\\tools\\python on Win32.
                            Default PYTHON_ROOT; /usr/local on Unix, Linux, etc.
                            Default PYTHON_ROOT; /usr on Cygwin.
    --with-pydebug          Build Boost.Python libraries using the
                            Python debug runtime.
" ;
    EXIT "" ;
}

local with-install = ;
local with-stage = ;

# build only, or build+install
if install in $(ARGV)
{
    with-install = install ;
    with-stage = ;
}

# stage only? (no install, only build and stage to a common dir)
if stage in $(ARGV)
{
    with-stage = stage ;
    with-install = ;
}

# possible stage only location
local stage-locate = [ MATCH "^--stagedir=(.*)" : $(ARGV) ] ;
stage-locate ?= stage ;

# architecture independent files
local boost-locate = [ unless $(with-stage) : [ MATCH "^--prefix=(.*)" : $(ARGV) ] : $(stage-locate) ] ;
if $(NT) { boost-locate ?= C:\\Boost ; }
else if $(UNIX) { boost-locate ?= /usr/local ; }

# architecture dependent files
local exec-locate = [ MATCH "^--exec-prefix=(.*)" : $(ARGV) ] ;
exec-locate ?= $(boost-locate) ;

# object code libraries
local lib-locate = [ MATCH "^--libdir=(.*)" : $(ARGV) ] ;
lib-locate ?= $(exec-locate)/lib ;

# where to build
local all-locate = [ MATCH "^--builddir=(.*)" : $(ARGV) ] ;
ALL_LOCATE_TARGET ?= $(all-locate) ;

# source header files
local include-locate = [ MATCH "^--includedir=(.*)" : $(ARGV) ] ;
include-locate ?= $(boost-locate)/include ;

# location of python
local python-root = [ MATCH "^--with-python=(.*)" : $(ARGV) ] ;
PYTHON_ROOT ?= $(python-root) ;

# variant for pydebug build
local with-debug-python ;
if --with-pydebug in $(ARGV)
{
    with-debug-python = debug-python ;
}

#
project-root ;

# bring in the rules for python
SEARCH on <module@>python.jam = $(BOOST_BUILD_PATH) ;
include <module@>python.jam ;

#
local version-tag = [ MATCH "^([^.]+).([^.]+)" : $(BOOST_VERSION) ] ;
if $(NT) { version-tag = $(version-tag:J=) ; }
else { version-tag = $(version-tag:J=".") ; }
version-tag = $(version-tag:J=) ;

stage $(lib-locate:D=)
    :
        # please order by name to ease maintenance
        <dll>libs/date_time/build/boost_date_time
        <lib>libs/date_time/build/boost_date_time
        <lib>libs/filesystem/build/boost_filesystem
        [ cond [ check-python-config ] :
            <dll>libs/python/build/boost_python
            <lib>libs/python/build/boost_python ]
        <dll>libs/regex/build/boost_regex
        <lib>libs/regex/build/boost_regex
        <dll>libs/signals/build/boost_signals
        <lib>libs/signals/build/boost_signals
        [ unless $(NT) :
            <dll>libs/test/build/boost_prg_exec_monitor
            <dll>libs/test/build/boost_test_exec_monitor
            <dll>libs/test/build/boost_unit_test_framework ]
        <lib>libs/test/build/boost_prg_exec_monitor
        <lib>libs/test/build/boost_test_exec_monitor
        <lib>libs/test/build/boost_unit_test_framework
        <dll>libs/thread/build/boost_thread
    :
        <locate>$(lib-locate:D)
        common-stage-tag <tag><postfix>-$(version-tag)
        [ cond $(with-install) : <target>install : <target>all ]
        [ cond $(with-stage) : <target>stage : <target>all ]
    :
        debug release [ cond $(with-debug-python) : debug-python ] <threading>single/multi
        [ unless $(with-install) $(with-stage) : <suppress>true ]
    ;

stage $(include-locate:D=)/boost-$(version-tag)
    :
        [ glob-tree $(BOOST_ROOT)/boost/compatibility/cpp_c_headers : c* ]
        [ glob-tree $(BOOST_ROOT)/boost : *.hpp *.ipp ]
    :
        <locate>$(include-locate:D)
        <tree-subdirs>$(BOOST_ROOT)
        [ cond $(with-install) : <target>install : <target>all ]
    :
        [ unless $(with-install) : <suppress>true ]
    ;
