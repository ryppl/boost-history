To build using g++:
===================

> setenv CXX g++ 
>
> ./configure \
    --with-pythoninc=/usr/local/include/python1.5 \ 
    --with-extra-includes=/usr/local/STLport
>
> make install
   
where 
    --with-pythoninc: the directory where 'Python.h' lives
    --with-extra-includes: the directory where STLport includes 
        or the 'limits' header are
        

To build using another compiler:
================================

> setenv CXX CC  # your compiler
>
> ./configure \
    --with-pythoninc=/usr/local/include/python1.5 \ 
    --with-shared-cxx-linker="$CXX -G" \
    --with-position-independent-code-flag=-pic
>
> make install
    
where 
    --with-pythoninc: as above
    --with-shared-cxx-linker: command to build a shared library from C++
            object files (needed for Python modules)
    --with-position-independent-code-flag: flag that tells the compiler 
            to create position independent code (needed for shared linking)

        
more options:
=============

> ./configure --help

of particular interest are:

  --libdir: the install directory for 'libboostpython.a'
  --with-shared-library-extension: the file extension for shared libraries  
  --with-extra-libs: link modules against these extra libs 
                     (on CYGWIN, you need to link against python15.lib)

For most options, configure provides reasonable defaults, given in brackets.
In particular, it is able to guess the right settings for shared library 
creation and linking on some common systems. Likewise, it tries to find Python
in some standard directories if you don't specify a path explicitly.
