# Property testing Jamfile
#
# Copyright (c) 2011
# Edward Diener
#

import testing ;

project property_tests : requirements <warnings>on
                                      <toolset>gcc:<warnings>all
                                      <toolset>gcc-4.5.0:<linkflags>"-Wl,--enable-auto-import"
                                      <toolset>msvc:<warnings>all
                                      <toolset>msvc:<cxxflags>"-wd4512"
                                      <toolset>msvc-9.0:<define>"_SCL_SECURE_NO_WARNINGS"
                                      <toolset>msvc-10.0:<define>"_SCL_SECURE_NO_WARNINGS"
                                      ;

test-suite property
    : 
        [ run test_auto_predicate_character.cpp ]
        [ run test_auto_predicate_enum.cpp ]
        [ run test_auto_predicate_floating_point.cpp ]
        [ run test_auto_predicate_integer.cpp ]
        [ run test_auto_reference.cpp ]
        [ run test_auto_value_bool.cpp ]
        [ run test_auto_value_character.cpp ]
        [ run test_auto_value_enum.cpp ]
        [ run test_auto_value_floating_point.cpp ]
        [ run test_auto_value_integer.cpp ]
        [ run test_auto_value_pointer.cpp ]
        [ run test_auto_value_user_defined.cpp ]
        [ run test_callable_reference.cpp ]
        [ run test_callable_value_bool.cpp ]
        [ run test_callable_value_character.cpp ]
        [ run test_callable_value_enum.cpp ]
        [ run test_callable_value_floating_point.cpp ]
        [ run test_callable_value_integer.cpp ]
        [ run test_callable_value_pointer.cpp ]
        [ run test_callable_value_user_defined.cpp ]
        [ run test_data_predicate_character.cpp ]
        [ run test_data_predicate_enum.cpp ]
        [ run test_data_predicate_floating_point.cpp ]
        [ run test_data_predicate_integer.cpp ]
        [ run test_data_reference.cpp ]
        [ run test_data_value_bool.cpp ]
        [ run test_data_value_character.cpp ]
        [ run test_data_value_enum.cpp ]
        [ run test_data_value_floating_point.cpp ]
        [ run test_data_value_integer.cpp ]
        [ run test_data_value_pointer.cpp ]
        [ run test_data_value_user_defined.cpp ]
        [ run test_function_reference.cpp ]
        [ run test_function_value_bool.cpp ]
        [ run test_function_value_character.cpp ]
        [ run test_function_value_enum.cpp ]
        [ run test_function_value_floating_point.cpp ]
        [ run test_function_value_integer.cpp ]
        [ run test_function_value_pointer.cpp ]
        [ run test_function_value_user_defined.cpp ]
        [ run test_functor_reference.cpp ]
        [ run test_functor_value_bool.cpp ]
        [ run test_functor_value_character.cpp ]
        [ run test_functor_value_enum.cpp ]
        [ run test_functor_value_floating_point.cpp ]
        [ run test_functor_value_integer.cpp ]
        [ run test_functor_value_pointer.cpp ]
        [ run test_functor_value_user_defined.cpp ]
        [ run test_member_data_predicate_character.cpp ]
        [ run test_member_data_predicate_enum.cpp ]
        [ run test_member_data_predicate_floating_point.cpp ]
        [ run test_member_data_predicate_integer.cpp ]
        [ run test_member_data_reference.cpp ]
        [ run test_member_data_value_bool.cpp ]
        [ run test_member_data_value_character.cpp ]
        [ run test_member_data_value_enum.cpp ]
        [ run test_member_data_value_floating_point.cpp ]
        [ run test_member_data_value_integer.cpp ]
        [ run test_member_data_value_pointer.cpp ]
        [ run test_member_data_value_user_defined.cpp ]
        [ run test_member_function_reference.cpp ]
        [ run test_member_function_value_bool.cpp ]
        [ run test_member_function_value_character.cpp ]
        [ run test_member_function_value_enum.cpp ]
        [ run test_member_function_value_floating_point.cpp ]
        [ run test_member_function_value_integer.cpp ]
        [ run test_member_function_value_pointer.cpp ]
        [ run test_member_function_value_user_defined.cpp ]
    ;
