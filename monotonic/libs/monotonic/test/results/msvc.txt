results of running test at:
https://svn.boost.org/svn/boost/sandbox/monotonic/libs/monotonic/test/compare_memory_pool.cpp

===================================================
		SMALL
===================================================
list_create<int>: reps=50000, len=100, steps=10..........
completed in 10.372s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1       3.2         5         5       2.2
  11      1.52      3.19      4.81         2
  21      1.46      3.89      5.14      2.03
  31      1.45       3.8      5.14         2
  41      1.38      4.13      5.71      1.97
  51      1.39      4.51      5.73      2.03
  61      1.34      4.73      5.51      2.09
  71      1.29       4.9      5.29      1.99
  81      1.25      5.13      5.19      1.97
  91      1.23      5.46      5.65      1.99

list_sort<int>: reps=5000, len=100, steps=10..........
completed in 3.33s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1         1         3         3         1
  11      1.35      2.59      3.24      1.47
  21      1.12       2.2      2.84       1.2
  31         1      1.85      2.44      1.12
  41     0.792      1.42      2.13     0.887
  51      0.87      1.57         2      1.09
  61     0.857      1.48      1.97      1.02
  71     0.708      1.18      1.76     0.798
  81     0.817      1.43      1.83     0.963
  91     0.817      1.28      2.83     0.935

vector_create<int>: reps=2000000, len=100, steps=10..........
completed in 30.3s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1      2.67      3.67      2.43      1.31
  11      2.85      3.33      2.93      1.42
  21      2.96      3.38      2.94      1.53
  31      2.98      3.42      2.87      1.54
  41      2.97      3.41      2.77      1.49
  51      2.99       3.4      2.72      1.45
  61      3.11       3.5      2.72      1.45
  71       3.2      3.56      2.71      1.45
  81      3.24      3.56      2.72      1.42
  91      3.31      3.61      2.86      1.44

vector_sort<int>: reps=20000, len=100, steps=10..........
completed in 1.12s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1       2.5         4         3       1.5
  11      1.45      1.45      1.27      1.09
  21      1.13      1.21      1.13         1
  31      1.14      1.14      1.14         1
  41      1.56      1.67      1.33         1
  51       1.4       1.4       1.2         1
  61      1.44      1.44      1.19         1
  71      1.42      1.29      1.13      1.08
  81      1.46      1.33      1.17     0.958
  91      1.28      1.22      1.09     0.969

vector_dupe: reps=100000, len=100, steps=10..........
completed in 2.63s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1       2.8         4       3.6         2
  11      2.78      3.67      3.61      1.83
  21      2.89      3.58      3.63      1.79
  31      2.95      3.55       3.4      1.75
  41      2.95      3.48      3.29      1.71
  51         3       3.5      3.14      1.68
  61      2.83      3.42      2.96      1.58
  71      3.04      3.75      2.96      1.58
  81      3.04         4      3.24       1.6
  91      2.93      3.96         3      1.52

list_dupe: reps=20000, len=100, steps=10..........
completed in 8.79s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1       2.5         5      4.75       2.5
  11      1.32      3.05      4.32      1.84
  21      1.28      3.22      4.94      1.84
  31      1.12      3.12      4.44      1.72
  41      1.21      3.69      5.12      1.93
  51      1.21      3.96      5.03      1.97
  61      1.17      4.12      5.16      1.95
  71      1.17      4.48      5.19      1.92
  81      1.18      4.91      5.12      1.91
  91      1.15      4.93      5.08      1.86

vector_accumulate: reps=500000, len=100, steps=10..........
completed in 8.39s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1      2.83      3.52      2.31      1.38
  11      2.81      3.25      2.75      1.38
  21      2.86      3.13      2.66      1.36
  31      2.81      3.12      2.62       1.4
  41      2.76      2.91      2.39      1.33
  51      2.78      3.02      2.49      1.35
  61      2.76      3.02       2.4      1.35
  71       2.8      3.13      2.37      1.35
  81      2.82       3.3      2.38      1.37
  91      2.79      3.35      2.43      1.34

set_vector: reps=50, len=100, steps=10..........
completed in 1.66s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1     -1.#J     -1.#J     -1.#J     -1.#J
  11      1.#J      1.#J      1.#J      1.#J
  21         4         2         2         1
  31         8       1.5         1       0.5
  41        18       2.5       1.5         1
  51      33.5       3.5         2       1.5
  61      43.7      3.67         2      1.33
  71      64.8      3.75      1.75      1.25
  81      54.8       4.2       1.8       1.2
  91      97.1      3.86      1.43         1

map_vector<int>: reps=500, len=100, steps=10..........
completed in 18.9s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1     -1.#J      1.#J      1.#J      1.#J
  11        22         1         2         1
  21        51       1.5       1.5         1
  31       160         2         2         1
  41       236      1.67      1.67      1.33
  51       431      2.33         2      1.67
  61       538         2      2.25       1.5
  71       811      2.25       2.5       1.5
  81       922       2.2       2.2       1.4
  91 1.26e+003       2.6       2.6       1.6

===================================================
		MEDIUM
===================================================
list_create<int>: reps=10000, len=1000, steps=10..........
completed in 44.9s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1         2       2.5       2.5       1.5
 101       1.3         6      5.53      2.13
 201      1.27      9.34      5.64         2
 301      1.26      12.9       5.8      2.06
 401      1.23      16.1      5.84      2.03
 501      1.22      19.6      6.04      2.04
 601      1.23      23.2      6.02      2.02
 701      1.21      26.3         6         2
 801      1.24      29.6      5.94      1.98
 901      1.25      33.2       5.9         2

list_sort<int>: reps=5000, len=1000, steps=10..........
completed in 25.2s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1         2         3         2         1
 101     0.854      1.35      1.75     0.981
 201     0.748      1.12      1.54     0.871
 301     0.702      1.03      1.47     0.844
 401     0.698     0.975      1.42     0.829
 501     0.631     0.888      1.27     0.751
 601     0.685     0.971      1.37      0.81
 701     0.789      1.04       1.4     0.797
 801     0.713     0.924      1.31      0.83
 901     0.656      0.92      1.29      0.79

vector_create<int>: reps=1000, len=100000, steps=10..........
completed in 2.2s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1      1.#J     -1.#J      1.#J     -1.#J
10001         5       3.6         1         1
20001       4.5       4.5      1.25      1.13
30001      4.23      4.08         1     0.923
40001      4.24      4.24         1         1
50001      4.45       4.6      1.05      1.05
60001      4.54       4.5      1.08      1.08
70001      4.31      4.31         1         1
80001      4.18      4.26     0.971         1
90001      4.35      4.32         1      1.11

vector_sort<int>: reps=30000, len=1000, steps=10..........
completed in 12.7s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1         6         7         5       2.5
 101      1.36      1.36      1.13     0.979
 201      1.28      1.27      1.07      1.01
 301      1.18       1.2      1.03     0.994
 401      1.19      1.19      1.02      0.98
 501      1.19       1.2      1.02      1.04
 601      1.18      1.16      1.02     0.988
 701      1.16      1.16      1.01     0.978
 801      1.18      1.17     0.993     0.975
 901      1.18      1.17      1.01     0.988

vector_dupe: reps=500, len=10000, steps=10..........
completed in 0.21s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1     -1.#J      1.#J     -1.#J     -1.#J
1001      1.#J      1.#J      1.#J     -1.#J
2001         4         4         1         1
3001         5         6         2         2
4001         7         7         2         1
5001       4.5         4         1         1
6001         5       5.5         1         1
7001         6         6         1       1.5
8001         7         7       1.5       1.5
9001      5.33      5.33         1         1

list_dupe: reps=500, len=1000, steps=10..........
completed in 4.61s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1     -1.#J      1.#J     -1.#J     -1.#J
 101      1.25      5.25      4.75         2
 201      1.14      8.14      5.14      1.86
 301       1.1      11.4       5.6         2
 401      1.23      14.6      5.62      1.92
 501      1.18      16.9      5.29      1.94
 601      1.15      20.1       5.4      1.95
 701      1.17      22.4      5.17      1.92
 801      1.15      25.7      5.26      1.89
 901      1.16      28.2      5.06      1.81

vector_accumulate: reps=50000, len=2000, steps=10..........
completed in 3.76s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1       4.5      4.75      2.25       1.5
 201      3.31      3.46      2.77      1.31
 401       3.2       3.2      2.35      1.25
 601      3.19      3.15         2      1.11
 801      3.09      3.09      1.85      1.15
1001      3.12       3.1      1.73       1.1
1201      3.08      3.08      1.63      1.08
1401      3.09      3.11       1.6      1.09
1601      3.05      3.05      1.55      1.08
1801      3.09      3.07      1.48      1.07

set_vector: reps=20, len=500, steps=5.....
completed in 7.4s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1     -1.#J     -1.#J     -1.#J     -1.#J
 101        24      3.67      1.67      1.67
 201        57      6.17      1.42         1
 301      57.3      8.79      1.42      1.13
 401       112      12.1      1.37      1.05

map_vector<int>: reps=50, len=1000, steps=10..........
completed in 9.87s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1     -1.#J     -1.#J     -1.#J     -1.#J
 101         8         1         2         1
 201        24       1.5       1.5         1
 301        74       2.5         2       1.5
 401       157       3.5         3         2
 501       200         3      2.33      1.67
 601       257         3       2.5       1.5
 701       321         3         2       1.4
 801       405      2.83      1.83      1.33
 901       493      2.86      1.86      1.43

===================================================
		LARGE
===================================================
list_create<int>: reps=10, len=25000, steps=10..........
completed in 18.5s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1     -1.#J     -1.#J     -1.#J     -1.#J
2501         2        67         4         2
5001         1       132         4       1.5
7501       1.5       284       6.5         2
10001         1       337         5         2
12501         1       318       3.8       1.6
15001         1       455       4.6       1.8
17501       1.4       614       5.6         2
20001      1.17       678      5.17      1.83
22501      1.29       758      5.14      1.86

list_sort<int>: reps=10, len=100000, steps=10..........
completed in 12.5s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1     -1.#J     -1.#J     -1.#J     -1.#J
10001     0.633     0.767      1.03       0.8
20001     0.683       0.8      1.07     0.717
30001     0.649     0.787      1.03     0.713
40001     0.635     0.778      1.08     0.778
50001     0.625     0.781      1.03     0.713
60001     0.629     0.766      1.02     0.701
70001     0.612      28.5      1.01     0.698
80001     0.613     0.778      1.01     0.733
90001     0.616     0.762      1.02     0.705

vector_create<int>: reps=1000, len=1000000, steps=10..........
completed in 5.53s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1      1.#J     -1.#J     -1.#J     -1.#J
100001      4.83      4.34      1.05      1.29
200001      4.72      4.47      1.23      1.44
300001      4.52       4.4      1.08      1.25
400001      4.45      4.43      1.13      1.26
500001      4.44      4.42      1.17      1.21
600001      4.48       4.4       1.1      1.28
700001      4.33      4.49      1.14      1.25
800001      4.38      4.38      1.38      1.53
900001       4.5      4.41      1.09      1.59

vector_sort<int>: reps=300, len=500000, steps=10..........
completed in 92.9s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1     -1.#J      1.#J     -1.#J     -1.#J
50001      1.15      1.13      1.03      1.02
100001      1.12      1.12     0.993         1
150001      1.13      1.11      1.13      1.13
200001      1.12      1.11      1.14      1.13
250001      1.13      1.12      1.14      1.14
300001      1.11      1.11      1.13      1.13
350001      1.15      1.11      1.13      1.21
400001      1.11      1.11      1.13      1.13
450001       1.1       1.1      1.12      1.12

vector_dupe: reps=200, len=10000000, steps=10..........
completed in 3.02s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1     -1.#J     -1.#J     -1.#J     -1.#J
1000001      5.81      5.75      3.56      4.44
2000001      5.81      5.81      3.56         4
3000001      5.35      5.53      3.18      3.35
4000001      5.88      5.75      3.69      4.13
5000001       5.5       5.5      3.56         4
6000001      5.41      5.59      3.41      3.94
7000001      5.44      5.39      3.39      4.06
8000001      5.53      5.59      3.53      3.82
9000001      5.65      5.94      5.06      4.18

list_dupe: reps=50, len=10000, steps=10..........
completed in 30.4s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1     -1.#J     -1.#J     -1.#J     -1.#J
1001      1.67      36.3         6      2.33
2001      1.14      58.1      4.86      1.86
3001      1.27      82.8      4.55      1.82
4001      1.07       116      4.86         2
5001      1.18       150      4.94      1.88
6001       1.2       182       5.1       1.9
7001      1.17       210      5.04      1.83
8001      1.19       243      4.96      1.89
9001      1.19       264      4.97      1.87

vector_accumulate: reps=500, len=10000000, steps=10..........
completed in 4.01s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1     -1.#J      1.#J     -1.#J     -1.#J
1000001      3.02      3.04      1.11      1.89
2000001      2.92      2.98      1.46      1.27
3000001      2.93         3      1.07       1.3
4000001      3.08      2.94      1.06      1.45
5000001      3.04      3.02      1.09      1.21
6000001      2.98         3      1.04      1.17
7000001      2.92      2.96       1.1      1.19
8000001      3.04      2.94      1.02      1.24
9000001      2.87      2.87      1.26      1.13

set_vector: reps=5, len=2000, steps=5.....
completed in 53.8s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1     -1.#J     -1.#J     -1.#J     -1.#J
 401      24.9      12.8      1.44      1.33
 801      77.8      22.2      1.18      1.05
1201       153      32.9      1.09     0.989
1601       154      43.4      1.06     0.988

map_vector<int>: reps=10, len=50000, steps=10..........
completed in 1.4e+003s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1     -1.#J     -1.#J     -1.#J     -1.#J
5001      48.7      7.11      1.78      1.44
10001       184      12.2      1.84      1.26
15001       413      17.4       1.8      1.23
20001       802      22.9      1.95       1.3
25001  1.4e+003      29.8      1.83      1.21
30001 2.17e+003      32.3       1.8      1.23
35001 3.04e+003      37.9      1.79      1.23
40001 3.79e+003      40.1      1.69      1.16
45001 4.81e+003      43.8      1.63      1.16

tests completed in 1814.6s
