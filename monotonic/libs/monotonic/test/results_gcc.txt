U    ../../../libs/monotonic/test/compare_memory_pool.cpp
Updated to revision 54133.
g++ (Ubuntu 4.3.3-5ubuntu4) 4.3.3
list_create<int>: reps=1000, len=1000, steps=10..........
completed in 2.97s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1       nan       nan       nan       nan
 101       nan       inf       inf       nan
 201         1         4         0         1
 301       nan       inf       inf       inf
 401         0        16         2         3
 501         1        21         3         3
 601         1        34         4         4
 701         1        35         5         4
 801         1        52         4         5
 901       0.5        28       2.5         3

list_sort<int>: reps=5000, len=1000, steps=10..........
completed in 14.6s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1       nan       nan       nan       nan
 101       0.8       1.2       1.4       1.6
 201      1.25         2      1.88       1.5
 301     0.824      1.35      1.12      1.24
 401     0.864      1.36      1.36      1.32
 501     0.846      1.46      1.42      1.46
 601       0.9      1.57      1.53       1.5
 701     0.923      1.49      1.28      1.31
 801     0.902      1.51      1.49      1.41
 901     0.936      1.47       1.4      1.38

sort_vector<int>: reps=20000, len=1000, steps=10..........
completed in 5.8s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1       inf       nan       nan       nan
 101         3         4         2         3
 201       1.5      1.25      0.75      1.25
 301      1.25      1.25         1         1
 401      1.11      1.44     0.889     0.889
 501      1.09      1.36     0.727         1
 601      1.06      1.18     0.941     0.941
 701      1.35      1.41     0.941         1
 801      1.29      1.47         1      1.06
 901      1.29      1.24      0.81     0.952

dupe_vector: reps=1000000, len=10000, steps=10..........
completed in 7.76s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1       4.2       4.4       0.4       0.6
1001         4      4.67      1.83      1.33
2001      2.75       3.5       1.5      1.12
3001      3.67         5      1.83      1.33
4001      3.43      3.86      1.86      1.29
5001      3.83      4.83      2.17      1.33
6001      3.83      4.67         2       1.5
7001      3.71      4.14      1.71      1.29
8001         3      3.75      1.62      1.12
9001      3.57      4.14      1.86      1.43

dupe_list: reps=20000, len=1000, steps=10..........
completed in 112s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1       nan       nan       nan       nan
 101     0.625      6.12      3.25         3
 201     0.529      8.59      2.94      2.76
 301       0.5      11.6      3.12      2.81
 401     0.515        15      2.97         3
 501     0.538      19.2      3.28      3.15
 601     0.532      23.4      3.11      3.19
 701     0.526      25.1      3.02      2.86
 801      0.54      29.4      3.16      3.11
 901     0.594      33.4      3.36      3.17

vector_accumulate: reps=5000000, len=2000, steps=10..........
completed in 32.2s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1      4.43      4.39     0.565     0.478
 201      3.72      3.78         1         1
 401      3.75      3.78     0.969     0.969
 601      3.76      4.03      1.14     0.966
 801      3.26      3.62      1.03     0.941
1001      3.86      4.31      1.07      1.03
1201      3.52      3.84     0.968     0.903
1401      3.74      4.26      1.06         1
1601      3.83       4.2      1.07      1.03
1801      3.68      3.84      1.03     0.903

vector_random_sort: reps=2000, len=1000, steps=10..........
completed in 83.2s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1       nan       nan       nan       nan
 101         9       0.5         1         1
 201      27.7      1.33         1         1
 301      42.2         1         1         1
 401        74      1.17         1         1
 501      72.6      1.12         1      1.12
 601       105       1.2         1       0.8
 701      90.9      1.27      1.09      1.09
 801       118      1.31         1         1
 901       221      1.21         1     0.929

set_vector: reps=5000, len=500, steps=10..........
completed in 13.2s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1       nan       nan       nan       nan
  51         1       1.5      1.75       1.5
 101     0.889      1.44      1.56      1.11
 151     0.929      1.57       1.5      1.43
 201      0.75       1.6       1.2       1.2
 251         1      1.76      1.62      1.38
 301     0.962      1.73      1.58      1.31
 351     0.938      1.69      1.44      1.28
 401     0.897      1.67      1.44      1.18
 451      1.03      1.97      1.63      1.53

map_vector<int>: reps=500, len=1000, steps=10..........
completed in 365s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1       nan       nan       nan       nan
 101        18         1         0         0
 201       125         2         2         2
 301       205       1.5       1.5       0.5
 401       466       2.5         2       1.5
 501       626      1.67      1.67         1
 601  1.21e+03      2.67      1.67      1.67
 701   2.1e+03      2.67      2.33      1.33
 801  1.91e+03       2.2       1.2       1.2
 901  2.26e+03         2      1.67         1

tests completed in 637s
