results of running test at:
https://svn.boost.org/svn/boost/sandbox/monotonic/libs/monotonic/test/compare_memory_pool.cpp

===================================================
		SMALL
===================================================
list_create<int>: reps=50000, len=100, steps=10..........
completed in 10.629s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1      2.67      4.33       4.5      1.83
  11       1.5      3.27      4.55      2.14
  21      1.37      3.42      4.68         2
  31      1.35      3.73         5      2.02
  41      1.26      4.24      5.31      2.03
  51      1.32      4.61      5.43      2.05
  61      1.33      4.85      5.49      2.02
  71      1.26      5.08      5.29      2.05
  81      1.25      5.17      5.47      1.98
  91      1.23       5.6      5.43      1.97

list_sort<int>: reps=5000, len=100, steps=10..........
completed in 3.15s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1      1.#J      1.#J      1.#J      1.#J
  11      1.53         3       3.8         2
  21      1.27       2.5      3.18       1.5
  31      1.06         2      2.59      1.22
  41      1.05      1.77      2.38      1.18
  51      0.98      1.69      2.24      1.14
  61     0.931      1.55      2.16       1.1
  71     0.955      1.49      2.07      1.09
  81      1.01      1.43         2      1.07
  91     0.897      1.31      1.97      1.03

sort_vector<int>: reps=20000, len=100, steps=10..........
completed in 1.18s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1       3.5         5         4       1.5
  11      1.42      1.33       1.5      1.25
  21      1.26      1.26      1.35      1.09
  31      1.11       1.2      1.26      1.06
  41      1.67      1.89      1.78         1
  51      1.25      1.44      1.38      1.06
  61      1.29      1.41      1.35         1
  71       1.3      1.43       1.3      1.09
  81      1.33      1.38      1.33         1
  91      1.35      1.39      1.26       1.1

dupe_vector: reps=100000, len=100, steps=10..........
completed in 2.83s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1      3.09         4      3.64      2.09
  11         3      3.83      3.83      1.94
  21      2.95      3.84      3.79      1.89
  31      2.81      3.71      3.76      1.76
  41         3      3.67      3.67      1.86
  51         3      3.77       3.5      1.82
  61         3       3.7      3.61      1.78
  71      3.29      4.04       3.5      1.96
  81      2.71      3.89      3.21      1.61
  91      2.89      4.07      3.18      1.64

dupe_list: reps=20000, len=100, steps=10..........
completed in 8.99s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1       2.6       4.8       3.8       2.4
  11      1.42      3.05      4.42      1.89
  21      1.24      3.24      4.59      1.79
  31      1.09      3.04      4.06      1.63
  41      1.08      3.59      4.72      1.56
  51      1.15      3.75      4.47      1.89
  61      1.21      4.13      5.05      1.82
  71      1.03      3.75      4.19      1.55
  81      1.18      4.63      4.72       1.8
  91      1.19      4.98      5.05       1.8

vector_accumulate: reps=500000, len=100, steps=10..........
completed in 8.79s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1       2.9      3.48      2.36      1.48
  11      3.06       3.1      2.65      1.35
  21      2.64         3      2.51      1.34
  31      2.57      2.85      2.46      1.33
  41      2.58      3.19      2.55      1.31
  51      2.57      2.91      2.63      1.32
  61       2.6      3.01      2.27      1.43
  71      2.67      3.04      2.24      1.76
  81      3.62      3.21      2.33      1.38
  91      2.96      3.34      2.41      1.31

vector_random_sort: reps=5000, len=100, steps=10..........
completed in 69.5s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1         3         3         2         1
  11      45.6       1.8         2       1.8
  21       109      1.63      1.38      1.13
  31       158      1.55      1.36      1.18
  41       202      1.47      1.33      1.07
  51       157      1.42      1.26         1
  61       433       1.5      1.27      1.05
  71       235      1.46      1.31      1.04
  81       293     0.824     0.804     0.608
  91       835       1.4      1.17         1

set_vector: reps=50, len=100, steps=10..........
completed in 11s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1      1.#J     -1.#J     -1.#J     -1.#J
  11      1.#J     -1.#J      1.#J     -1.#J
  21        14         1         1         1
  31        64         3         3         2
  41        82         2         2         1
  51       174         4       2.5       1.5
  61       172       2.5       1.5      0.75
  71       325      3.75      1.75         1
  81       498       4.4       1.6       1.2
  91       957       4.5      1.67      1.33

map_vector<int>: reps=500, len=100, steps=10..........
completed in 22.5s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1         1         0         0         0
  11        25         1         1         1
  21       108         3         3         2
  31       171         2         2         1
  41       250      1.67      1.67         1
  51       348       1.5       1.5         1
  61       590         2         2       1.5
  71       906      2.25       2.5       1.5
  81 1.11e+003       2.2       2.2       1.4
  91 1.36e+003      2.17         2      1.33

===================================================
		MEDIUM
===================================================
list_create<int>: reps=10000, len=1000, steps=10..........
completed in 45.1s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1         4         6         6         3
 101      1.23      6.27      5.53      2.07
 201      1.13      8.84      5.35      1.89
 301      1.18      12.6      5.86      1.98
 401      1.21      16.1      5.87      1.97
 501      1.16      19.5      5.87      1.96
 601      1.19      23.3      5.88      1.97
 701       1.2      26.8      6.35      2.04
 801      1.15      30.4      5.97      1.99
 901      1.16      33.2      5.95      1.98

list_sort<int>: reps=5000, len=1000, steps=10..........
completed in 24.3s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1         2         3         2         1
 101      1.01      1.34       1.9      1.05
 201     0.844       1.1      1.61     0.955
 301     0.795      1.06      1.55     0.898
 401     0.782      1.04      1.49     0.876
 501     0.763      1.01      1.46     0.884
 601     0.755     0.991      1.44     0.863
 701     0.748     0.996      1.45     0.873
 801     0.754     0.972      1.42     0.859
 901     0.741     0.971      1.41      0.86

sort_vector<int>: reps=30000, len=1000, steps=10..........
completed in 15.5s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1         4      4.33         3      1.67
 101      1.53      2.72      1.19         1
 201      1.39      3.11      1.12      1.02
 301      1.27      2.48      1.05         1
 401      1.31      3.26      1.04      1.01
 501      1.24      2.78      1.03      1.05
 601      1.24      2.45      1.03      1.01
 701      1.21      2.29      1.07      1.02
 801       1.2      2.16         1     0.987
 901      1.17      1.96         1         1

dupe_vector: reps=500, len=10000, steps=10..........
completed in 4.34s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1     -1.#J     -1.#J      1.#J     -1.#J
1001       184        11         1         0
2001       112        15         1         1
3001       282         7         3         2
4001       246       5.5         1         1
5001       381         6         2       1.5
6001       361      5.33         1         1
7001       296      4.75         1         1
8001       3.5      5.75      1.25      1.25
9001      4.25       5.5       1.5      1.25

dupe_list: reps=500, len=1000, steps=10..........
completed in 4.67s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1     -1.#J      1.#J     -1.#J      1.#J
 101      1.25      5.25      4.25         2
 201      1.14      7.86      5.14         2
 301      1.09      10.2      4.82      1.91
 401      1.14      13.4      5.07      1.86
 501      1.18      16.9      5.29      1.88
 601      1.35      21.4       5.2       1.9
 701      1.17      22.6         6      1.88
 801      1.18      24.6      4.93      2.07
 901      1.19      27.8      4.91      1.78

vector_accumulate: reps=5000, len=2000, steps=10..........
completed in 0.414s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1         2         2         1         1
 201         5         5         4         2
 401       3.5       3.5         2       1.5
 601       4.5       4.5         3       1.5
 801         3         3         2         1
1001         3       2.8       1.8         1
1201       3.4       3.4       1.8       1.2
1401         4       3.8       1.8       1.4
1601      3.33      3.17       1.5      1.17
1801         4      3.14      1.43      1.14

vector_random_sort: reps=100, len=1000, steps=10..........
completed in 0.843s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1     -1.#J     -1.#J     -1.#J     -1.#J
 101         4         1         1         1
 201         7         1         1         1
 301      11.5         2         1         1
 401      12.3      1.33      1.33      1.33
 501      12.4       1.2         1       0.8
 601      16.8       1.2       1.2       1.2
 701      18.2      1.17         1         1
 801      19.3      1.14         1         1
 901      25.7      1.25      1.13         1

set_vector: reps=20, len=500, steps=5.....
completed in 20.8s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1     -1.#J     -1.#J     -1.#J     -1.#J
 101        21       3.5       2.5         1
 201      69.9      6.36      1.36      1.36
 301       202      9.09       1.3      1.04
 401       366      12.4      1.26         1

map_vector<int>: reps=50, len=1000, steps=10..........
completed in 9.96s
 len    fast/m    pool/m     std/m     tbb/m
--------------------------------------------
   1     -1.#J     -1.#J     -1.#J     -1.#J
 101         7         1         1         2
 201        48         3         3         2
 301      73.5       2.5         2       1.5
 401       105         2         2      1.33
 501       150      2.25      1.75      1.25
 601       257         3      2.25      1.25
 701       336       2.8         2       1.2
 801       493       3.6       2.4       1.6
 901       492      3.29      1.86      1.14

tests completed in 264.52s
