* Unit test
  NEARLY DONE * test operations
  * test vector_space_algebra, maybe with some proto lib
  NEARLY DONE * test copying
    * include controlled_error_stepper_fsal
    * include dense_output_explicit
    * inlcude dense_output_controlled_explicit_fsal
  * test gsl
  DIFFICULT * test explicit stepper with ranges
    * discuss
  * split check_concepts into check_stepper_concept, check_error_stepper_concept, check_controlled_stepper_concept
  * include test/thrust in jam system, use system from
* implicit euler, include dfdt
* same interface for implicit_euler and rosenbrock4
DIFFICULT * finishing change of controlled_stepper to units
  * check if rosenbrock controller and controlled_stepper can both be used with the explicit steppers
  OK * move error_checker into controlled_stepper
  * rename controlled_stepper to a more specific name
* file cleanup
   * split resizing and copy/destruct/construct in different files
   * subfolder algebra, operations, util
* general:
  * check if everywhere static_cast< value_type > is used
  * check header guards
  * check copyright note
  * documente every file in the preamble
  * check once more, if all contructor, destructors and assign-operators are present

* Integrate functions
* skript for setting the include defines according to the position in file system an writing a general copyright comment at the beginning

* Documentation
* Tutorials 



DONE:

OK * change standard_operations::rel_error in order to word with units and test it
OK * include implicit euler
  OK * call via std::pair< deriv , jacobi >
  OK * resizing
OK * operations that fit units
OK * operations that fit result_of
OK * change stepper to stepper_units
OK * change error_stepper to error_stepper_units
OK * change dense_output to units
  OK * roll out dense_output_explicit_euler::calc_state() to explicit_euler::dense_output()
  OK * roll out dense_output_dopri5::calc_state() to explicit_error_dopri5::dense_output()
  OK * create dense_output_explicit
  OK * create dense_output_explicit_controlled_fsal
OK * change resizing concept, in order to word within the implicit steppers
OK * in all tests and regression test do not include odeint.hpp, only include the headers which are really needed
OK * start new doc or cleanup the old project
OK * unit test
  OK * test standard_algebra
  OK * test fusion_algebra
  OK * test, if copy construct of stepper_base is called when explicit_euler is used
  OK * test units with dense output
OK * include rosenbrock4 in trunk