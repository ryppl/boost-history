<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE header PUBLIC "-//Boost//DTD BoostBook XML V1.0//EN"
  "http://www.boost.org/tools/boostbook/dtd/boostbook.dtd">
<header name="boost/signals2/optional_last_value.hpp" last-revision="$Date: 2007-03-06 16:51:55 -0500 (Tue, 06 Mar 2007) $">
  <namespace name="boost">
    <namespace name="signals2">
      <class name="optional_last_value">
        <template>
          <template-type-parameter name="T"/>
        </template>

        <purpose>Evaluate an <conceptname>InputIterator</conceptname> sequence and return
          a boost::optional which contains the last value in the sequence, or an
          empty boost::optional if the sequence was empty.</purpose>

        <typedef name="result_type"><type><classname>boost::optional</classname>&lt;T&gt;</type></typedef>

        <method-group name="invocation">
          <method name="operator()" cv="const">
            <template>
              <template-type-parameter name="InputIterator"/>
            </template>
            <type>result_type</type>
            <parameter name="first">
              <paramtype>InputIterator</paramtype>
            </parameter>
            <parameter name="last">
              <paramtype>InputIterator</paramtype>
            </parameter>

            <effects><para>Attempts to dereference every iterator in the sequence <computeroutput>[first, last)</computeroutput>.
              </para></effects>
            <returns>
              <para>
                The result of the last successful iterator dereference, wrapped in a <classname>boost::optional</classname>.
                The returned <code>optional</code> will be empty if no iterators were dereferenced.
              </para>
            </returns>
            <throws><para>Does not throw.</para></throws>
          </method>
        </method-group>
      </class>

      <class-specialization name="optional_last_value">
        <template/>
        <specialization>
          <template-arg>void</template-arg>
        </specialization>

        <purpose>Evaluate an InputIterator sequence.</purpose>

        <typedef name="result_type">
          <type><emphasis>unspecified</emphasis></type>
        </typedef>

        <method-group name="invocation">
          <method name="operator()" cv="const">
            <template>
              <template-type-parameter name="InputIterator"/>
            </template>
            <type>result_type</type>
            <parameter name="first">
              <paramtype>InputIterator</paramtype>
            </parameter>
            <parameter name="last">
              <paramtype>InputIterator</paramtype>
            </parameter>

            <effects><para>Attempts to dereference every iterator in the sequence <computeroutput>[first, last)</computeroutput>.
              </para></effects>
          </method>
        </method-group>
      </class-specialization>
    </namespace>
  </namespace>
</header>
