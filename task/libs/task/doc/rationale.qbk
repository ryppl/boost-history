[/
          Copyright Oliver Kowalke 2009.
 Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at
          http://www.boost.org/LICENSE_1_0.txt
]


[section:rationale Appendix A: Rationale]

* task : because future does not catch std::exceptions, boost::thread_interrupted, boost::exception
         support of task-id

* pool : work-stealing and pre-forking of threads, inline execution of local tasks; scheduling
         default pool with worker-threads as cores

* this-task : functions useable inside tasks

* handle : async completion token, task interruption, association with task via task-id

* async : from mailing-list, execution of task in current thread, new thread in pool

[endsect]
