[/
          Copyright Oliver Kowalke 2009.
 Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at
          http://www.boost.org/LICENSE_1_0.txt
]


[section:channel Channel]

The channel synchronizes the access between non-pool threads (application threads)  and __worker_threads__ and implements a queuing policy (limitation of queued _tasks__).


[heading __bounded_channel__]

__bounded_channel__ contains a single lock in order to synchronize access to the queue. The number of pending __tasks__ is limited in order to prevent resource exhaustion.
For this purpose a high- and low-watermark has to be passed at construction.
__hwm__ sets the maximum of pending tasks. If this limited is reached all threads which submit a task will be set to sleep (blocked). If it is equal to __lwm__ everytime a 
sleeping producer thread will be woken up and puts its task if one worker thread has taken a task from the channel.
__lwm__ sets the threshold when blocked threads get woken up. If it is less than __hwm__ all sleeping producer threads will be woken up if
the amount of pending tasks reaches __lwm__.


[heading __unbounded_channel__]

__unbounded_channel__ contains a single lock in order to synchronize access to the queue. An unlimited number of __tasks__ can be queued into this channel.
The insertion of an __task__ will never block. If the channel becomes empty __worker_threads__ will be set to sleep until new __tasks__ are enqueued.


[endsect]
