[/
          Copyright Oliver Kowalke 2009.
 Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at
          http://www.boost.org/LICENSE_1_0.txt
]


[section:high_watermark Class `high_watermark`]

``
	#include <boost/task/watermark.hpp>

	class high_watermark
	{
	public:
		explicit high_watermark( std::size_t value);

		operator std::size_t () const;
	};
``

[heading Constructor]

	explicit high_watermark( std::size_t value)

[variablelist
[[Effects:] [constructs a `boost::tp::high_watermark` instance]]
[[Throws:] [`boost::task::invalid_watermark`]]
]


[heading Member function `operator std::size_t()`]

	operator std::size_t () const

[variablelist
[[Effects:] [returns high watermark]]
[[Throws:] [Nothing]]
]

[endsect]


[section:low_watermark Class `low_watermark`]

``
	#include <boost/task/watermark.hpp>

	class low_watermark
	{
	public:
		explicit low_watermark( std::size_t value);

		operator std::size_t () const;
	};
``

[heading Constructor]

	explicit low_watermark( std::size_t value)

[variablelist
[[Effects:] [constructs a `boost::task::low_watermark` instance]]
[[Throws:] [`boost::task::invalid_watermark`]]
]


[heading Member function `operator std::size_t()`]

	operator std::size_t () const

[variablelist
[[Effects:] [returns low watermark]]
[[Throws:] [Nothing]]
]


[endsect]