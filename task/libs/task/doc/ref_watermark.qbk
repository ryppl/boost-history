[/
  (C) Copyright 2008 Oliver Kowalke.
  Distributed under the Boost Software License, Version 1.0.
  (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt).
]

[section:high_watermark Class `high_watermark`]

    #include <boost/tp/watermark.hpp>

    class high_watermark
    {
    public:
      explicit high_watermark( std::size_t value);

      operator std::size_t () const;
    };

[section:constructor Constructor]

    explicit high_watermark( std::size_t value);

[variablelist
[[Effects:] [Constructs a `boost::tp::high_watermark` instance.]]
[[Throws:] [`boost::tp::invalid_watermark`]]
]
[endsect]

[section:operator Member function `operator std::size_t()`]

    operator std::size_t () const;

[variablelist
[[Effects:] [Returns high watermark.]]
[[Throws:] [Nothing]]
]
[endsect]

[endsect]


[section:low_watermark Class `low_watermark`]

    #include <boost/tp/watermark.hpp>

    class low_watermark
    {
    public:
      explicit low_watermark( std::size_t value);

      operator std::size_t () const;
    };

[section:constructor Constructor]

    explicit low_watermark( std::size_t value);

[variablelist
[[Effects:] [Constructs a `boost::tp::low_watermark` instance.]]
[[Throws:] [`boost::tp::invalid_watermark`]]
]
[endsect]

[section:operator Member function `operator std::size_t()`]

    operator std::size_t () const;

[variablelist
[[Effects:] [Returns low watermark.]]
[[Throws:] [Nothing]]
]
[endsect]

[endsect]