[/
          Copyright Oliver Kowalke 2009.
 Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at
          http://www.boost.org/LICENSE_1_0.txt
]


[section:static_pool Static thread-pool]

__boost_task__ provides __static_pool__ - which contains an fixed set of pre-forked __worker_threads__ (the size of the pool doesn't change during its lifetime).
__static_pool__ supports move semantics.


``
        boost::task::_static_pool<					 // pool type
                boost::task::unbounded_twolock_fifo  // queue where application threads enqueue tasks
        > pool(
                boost::task::poolsize( 6),                         // pool with 6 pre-forked worker-threads
                boost::posix_time::posix_time::milliseconds( 50),  // time to sleep if no work-item available
                boost::task::scanns( 10) );                        // iterations over local-queues before sleep
``


The first argument of the constructor specifies how many __worker_threads__ the pool will contain. The second
and third argument are used by the [link_work_stealing __work_stealing__] algorithm.

[note If __bounded_queue__ is used as queuing policy the constructor has two additional arguments . ]

__static_pool__ provides functionality to check the status of the pool - __fn_closed__ returns true when the pool was
shutdown and __fn_size__returns the number of __worker_threads__.

[endsect]

