[/
  (C) Copyright 2008 Oliver Kowalke.
  Distributed under the Boost Software License, Version 1.0.
  (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt).
]

[section:reschedule_until Non-member function `reschedule_until()`]

    #include <boost/tp/pool.hpp>

	template< typename Pred >
	void reschedule_until( Pred const&);

[variablelist
[[Effects:] [Reschedules current task until passed callable predicate becomes ready.] 
[[Throws:] [Nothing.]]
[[Note:] [This function resides in namespace `boost::this_task`.]]
]

[endsect]

[section:get_thread_pool Non-member function `get_thread_pool()`]

    #include <boost/tp/pool.hpp>

	template< typename Pool >
	Pool & get_thread_pool();

[variablelist
[[Effects:] [Returns reference to the thread pool where the current worker thread is running.] 
[[Throws:] [Nothing.]]
[[Note:] [This function resides in namespace `boost::this_task`.]]
]

[endsect]

[section:is_worker Non-member function `is_worker()`]

    #include <boost/tp/pool.hpp>

	bool is_worker();

[variablelist
[[Effects:] [Returns true if the current thread is a worker-thread form a pool.]
[[Throws:] [Nothing.]]
[[Note:] [This function resides in namespace `boost::this_task`.]]
]

[endsect]

[section:worker_id Non-member function `worker_id()`]

    #include <boost/tp/pool.hpp>

	thread::id worker_id();

[variablelist
[[Effects:] [Returns returns the thread-id of the worker-thread.]
[[Throws:] [Nothing.]]
[[Note:] [This function resides in namespace `boost::this_task`.]]
]

[endsect]
