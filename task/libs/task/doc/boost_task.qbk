[/
          Copyright Oliver Kowalke 2009.
 Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at
          http://www.boost.org/LICENSE_1_0.txt
]


[library Boost.Task
    [quickbook 1.4]
    [authors [Kowalke, Oliver]]
    [copyright 2009 Oliver Kowalke]
    [purpose C++ Library for asynchronous execution of tasks]
    [category text]
    [license
        Distributed under the Boost Software License, Version 1.0.
        (See accompanying file LICENSE_1_0.txt or copy at
        [@http://www.boost.org/LICENSE_1_0.txt])
    ]
]

[def __boost__ [*boost-1.39.0]]
[def __boost_task__ [*Boost.Task]]
[def __boost_thread__ [@http://www.boost.org/libs/thread [*Boost.Thread]]]
[def __boost_future__ [@http://www.justsoftwaresolutions.co.uk/threading/updated-implementation-of-c++-futures-3.html [*Boost.Future]]]

[template link_coop_task[link_text] [link boost_task.cooperative_task [link_text]]]
[template link_channel[link_text] [link boost_task.channel [link_text]]]
[template link_forkjoin[link_text] [link boost_task.forkjoin [link_text]]]
[template link_task[link_text] [link boost_task.task [link_text]]]
[template link_ws[link_text] [link boost_task.pool.work_stealing [link_text]]]

[def __hardware_concurrency__ `boost::thread::hardware_concurrency()`]
[def __thread__ `boost::thread`]

[def __as_sub_task__ `as_sub_task`]
[def __bounded_channel__ `bounded_channel`]
[def __default_pool__ `default_pool`]
[def __duration__ `Duration`]
[def __handle__ `handle`]
[def __new_thread__ `new_thread`]
[def __own_thread__ `own_thread`]
[def __task__ `task`]
[def __system_time__ `system_time`]
[def __unbounded_channel__ `unbounded_channel`]

[def __fn_async__ `async()`]
[def __fn_default__pool__ `default_pool()`]
[def __fn_delay__ `delay()`]
[def __fn_get__ `get()`]
[def __fn_get_id__ `get_id()`]
[def __fn_get_pool__ `get_pool()`]
[def __fn_has_value__ `has_value()`]
[def __fn_has_exception__ `has_exception()`]
[def __fn_interrupt__ `interrupt()`]
[def __fn_interrupt_and_wait__ `interrupt_and_wait()`]
[def __fn_interruption_requested__ `interruption_requested()`]
[def __fn_is_ready__ `is_ready()`]
[def __fn_make_task__ `make_task()`]
[def __fn_reschedule_until__ `reschedule_until()`]
[def __fn_runs_in_pool__ `runs_in_pool()`]
[def __fn_wait__ `wait()`]
[def __fn_worker_id__ `worker_id()`]
[def __fn_yield__ `yield()`]

[def __act__ `asynchronous-completion-token`]
[def __ae__ `asynchronous-executor`]
[def __aes__ `asynchronous-executors`]
[def __blocked__ ['blocked]]
[def __fork_join__ ['fork/join]]
[def __interruption_point__ ['interruption point]]
[def __task_id__ ['task id]]
[def __thread_pool__ ['thread pool]]
[def __work_stealing__ ['work stealing]]
[def __worker_queue__ ['worker queue]]
[def __worker_thread__ ['worker thread]]


[include overview.qbk]
[include reference.qbk]
[include appendices.qbk]
