[/
          Copyright Oliver Kowalke 2009.
 Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at
          http://www.boost.org/LICENSE_1_0.txt
]


[library Boost.Task
    [quickbook 1.4]
    [authors [Kowalke, Oliver]]
    [copyright 2009 Oliver Kowalke]
    [purpose C++ Library for asynchronous execution of tasks]
    [category text]
    [license
        Distributed under the Boost Software License, Version 1.0.
        (See accompanying file LICENSE_1_0.txt or copy at
        [@http://www.boost.org/LICENSE_1_0.txt])
    ]
]

[def __boost__ [*boost-1.39.0]]
[def __boost_fiber__ [*Boost.Fiber]]
[def __boost_task__ [*Boost.Task]]
[def __boost_thread__ [@http://www.boost.org/libs/thread [*Boost.Thread]]]
[def __boost_future__ [@http://www.justsoftwaresolutions.co.uk/threading/updated-implementation-of-c++-futures-3.html [*Boost.Future]]]

[template link_async[link_text] [link boost_task.async [link_text]]]
[template link_queue[link_text] [link boost_task.execution_policy.pool.queue [link_text]]]
[template link_forkjoin[link_text] [link boost_task.execution_policy.pool.forkjoin [link_text]]]
[template link_handle[link_text] [link boost_task.async_completion_token.handle [link_text]]]
[template link_own_thread[link_text] [link boost_task.own_thread [link_text]]]
[template link_pool[link_text] [link boost_task.execution_policy.pool [link_text]]]
[template link_task[link_text] [link boost_task.task [link_text]]]
[template link_work_stealing[link_text] [link boost_task.execution_policy.pool.work_stealing [link_text]]]

[def __shared_future__ `boost::shared_future`]
[def __thread__ `boost::thread`]
[def __thread_id__ `boost::thread::id`]

[def __hardware_concurrency__ `boost::thread::hardware_concurrency()`]

[def __as_sub_task__ `boost::task::as_sub_task`]
[def __attribute_type__ `boost::task::attribute_type`]
[def __bounded_queue__ `boost::task::bounded_queue`]
[def __dynamic_pool__ `boost::task::dynamic_pool`]
[def __handle__ `boost::task::handle`]
[def __has_attribute__ `boost::task::has_attribute`]
[def __hwm__ `boost::task::high_watermark`]
[def __lwm__ `boost::task::low_watermark`]
[def __new_thread__ `boost::task::new_thread`]
[def __own_thread__ `boost::task::own_thread`]
[def __pool_size__ `boost::task::poolsize`]
[def __priority__ `boost::task::priority`]
[def __replace_oldest__ `boost::task::replace_oldest`]
[def __static_pool__ `boost::task::static_pool`]
[def __system_time__ `boost::task::system_time`]
[def __take_oldest__ `boost::task::take_oldest`]
[def __task__ `boost::task::task`]
[def __task_interrupted__ `boost::task::task_interrupted`]
[def __unbounded_queue__ `boost::task::unbounded_queue`]

[def __make_task__ `boost::task::make_task()`]
[def __waitfor_all__ `boost::task::waitfor_all()`]
[def __waitfor_any__ `boost::task::waitfor_any()`]

[def __fn_delay__ `boost::this_task::delay()`]
[def __fn_get_pool__ `boost::this_task::get_pool()`]
[def __fn_tt_interrupt__ `boost::this_task::interrupt()`]
[def __fn_interruption_requested__ `boost::this_thread::interruption_requested()`]
[def __fn_make_task__ `boost::task::make_task()`]
[def __fn_reschedule_until__ `boost::this_task::reschedule_until()`]
[def __fn_runs_in_pool__ `boost::this_task::runs_in_pool()`]
[def __fn_worker_id__ `boost::this_task::worker_id()`]
[def __fn_yield__ `boost::this_task::yield()`]

[def __fn_async__ `boost::task::async()`]
[def __fn_make_task__ `boost::task::make_task()`]

[def __fn_bind_to_processors__ `bind_to_processors()`]
[def __fn_closed__ `close()`]
[def __fn_get__ `get()`]
[def __fn_get_future__ `get_future()`]
[def __fn_has_value__ `has_value()`]
[def __fn_has_exception__ `has_exception()`]
[def __fn_interrupt__ `interrupt()`]
[def __fn_interrupt_and_wait__ `interrupt_and_wait()`]
[def __fn_interrupt_and_wait_for__ `interrupt_and_wait_for()`]
[def __fn_interrupt_and_wait_until__ `interrupt_and_wait_until()`]
[def __fn_interruption_requested__ `interruption_requested()`]
[def __fn_is_ready__ `is_ready()`]
[def __fn_operator__ `operator()()`]
[def __fn_size__ `size()`]
[def __fn_shutdown__ `shutdown()`]
[def __fn_shutdown_now__ `shutdown_now()`]
[def __fn_wait__ `wait()`]
[def __fn_wait_for__ `wait_for()`]
[def __fn_wait_until__ `wait_until()`]


[def __act__ ['asynchronous-completion-token]]
[def __ep__ ['execution-policy]]
[def __eps__ ['execution-policies]]
[def __blocked__ ['blocked]]
[def __callable__ ['callable]]
[def __coop_task__ ['cooperative task]]
[def __duration__ ['Duration]]
[def __fork_join__ ['fork/join]]
[def __interruption_point__ ['interruption-point]]
[def __interruption_points__ ['interruption-points]]
[def __queue__ ['queue]]
[def __task_id__ ['task-id]]
[def __thread_pool__ ['thread-pool]]
[def __thread_pools__ ['thread-pools]]
[def __sub_task__ ['sub-task]]
[def __sub_tasks__ ['sub-tasks]]
[def __work_item__ ['work-item]]
[def __work_items__ ['work-items]]
[def __work_stealing__ ['work-stealing]]
[def __worker_queue__ ['worker-queue]]
[def __worker_thread__ ['worker-thread]]
[def __worker_threads__ ['worker-threads]]


[include overview.qbk]
[include introduction.qbk]
[include task.qbk]
[include async.qbk]
[include async_completion_token.qbk]
[include execution_policy.qbk]
[include utilities.qbk]
[include meta_functions.qbk]
[include reference.qbk]
[include appendices.qbk]
