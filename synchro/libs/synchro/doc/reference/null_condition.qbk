[/
 / Copyright (c) 2008-2009 Vicente J. Botet Escriba
 /
 / Distributed under the Boost Software License,
 / Version 1.0. (See accompanying file LICENSE_1_0.txt or
 / copy at http://www.boost.org/LICENSE_1_0.txt)
 /]


[/==========================================================================================]
[section:null_condition_hpp Header `<boost/synchro/null_condition.hpp>`]
[/==========================================================================================]

    namespace boost { namespace synchro {

        class null_condition {
        private:
           null_condition(const null_condition &);
           null_condition &operator=(const null_condition &);
        public:
           null_condition();
           ~null_condition();

           void notify_one();

           void notify_all();

           template <typename L>
           void wait(L& lock);

           template <typename L, typename Pr>
           void wait(L& lock, Pr pred);

           template <typename L>
           bool timed_wait(L& lock, const boost::posix_time::ptime &abs_time);

           template <typename L, typename Pr>
           bool timed_wait(L& lock, const boost::posix_time::ptime &abs_time, Pr pred);

        };
        template <>
        struct best_condition<null_mutex> {
            typedef null_condition type;
        };
    }}

[endsect]
