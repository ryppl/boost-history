[/
 / Copyright (c) 2008-2009 Vicente J. Botet Escriba
 /
 / Distributed under the Boost Software License,
 / Version 1.0. (See accompanying file LICENSE_1_0.txt or
 / copy at http://www.boost.org/LICENSE_1_0.txt)
 /]


[/==========================================================================================]
[section:on_derreference_locking_ptr_hpp Header `<boost/synchro/locker/on_derreference_locking_ptr.hpp>`]
[/==========================================================================================]

    namespace boost { namespace synchro {
        template<typename T, typename Lockable>
        class on_derreference_locking_ptr;
    }}

[section Class `on_derreference_locking_ptr`]
[*Synopsis]

    template<typename T, typename Lockable>
    class on_derreference_locking_ptr {
    public:
        class pointer {
        public:
            explicit pointer(T* target, Lockable* mutex);
            ~pointer();
            T *operator->();
        };

        explicit on_derreference_locking_ptr(T &target, Lockable& mutex);
        pointer operator->() const;
    };

[*Description]


[endsect]

[endsect]
