[/
 / Copyright (c) 2008-2009 Vicente J. Botet Escriba
 /
 / Distributed under the Boost Software License,
 / Version 1.0. (See accompanying file LICENSE_1_0.txt or
 / copy at http://www.boost.org/LICENSE_1_0.txt)
 /]


[/==========================================================================================]
[section:poly_adaptive_lock_hpp Header `<boost/synchro/poly/adaptive_lock.hpp>`]
[/==========================================================================================]

[section Class `adaptive_lock`]
An adaptive general locking class that defers the decision of lockable type to run time.

[*Synopsis]

[*Description]

This class, as locable, provide a set of general locking APIs.
However, it defers our decision of what kind of lockable to use to the run time and delegates
all locking operations to the actual lockable. Users must define a constructor in their subclass
to initialize lock_.

[*`adaptive_lock` public member functions]

# `;`


[endsect]

[endsect]
