[section XML Parser]
[def __xml__ [@http://en.wikipedia.org/wiki/XML XML format]]
[def __xml_parser.hpp__ [headerref boost/property_tree/xml_parser.hpp xml_parser.hpp]]
[def __TinyXML__ [@http://sourceforge.net/projects/tinyxml TinyXML]]
[def __boost__ [@http://www.boost.org Boost]]
The __xml__ is an industry standard for storing information in textual
form. Unfortunately, there is no XML parser in __boost__ as of the
time of this writing. Therefore, a custom parser was created. It only supports
a core subset of XML standard. For example, declarations and entity references
are not supported. The parser is built with Spirit, and based on the XML grammar
sample by Daniel Nuffer. As an alternative, a parser based on
__TinyXML__ is also provided. To enable it define
[^BOOST_PROPERTY_TREE_XML_PARSER_TINYXML] before including the
__xml_parser.hpp__ file. __TinyXML__ library has to be obtained separately.

XML / property tree conversion schema (__read_xml__ and __write_xml__):

* Each XML element corresponds to a property tree node. The child elements
  correspond to the children of the node.
* The attributes of an XML element are stored in the subkey [^<xmlattr>]. There
  is one child node per attribute in the attribute node. Existence of the
  [^<xmlattr>] node is not guaranteed or necessary when there are no attributes.
* XML comments are stored in nodes named [^<xmlcomment>], unless comment
  ignoring is enabled via the flags.
* Text content is stored in one of two ways, depending on the flags. The default
  way concatenates all text nodes and stores them in a single node called
  [^<xmltext>]. This way, the entire content can be conveniently read, but the
  relative ordering of text and child elements is lost. The other way stores
  each text content as a separate node, all called [^<xmltext>].

With comments and text node separation enabled, this conversion round-trips for
the supported subset of XML.
[endsect] [/xml_parser]
