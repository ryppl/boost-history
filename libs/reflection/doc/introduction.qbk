[/ Boost.Reflection - intro ]
[/ Copyright 2007 Jeremy Pack ]
[/ Distributed under the Boost Software License, Version 1.0. (See]
[/ accompanying file LICENSE_1_0.txt or copy at ]
[/ http://www.boost.org/LICENSE_1_0.txt) ]
[/ See http://www.boost.org/ for latest version. ]

[section:introduction Introduction]

The goal of this library is to provide runtime reflection for C++ classes, and to allow the
same across shared library boundaries. It is an offshoot of the Extension library, which
provides dynamic class loading across shared libraries. [link extension Extension Interoperability]
provides an example of using these libraries together.

Boost.Reflection does not provide automatic reflection of classes. Instead, the class data must
be manually reflected. This does offer some benefits however:

* This can result in better performance, since only the necessary functions are reflected.
* Arbitrary classes can be reflected without modification.
* It is possible to make a reflected interface that is quite different from the original interface.


This library is currently in development in preparation for a review for inclusion in the
Boost C++ Libraries. For ongoing status updates, check
[@http://boost-extension.blogspot.com/ C++ Plugins and Reflection].

[endsect]
