#WORK_AROUNDS:
#  2005-06-14: mpl vector_c.hpp files:

#    PROBLEM_DESCRIPTION:

#      Some main targets in this Jamfile.v2 require modifications of
#      the vector_c.hpp files below boost/mpl/aux_/preprocessed.
#      These modifications enable use of enumerators as elements of a
#      vector_c.

#    SOLUTION:

#      The required modification can be done by executing the following
#      command:
  
#        python preprocess.py all $(BOOST_ROOT) vector_c.cpp
#  
#      in libs/mpl/preprocessed *after* replacing:
#  
#        boost/mpl/aux_/sequence_wrapper.hpp
#  
#      with the corresponding file in the boost-sandbox.

#    OPERATING_SYSTEMS:
  
#      The above works for windows.  However for linux/unix like
#      systems, the files:

#        libs/mpl/preprocessed/preprocess.py
#        libs/mpl/preprocessed/preprocess

#      should also be copied from the sandbox to the corresponding
#      files below your $(BOOST_ROOT) *before* implementing the steps
#      described under SOLUTION:

#    TESTED:

#      The only vector_c.hpp's modified by the above which have been
#      tested are in subdirectories:

#        gcc
#        plain

#      The only operating system tested is linux/debian.

#-----------------------------------------------------------------

import testing
  ;

rule run-utf ( name : other-sources * )
#Purpose:
#  Short-hand for linking with boost_unit_test_framework
{
    return 
    [
      run 
        $(name).cpp 
        $(other-sources)
        $(BOOST_ROOT)/libs/test/build//boost_unit_test_framework 
      : : :
        <define>CONTAINER_SINGLE_OBJ_ID  
        <define>SP_COUNTED_BASE_ISA_OBJ_ID
        <define>USE_CONTAINER_INTERN
    ]
      ;
}

project
  : requirements 
  : default-build debug
  ;

run-utf smart_ptr_test
  :
  ;

run std_ptr_shared_ptr_test.cpp
  ;

run-output collector_sp_counted_tagged_test
  : collector_sp_counted_tagged_test.cpp
    ../src/detail/collector_sp_counted_tagged.cpp
  ;

run-utf sp_graph_dfs_print_test
  :     ../../utility/build//debug
    ../../io/filters/build//mout
  ;

run-utf std_ptr_binary_node_test
  : ../src/detail/sp_counted_accepting.cpp
    ../src/detail/collector_sp_counted_tagged.cpp
    ../../utility/build//debug
    ../../io/filters/build//mout
  #2005-06-23
  #  Added tests for container_two (stl-like containers).  Tests
  #  for container_two pass; however, there's a serious problem
  #  mentioned in ChangeLog to shared_count_hook_sp_counted_accepting.hpp.
  #2005-06-17
  #  Test for add_spid_tests<std_shared_graph_tagged>
  #  for cycle_{1,2}_external
  #  still fails (despite the "shared_count_hook*" changes which
  #  corrected the order of release and tag zeroing).  In addition,
  #  std_shared_graph_accepting for TestId=1:std_numeral=1
  #  (i.e. simple_cycle_1_external_sp and std_shared_graph_accepting)
  #  now fails.
  #2005-06-13
  #  Test fails for add_spid_tests<std_shared_graph_tagged>
  #  for cycle_{1,2}_external
  ;

