[section:exp_dist Exponential]

``#include <boost/math/distributions/exponential.hpp>``

   template <class RealType = double>
   class exponential_distribution
   {
   public:
      typedef RealType value_type;

      exponential_distribution(RealType lambda = 1);

      RealType lambda()const;
   };

   typedef exponential_distribution<double> exponential;

The exponential distribution is a distribution with PDF:

f(x) = lambda * e[super -lambda*x]

[h4 Member Functions]

   exponential_distribution(RealType lambda = 1);
   
Constructs an Exponential distribution with parameter /lambda/.  Lambda
is defined as the reciprocal of the scale parameter.

   RealType lambda()const;
   
Returns the lambda parameter of the distribution.
   
[h4 Non-member Accessors]

All the [link math_toolkit.dist.dist_ref.nmp usual non-member accessor functions]
that are generic to all distributions are supported: __usual_accessors.

[h4 Accuracy]

The exponential distribution is implemented in terms of the 
standard library functions exp, log, and expm1
and as such should have very low error rates.

[h4 Implementation]

In the following table /l/ is the parameter lambda of the distribution, 
/x/ is the random variate, /p/ is the probability and /q = 1-p/.

[table
[[Function][Implementation Notes]]
[[pdf][Using the relation: pdf = l * exp(-l * x) ]]
[[cdf][Using the relation: p = 1 - exp(-x * l) = -expm1(-x * l) ]]
[[cdf complement][Using the relation: q = exp(-x * l) ]]
[[quantile][Using the relation: x = -log(1-p) / l = -log1p(-p) / l]]
[[quantile from the complement][Using the relation: x = -log(q) / l]]
[[mean][1/l]]
[[standard deviation][1/l]]
[[mode][0]]
[[skewness][2]]
[[kurtosis][9]]
[[kurtosis excess][6]]
]

[endsect][/section:exp_dist Exponential]

[/ exponential.qbk
  Copyright 2006 John Maddock and Paul A. Bristow.
  Distributed under the Boost Software License, Version 1.0.
  (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt).
]

