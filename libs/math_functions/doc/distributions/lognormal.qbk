[section:lognormal_dist Log Normal Distribution]

The lognormal distribution is the distribution that arises
when the logarithm of the random variable is normally distributed.

For location and scale parameters /m/ and /s/ it is defined by the
probability density function:

f(x; m, s) = e[super -(ln(x) - m)[super 2 ] / 2s[super 2 ] ] / (x * s * sqrt(2pi))

``#include <boost/math/distributions/lognormal.hpp>``

   namespace boost{ namespace math{ 
      
   template <class RealType>
   class lognormal_distribution;
   
   typedef lognormal_distribution<double> lognormal;
   
   template <class RealType>
   class lognormal_distribution
   {
   public:
      typedef RealType value_type;
      // Construct:
      lognormal_distribution(RealType location = 0, RealType scale = 1);
      // Accessors:
      RealType location()const;
      RealType scale()const;
   };
   
   }} // namespaces
   
[h4 Member Functions]

   lognormal_distribution(RealType location = 0, RealType scale = 1);
   
Constructs a lognormal distribution with location /location/ and 
scale /scale/.

The location parameter is the same as the mean of the logarithm of the
random variate.

The scale parameter is the same as the standard deviation of the
logarithm of the random variate.

   RealType location()const;
   
Returns the /location/ parameter of this distribution.
   
   RealType scale()const;
      
Returns the /scale/ parameter of this distribution.

[h4 Non-member Accessors]

All the [link math_toolkit.dist.dist_ref.nmp usual non-member accessor functions] that are generic to all
distributions are supported: __usual_accessors.

[h4 Accuracy]

The lognormal distribution is implemented in terms of the 
standard library log and exp functions, plus the
[link math_toolkit.special.error_function error function], 
and as such should have very low error rates.

[h4 Implementation]

In the following table /m/ is the location parameter of the distribution, 
/s/ is it's scale parameter, /x/ is the random variate, /p/ is the probability
and /q = 1-p/.

[table
[[Function][Implementation Notes]]
[[pdf][Using the relation: pdf = e[super -(ln(x) - m)[super 2 ] \/ 2s[super 2 ] ] \/ (x * s * sqrt(2pi)) ]]
[[cdf][Using the relation: p = cdf(normal_distribtion<RealType>(m, s), log(x)) ]]
[[cdf complement][Using the relation: q = cdf(complement(normal_distribtion<RealType>(m, s), log(x))) ]]
[[quantile][Using the relation: x = exp(quantile(normal_distribtion<RealType>(m, s), p))]]
[[quantile from the complement][Using the relation: x = exp(quantile(complement(normal_distribtion<RealType>(m, s), q)))]]
[[mean][e[super m + s[super 2 ] / 2 ] ]]
[[variance][(e[super s[super 2] ] - 1) * e[super 2m + s[super 2 ] ] ]]
[[mode][e[super m + s[super 2 ] ] ]]
[[skewness][sqrt(e[super s[super 2] ] - 1) * (2 + e[super s[super 2] ]) ]]
[[kurtosis][e[super 4s[super 2] ] + 2e[super 3s[super 2] ] + 3e[super 2s[super 2] ] - 3]]
[[kurtosis excess][e[super 4s[super 2] ] + 2e[super 3s[super 2] ] + 3e[super 2s[super 2] ] - 6 ]]
]

[endsect][/section:normal_dist Normal]

