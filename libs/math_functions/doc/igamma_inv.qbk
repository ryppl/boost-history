[#igamma_inv][section The Incomplete Gamma Function Inverses]

[caution __caution ]

[h4 Synopsis]

``
#include <boost/math/special_functions/gamma.hpp>
``

   namespace boost{ namespace math{
   
   template <class T>
   T gamma_Q_inv(T a, T q);
   
   template <class T>
   T gamma_P_inv(T a, T p);
   
   }} // namespaces
   
[h4 Description]

There are two incomplete gamma function inverses which return the inverses
of gamma_Q and gamma_P respectively.

Both of these function require /a > 0/ and /1 >= p,q >= 0/.

   template <class T>
   T gamma_Q_inv(T a, T q);

Returns a value x such that: `q = gamma_Q(a, x);`

   template <class T>
   T gamma_P_inv(T a, T p);
   
Returns a value x such that: `p = gamma_P(a, x);`

[h4 Accuracy]

The accuracy of these functions doesn't vary much by platform or by
the type T.  Given that these functions are computed by iterative methods,
they are deliberately "detuned" so as not to be too accurate: it is in
any case impossible for these function to be more accurate than the
regular forward incomplete gamma functions.

[h4 Testing]

There are two sets of tests: 

* Basic sanity checks attempt to "round-trip" from
/a/ and /x/ to /p/ or /q/ and back again.  These tests have quite
generous tolerances: in general both the incomplete gamma and it's
inverses change so rapidly, that round tripping to more than a couple
of significant digits isn't possible.  This is especially true when
/p/ or /q/ is very near one: in this case there isn't enough 
"information content" in the input to the inverse function to get
back where you started.
* Accuracy checks using high precision test values.  These measure
the accuracy of the result, given exact input values.

[h4 Implementation]

These two functions share a common implementation.

First an initial approximation is computed using the methodology described
in:

[@http://portal.acm.org/citation.cfm?id=23109&coll=portal&dl=ACM 
A. R. Didonato and A. H. Morris, Computation of the Incomplete Gamma 
Function Ratios and their Inverse, ACM Trans. Math. Software 12 (1986), 377-393.]

Finally, the last few bits are cleaned up using Halley iteration, the iteration
limit is set to 2/3 of the number of bits in T, which by experiment is
sufficient to ensure that the inverses are at least as accurate as the normal
incomplete gamma functions.  In testing no more than 3 iterations are required
to produce a result as accurate as the forward incomplete gamma function, and
in many cases only one iteration is required.

[endsect]

