[/ Boost.Extension - factories doc ]
[/ Copyright 2008 Jeremy Pack ]
[/ Distributed under the Boost Software License, Version 1.0. (See]
[/ accompanying file LICENSE_1_0.txt or copy at ]
[/ http://www.boost.org/LICENSE_1_0.txt) ]
[/ See http://www.boost.org/ for latest version. ]

[section:factories Factories]

In normal usage, a `factory` is initialized in a shared library, then returned
to an application with a reference to a function that can be used to create
the given implementation of the `factory` interface.

A factory has the following template options:

`factory<class T, ARGS>`

Where `T` is the interface that it returns, and `ARGS` is a variable length
list of the argument types to the factory function. The maximum possible
length of the arglist is set by `BOOST_EXTENSION_MAX_FUNCTOR_PARAMS`, which
defaults to six.

The functions available in `factory` are:
[h3 void set<D>()]
The `set` function takes a template argument describing the class that will
be created by this factory, and that implements the `T` interface. This
function may be called multiple times, to change the factory function.
[h3 bool is_valid()]
If set has been called, this returns true. Otherwise, it returns false.
[endsect]