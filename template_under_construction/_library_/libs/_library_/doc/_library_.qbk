[library _library_
    [quickbook 1.4]
    [version 0.1]
    [authors _author_reversed_]
    [copyright _year_ _author_]
    [purpose Boost Sandbox Template]
    [license
        Distributed under the Boost Software License, Version 1.0.
        (See accompanying file LICENSE_1_0.txt or copy at
        [@http://www.boost.org/LICENSE_1_0.txt])
    ]
]

[section:overview Overview]

[warning _Library_ is in very early stages of development.  At this point, it is likely
NOT a good starting point for a boost sandbox project.  The templates it generates have
not been verified for adherence to Boost guidelines, and do some things that are
inconsistent with current practices.]

[section:introduction Introduction]

_Library_ is template for Boost sandbox projects.  Given some information about the project
(e.g., library name and author), it will generate the following:
* a directory tree for the library
* commonly used source, documentation and build files
* projects for several IDEs (currently MSVC, with Xcode in the works)

The content in the generated project contains this documentation, which describes how
to use the template, and an implementation of a [classref boost::_library_::_library_
class which does nothing].

[endsect]

[section:start Getting Started]
To use the project created by _library_ fully, you will need a few things.

[important Some parts of _library_ will not work with versions of Boost other than CVS HEAD]
First of all, you should familiarize yourself with Boost.  A good starting point for this
is [@http://www.boost.org/more/getting_started/index.html the getting started page].
In particular, make sure you have installed a recent version of Boost, and have a working
bjam executable.

Second, you will need to download some additional tools to build the documentation.
Instructions for this part can be found in the [@http://www.boost.org/doc/html/boostbook.html
Boostbook documentation].  The projects generated by _library_ rely on xsltproc,
DocBook XSL and DTD distributions, and Doxygen.  _library_ does not currently use
Apache FOP.

Finally, you will need access to the sandbox in the
[@http://svn.boost.org/trac/boost/wiki/BoostSubversion Boost subversion].  Follow
the directions in the [@http://svn.boost.org/trac/boost/wiki/BoostSubversion Boost subversion wiki].

Once you have all this in place, go to the template-under-construction folder of the sandbox.
Run the make_template.py script, and follow the instructions.  For example,
the project used to build this documentation was created as follows:

[python]

    >>> import make_template
    library name: (e.g., something_new): sandbox_template
    library author[s]: (e.g., Yours Truly[,Yours D. NotTruly]): Stjepan Rajko

Some other information that might come in handy as you start working on your project:

* [@http://www.boost.org/more/lib_guide.htm#Directory_structure Boost library directory structure]
* [@http://www.stack.nl/~dimitri/doxygen/commands.html Doxygen command reference]
* [@http://www.boost-consulting.com/boost/tools/quickbook/doc/html/index.html Quickbook reference]

[endsect]


[section:bugs Known Bugs]
Reversing of author names does not work for authors with specified middle initials.

[endsect]

[section:license License]

_qbk_copyright_

[endsect]

[endsect]

[section:doxygen Doxygen Documentation]
When Doxygen documentation is used with Boostbook, as far as I can tell
only certain elements of the Doxygen documentation (such as class and function reference) can
be included into the main documentation.  Other documentation generated by Doxygen (main and
related pages, todo and bug lists, modules...) does not seem to be available.  The rationale
for this, AFAICR from a list discussion e-mail I can't find any more, is to make the generated
documentation close to a C++ standard proposal (but I might be way off here).

However, it is possible to have Doxygen create its own HTML output and [@../doxygen/index.html link]
to it from the main documentation.  While this will include everything Doxygen is configured
to generate, please note that this is inconsistent with the documentation layouts of
most recent Boost libraries.

In any case, it is probaby unwise to include both the
[@../doxygen/index.html verbatim generated Doxygen documentation] and the
[link _library_.reference reference], which is what happens how.  _Library_
should provide some options / alternatives.

[endsect]

[section:editing Editing the Templates]

The template script is currently a very simple file relocator / processor.  It copies
a template directory tree into a new location, renaming files where applicable
and substituting the contents where specified.

The following substitutions are defined on files of extensions '.hpp', '.cpp', '.v2', '.jam', '.qbk', '.vcproj', '.sln':
[table Substitutions used by _library_
    [[substitution template][substituted text]]
    [[\_boost\_library\_][The full Boost.Library name of the library]]
    [[\_library\_][The library name specified by the user]]
    [[\_Library\_][Capitalized library name]]
    [[\_LIBRARY\_][Uppercase library name]]
    [[\_python\_copyright\_][Python-style commented copyright block]]
    [[\_cpp\_copyright\_][C++-style commented copyright block]]
    [[\_qbk\_copyright\_][Copyright block with quickbook-style link]]
    [[\_author\_reversed\_][Bracketed list of authors, last name first]]
    [[\_author\_][list of authors, as specified by the user]]
    [[\_year\_][Current year]]
    [[\_msvc\_build\_uuid\_][Randomly generated UUID for MSVC build project]]
    [[\_msvc\_doc\_uuid\_][Randomly generated UUID for MSVC doc project]]
    [[\_msvc\_example\_uuid\_][Randomly generated UUID for MSVC example project]]
    [[\_msvc\_test\_uuid\_][Randomly generated UUID for MSVC test project]]
    [[\_msvc\_build\_command\_][bjam build commands used in MSVC projects]]
]

[important The substitutions are applied exactly in the order specified, so
substituted text can include substitution templates occuring later in the table
(e.g., \_cpp\_copyright\_ expands into text which includes \_author\_).  Also,
it is likely a [*bad idea] to introduce a substitution template which is substring of a [*later]
substitution template.]

[endsect]

[section:examples Documentation Examples]
This section has some examples of what you can do with documentation.  Refer to the source.

[section:examples_inserting_code Inserting Code]

Here is some code directly from an example:

[c++]

[import ../example/example.cpp]
[_library__example]

[endsect]

[endsect]

[xinclude _library__doxygen.xml]