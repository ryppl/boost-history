[library FileTemplate
    [quickbook 1.4]
    [version 0.93]
    [authors [Rajko, Stjepan]]
    [copyright 2007 Stjepan Rajko]
    [purpose generates file and directory trees from templates]
    [license
        Distributed under the Boost Software License, Version 1.0.
        (See accompanying file LICENSE_1_0.txt or copy at
        [@http://www.boost.org/LICENSE_1_0.txt])
    ]
]

[def __python__ [@http://python.org python]]
[def __uuid_module__ [@http://cheeseshop.python.org/pypi/uuid UUID module]]

[def __sandbox_template__ [link filetemplate.sandbox sandbox template]]
[def __sandbox_use__ [link filetemplate.sandbox.use sandbox use cases]]
[def __sandbox_option__ [link filetemplate.sandbox.reference.options sandbox option]]
[def __sandbox_options__ [link filetemplate.sandbox.reference.options sandbox options]]
[def __sandbox_substitutions__ [link filetemplate.sandbox.reference.substitutions sandbox substitution templates]]
[def __sandbox_tools__ [link filetemplate.sandbox.tools configuring and download]]

[def __templates__ [link filetemplate.templates templates]]
[def __template_object__ [link filetemplate.templates.reference.template template object]]
[def __results_object__ [link filetemplate.templates.reference.results results object]]
[def __python_file__ [link filetemplate.templates.phases.processing.python_files
    python generated file]]
[def __python_files__ [link filetemplate.templates.phases.processing.python_files
    python generated files]]
[def __python_script__ [link filetemplate.templates.phases.examination.template_script template script]]
[def __python_scripts__ [link filetemplate.templates.phases.examination.template_script template scripts]]
[def __global_option__ [link filetemplate.templates.reference.options global option]]
[def __global_options__ [link filetemplate.templates.reference.options global options]]
[def __FileTemplate_option__ [link filetemplate.templates.reference.options FileTemplate option]]
[def __FileTemplate_options__ [link filetemplate.templates.reference.options FileTemplate options]]
[def __template_option__ [link filetemplate.templates.reference.options template option]]
[def __template_options__ [link filetemplate.templates.reference.options template options]]
[def __substitution_template__ [link filetemplate.templates.reference.substitutions substitution template]]
[def __substitution_templates__ [link filetemplate.templates.reference.substitutions substitution templates]]
[def __invocation_phase__ [link filetemplate.templates.phases.invocation invocation phase]]
[def __template_merge__ [link filetemplate.templates.merges template merge]]
[def __template_merges__ [link filetemplate.templates.merges template merges]]
[def __command_line__ [link filetemplate.templates.phases.invocation.command_line command line]]
[python]

FileTemplate is a template processor for files and directories.  This could be useful in the
following scenarios:

* There is a generic starting point for a certain type of project.  The user can specify
information to fine-tune their particular starting point.
* The user would like to integrate their existing files into a new project for which there is a template.
The user can perform a __template_merge__ between the template
for the new project, and the existing files (acting as a second template).  If the template is implemented
appropriately, it will integrate the user's existing files.

FileTemplate is being developed to help constructing new projects for the Boost Sandbox.
The __sandbox_template__, which is used for this purpose,
is currently the only template developed using FileTemplate.

[* See the __sandbox_use__ documentation
for some examples of how to use the __sandbox_template__.]

[note FileTemplate is not an official part or tool of the Boost libraries.]

If you are interested in creating a template for a setting other than the Boost sandbox,
FileTemplate provides a basic
framework which makes producing templated file/directory trees relatively easy.
The philosophy behind the development of the framework is that simple things should be simple,
and more complicated things should be doable.  By being implemented in
Python, and allowing template-specific python scripts to be placed in a template, FileTemplate
provides a reasonable degree of flexibility.

[* See the __templates__ documentation for more information about creating and customizing templates.]

[section:sandbox Boost sandbox template]

[include sandbox.qbk]

[endsect]

[section:templates FileTemplate templates]

[include templates.qbk]

[endsect]

[section:acknowledgements Acknowledgements]

Thanks for Rene Rivera and Stefan Seefeld for their suggestions on the development of FileTemplate.

[endsect]

[section:license License]

Copyright 2007 Stjepan Rajko.
Distributed under the Boost Software License, Version 1.0. (See
accompanying file LICENSE_1_0.txt or copy at
[@http://www.boost.org/LICENSE_1_0.txt])

[endsect]
