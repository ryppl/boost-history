[/
  Copyright 2009-2011  Frédéric Bron.
  Distributed under the Boost Software License, Version 1.0.
  (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt).
]

[section:has_operator_postfix_decrement has_operator_postfix_decrement]
   template <class LHS, class RET=void>
   struct has_operator_postfix_decrement : public __tof {};

__inherit
If (i) `lhs` of type `LHS` can be used in expression `lhs--`,
and (ii) `RET=void` or the result of expression `lhs--` is convertible to `RET`
then inherits from __true_type,
otherwise inherits from __false_type.

The default behaviour (`RET=void`) is to not check for the return value of postfix `operator--`.
If `RET` is different from the default `void` type, the return value is checked to be convertible to `RET`.
Convertible to `RET` means that the return value of the operator can be used as argument to a function expecting `RET`:
``
void f(RET);
LHS lhs;
f(lhs--); // is valid if has_operator_postfix_decrement<LHS, RET>::value==true
``

This trait can not detect whether postfix `operator--` is public or not:
if `operator--` is defined as a private member of `LHS` then
instantiating `has_operator_postfix_decrement<LHS>` will produce a compiler error.
For this reason `has_operator_postfix_decrement` can not be used to determine whether a type has a public `operator--` or not.

__header `#include <boost/type_traits/has_operator_postfix_decrement.hpp>` or `#include <boost/type_traits.hpp>`

__examples


[:`has_operator_postfix_decrement<LHS, RET>::value_type` is the type `bool`.]

[:`has_operator_postfix_decrement<int>` inherits from `__true_type`.]

[:`has_operator_postfix_decrement<int, int>` inherits from `__true_type`.]

[:`has_operator_postfix_decrement<int, long>` inherits from `__true_type`.]

[:`has_operator_postfix_decrement<double, double>` inherits from `__true_type`.]

[:`has_operator_postfix_decrement<double, int>` inherits from `__true_type`.]

[:`has_operator_postfix_decrement<int, std::string>` inherits from `__false_type`.]

[:`has_operator_postfix_decrement<long>::value` is a `bool` integral constant
expression that evaluates to /true/.]

[endsect]
