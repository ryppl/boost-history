#
#  nightly.ctest -  run a nightly build of boost
#
#  Runs a checkout and build of boost and submits build results to a dartbard
#
#  Synopsis:
#
#  ctest -S nightly.ctest,Release
#  ctest -S nightly.ctest,Debug
#
#  The argument after the comma, above, must be present.
#  The failure modes for this "script" are too many to enumerate.
#

#
# Customize these to match your machine.
#

SET (CTEST_CMAKE_COMMAND "cmake")
SET (CTEST_CVS_COMMAND "svn")
SET (CTEST_SOURCE_URL "http://svn.boost.org/svn/boost/sandbox-branches/boost-cmake/boost_1_34_0")
#
# These next two must be absolute paths.  The parent, $ENV{PWD}/nightly should exist and be empty.
# If $ENV{PWD}/nightly/src exists but doesn't contain a CMakeLists.txt, you will get an 
# unhelpful error message.
SET (CTEST_SOURCE_DIRECTORY "$ENV{PWD}/nightly/src")
SET (CTEST_BINARY_DIRECTORY "$ENV{PWD}/nightly/build")

SET (CTEST_COMMAND "ctest -D Nightly -VV")

if(${CTEST_SCRIPT_ARG} MATCHES Debug)
  set(RELEASE_VARIANT_SETTING "OFF")
  set(DEBUG_VARIANT_SETTING "ON")
  set(SOURCE_DIRECTORY_PREFIX "debug")
  elseif(${CTEST_SCRIPT_ARG} MATCHES Release)
  set(RELEASE_VARIANT_SETTING "ON")
  set(DEBUG_VARIANT_SETTING "OFF")
  set(SOURCE_DIRECTORY_PREFIX "release")
  else(${CTEST_SCRIPT_ARG} MATCHES Debug)
  MESSAGE(FATAL_ERROR "Argument is \"${CTEST_SCRIPT_ARG}\" and must be one of \"Debug\" or \"Release\"")
endif(${CTEST_SCRIPT_ARG} MATCHES Debug)

FILE(MAKE_DIRECTORY "$ENV{PWD}/${SOURCE_DIRECTORY_PREFIX}")

#
#  These must be abolute paths.  You may want to customize these as well.
#

SET (CTEST_CVS_CHECKOUT "${CTEST_CVS_COMMAND} co ${CTEST_SOURCE_URL} ${CTEST_SOURCE_DIRECTORY}")

SET (CTEST_START_WITH_EMPTY_BINARY_DIRECTORY TRUE)

SET (CTEST_INITIAL_CACHE "
CMAKE_BUILD_TYPE:STRING=Debug
CMAKE_VERBOSE_MAKEFILE:BOOL=ON
BUILD_RELEASE:BOOL=${RELEASE_VARIANT_SETTING}
BUILD_DEBUG:BOOL=${DEBUG_VARIANT_SETTING}

BUILD_BOOST_DATE_TIME:BOOL=OFF
BUILD_BOOST_FILESYSTEM:BOOL=OFF
BUILD_BOOST_GRAPH:BOOL=ON
BUILD_BOOST_IOSTREAMS:BOOL=OFF
BUILD_BOOST_PROGRAM_OPTIONS:BOOL=OFF
BUILD_BOOST_PYTHON:BOOL=OFF
BUILD_BOOST_REGEX:BOOL=OFF
BUILD_BOOST_SERIALIZATION:BOOL=OFF
BUILD_BOOST_SIGNALS:BOOL=OFF
BUILD_BOOST_TEST:BOOL=OFF
BUILD_BOOST_THREAD:BOOL=OFF
BUILD_BOOST_WAVE:BOOL=OFF
BUILD_BOOST_WSERIALIZATION:BOOL=OFF

BUILD_TESTING:BOOL=ON
TEST_BOOST_FUNCTION:BOOL=OFF
TEST_BOOST_ALGORITHM:BOOL=OFF
TEST_BOOST_ANY:BOOL=OFF
TEST_BOOST_ARRAY:BOOL=OFF
TEST_BOOST_ASSIGN:BOOL=OFF
TEST_BOOST_BIND:BOOL=OFF
TEST_BOOST_CONCEPT_CHECK:BOOL=OFF
TEST_BOOST_CONFIG:BOOL=OFF
TEST_BOOST_CONVERSION:BOOL=OFF
TEST_BOOST_CRC:BOOL=OFF
TEST_BOOST_DATE_TIME:BOOL=OFF
TEST_BOOST_DISJOINT_SETS:BOOL=OFF
TEST_BOOST_DYNAMIC_BITSET:BOOL=OFF
TEST_BOOST_FILESYSTEM:BOOL=OFF
TEST_BOOST_FOREACH:BOOL=OFF
TEST_BOOST_FORMAT:BOOL=OFF
TEST_BOOST_FUNCTION:BOOL=OFF
TEST_BOOST_FUNCTIONAL:BOOL=OFF
TEST_BOOST_GRAPH:BOOL=ON
TEST_BOOST_INTEGER:BOOL=OFF
TEST_BOOST_IO:BOOL=OFF
TEST_BOOST_IOSTREAMS:BOOL=OFF
TEST_BOOST_ITERATOR:BOOL=OFF
TEST_BOOST_LAMBDA:BOOL=OFF
TEST_BOOST_LOGIC:BOOL=OFF
TEST_BOOST_MATH:BOOL=OFF
TEST_BOOST_METAPROGRAMMING:BOOL=OFF
TEST_BOOST_MULTIARRAY:BOOL=OFF
TEST_BOOST_MULTIINDEX:BOOL=OFF
TEST_BOOST_NUMERIC:BOOL=OFF
TEST_BOOST_OPTIONAL:BOOL=OFF
TEST_BOOST_PARAMETER:BOOL=OFF
TEST_BOOST_POINTER_CONTAINERS:BOOL=OFF
TEST_BOOST_POOL:BOOL=OFF
TEST_BOOST_PREPROCESSOR:BOOL=OFF
TEST_BOOST_PROGRAM_OPTIONS:BOOL=OFF
TEST_BOOST_PROPERTY_MAP:BOOL=OFF
TEST_BOOST_PYTHON:BOOL=OFF
TEST_BOOST_RANDOM:BOOL=OFF
TEST_BOOST_RANGE:BOOL=OFF
TEST_BOOST_RATIONAL:BOOL=OFF
TEST_BOOST_REGEX:BOOL=OFF
TEST_BOOST_SERIALIZATION:BOOL=OFF
TEST_BOOST_SIGNALS:BOOL=OFF
TEST_BOOST_SMART_POINTER:BOOL=OFF
TEST_BOOST_SPIRIT:BOOL=OFF
TEST_BOOST_STATECHART:BOOL=OFF
TEST_BOOST_STATIC_ASSERT:BOOL=OFF
TEST_BOOST_TEST:BOOL=OFF
TEST_BOOST_THREAD:BOOL=OFF
TEST_BOOST_TIMER:BOOL=OFF
TEST_BOOST_TOKENIZER:BOOL=OFF
TEST_BOOST_TR1:BOOL=OFF
TEST_BOOST_TUPLE:BOOL=OFF
TEST_BOOST_TYPEOF:BOOL=OFF
TEST_BOOST_TYPE_TRAITS:BOOL=OFF
TEST_BOOST_UTILITY:BOOL=OFF
TEST_BOOST_VARIANT:BOOL=OFF
TEST_BOOST_WAVE:BOOL=OFF
TEST_BOOST_XPRESSIVE:BOOL=OFF
")

