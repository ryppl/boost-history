<?xml version="1.0" encoding="utf-8"?><rss version="2.0" xmlns:boostbook="urn:boost.org:boostbook">
  <channel>
    <generator>BoostBook2RSS</generator>
    <title>Boost News</title>
    <link>http://www.boost.org/feed/news.rss</link>
    <description/>
    <language>en-us</language>
    <copyright>Distributed under the Boost Software License, Version 1.0. (See accompanying file LICENSE_1_0.txt or http://www.boost.org/LICENSE_1_0.txt)</copyright>
  <item><title>Version 1.42.0</title><pubDate>Tue 2 Feb 2010 14:00:00 GMT</pubDate><boostbook:purpose>&lt;span class=&quot;brief&quot;&gt;&lt;span class=&quot;purpose&quot;&gt;
      New Libraries: Uuid. Updated Libraries: Asio, Circular Buffer, Fusion, Graph,
      Integer, Iostreams, Program.Options, PropertyMap, Proto, Regex, Spirit, Unordered,
      Xpressive.
    &lt;/span&gt;&lt;/span&gt;</boostbook:purpose><boostbook:download>http://sourceforge.net/projects/boost/files/boost/1.42.0/</boostbook:download><description>&lt;div class=&quot;description&quot;&gt;
  
  
  
  &lt;div id=&quot;version_1_42_0.new_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;New Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/uuid/index.html&quot;&gt;Uuid&lt;/a&gt;:&lt;/span&gt;
  A universally unique
        identifier, from Andy Tompkins.
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_42_0.updated_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Updated Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/asio/index.html&quot;&gt;Asio&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Added a new HTTP Server 4 example illustrating the use of stackless coroutines
            with Asio.
          &lt;/li&gt;
          &lt;li&gt;
            Changed handler allocation and invocation to use &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;addressof&lt;/span&gt;&lt;/code&gt;
            to get the address of handler objects, rather than applying &lt;code&gt;&lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;amp;&lt;/span&gt;&lt;/code&gt;
            directly (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2977&quot;&gt;#2977&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Restricted MSVC buffer debugging workaround to 2008, as it causes a crash
            with 2010 beta 2 (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3796&quot;&gt;#3796&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3822&quot;&gt;#3822&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Fixed a problem with the lifetime of handler memory, where Windows needs
            the &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;OVERLAPPED&lt;/span&gt;&lt;/code&gt; structure
            to be valid until both the initiating function call has returned and
            the completion packet has been delivered.
          &lt;/li&gt;
          &lt;li&gt;
            Don't block signals while performing system calls, but instead restart
            the calls if they are interrupted.
          &lt;/li&gt;
          &lt;li&gt;
            Documented the guarantee made by strand objects with respect to order
            of handler invocation.
          &lt;/li&gt;
          &lt;li&gt;
            Changed strands to use a pool of implementations, to make copying of
            strands cheaper.
          &lt;/li&gt;
          &lt;li&gt;
            Ensured that kqueue support is enabled for BSD platforms (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3626&quot;&gt;#3626&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Added a &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost_&lt;/span&gt;&lt;/code&gt; prefix
            to the &lt;code&gt;&lt;span class=&quot;keyword&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;C&amp;quot;&lt;/span&gt;&lt;/code&gt;
            thread entry point function (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3809&quot;&gt;#3809&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            In &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;getaddrinfo&lt;/span&gt;&lt;/code&gt; emulation,
            only check the socket type (&lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;SOCK_STREAM&lt;/span&gt;&lt;/code&gt;
            or &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;SOCK_DGRAM&lt;/span&gt;&lt;/code&gt;) if a service
            name has been specified. This should allow the emulation to work with
            raw sockets.
          &lt;/li&gt;
          &lt;li&gt;
            Added a workaround for some broken Windows firewalls that make a socket
            appear bound to 0.0.0.0 when it is in fact bound to 127.0.0.1.
          &lt;/li&gt;
          &lt;li&gt;
            Applied a fix for reported excessive CPU usage under Solaris (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3670&quot;&gt;#3670&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Added some support for platforms that use older compilers such as g++
            2.95 (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3743&quot;&gt;#3743&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/circular_buffer/index.html&quot;&gt;Circular Buffer&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Added methods erase_begin(size_type) and erase_end(size_type) with constant
            complexity for such types of stored elements which do not need an explicit
            destruction e.g. int or double.
          &lt;/li&gt;
          &lt;li&gt;
            Similarly changed implementation of the clear() method and the destructor
            so their complexity is now constant for such types of stored elements
            which do not require an explicit destruction (the complexity for other
            types remains linear).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/fusion/index.html&quot;&gt;Fusion&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            The accumulator is the first argument to the functor of &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;fusion&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;fold&lt;/span&gt;&lt;/code&gt; and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;fusion&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;accumulate&lt;/span&gt;&lt;/code&gt;
            (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2355&quot;&gt;#2355&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Added support for associative iterators and views (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3473&quot;&gt;#3473&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/graph/index.html&quot;&gt;Graph&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Removed old interface to &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;compressed_sparse_row_graph&lt;/span&gt;&lt;/code&gt;,
            making new interface the default.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/integer/index.html&quot;&gt;Integer&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Reverted Trunk to release branch state (i.e. a &amp;quot;known good state&amp;quot;).
          &lt;/li&gt;
          &lt;li&gt;
            Fixed issues: &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/653&quot;&gt;653&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3084&quot;&gt;3084&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3177&quot;&gt;3177&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3180&quot;&gt;3180&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3548&quot;&gt;3568&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3657&quot;&gt;3657&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2134&quot;&gt;2134&lt;/a&gt;.
          &lt;/li&gt;
          &lt;li&gt;
            Added long long support to &lt;tt&gt;boost::static_log2&lt;/tt&gt;, &lt;tt&gt;boost::static_signed_min&lt;/tt&gt;,
            &lt;tt&gt;boost::static_signed_max&lt;/tt&gt;, &lt;tt&gt;boost::static_unsigned_min&lt;/tt&gt;&lt;tt&gt;boost::static_unsigned_max&lt;/tt&gt;,
            when available.
          &lt;/li&gt;
          &lt;li&gt;
            The argument type and the result type of &lt;tt&gt;boost::static_signed_min&lt;/tt&gt;
            etc are now typedef'd. Formerly, they were hardcoded as &lt;tt&gt;unsigned
            long&lt;/tt&gt; and &lt;tt&gt;int&lt;/tt&gt; respectively. Please, use the
            provided typedefs in new code (and update old code as soon as possible).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/iostreams/index.html&quot;&gt;Iostreams&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Fixed many outstanding issues. Thanks to Richard Smith for his work on
            this. (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3612&quot;&gt;#3612&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3311&quot;&gt;#3311&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2094&quot;&gt;#2094&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3010&quot;&gt;#3010&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2894&quot;&gt;#2894&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3011&quot;&gt;#3011&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3352&quot;&gt;#3352&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3505&quot;&gt;#3505&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            For more information see the &lt;a href=&quot;/libs/iostreams/doc/release_notes.html&quot;&gt;library
            release notes&lt;/a&gt;.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/program_options/index.html&quot;&gt;Program.Options&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Information about option name added to a few exception classes and various
            clean ups in exception classes (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3423&quot;&gt;#3423&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Description wordwrapping in presense of default parameters fixed (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2613&quot;&gt;#2613&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Empty value in configuration file is now permitted (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1537&quot;&gt;#1537&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Quotes are no longer stripped from string values (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/850&quot;&gt;#850&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Fix endless loop in case of long default arguments (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/689&quot;&gt;#689&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Fix compile warning caused by usage of boost::any (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2562&quot;&gt;#2562&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Fix memory bug in example/response_file.cpp (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3525&quot;&gt;#3525&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Most compilation warnings were fixed (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3608&quot;&gt;#3608&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Make column width for description text configurable. (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3703&quot;&gt;#3703&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Add general split function: split_unix() (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2561&quot;&gt;#2561&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Enable open config files from given file name (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3264&quot;&gt;#3264&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Additional flag for required options (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2982&quot;&gt;#2982&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Enable case insensitive style for command line (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3498&quot;&gt;#3498&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/property_map/index.html&quot;&gt;PropertyMap&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Removed old header files (directly in the &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;/code&gt; directory); they were deprecated since
            1.40, replaced by headers in &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;property_map&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;/code&gt;.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/proto/index.html&quot;&gt;Proto&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Fix const correctness issues with &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;flatten&lt;/span&gt;&lt;/code&gt;
            and friends (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3364&quot;&gt;#3364&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Accomodate recent change to &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;fusion&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;fold&lt;/span&gt;&lt;/code&gt;,
            remove old support for Doxygen and pre-1.35 Fusion (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3553&quot;&gt;#3553&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            In binary operations, when one operand has a user-specified domain and
            the other has the default domain, the user-specified domain trumps.
          &lt;/li&gt;
          &lt;li&gt;
            Fix &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_PROTO_EXTENDS&lt;/span&gt;&lt;/code&gt;
            to work with elaborated types.
          &lt;/li&gt;
          &lt;li&gt;
            Work around EDG compiler bug with function types and cv-qualification.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/regex/index.html&quot;&gt;Regex&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Added support for Functors rather than strings as format expressions.
          &lt;/li&gt;
          &lt;li&gt;
            Improved error reporting when throwing exceptions to include better more
            relevant information.
          &lt;/li&gt;
          &lt;li&gt;
            Improved performance and reduced stack usage of recursive expressions.
          &lt;/li&gt;
          &lt;li&gt;
            Fixed tickets &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2802&quot;&gt;#2802&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3425&quot;&gt;#3425&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3507&quot;&gt;#3507&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3546&quot;&gt;#3546&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3631&quot;&gt;#3631&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3632&quot;&gt;#3632&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3715&quot;&gt;#3715&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3718&quot;&gt;#3718&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3763&quot;&gt;#3763&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3764&quot;&gt;#3764&lt;/a&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/spirit/index.html&quot;&gt;Spirit&lt;/a&gt;:&lt;/span&gt;
  Spirit V2.2, see
        the '&lt;a href=&quot;/doc/libs/1_42_0/libs/spirit/doc/html/spirit/what_s_new.html&quot;&gt;What's
        New&lt;/a&gt;' section for details.
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/unordered/index.html&quot;&gt;Unordered&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Support instantiating the containers with incomplete value types.
          &lt;/li&gt;
          &lt;li&gt;
            Add &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;erase_return_void&lt;/span&gt;&lt;/code&gt;
            as a temporary workaround for the current &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;erase&lt;/span&gt;&lt;/code&gt;
            which can be inefficient because it has to find the next element to return
            an iterator (&lt;a href=&quot;http://svn.boost.org/trac/boost/ticket/3693&quot;&gt;#3693&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Add templated find overload for compatible keys.
          &lt;/li&gt;
          &lt;li&gt;
            Improved codegear compatibility.
          &lt;/li&gt;
          &lt;li&gt;
            Other minor changes, full details in &lt;a href=&quot;/doc/html/unordered/changes.html#unordered.changes.boost_1_42_0&quot;&gt;the
            changelog&lt;/a&gt;.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/xpressive/index.html&quot;&gt;Xpressive&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;match_results&lt;/span&gt;&lt;/code&gt; no longer
            relies on undefined behavior in &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;list&lt;/span&gt;&lt;/code&gt;
            (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3278&quot;&gt;#3278&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Do NOT copy singular iterators (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3538&quot;&gt;#3538&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Eliminate gcc and darwin warnings (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3734&quot;&gt;#3734&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_42_0.compilers_tested&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Compilers Tested&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      Boost's primary test compilers are:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        OS X:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.0.1 on Intel Leopard.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.0.1 on PowerPC Tiger.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Linux:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.4.1 on Ubuntu Linux.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.4 on Debian.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Windows:
        &lt;ul&gt;
          &lt;li&gt;
            Visual C++ 7.1 SP1, 8.0 SP1 and 9.0 SP1 on Windows XP.
          &lt;/li&gt;
          &lt;li&gt;
            Visual C++ 9.0 on Windows 2008, 64 bit.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.3.3, using Mingw
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        FreeBSD:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.2.1, 32 and 64 bit.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
    &lt;p&gt;
      Boost's additional test compilers include:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        Linux:
        &lt;ul&gt;
          &lt;li&gt;
            Intel 10.1 on Red Hat Enterprise Linux.
          &lt;/li&gt;
          &lt;li&gt;
            Intel 10.1 on 64 bit Red Hat Enterprise Linux.
          &lt;/li&gt;
          &lt;li&gt;
            Intel 11.0 on 32 bit Red Hat Enterprise Linux.
          &lt;/li&gt;
          &lt;li&gt;
            Intel 11.0 on 64 bit Red Hat Enterprise Linux.
          &lt;/li&gt;
          &lt;li&gt;
            Intel 11.1 on 64 bit Red Hat Enterprise Linux.
          &lt;/li&gt;
          &lt;li&gt;
            Intel 11.1 on 64 bit Linux Redhat 5.1 Server.
          &lt;/li&gt;
          &lt;li&gt;
            Intel 11.1 on Suse Linux 64 bit.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 3.4.6, GCC 4.2.4, GCC 4.3.4 and GCC 4.4.2 on Red Hat Enterprise Linux.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.3.4 and GCC 4.4.2 with C++0x extensions on Red Hat Enterprise Linux.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.4.1 on 64 bit Linux.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.4.3 on Debian unstable.
          &lt;/li&gt;
          &lt;li&gt;
            QLogic PathScale(TM) Compiler Suite: Version 3.2 on Red Hat Enterprise
            Linux.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        OS X:
        &lt;ul&gt;
          &lt;li&gt;
            Intel C++ Compiler 10.1, 11.0, 11.1 on Leopard.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.0.1 on Intel Leopard.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.0.1 on PowerPC Tiger.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Windows:
        &lt;ul&gt;
          &lt;li&gt;
            Visual C++ 7.1, 8,0, 9,0 on XP.
          &lt;/li&gt;
          &lt;li&gt;
            Visual C++ 9.0 using STLport 5.2 on XP and Windows Mobile 5.0.
          &lt;/li&gt;
          &lt;li&gt;
            Visual C++ 10.0 beta 2.
          &lt;/li&gt;
          &lt;li&gt;
            Visual C++ 10.0 on 32-bit Vista.
          &lt;/li&gt;
          &lt;li&gt;
            Borland/Codegear C++ 5.9.3, 6.1.3 (2009), 6.2.1 (2010).
          &lt;/li&gt;
          &lt;li&gt;
            Intel C++ 11.1, with a Visual C++ 9.0 backend, on Vista 32-bit.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.4.1 on Mingw, with and without C++0x extensions.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        AIX:
        &lt;ul&gt;
          &lt;li&gt;
            IBM XL C/C++ Enterprise Edition for AIX, V10.1.0.0, on AIX Version 5.3.0.40.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        FreeBSD:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.2.1 on FreeBSD 7.0, 32 bit and 64 bit.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Solaris:
        &lt;ul&gt;
          &lt;li&gt;
            Sun C++ 5.10 on Solaris 5.10.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_42_0.acknowledgements&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Acknowledgements&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      &lt;a href=&quot;/users/people/beman_dawes.html&quot;&gt;Beman Dawes&lt;/a&gt;, Eric Niebler,
      &lt;a href=&quot;/users/people/rene_rivera.html&quot;&gt;Rene Rivera&lt;/a&gt;, Daniel James
      and Vladimir Prus managed this release.
    &lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;</description></item><item><title>Version 1.41.0</title><pubDate>Tue, 17 Nov 2009 17:00:00 GMT</pubDate><boostbook:purpose>&lt;span class=&quot;brief&quot;&gt;&lt;span class=&quot;purpose&quot;&gt;
      New Library: Property Tree. Updated libraries: DateTime, Filesystem, Iostreams,
      Math, Multi-index Containers, Proto, Python, Regex, Spirit, System, Thread,
      Unordered, Utility, Wave, Xpressive. Updates to boost build and quickbook.
      The CMake build system for Boost, still under development &lt;a href=&quot;http://sodium.resophonic.com/boost-cmake/current-docs/&quot;&gt;here&lt;/a&gt;,
      has been removed from the main release to avoid confusion.
    &lt;/span&gt;&lt;/span&gt;</boostbook:purpose><boostbook:download>http://sourceforge.net/projects/boost/files/boost/1.41.0/</boostbook:download><description>&lt;div class=&quot;description&quot;&gt;
  
  
  
  &lt;div id=&quot;version_1_41_0.new_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;New Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/property_tree/index.html&quot;&gt;Property Tree&lt;/a&gt;:&lt;/span&gt; A
        tree data structure especially suited to storing configuration data, from
        Marcin Kalicinski and Sebastian Redl.
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_41_0.updated_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Updated Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/date_time/index.html&quot;&gt;DateTime&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            The default format for time durations is now &amp;quot;&lt;code&gt;&lt;span class=&quot;special&quot;&gt;%-%&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;O&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;:%&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;:%&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;F&lt;/span&gt;&lt;/code&gt;&amp;quot; instead of &amp;quot;&lt;code&gt;&lt;span class=&quot;special&quot;&gt;%-%&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;H&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;:%&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;:%&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;F&lt;/span&gt;&lt;/code&gt;&amp;quot;
            that was used previously. In order to retain the old behavior, the format
            string has to be specified explicitly during the time IO facet construction
            (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1861&quot;&gt;#1861&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Gregorian dates now use 32-bit integer type internally on 64-bit platforms
            (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3308&quot;&gt;#3308&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            See the &lt;a href=&quot;/doc/html/date_time/details.html#date_time.changes&quot;&gt;full
            changelog&lt;/a&gt; for more detail.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/filesystem/index.html&quot;&gt;Filesystem&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Bug fixes: (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3385&quot;&gt;#3385&lt;/a&gt;).
            (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3528&quot;&gt;#3528&lt;/a&gt;).
            (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3509&quot;&gt;#3509&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/iostreams/index.html&quot;&gt;Iostreams&lt;/a&gt;:&lt;/span&gt;
  Some old
        unreleased developments. There are still several open issues that should
        be fixed in the next version.
        &lt;ul&gt;
          &lt;li&gt;
            Add a grep filter (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1627&quot;&gt;#1627&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Support archives with multiple members (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1896&quot;&gt;#1896&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Make &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;tee&lt;/span&gt;&lt;/code&gt; work with input
            streams (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/791&quot;&gt;#791&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Improved filesystem interoperability.
          &lt;/li&gt;
          &lt;li&gt;
            Several warnings fixed or suppressed (including &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1618&quot;&gt;#1618&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1875&quot;&gt;#1875&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2779&quot;&gt;#2779&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Various other fixes (including &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1580&quot;&gt;#1580&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1671&quot;&gt;#1671&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/math/index.html&quot;&gt;Math&lt;/a&gt;:&lt;/span&gt;
  Substantially improved
        the performance of the incomplete gamma function and it's inverse: this enhances
        the performance of the gamma, poisson, chi-squared and non-central chi-squared
        distributions.
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/multi_index/doc/index.html&quot;&gt;Multi-index Containers&lt;/a&gt;:&lt;/span&gt;
  Maintenance
        fixes. Consult the library &lt;a href=&quot;/libs/multi_index/doc/release_notes.html#boost_1_41&quot;&gt;release
        notes&lt;/a&gt; for further information.
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/proto/index.html&quot;&gt;Proto&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Clean up some MSVC warnings and errors in /Za (disable Microsoft extensions)
            mode.
          &lt;/li&gt;
          &lt;li&gt;
            Fixes for c++0x mode on various compilers.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/python/index.html&quot;&gt;Python&lt;/a&gt;:&lt;/span&gt;
  Boost.Python now
        supports Python 3 (Haoyu Bai's Google Summer of Code project, mentored by
        Stefan Seefeld).
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/regex/index.html&quot;&gt;Regex&lt;/a&gt;:&lt;/span&gt;
  Added support for
        many Perl 5.10 syntax elements including named sub-expressions, branch resets
        and recursive regular expressions.
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/spirit/index.html&quot;&gt;Spirit&lt;/a&gt;:&lt;/span&gt; This is the initial
        official release of the new Spirit V2.1, a completely new library for parsing,
        lexing, and output generation. Note: this release is not backwards compatible
        with earlier versions. Known issue: &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;qi&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;symbol&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;find&lt;/span&gt;&lt;/code&gt;
        will match a symbol that starts with the string you're searching for. This
        will be fixed in the next version.
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/system/index.html&quot;&gt;System&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Bug fix: (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3559&quot;&gt;#3559&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/thread/index.html&quot;&gt;Thread&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Support for futures, promises and packaged tasks added
          &lt;/li&gt;
          &lt;li&gt;
            &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;thread_specific_ptr&lt;/span&gt;&lt;/code&gt; is now faster when
            there are lots of thread-specific objects
          &lt;/li&gt;
          &lt;li&gt;
            Some Boost.Thread facilities are now header-only
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/unordered/index.html&quot;&gt;Unordered&lt;/a&gt;:&lt;/span&gt;
  Major update:
        &lt;ul&gt;
          &lt;li&gt;
            Replaced a lot of the macro based implementation with a cleaner template
            based implementation.
          &lt;/li&gt;
          &lt;li&gt;
            Reduced memory use.
          &lt;/li&gt;
          &lt;li&gt;
            Full details in &lt;a href=&quot;/doc/html/unordered/changes.html#unordered.changes.boost_1_41_1&quot;&gt;the
            changelog&lt;/a&gt;.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/utility/index.html&quot;&gt;Utility&lt;/a&gt;:&lt;/span&gt;
  A &amp;quot;const&amp;quot;
        issue of &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;value_initialized&lt;/span&gt;&lt;/code&gt;
        is fixed: Its &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;()&lt;/span&gt;&lt;/code&gt;
        member function and its conversion operator are replaced by overloads for
        const and non-const access (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2548&quot;&gt;#2548&lt;/a&gt;).
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/wave/index.html&quot;&gt;Wave&lt;/a&gt;:&lt;/span&gt;
  See the &lt;a href=&quot;/libs/wave/ChangeLog&quot;&gt;changelog&lt;/a&gt;
        for details.
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/xpressive/index.html&quot;&gt;Xpressive&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Fix infinite loop with some uses of &lt;tt&gt;\Q...\E&lt;/tt&gt; quotemeta
            (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3586&quot;&gt;#3586&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Eliminate unreachable code warnings on MSVC
          &lt;/li&gt;
          &lt;li&gt;
            Clean up some MSVC warnings and errors in /Za (&amp;quot;disable Microsoft
            extensions&amp;quot;) mode.
          &lt;/li&gt;
          &lt;li&gt;
            Fixes for c++0x mode on various compilers.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_41_0.build_system&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Build System&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      A bug preventing &amp;quot;fat&amp;quot; 32-bit + 64-bit builds on OSX has been fixed.
    &lt;/p&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_41_0.boost_cmake_moved&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Boost.CMake moved&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      The cmake version of boost has moved; the Boost.CMmake release will be separate
      and will lag the main release slightly, but will also be capable of producing
      patch releases as necessary.
    &lt;/p&gt;
    &lt;p&gt;
      More information on the &lt;a href=&quot;https:://svn.boost.org/trac/boost/wiki/CMake&quot;&gt;Boost
      CMake wiki page&lt;/a&gt;.
    &lt;/p&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_41_0.updated_tools&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Updated Tools&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/tools/quickbook/index.html&quot;&gt;Quickbook 1.5&lt;/a&gt;:&lt;/span&gt;
  These
        changes require your document to use the &lt;code&gt;&lt;span class=&quot;special&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;quickbook&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1.5&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;]&lt;/span&gt;&lt;/code&gt; tag:
        &lt;ul&gt;
          &lt;li&gt;
            More intuitive syntax and variable lookup for template calls (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1174&quot;&gt;#1174&lt;/a&gt;, &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2034&quot;&gt;#2034&lt;/a&gt;, &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2036&quot;&gt;#2036&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Image attributes (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1157&quot;&gt;#1157&lt;/a&gt;)
          &lt;/li&gt;
          &lt;li&gt;
            Table Ids (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1194&quot;&gt;#1194&lt;/a&gt;)
          &lt;/li&gt;
          &lt;li&gt;
            Better handling of whitespace in &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;section&lt;/span&gt;&lt;/code&gt;
            syntax. (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2712&quot;&gt;#2712&lt;/a&gt;)
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_41_0.compilers_tested&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Compilers Tested&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      Boost's primary test compilers are:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        OS X:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.0.1 on Intel Tiger and Leopard.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.0.1 on PowerPC Tiger.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Linux:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.4.1 on Ubuntu Linux.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.4 on Debian
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Windows:
        &lt;ul&gt;
          &lt;li&gt;
            Visual C++ 7.1 SP1, 8.0 SP1 and 9.0 SP1 on Windows XP.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
    &lt;p&gt;
      Boost's additional test compilers include:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        Linux:
        &lt;ul&gt;
          &lt;li&gt;
            Intel 10.1 on Red Hat Enterprise Linux.
          &lt;/li&gt;
          &lt;li&gt;
            Intel 10.1 on 64-bit Red Hat Enterprise Linux.
          &lt;/li&gt;
          &lt;li&gt;
            Intel 10.1 on Suse Linux on 64 bit Itanium.
          &lt;/li&gt;
          &lt;li&gt;
            Intel 11.0 on 32 bit Red Hat Enterprise Linux.
          &lt;/li&gt;
          &lt;li&gt;
            Intel 11.0 on 64 bit Red Hat Enterprise Linux.
          &lt;/li&gt;
          &lt;li&gt;
            Intel 11.1 on 64 bit Red Hat Enterprise Linux.
          &lt;/li&gt;
          &lt;li&gt;
            Intel 11.1 on 64 bit Linux Redhat 5.1 Server.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 3.4.3, GCC 4.2.4, GCC 4.3.3 and GCC 4.4.1 on Red Hat Enterprise Linux.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.3.3 and GCC 4.4.1 with C++0x extensions on Red Hat Enterprise Linux.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.3.3 on 64-bit Redhat Server 5.1.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.3.3 on 64 bit Linux.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.3.4 on Debian unstable.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.3.2 on 64 bit Gentoo.
          &lt;/li&gt;
          &lt;li&gt;
            QLogic PathScale(TM) Compiler Suite: Version 3.2 on Red Hat Enterprise
            Linux.
          &lt;/li&gt;
          &lt;li&gt;
            Sun 5.9 on Red Hat Enterprise Linux.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        OS X:
        &lt;ul&gt;
          &lt;li&gt;
            Intel C++ Compiler 11.1 on Leopard.
          &lt;/li&gt;
          &lt;li&gt;
            Intel C++ Compiler 10.1, 11.0.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.0.1 on Intel Tiger.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.0.1 on PowerPC Tiger.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Windows:
        &lt;ul&gt;
          &lt;li&gt;
            Visual C++ 7.1, 8,0, 9,0 on XP.
          &lt;/li&gt;
          &lt;li&gt;
            Visual C++ 9.0 on 32-bit Vista.
          &lt;/li&gt;
          &lt;li&gt;
            Visual C++ 9.0 on AMD 64-bit Vista.
          &lt;/li&gt;
          &lt;li&gt;
            Visual C++ 9.0 using STLport 5.2 on XP and Windows Mobile 5.0.
          &lt;/li&gt;
          &lt;li&gt;
            Visual C++ 10.0 beta 1 with &lt;a href=&quot;http://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?FeedbackID=457199&quot;&gt;a
            patch for the program options lib&lt;/a&gt;.
          &lt;/li&gt;
          &lt;li&gt;
            Borland/Codegear C++ 5.9.3, 6.1.3 (2009), 6.2.0 (2010).
          &lt;/li&gt;
          &lt;li&gt;
            Intel C++ 11.1, with a Visual C++ 9.0 backend, on Vista 32-bit.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.4.1 on Mingw, with and without C++0x extensions.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        AIX:
        &lt;ul&gt;
          &lt;li&gt;
            IBM XL C/C++ Enterprise Edition for AIX, V10.1.0.0, on AIX Version 5.3.0.40.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        FreeBSD:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.2.1 on FreeBSD 7.0.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Solaris:
        &lt;ul&gt;
          &lt;li&gt;
            Sun C++ 5.10 on Solaris 5.10.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_41_0.acknowledgements&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Acknowledgements&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      &lt;a href=&quot;/users/people/beman_dawes.html&quot;&gt;Beman Dawes&lt;/a&gt;, Eric Niebler,
      &lt;a href=&quot;/users/people/rene_rivera.html&quot;&gt;Rene Rivera&lt;/a&gt;, and Daniel
      James managed this release.
    &lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;</description></item><item><title>Version 1.40.0</title><pubDate>Thu, 27 Aug 2009 17:00:00 GMT</pubDate><boostbook:purpose>&lt;span class=&quot;brief&quot;&gt;&lt;span class=&quot;purpose&quot;&gt;
      Build System improvements. Updated Libraries: Accumulators, Asio, Circular
      Buffer, Foreach, Function, Fusion, Graph, Hash, Interprocess, Intrusive, MPL,
      Program.Options, Property Map, Proto, Random, Serialization, Unordered, Xpressive.
    &lt;/span&gt;&lt;/span&gt;</boostbook:purpose><boostbook:download>http://sourceforge.net/projects/boost/files/boost/1.40.0/</boostbook:download><description>&lt;div class=&quot;description&quot;&gt;
  
  
  
  &lt;div id=&quot;version_1_40_0.update&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Update&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      Added missing notes for Graph and Property Map.
    &lt;/p&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_40_0.boost_cmake&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Boost.CMake&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      Boost.CMake is &lt;em&gt;now distributed separately&lt;/em&gt;.
      The cmake build for boost is &lt;em&gt;BROKEN&lt;/em&gt; in the
      tarballs above. See the &lt;a href=&quot;https://svn.boost.org/trac/boost/wiki/CMake&quot;&gt;Boost.CMake
      wiki page&lt;/a&gt; for pointers to working versions.
    &lt;/p&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_40_0.updated_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Updated Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/accumulators/index.html&quot;&gt;Accumulators&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Works on GCC 4.4.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/asio/index.html&quot;&gt;Asio&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Added a new ping example to illustrate the use of ICMP sockets.
          &lt;/li&gt;
          &lt;li&gt;
            Changed the &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;buffered&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;_stream&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;/code&gt; templates to treat 0-byte reads
            and writes as no-ops, to comply with the documented type requirements
            for &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;SyncReadStream&lt;/span&gt;&lt;/code&gt;,
            &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;AsyncReadStream&lt;/span&gt;&lt;/code&gt;, &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;SyncWriteStream&lt;/span&gt;&lt;/code&gt; and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;AsyncWriteStream&lt;/span&gt;&lt;/code&gt;.
          &lt;/li&gt;
          &lt;li&gt;
            Changed some instances of the &lt;code&gt;&lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt;&lt;/code&gt;
            keyword to &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;throw_exception&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;()&lt;/span&gt;&lt;/code&gt;
            to allow Asio to be used when exception support is disabled. Note that
            the SSL wrappers still require exception support (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2754&quot;&gt;#2754&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Made Asio compatible with the OpenSSL 1.0 beta (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3256&quot;&gt;#3256&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Eliminated a redundant system call in the Solaris &lt;tt&gt;/dev/poll&lt;/tt&gt;
            backend.
          &lt;/li&gt;
          &lt;li&gt;
            Fixed a bug in resizing of the bucket array in the internal hash maps
            (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3095&quot;&gt;#3095&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Ensured correct propagation of the error code when a synchronous accept
            fails (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3216&quot;&gt;#3216&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Ensured correct propagation of the error code when a synchronous read
            or write on a Windows HANDLE fails.
          &lt;/li&gt;
          &lt;li&gt;
            Fixed failures reported when &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;_GLIBCXX_DEBUG&lt;/span&gt;&lt;/code&gt;
            is defined (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3098&quot;&gt;#3098&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Fixed custom memory allocation support for timers (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3107&quot;&gt;#3107&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Tidied up various warnings reported by g++ (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1341&quot;&gt;#1341&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2618&quot;&gt;#2618&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Various documentation improvements, including more obvious hyperlinks
            to function overloads, header file information, examples for the handler
            type requirements, and adding enum values to the index (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3157&quot;&gt;#3157&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2620&quot;&gt;#2620&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/circular_buffer/index.html&quot;&gt;Circular Buffer&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Fixed bugs &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2785&quot;&gt;#2785&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3285&quot;&gt;#3285&lt;/a&gt;.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/foreach/index.html&quot;&gt;Foreach&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Workaround for conflict with Python headers (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3000&quot;&gt;#3000&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/function/index.html&quot;&gt;Function&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Optimize the use of small target objects.
          &lt;/li&gt;
          &lt;li&gt;
            Make Boost.Function compile under BOOST_NO_EXCEPTIONS (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2499&quot;&gt;#2499&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2494&quot;&gt;#2494&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2469&quot;&gt;#2469&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2466&quot;&gt;#2466&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2900&quot;&gt;#2900&lt;/a&gt;)
          &lt;/li&gt;
          &lt;li&gt;
            Various minor fixes (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2642&quot;&gt;#2642&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2847&quot;&gt;#2847&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2929&quot;&gt;#2929&lt;/a&gt;
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3012&quot;&gt;#3012&lt;/a&gt;)
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/fusion/index.html&quot;&gt;Fusion&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Improved compile times for &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;fusion&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;vector&lt;/span&gt;&lt;/code&gt;.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/graph/index.html&quot;&gt;Graph&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Merged in the &lt;a href=&quot;/libs/graph_parallel/doc/html/index.html&quot;&gt;Parallel
            Boost Graph Library&lt;/a&gt;, giving a full suite of graph algorithms
            and data structures for distributed-memory computers (such as clusters).
          &lt;/li&gt;
          &lt;li&gt;
            Updates to the interface of the compressed sparse row graph, including
            constructors from unsorted edge lists.
          &lt;/li&gt;
          &lt;li&gt;
            An implicit grid graph, saving memory over using the former generator.
          &lt;/li&gt;
          &lt;li&gt;
            New algorithms: Dijkstra's single-source shortest path algorithm without
            a separate color map and an algorithm to find maximal common subgraphs
            between two graphs.
          &lt;/li&gt;
          &lt;li&gt;
            Assorted bug fixes.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/functional/hash/index.html&quot;&gt;Hash&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Automatically configure the float functions using template metaprogramming
            instead of trying to configure every possibility manually.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/interprocess/index.html&quot;&gt;Interprocess&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Windows shared memory is created in Shared Documents folder so that it
            can be shared between services and processes
          &lt;/li&gt;
          &lt;li&gt;
            Fixed bugs &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2967&quot;&gt;#2967&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2973&quot;&gt;#2973&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2992&quot;&gt;#2992&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3138&quot;&gt;#3138&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3166&quot;&gt;#3166&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3205&quot;&gt;#3205&lt;/a&gt;.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/intrusive/index.html&quot;&gt;Intrusive&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Code cleanup in tree_algorithms.hpp and avl_tree_algorithms.hpp
          &lt;/li&gt;
          &lt;li&gt;
            Fixed bug &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3164&quot;&gt;#3164&lt;/a&gt;.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/mpl/index.html&quot;&gt;MPL&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Added &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;mpl&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;char_&lt;/span&gt;&lt;/code&gt; and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;mpl&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;string&lt;/span&gt;&lt;/code&gt;
            for compile-time string manipulation, based on multichar literals (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2905&quot;&gt;#2905&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Updated &lt;a href=&quot;/libs/mpl/doc/refmanual.html&quot;&gt;MPL Reference Manual&lt;/a&gt;.
          &lt;/li&gt;
          &lt;li&gt;
            Bug fixes.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/program_options/index.html&quot;&gt;Program.Options&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Support for building with disabled exceptions (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2096&quot;&gt;#2096&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Unicode parser no longer drops original tokens (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2425&quot;&gt;#2425&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Fixed crash on user-inserted items in &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;variables_map&lt;/span&gt;&lt;/code&gt;
            (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2782&quot;&gt;#2782&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/property_map/index.html&quot;&gt;Property Map&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Moved property map code into a separate directory, &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;property_map&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;/code&gt;. The old files exist and forward to
            the new ones; the previous files directly in &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;/code&gt; will be removed in Boost 1.42.0.
          &lt;/li&gt;
          &lt;li&gt;
            Moved distributed property maps to &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;parallel&lt;/span&gt;&lt;/code&gt;
            namespace.
          &lt;/li&gt;
          &lt;li&gt;
            Added a property map based on a &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;shared_array&lt;/span&gt;&lt;/code&gt;,
            providing a simpler interface.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/proto/index.html&quot;&gt;Proto&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            PrimitiveTransforms have stricter conformance to ResultOf protocol. (Warning:
            some invalid code may break.)
          &lt;/li&gt;
          &lt;li&gt;
            Add a sensible default for &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;_default&lt;/span&gt;&lt;/code&gt;'s
            template parameter.
          &lt;/li&gt;
          &lt;li&gt;
            Improved default evaluation strategy for pointers to members.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 3.4 portability fixes (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3021&quot;&gt;#3021&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Work around Visual C++'s non-std-compliant ciso646 macros.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/random/index.html&quot;&gt;Random&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Made the constructors of all the generators call the copy constructor
            when passed a non-const reference.
          &lt;/li&gt;
          &lt;li&gt;
            Changed seeding functions to accept any arithmetic type. As a side-effect,
            the exact signature of seed changed for some classes.
          &lt;/li&gt;
          &lt;li&gt;
            Major bug fixes in uniform_int.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/serialization/index.html&quot;&gt;Serialization&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Removed deprecated headers: &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;static_warning&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hpp&lt;/span&gt;&lt;/code&gt;,
            &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;state_saver&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hpp&lt;/span&gt;&lt;/code&gt;, &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;smart_cast&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hpp&lt;/span&gt;&lt;/code&gt;,
            &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;pfto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hpp&lt;/span&gt;&lt;/code&gt;. Use the the equivalent headers
            in the &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;serialization&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;/code&gt;
            directory instead (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3062&quot;&gt;#3062&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;detail&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;archive_serializer_map&lt;/span&gt;&lt;/code&gt; should now be
            used instead of &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;detail&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;archive_pointer_iserializer&lt;/span&gt;&lt;/code&gt;.
            For more details see &lt;a href=&quot;/doc/libs/1_40_0/libs/serialization/doc/release.html&quot;&gt;the
            library release notes&lt;/a&gt;.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/unordered/index.html&quot;&gt;Unordered&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Implement &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;emplace&lt;/span&gt;&lt;/code&gt; for
            all compilers, not just ones with rvalue references and variadic templates
            (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1978&quot;&gt;#1978&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Create less buckets by default.
          &lt;/li&gt;
          &lt;li&gt;
            Some minor tweaks for better compiler support (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2908&quot;&gt;#2908&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3096&quot;&gt;#3096&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3082&quot;&gt;#3082&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/xpressive/index.html&quot;&gt;Xpressive&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Works on Visual C++ 10.0 (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3124&quot;&gt;#3124&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_40_0.build_system&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Build System&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      The default naming of libraries in Unix-like environment now matches system
      conventions, and does not include various decorations. Naming of libraries
      on Cygwin was also fixed. Support for beta versions of Microsoft Visual Studio
      10 was added. With gcc, 64-bit compilation no longer requires that target architecture
      be specified.
    &lt;/p&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_40_0.updated_tools&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Updated Tools&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/tools/boostbook/index.html&quot;&gt;Boostbook&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Hide &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;INTERNAL&lt;/span&gt; &lt;span class=&quot;identifier&quot;&gt;ONLY&lt;/span&gt;&lt;/code&gt;
            enums in doxygen documentation (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3242&quot;&gt;#3242&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Tweaked appearance of member classes/structs/unions in a class synopsis.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/tools/quickbook/index.html&quot;&gt;Quickbook&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Support python code snippets (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3029&quot;&gt;#3029&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Add &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;teletype&lt;/span&gt;&lt;/code&gt; source mode
            (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1202&quot;&gt;#1202&lt;/a&gt;)
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_40_0.compilers_tested&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Compilers Tested&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      Boost's primary test compilers are:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        OS X:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.0.1 on Intel Tiger and Leopard
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.0.1 on PowerPC Tiger
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Linux:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.3.3 on Ubuntu Linux.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Windows:
        &lt;ul&gt;
          &lt;li&gt;
            Visual C++ 7.1 SP1, 8.0 SP1 and 9.0 SP1 on Windows XP.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
    &lt;p&gt;
      Boost's additional test compilers include:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        Linux:
        &lt;ul&gt;
          &lt;li&gt;
            Intel 9.0 on Red Hat Enterprise Linux.
          &lt;/li&gt;
          &lt;li&gt;
            Intel 10.0 on Red Hat Enterprise Linux.
          &lt;/li&gt;
          &lt;li&gt;
            Intel 10.1 on 64-bit Linux Redhat 5.1 Server.
          &lt;/li&gt;
          &lt;li&gt;
            Intel 10.1 on Suse Linux on 64 bit Itanium.
          &lt;/li&gt;
          &lt;li&gt;
            Intel 11.0 on Red Hat Enterprise Linux.
          &lt;/li&gt;
          &lt;li&gt;
            Intel 11.1 on Red Hat Enterprise Linux.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 3.4.3, GCC 4.0.1, GCC 4.2.4, GCC 4.3.3 and GCC 4.4.0 on Red Hat Enterprise
            Linux.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.3.3 and GCC 4.4.0 with C++0x extensions on Red Hat Enterprise Linux.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.1.1, 4.2.1 on 64-bit Red Hat Enterprise Linux.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.1.2 on Suse Linux on 64 bit Itanium.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.1.2 on 64-bit Redhat Server 5.1.
          &lt;/li&gt;
          &lt;li&gt;
            GCC Open64 4.2.2 on Red Hat Enterprise Linux.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.3.4 on Debian unstable.
          &lt;/li&gt;
          &lt;li&gt;
            QLogic PathScale(TM) Compiler Suite: Version 3.1 on Red Hat Enterprise
            Linux.
          &lt;/li&gt;
          &lt;li&gt;
            GCC version 4.2.0 (PathScale 3.2 driver) on 64-bit Red Hat Enterprise
            Linux.
          &lt;/li&gt;
          &lt;li&gt;
            Sun 5.9 on Red Hat Enterprise Linux.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        OS X:
        &lt;ul&gt;
          &lt;li&gt;
            Intel 10.1, 11.0 on Intel Leopard.
          &lt;/li&gt;
          &lt;li&gt;
            Intel 10.1, 11.0 on Intel Tiger.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.0.1, 4.2.1 on Intel Leopard.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.0.1 on Intel Tiger.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.0.1 on PowerPC Tiger.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Windows:
        &lt;ul&gt;
          &lt;li&gt;
            Visual C++ 7.1 on XP.
          &lt;/li&gt;
          &lt;li&gt;
            Visual C++ 9.0 on XP.
          &lt;/li&gt;
          &lt;li&gt;
            Visual C++ 9.0 on Vista.
          &lt;/li&gt;
          &lt;li&gt;
            Visual C++ 9.0 on Vista 64-bit.
          &lt;/li&gt;
          &lt;li&gt;
            Visual C++ 9.0, using STLport 5.2, on XP and Windows Mobile 5.0.
          &lt;/li&gt;
          &lt;li&gt;
            Visual C++ 10.0 beta.
          &lt;/li&gt;
          &lt;li&gt;
            Borland 5.9.3, 6.1.0, 6.1.3.
          &lt;/li&gt;
          &lt;li&gt;
            Borland C++ Builder 2007 and 2009.
          &lt;/li&gt;
          &lt;li&gt;
            Intel C++ 11.1, with a Visual C++ 9.0 backend, on Vista 32-bit.
          &lt;/li&gt;
          &lt;li&gt;
            Intel C++ 11.1, with a Visual C++ 9.0 backend, on Vista 64-bit.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.3.3 and 4.4.0, on Mingw with C++0x features.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        AIX:
        &lt;ul&gt;
          &lt;li&gt;
            IBM XL C/C++ Enterprise Edition for AIX, V10.1.0.0, on AIX Version 5.3.0.40.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Solaris:
        &lt;ul&gt;
          &lt;li&gt;
            Sun C++ 5.7, 5.8, 5.9 on Solaris 5.10.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 3.4.6 on Solaris 5.10.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_40_0.acknowledgements&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Acknowledgements&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      &lt;a href=&quot;/users/people/beman_dawes.html&quot;&gt;Beman Dawes&lt;/a&gt;, Eric Niebler,
      &lt;a href=&quot;/users/people/rene_rivera.html&quot;&gt;Rene Rivera&lt;/a&gt;, and Daniel
      James managed this release.
    &lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;</description></item><item><title>Version 1.39.0</title><pubDate>Sat, 02 May 2009 12:00:00 GMT</pubDate><boostbook:purpose>&lt;span class=&quot;brief&quot;&gt;&lt;span class=&quot;purpose&quot;&gt;
      New Libraries: Signals2. Updated Libraries: Asio, Flyweight, Foreach, Hash,
      Interprocess, Intrusive, Program.Options, Proto, PtrContainer, Range, Unordered,
      Xpressive. Updated Tools: Boostbook, Quickbook.
    &lt;/span&gt;&lt;/span&gt;</boostbook:purpose><boostbook:download>http://sourceforge.net/projects/boost/files/boost/1.39.0/</boostbook:download><description>&lt;div class=&quot;description&quot;&gt;
  
  
  
  &lt;div id=&quot;version_1_39_0.new_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;New Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/signals2/index.html&quot;&gt;Signals2&lt;/a&gt;:&lt;/span&gt; Managed signals
        &amp;amp; slots callback implementation (thread-safe version 2), from Frank Mori
        Hess.
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_39_0.updated_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Updated Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/asio/index.html&quot;&gt;Asio&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Implement automatic resizing of the bucket array in the internal hash
            maps. This is to improve performance for very large numbers of asynchronous
            operations and also to reduce memory usage for very small numbers. A
            new macro &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_ASIO_HASH_MAP_BUCKETS&lt;/span&gt;&lt;/code&gt;
            may be used to tweak the sizes used for the bucket arrays.
          &lt;/li&gt;
          &lt;li&gt;
            Add performance optimisation for the Windows IOCP backend for when no
            timers are used.
          &lt;/li&gt;
          &lt;li&gt;
            Prevent locale settings from affecting formatting of TCP and UDP endpoints
            (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2682&quot;&gt;#2682&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Fix a memory leak that occurred when an asynchronous SSL operation's
            completion handler threw an exception (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2910&quot;&gt;#2910&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Fix the implementation of &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;io_control&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;()&lt;/span&gt;&lt;/code&gt; so that it adheres to the documented
            type requirements for IoControlCommand (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2820&quot;&gt;#2820&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Fix incompatibility between Asio and ncurses.h (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2156&quot;&gt;#2156&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            On Windows, specifically handle the case when an overlapped &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;ReadFile&lt;/span&gt;&lt;/code&gt; call fails with &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;ERROR_MORE_DATA&lt;/span&gt;&lt;/code&gt;. This enables a hack
            where a &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;windows&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;stream_handle&lt;/span&gt;&lt;/code&gt; can be used with a message-oriented
            named pipe (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2936&quot;&gt;#2936&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Fix system call wrappers to always clear the error on success, as POSIX
            allows successful system calls to modify errno (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2953&quot;&gt;#2953&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Don't include termios.h if &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_ASIO_DISABLE_SERIAL_PORT&lt;/span&gt;&lt;/code&gt;
            is defined (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2917&quot;&gt;#2917&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Cleaned up some more MSVC level 4 warnings (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2828&quot;&gt;#2828&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Various documentation fixes (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2871&quot;&gt;#2871&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/flyweight/index.html&quot;&gt;Flyweight&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            The &lt;a href=&quot;/libs/flyweight/doc/tutorial/configuration.html#refcounted&quot;&gt;refcounted&lt;/a&gt;
            component was not thread-safe due to an incorrect implementation and
            could deadlock under heavy usage conditions. This problem has been corrected.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/foreach/index.html&quot;&gt;Foreach&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Eliminate shadow warnings on gcc for nested &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;FOREACH&lt;/span&gt;&lt;/code&gt;
            loops
          &lt;/li&gt;
          &lt;li&gt;
            Portability fix for Intel-Win toolset
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/functional/hash/index.html&quot;&gt;Hash&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Remove deprecated headers for hashing containers. Everything that was
            in them is included in &lt;code&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;functional&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hpp&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;
            (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2412&quot;&gt;#2412&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Other minor changes, full details in the library &lt;a href=&quot;/doc/html/hash/changes.html#hash.changes.boost_1_39_0&quot;&gt;change
            log&lt;/a&gt;.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/interprocess/index.html&quot;&gt;Interprocess&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Increased portability and bug fixes. Full details in the library &lt;a href=&quot;/doc/html/interprocess/acknowledgements_notes.html#interprocess.acknowledgements_notes.release_notes.release_notes_boost_1_39_00&quot;&gt;change
            log&lt;/a&gt;.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/intrusive/index.html&quot;&gt;Intrusive&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Optimizations and bug fixes. Full details in the library &lt;a href=&quot;/doc/html/intrusive/release_notes.html#intrusive.release_notes.release_notes_boost_1_39_00&quot;&gt;change
            log&lt;/a&gt;.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/program_options/index.html&quot;&gt;Program.Options&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Multitoken options fixed (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/469&quot;&gt;#469&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/proto/index.html&quot;&gt;Proto&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Work around incompatibility with standard Linux header.
          &lt;/li&gt;
          &lt;li&gt;
            Add &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;noinvoke&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;/code&gt;
            to block metafunction invocation in object transforms.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/ptr_container/index.html&quot;&gt;PtrContainer&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Bug fixes from Trac applied.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/range/index.html&quot;&gt;Range&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Bug fixes from Trac applied.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/unordered/index.html&quot;&gt;Unordered&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Fixed regression in 1.38 that prevented unordered from using more than
            about 1.5 million buckets (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2975&quot;&gt;#2975&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Minor implementation changes, including &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2756&quot;&gt;#2756&lt;/a&gt;.
            Full details in the library &lt;a href=&quot;/doc/html/unordered/changes.html#unordered.changes.boost_1_39_0&quot;&gt;change
            log&lt;/a&gt;.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/xpressive/index.html&quot;&gt;Xpressive&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Work around for gcc optimization problem resulting in pure virtual function
            call runtime error (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2655&quot;&gt;#2655&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_39_0.updated_tools&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Updated Tools&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/tools/boostbook/index.html&quot;&gt;Boostbook&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Improved PDF generation.
          &lt;/li&gt;
          &lt;li&gt;
            Preliminary HTMLHelp support.
          &lt;/li&gt;
          &lt;li&gt;
            Add default path for callout images.
          &lt;/li&gt;
          &lt;li&gt;
            Include data members' &lt;code&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;purpose&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;
            in the class synopsis.
          &lt;/li&gt;
          &lt;li&gt;
            Fix bug where a function's &lt;code&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;purpose&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;
            wasn't displayed if it was just plain text.
          &lt;/li&gt;
          &lt;li&gt;
            Support the alt tag in &lt;code&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;headername&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;
            and &lt;code&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;macroname&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;. Use this if the header or macro
            name is different to the contents of the tag (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1977&quot;&gt;#1977&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Support links relative to the boost root in &lt;code&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;ulink&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;
            tags, using a custom url, see the &lt;a href=&quot;/doc/html/boostbook/together.html#boostbook.linking&quot;&gt;linking
            documentation&lt;/a&gt; for details (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1166&quot;&gt;#1166&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Avoid generating filenames that only differ in case for function, method
            and macro documentation.
          &lt;/li&gt;
          &lt;li&gt;
            Run the docbook chunker quietly, unless boostbook.verbose is set. This
            parameter might be used in other places in future releases.
          &lt;/li&gt;
          &lt;li&gt;
            Make the 1.1 DTD available.
          &lt;/li&gt;
          &lt;li&gt;
            Fill in some missing reference documentation (partially fixes &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2153&quot;&gt;#2153&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Changes to doxygen integration:
            &lt;ul&gt;
              &lt;li&gt;
                Support &lt;code&gt;&lt;span class=&quot;special&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt;&lt;/code&gt;.
              &lt;/li&gt;
              &lt;li&gt;
                Support global variables and enums.
              &lt;/li&gt;
              &lt;li&gt;
                Better support for documentation written in function and method bodies.
              &lt;/li&gt;
              &lt;li&gt;
                Workaround a problem with doxygen 1.5.8's xml output (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2937&quot;&gt;#2937&lt;/a&gt;).
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/tools/quickbook/index.html&quot;&gt;Quickbook&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Return an error code and error count if there are any errors (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1399&quot;&gt;#1399&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Support both windows and cygwin paths at the compile line when compiled
            with cygwin.
          &lt;/li&gt;
          &lt;li&gt;
            Fix some issues with C++ and Python code:
            &lt;ul&gt;
              &lt;li&gt;
                Fail gracefully for a mismatched &lt;code&gt;&lt;span class=&quot;char&quot;&gt;''&lt;/span&gt;&lt;/code&gt;.
              &lt;/li&gt;
              &lt;li&gt;
                Warn if any unexpected character are encountered and write them out
                properly (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1170&quot;&gt;#1170&lt;/a&gt;).
              &lt;/li&gt;
              &lt;li&gt;
                Fix a bug for hex encoded characters in strings (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2860&quot;&gt;#2860&lt;/a&gt;).
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;
            Improved testing, including tests for expected failures.
          &lt;/li&gt;
          &lt;li&gt;
            Generate valid document info for document types other than &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;library&lt;/span&gt;&lt;/code&gt; (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2711&quot;&gt;#2711&lt;/a&gt;):
            &lt;ul&gt;
              &lt;li&gt;
                Remove library specific attributes.
              &lt;/li&gt;
              &lt;li&gt;
                Put title before info block.
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;
            Fix a bug when calling templates.
          &lt;/li&gt;
          &lt;li&gt;
            Less warnings when built using gcc.
          &lt;/li&gt;
          &lt;li&gt;
            Small documentation improvements (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1213&quot;&gt;#1213&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2701&quot;&gt;#2701&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Fix a bug with xinclude pages when outdir is the current directory (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2921&quot;&gt;#2921&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_39_0.compilers_tested&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Compilers Tested&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      Boost's primary test compilers are:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        OS X:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.0.1 on Intel Tiger and Leopard
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.0.1 on PowerPC Tiger
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Linux:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.3.2 on Ubuntu Linux.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.3.3 on Debian &amp;quot;unstable&amp;quot;.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Windows:
        &lt;ul&gt;
          &lt;li&gt;
            Visual C++ 7.1 SP1, 8.0 SP1 and 9.0 SP1 on Windows XP.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
    &lt;p&gt;
      Boost's additional test compilers include:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        Linux:
        &lt;ul&gt;
          &lt;li&gt;
            Intel 9.0 on Red Hat Enterprise Linux
          &lt;/li&gt;
          &lt;li&gt;
            Intel 10.0 on Red Hat Enterprise Linux
          &lt;/li&gt;
          &lt;li&gt;
            Intel 10.1 on 64-bit Linux Redhat 5.1 Server.
          &lt;/li&gt;
          &lt;li&gt;
            Intel 10.1 on Suse Linux on 64 bit Itanium
          &lt;/li&gt;
          &lt;li&gt;
            Intel 11.0 on Red Hat Enterprise Linux
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.1.1, 4.2.1 on 64-bit Red Hat Enterprise Linux
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.1.2 on 64-bit Redhat Server 5.1
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.1.2 on Suse Linux on 64 bit Itanium
          &lt;/li&gt;
          &lt;li&gt;
            GCC 3.4.3, GCC 4.0.1, GCC 4.2.4 and GCC 4.3.2 on Red Hat Enterprise Linux
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.3.2 with C++0x extensions on Red Hat Enterprise Linux
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.2.1 on OpenSuSE Linux
          &lt;/li&gt;
          &lt;li&gt;
            QLogic PathScale(TM) Compiler Suite: Version 3.1 on Red Hat Enterprise
            Linux
          &lt;/li&gt;
          &lt;li&gt;
            GNU gcc version 4.2.0 (PathScale 3.2 driver) on 64-bit Red Hat Enterprise
            Linux
          &lt;/li&gt;
          &lt;li&gt;
            Sun 5.9 on Red Hat Enterprise Linux
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        OS X:
        &lt;ul&gt;
          &lt;li&gt;
            Intel 9.1, 10.1 on Tiger
          &lt;/li&gt;
          &lt;li&gt;
            Intel 10.1, 11.0 on Leopard
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.2.1 on Leopard
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Windows:
        &lt;ul&gt;
          &lt;li&gt;
            Visual C++ 9.0 on Vista.
          &lt;/li&gt;
          &lt;li&gt;
            Visual C++ 9.0, using STLport 5.2, on XP and Windows Mobile 5.0.
          &lt;/li&gt;
          &lt;li&gt;
            Borland 5.9.3
          &lt;/li&gt;
          &lt;li&gt;
            Borland 6.1.0
          &lt;/li&gt;
          &lt;li&gt;
            Intel C++ 11.0, with a Visual C++ 9.0 backend, on XP 32-bit.
          &lt;/li&gt;
          &lt;li&gt;
            Intel C++ 11.0, with a Visual C++ 9.0 backend, on Vista 64-bit. (TODO:
            not recently)
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.3.3, on Mingw
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        AIX:
        &lt;ul&gt;
          &lt;li&gt;
            IBM XL C/C++ Enterprise Edition for AIX, V10.1.0.0, on AIX Version 5.3.0.40
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        NetBSD:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.1.2 on NetBSD 4.0/i386 and NetBSD 4.0/amd64.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Solaris:
        &lt;ul&gt;
          &lt;li&gt;
            Sun C++ 5.7, 5.8, 5.9 on Solaris 5.10
          &lt;/li&gt;
          &lt;li&gt;
            GCC 3.4.6 on Solaris 5.10
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_39_0.acknowledgements&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Acknowledgements&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      &lt;a href=&quot;/users/people/beman_dawes.html&quot;&gt;Beman Dawes&lt;/a&gt;, Eric Niebler,
      &lt;a href=&quot;/users/people/rene_rivera.html&quot;&gt;Rene Rivera&lt;/a&gt;, and Daniel
      James managed this release.
    &lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;</description></item><item><title>Version 1.38.0</title><pubDate>Sun, 08 Feb 2009 12:00:00 GMT</pubDate><boostbook:purpose>&lt;span class=&quot;brief&quot;&gt;&lt;span class=&quot;purpose&quot;&gt;
      New Libraries: Flyweight, ScopeExit, Swap. Updated Libraries: Accumulators,
      Any, Asio, Config, Date_Time, Exception, Filesystem, Graph, Hash, Interprocess,
      Intrusive, Lexical Cast, Math, Multi-index Containers, Proto, Regex, Thread,
      TR1, Type Traits, Unordered, Xpressive. Other Changes: Experimental CMake build
      system.
    &lt;/span&gt;&lt;/span&gt;</boostbook:purpose><boostbook:download>http://sourceforge.net/projects/boost/files/boost/1.38.0/</boostbook:download><description>&lt;div class=&quot;description&quot;&gt;
  
  
  
  &lt;div id=&quot;version_1_38_0.new_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;New Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/flyweight/index.html&quot;&gt;Flyweight&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Design pattern to manage large quantities of highly redundant objects,
            from Joaquín M López Muñoz.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/scope_exit/doc/html/index.html&quot;&gt;ScopeExit&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Execute arbitrary code at scope exit, from Alexander Nasonov.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/utility/swap.html&quot;&gt;Swap&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Enhanced generic swap function, from Joseph Gauterin.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_38_0.updated_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Updated Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/accumulators/index.html&quot;&gt;Accumulators&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Add &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;rolling_sum&lt;/span&gt;&lt;/code&gt;, &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;rolling_count&lt;/span&gt;&lt;/code&gt; and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;rolling_mean&lt;/span&gt;&lt;/code&gt;
            accumulators.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/doc/html/any.html&quot;&gt;Any&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Use a by-value argument for &lt;code&gt;&lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;=&lt;/span&gt;&lt;/code&gt; (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2311&quot;&gt;#2311&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/asio/index.html&quot;&gt;Asio&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Improved compatibility with some Windows firewall software.
          &lt;/li&gt;
          &lt;li&gt;
            Ensured arguments to &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;windows&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;overlapped_ptr&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;complete&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;()&lt;/span&gt;&lt;/code&gt; are correctly passed to the completion
            handler (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2614&quot;&gt;#2614&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Fixed a link problem and multicast failure on QNX (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2504&quot;&gt;#2504&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2530&quot;&gt;#2530&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Fixed a compile error in SSL support on MinGW / g++ 3.4.5.
          &lt;/li&gt;
          &lt;li&gt;
            Drop back to using a pipe for notification if eventfd is not available
            at runtime on Linux (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2683&quot;&gt;#2683&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Various minor bug and documentation fixes (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2534&quot;&gt;#2534&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2541&quot;&gt;#2541&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2607&quot;&gt;#2607&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2617&quot;&gt;#2617&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2619&quot;&gt;#2619&lt;/a&gt;)
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/config/index.html&quot;&gt;Config&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Add new macros BOOST_NO_STD_UNORDERED and BOOST_NO_INITIALIZER_LISTS.
          &lt;/li&gt;
          &lt;li&gt;
            Added Codegear compiler support.
          &lt;/li&gt;
          &lt;li&gt;
            Added Dragonfly to the BSD family of configs.
          &lt;/li&gt;
          &lt;li&gt;
            Updated MSVC's binary ABI settings to match compiler default when doing
            64-bit builds.
          &lt;/li&gt;
          &lt;li&gt;
            Recognise latest compilers from MS and Intel.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/date_time/index.html&quot;&gt;Date_Time&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Added support for formatting and reading time durations longer than 24
            hours with new formatter: &lt;code&gt;&lt;span class=&quot;special&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/code&gt;.
          &lt;/li&gt;
          &lt;li&gt;
            Removed the &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;testfrmwk&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hpp&lt;/span&gt;&lt;/code&gt;
            file from the public include directory.
          &lt;/li&gt;
          &lt;li&gt;
            Fixed several bugs and compile errors.
          &lt;/li&gt;
          &lt;li&gt;
            For full details see the &lt;a href=&quot;/doc/libs/1_38_0/doc/html/date_time/details.html#date_time.changes&quot;&gt;change
            history&lt;/a&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/exception/index.html&quot;&gt;Exception&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Improved and more customizable &lt;a href=&quot;/libs/exception/doc/diagnostic_information.html&quot;&gt;diagnostic_information&lt;/a&gt;
            output.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/filesystem/index.html&quot;&gt;Filesystem&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Fix native(name) test failures on POSIX-like systems.
          &lt;/li&gt;
          &lt;li&gt;
            Several bugfixes (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2543&quot;&gt;#2543&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2224&quot;&gt;#2224&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2531&quot;&gt;#2531&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1840&quot;&gt;#1840&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2542&quot;&gt;#2542&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/graph/index.html&quot;&gt;Graph&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Added a new algorithms for Travelling Salesman Problem approximation
            (&lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;metric_tsp_approx&lt;/span&gt;&lt;/code&gt;) and
            resource-constrained Shortest Paths (&lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;r_c_shortest_paths&lt;/span&gt;&lt;/code&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Support for named vertices in &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;adjacency_list&lt;/span&gt;&lt;/code&gt;.
          &lt;/li&gt;
          &lt;li&gt;
            A number of bugfixes ( &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/416&quot;&gt;#416&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1622&quot;&gt;#1622&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1700&quot;&gt;#1700&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2209&quot;&gt;#2209&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2392&quot;&gt;#2392&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2460&quot;&gt;#2460&lt;/a&gt;,
            and &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2550&quot;&gt;#2550&lt;/a&gt;)
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/functional/hash/index.html&quot;&gt;Hash&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;functional&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;detail&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;container_fwd&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hpp&lt;/span&gt;&lt;/code&gt; has been moved to &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;detail&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;container_fwd&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hpp&lt;/span&gt;&lt;/code&gt;. The current location is deprecated.
          &lt;/li&gt;
          &lt;li&gt;
            For more detail, see the &lt;a href=&quot;/doc/html/hash/changes.html#hash.changes.boost_1_38_0&quot;&gt;library
            changelog&lt;/a&gt;.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/interprocess/index.html&quot;&gt;Interprocess&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Updated documentation to show rvalue-references functions instead of
            emulation functions.
          &lt;/li&gt;
          &lt;li&gt;
            More non-copyable classes are now movable.
          &lt;/li&gt;
          &lt;li&gt;
            Move-constructor and assignments now leave moved object in default-constructed
            state instead of just swapping contents.
          &lt;/li&gt;
          &lt;li&gt;
            Several bugfixes (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2391&quot;&gt;#2391&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2431&quot;&gt;#2431&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1390&quot;&gt;#1390&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2570&quot;&gt;#2570&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2528&quot;&gt;#2528&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/intrusive/index.html&quot;&gt;Intrusive&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            New treap-based containers: treap, treap_set, treap_multiset.
          &lt;/li&gt;
          &lt;li&gt;
            Corrected compilation bug for Windows-based 64 bit compilers.
          &lt;/li&gt;
          &lt;li&gt;
            Corrected exception-safety bugs in container constructors.
          &lt;/li&gt;
          &lt;li&gt;
            Updated documentation to show rvalue-references functions instead of
            emulation functions.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/conversion/lexical_cast.htm&quot;&gt;Lexical Cast&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Changed to work without RTTI when &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_NO_TYPEID&lt;/span&gt;&lt;/code&gt;
            is defined (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1220&quot;&gt;#1220&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/math/doc/sf_and_dist/html/index.html&quot;&gt;Math&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Added Johan Råde's optimised floating point classification routines.
          &lt;/li&gt;
          &lt;li&gt;
            Fixed code so that it compiles in GCC's -pedantic mode (bug report &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1451&quot;&gt;#1451&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/multi_index/doc/index.html&quot;&gt;Multi-index Containers&lt;/a&gt;:&lt;/span&gt;
  Some
        redundant type definitions have been deprecated. Consult the library &lt;a href=&quot;/libs/multi_index/doc/release_notes.html#boost_1_38&quot;&gt;release notes&lt;/a&gt;
        for further information.
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/proto/index.html&quot;&gt;Proto&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Fix problem with SFINAE of binary operators (Bug &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2407&quot;&gt;2407&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Fix &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;call&lt;/span&gt;&lt;/code&gt; transform for callable transforms
            with &amp;gt;3 arguments.
          &lt;/li&gt;
          &lt;li&gt;
            &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;result_of&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;value&lt;/span&gt;&lt;/code&gt; changed behavior for array-by-value
            terminals.
          &lt;/li&gt;
          &lt;li&gt;
            &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;unpack_expr&lt;/span&gt;&lt;/code&gt; requires
            only Forward Sequences rather than Random Access Sequences.
          &lt;/li&gt;
          &lt;li&gt;
            Deprecate legacy undocumented &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_PROTO_DEFINE_&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;VARARG_&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;FUNCTION_TEMPLATE&lt;/span&gt;&lt;/code&gt;
            macros.
          &lt;/li&gt;
          &lt;li&gt;
            Add &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_PROTO_REPEAT&lt;/span&gt;&lt;/code&gt;
            and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_PROTO_LOCAL_ITERATE&lt;/span&gt;&lt;/code&gt;
            macros to help with repetitive code generation
          &lt;/li&gt;
          &lt;li&gt;
            Support for nullary expressions with tag types other than &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;terminal&lt;/span&gt;&lt;/code&gt;
          &lt;/li&gt;
          &lt;li&gt;
            Allow 0- and 1-argument variants of &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;or_&lt;/span&gt;&lt;/code&gt;
            and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;and_&lt;/span&gt;&lt;/code&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/regex/index.html&quot;&gt;Regex&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;em&gt;Breaking change&lt;/em&gt;: empty expressions,
            and empty alternatives are now allowed when using the Perl regular expression
            syntax. This change has been added for Perl compatibility, when the new
            &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;syntax_option_type&lt;/span&gt;&lt;/code&gt; &lt;em&gt;no_empty_expressions&lt;/em&gt;
            is set then the old behaviour is preserved and empty expressions are
            prohibited. This is issue &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1081&quot;&gt;#1081&lt;/a&gt;.
          &lt;/li&gt;
          &lt;li&gt;
            Added support for Perl style ${n} expressions in format strings (issue
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2556&quot;&gt;#2556&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Added support for accessing the location of sub-expressions within the
            regular expression string (issue &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2269&quot;&gt;#2269&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Fixed compiler compatibility issues &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2244&quot;&gt;#2244&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2514&quot;&gt;#2514&lt;/a&gt;,
            and &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2244&quot;&gt;#2458&lt;/a&gt;.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/doc/html/thread.html&quot;&gt;Thread&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            No longer catches unhandled exceptions in threads as this debuggers couldn't
            identify the cause of unhandled exceptions in threads. An unhandled exception
            will still cause the application to terminate.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/tr1/index.html&quot;&gt;TR1&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Added support for the TR1 math functions and the unordered containers.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/type_traits/index.html&quot;&gt;Type Traits&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Added support for Codegear intrinsics.
          &lt;/li&gt;
          &lt;li&gt;
            Minor tweaks to warning suppression and alignment_of code.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/unordered/index.html&quot;&gt;Unordered&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Use &lt;a href=&quot;/libs/utility/swap.html&quot;&gt;&lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;swap&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;.
          &lt;/li&gt;
          &lt;li&gt;
            Use a larger prime number list for selecting the number of buckets.
          &lt;/li&gt;
          &lt;li&gt;
            Use &lt;a href=&quot;/libs/type_traits/doc/html/boost_typetraits/category/alignment.html&quot;&gt;aligned
            storage&lt;/a&gt; to store the types.
          &lt;/li&gt;
          &lt;li&gt;
            Add support for C++0x initializer lists where they're available.
          &lt;/li&gt;
          &lt;li&gt;
            For more detail, see the &lt;a href=&quot;/doc/html/unordered/changes.html#unordered.changes.boost_1_38_0&quot;&gt;library
            changelog&lt;/a&gt;.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/xpressive/index.html&quot;&gt;Xpressive&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;basic_regex&lt;/span&gt;&lt;/code&gt; gets nested
            &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;syntax_option_flags&lt;/span&gt;&lt;/code&gt; and
            &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;value_type&lt;/span&gt;&lt;/code&gt; typedef, for
            compatibility with &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;basic_regex&lt;/span&gt;&lt;/code&gt;
          &lt;/li&gt;
          &lt;li&gt;
            Ported to Proto v4; Proto v2 at &lt;tt&gt;boost/xpressive/proto&lt;/tt&gt;
            has been removed.
          &lt;/li&gt;
          &lt;li&gt;
            &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;regex_error&lt;/span&gt;&lt;/code&gt; inherits
            from &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;exception&lt;/span&gt;&lt;/code&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_38_0.other_changes&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Other Changes&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        Experimental support for building Boost with &lt;a href=&quot;http://www.cmake.org/&quot;&gt;CMake&lt;/a&gt;
        has been introduced in this version. For more details see the &lt;a href=&quot;https://svn.boost.org/trac/boost/wiki/CMake&quot;&gt;wiki&lt;/a&gt;,
        Discussion is taking place on the &lt;a href=&quot;http://lists.boost.org/mailman/listinfo.cgi/boost-cmake&quot;&gt;Boost-cmake
        mailing list&lt;/a&gt;.
      &lt;/li&gt;
      &lt;li&gt;
        Fixed subversion properties for several files. Most notably, unix shell scripts
        should always have unix line endings, even in the windows packages.
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_38_0.compilers_tested&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Compilers Tested&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      Boost's primary test compilers are:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        OS X:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.0.1 on Intel OS X 10.4.10, 10.5.2
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.0.1 on PowerPC OS X 10.4.9
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Linux:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.3.2 on Ubuntu Linux.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.3.3 on Debian &amp;quot;unstable&amp;quot;.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        HP-UX:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.2.1 on HP-UX 64-bit.
          &lt;/li&gt;
          &lt;li&gt;
            HP C/aC++ B3910B A.06.17 on HP-UX 64-bit.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Windows:
        &lt;ul&gt;
          &lt;li&gt;
            Visual C++ 7.1 SP1, 8.0 SP1 and 9.0 SP1 on Windows XP.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
    &lt;p&gt;
      Boost's additional test compilers include:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        Linux:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.1.1, 4.2.1 on 64-bit Red Hat Enterprise Linux
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.1.2 on 64-bit Redhat Server 5.1
          &lt;/li&gt;
          &lt;li&gt;
            GCC 3.4.3, GCC 4.0.1, GCC 4.2.4 and GCC 4.3.2 on Red Hat Enterprise Linux
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.3.2 with C++0x extensions
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.2.1 on OpenSuSE Linux
          &lt;/li&gt;
          &lt;li&gt;
            pgCC 8.0-0a 64-bit target on Red Hat Enterprise Linux
          &lt;/li&gt;
          &lt;li&gt;
            QLogic PathScale(TM) Compiler Suite: Version 3.1 on Red Hat Enterprise
            Linux
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        OS X:
        &lt;ul&gt;
          &lt;li&gt;
            Intel 9.1, 10.0 on OS X 10.4.10
          &lt;/li&gt;
          &lt;li&gt;
            Intel 10.1, 11.0 on OS X 10.5.2
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Windows:
        &lt;ul&gt;
          &lt;li&gt;
            Visual C++ 9.0 on Vista EE 64-bit.
          &lt;/li&gt;
          &lt;li&gt;
            Visual C++ 9.0 express on Vista 32-bit.
          &lt;/li&gt;
          &lt;li&gt;
            Visual C++ 9.0 on XP 32-bit.
          &lt;/li&gt;
          &lt;li&gt;
            Visual C++ 8.0, using STLport, on XP and Windows Mobile 5.0
          &lt;/li&gt;
          &lt;li&gt;
            Visual C++ 7.1, using STLport, on XP
          &lt;/li&gt;
          &lt;li&gt;
            Borland 5.9.3
          &lt;/li&gt;
          &lt;li&gt;
            Borland 6.1.0
          &lt;/li&gt;
          &lt;li&gt;
            Intel C++ 11.0, with a Visual C++ 9.0 backend, on XP 32-bit.
          &lt;/li&gt;
          &lt;li&gt;
            Intel C++ 11.0, with a Visual C++ 9.0 backend, on Vista 64-bit.
          &lt;/li&gt;
          &lt;li&gt;
            Comeau 4.3.10.1 beta 2, with a Visual C++ 9.0 backend.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 3.4.4, on Cygwin
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        AIX:
        &lt;ul&gt;
          &lt;li&gt;
            IBM XL C/C++ Enterprise Edition for AIX, V10.1.0.0, on AIX Version 5.3.0.40
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        FreeBSD:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.2.1 on FreeBSD 7.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        NetBSD:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.1.2 on NetBSD 4.0/i386 and NetBSD 4.0/amd64.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        QNX:
        &lt;ul&gt;
          &lt;li&gt;
            QNX Software Development Platform 6.4.0 x86
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Solaris:
        &lt;ul&gt;
          &lt;li&gt;
            Sun C++ 5.7, 5.8, 5.9 on Solaris 5.10
          &lt;/li&gt;
          &lt;li&gt;
            GCC 3.4.6 on Solaris 5.10
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_38_0.acknowledgements&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Acknowledgements&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      &lt;a href=&quot;/users/people/beman_dawes.html&quot;&gt;Beman Dawes&lt;/a&gt;, Eric Niebler,
      &lt;a href=&quot;/users/people/rene_rivera.html&quot;&gt;Rene Rivera&lt;/a&gt;, and Daniel
      James managed this release. Thanks to Vicente Botet for helping compile these
      release notes.
    &lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;</description></item></channel>
</rss>