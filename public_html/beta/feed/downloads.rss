<?xml version="1.0" encoding="utf-8"?><rss version="2.0" xmlns:boostbook="urn:boost.org:boostbook">
  <channel>
    <generator>BoostBook2RSS</generator>
    <title>Boost Downloads</title>
    <link>http://www.boost.org/feed/downloads.rss</link>
    <description/>
    <language>en-us</language>
    <copyright>Distributed under the Boost Software License, Version 1.0. (See accompanying file LICENSE_1_0.txt or http://www.boost.org/LICENSE_1_0.txt)</copyright>
  <item><title>Version 1.47.0</title><link>http://www.boost.org/users/history/version_1_47_0.html</link><pubDate>In Progress</pubDate><boostbook:purpose>
      New Libraries: Chrono, Geometry, Phoenix and Ratio. Updated Libraries: Accumulators,
      Asio, Config, DateTime, Dynamic Bitset, Foreach, Function, Function Types,
      Graph, Iostreams, Iterator, Lexical Cast, Logic, Math, Meta State Machine,
      MultiIndex, Proto, Random, Range, Spirit, Tokenizer, Utility, Uuid, Wave
    </boostbook:purpose><description>
  
  
  &lt;div id=&quot;version_1_47_0.new_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;New Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/chrono/index.html&quot;&gt;Chrono&lt;/a&gt;:&lt;/span&gt;
  Useful time
          utilities, from Vicente J. Botet Escribá.
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/geometry/index.html&quot;&gt;Geometry&lt;/a&gt;:&lt;/span&gt;
  Geometry
          Library, from Barend Gehrels, Bruno Lalande and Mateusz Loskot.
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/phoenix/index.html&quot;&gt;Phoenix&lt;/a&gt;:&lt;/span&gt;
  Define small
          unnamed function objects at the actual call site, and more, from Joel de
          Guzman, Dan Marsden and Thomas Heller.
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/ratio/index.html&quot;&gt;Ratio&lt;/a&gt;:&lt;/span&gt;
  Compile time rational
          arithmetic, from Vicente J. Botet Escribá.
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_47_0.updated_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Updated Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/accumulators/index.html&quot;&gt;Accumulators&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                New statistical accumulators: &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;sum_kahan&lt;/span&gt;&lt;/code&gt;,
                &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;sum_of_weights_kahan&lt;/span&gt;&lt;/code&gt;,
                &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;sum_of_variates_kahan&lt;/span&gt;&lt;/code&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/asio/index.html&quot;&gt;Asio&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Many new features and improvements:
                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Signal handling.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      A debugging aid for asynchronous programs.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Timeouts on socket iostreams.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Composed connect operations.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Rewritten SSL implementation.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      C++0x move support.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Compatibility with POSIX &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;fork&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;()&lt;/span&gt;&lt;/code&gt;.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      ... and much more. See the &lt;a href=&quot;/doc/libs/1_47_0/doc/html/boost_asio/history.html&quot;&gt;Revision
                      History&lt;/a&gt; in the Boost.Asio documentation for more details.
                    &lt;/div&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Tickets addressed: &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2879&quot;&gt;#2879&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3238&quot;&gt;#3238&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3297&quot;&gt;#3297&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3307&quot;&gt;#3307&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3702&quot;&gt;#3702&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3741&quot;&gt;#3741&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3900&quot;&gt;#3900&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3905&quot;&gt;#3905&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3939&quot;&gt;#3939&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3958&quot;&gt;#3958&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4162&quot;&gt;#4162&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4971&quot;&gt;#4971&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5124&quot;&gt;#5124&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5128&quot;&gt;#5128&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5418&quot;&gt;#5418&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5453&quot;&gt;#5453&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/config/index.html&quot;&gt;Config&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed bug &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1988&quot;&gt;#1988&lt;/a&gt;
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/date_time/index.html&quot;&gt;DateTime&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed bugs &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4920&quot;&gt;#4920&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3651&quot;&gt;#3651&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4845&quot;&gt;#4845&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4475&quot;&gt;#4475&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4952&quot;&gt;#4952&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5345&quot;&gt;#5345&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5250&quot;&gt;#5250&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4798&quot;&gt;#4798&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4754&quot;&gt;#4754&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4411&quot;&gt;#4411&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5126&quot;&gt;#5126&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4780&quot;&gt;#4780&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2475&quot;&gt;#2475&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1674&quot;&gt;#1674&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/dynamic_bitset/index.html&quot;&gt;Dynamic Bitset&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed bug &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5439&quot;&gt;#5439&lt;/a&gt;
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/foreach/index.html&quot;&gt;Foreach&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Use rvalue refs on supporting compilers for const rvalue detection.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/function/index.html&quot;&gt;Function&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Bug fixes: &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3410&quot;&gt;#3410&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3618&quot;&gt;#3618&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3912&quot;&gt;#3912&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4073&quot;&gt;#4073&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4325&quot;&gt;#4325&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4717&quot;&gt;#4717&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4765&quot;&gt;#4765&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/function_types/index.html&quot;&gt;Function Types&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Bug fixes: &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1653&quot;&gt;#1653&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3162&quot;&gt;#3162&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/graph/index.html&quot;&gt;Graph&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Bug fixes.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Remove deprecated function &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;kolmogorov_max_flow&lt;/span&gt;&lt;/code&gt;,
                use &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boykov_kolmogorov_max_flow&lt;/span&gt;&lt;/code&gt;
                instead.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Removed &lt;code&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;detail&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;is_same&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hpp&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt; header since its functionality
                is in Boost.Type_Traits.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/iostreams/index.html&quot;&gt;Iostreams&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Support filesystem v3 paths (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4485&quot;&gt;#4485&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fix a memory leak in &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;chain&lt;/span&gt;&lt;/code&gt;
                (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4922&quot;&gt;#4922&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/iterator/index.html&quot;&gt;Iterator&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Add &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;function_input_iterator&lt;/span&gt;&lt;/code&gt;
                (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2893&quot;&gt;#2893&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Bug fixes: &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1427&quot;&gt;#1427&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1517&quot;&gt;#1517&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3434&quot;&gt;#3434&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/conversion/lexical_cast.htm&quot;&gt;Lexical cast&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Better performance and less memory usage for many combinations of
                Source and Target types (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5564&quot;&gt;#5564&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5417&quot;&gt;#5417&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4397&quot;&gt;#4397&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5350&quot;&gt;#5350&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5576&quot;&gt;#5576&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Documentation updated (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5576&quot;&gt;#5576&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5494&quot;&gt;#5494&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/logic/index.html&quot;&gt;Logic&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Bug fixes: &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3093&quot;&gt;#3093&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3600&quot;&gt;#3600&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/math/index.html&quot;&gt;Math&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Added changesign function to sign.hpp to facilitate addition of nonfinite
                facets.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Addition of nonfinite facets from Johan Rade, with tests, examples
                of use for C99 format infinity and NaN, and documentation.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Added tests and documentation of changesign from Johan Rade.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/msm/index.html&quot;&gt;Meta State Machine&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Added a &lt;a href=&quot;/doc/libs/1_47_0/libs/msm/doc/HTML/ch03s05.html#backend-start&quot;&gt;&lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;
                method in the back-end.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Added partial support for &lt;a href=&quot;/doc/libs/1_47_0/libs/msm/doc/HTML/ch03s04.html#eUML-phoenix&quot;&gt;Boost.Phoenix
                functors in eUML&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Added the possibility to &lt;a href=&quot;/doc/libs/1_47_0/libs/msm/doc/HTML/ch03s05.html#backend-state-switch&quot;&gt;choose
                when state switching occurs&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Bugfixes:
                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5117&quot;&gt;#5117&lt;/a&gt;,
                      &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5253&quot;&gt;#5253&lt;/a&gt;,
                      &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5533&quot;&gt;#5533&lt;/a&gt;,
                      &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5573&quot;&gt;#5573&lt;/a&gt;.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      gcc warnings about unused variables.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      better implementation of &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;favor_compile_time&lt;/span&gt;&lt;/code&gt;
                      back-end policy.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      bug with eUML and state construction.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      incorrect eUML event and state macros.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      incorrect event type passed to a direct entry state's on_entry
                      action.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      more examples.
                    &lt;/div&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/multi_index/index.html&quot;&gt;MultiIndex&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed an ADL problem in &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;composite_key_compare&lt;/span&gt;&lt;/code&gt;
                related with Boost.Ref.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Maintenance fixes.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/proto/index.html&quot;&gt;Proto&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Pre-preprocessed for better compile times.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Default preprocessor limits raised:
                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Max expression arity (&lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_PROTO_MAX_ARITY&lt;/span&gt;&lt;/code&gt;)
                      bumped from 5 to 10.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Max function call arity (&lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_PROTO_MAX_FUNCTION_CALL_ARITY&lt;/span&gt;&lt;/code&gt;)
                      bumped from 5 to 10.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Max logical operator arity (&lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_PROTO_MAX_LOGICAL_ARITY&lt;/span&gt;&lt;/code&gt;)
                      bumped from 8 to 10.
                    &lt;/div&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Better integration of &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;basic_expr&lt;/span&gt;&lt;/code&gt;
                to avoid accidental needless instantiations of &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;expr&lt;/span&gt;&lt;/code&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/random/index.html&quot;&gt;Random&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Synchronized with the new standard.
                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Many new distributions added: &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;chi_squared_distribution&lt;/span&gt;&lt;/code&gt;,
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;negative_binomial_distribution&lt;/span&gt;&lt;/code&gt;,
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;fisher_f_distribution&lt;/span&gt;&lt;/code&gt;,
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;student_t_distribution&lt;/span&gt;&lt;/code&gt;,
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;weibull_distribution&lt;/span&gt;&lt;/code&gt;,
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;extreme_value_distribution&lt;/span&gt;&lt;/code&gt;,
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;discrete_distribution&lt;/span&gt;&lt;/code&gt;,
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;piecewise_constant_distribution&lt;/span&gt;&lt;/code&gt;,
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;piecewise_liear_distribution&lt;/span&gt;&lt;/code&gt;
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Renamed &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;uniform_int&lt;/span&gt;&lt;/code&gt;
                      and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;uniform_real&lt;/span&gt;&lt;/code&gt;
                      to &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;uniform_int_distribution&lt;/span&gt;&lt;/code&gt;
                      and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;uniform_real_distribution&lt;/span&gt;&lt;/code&gt;.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Added members to all distributions: &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;param_type&lt;/span&gt;&lt;/code&gt;,
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;param&lt;/span&gt;&lt;/code&gt;, stream
                      operators, comparison operators, &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;min&lt;/span&gt;&lt;/code&gt;
                      and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;max&lt;/span&gt;&lt;/code&gt;.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Allow distributions to be used directly with generators without
                      use of &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;variate_generator&lt;/span&gt;&lt;/code&gt;.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Changed the meaning of the parameters of &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;geometric_distribution&lt;/span&gt;&lt;/code&gt;
                      and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;lognormal_distribution&lt;/span&gt;&lt;/code&gt;.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Added a second parameter to &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;gamma_distribution&lt;/span&gt;&lt;/code&gt;.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Added &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;seed_seq&lt;/span&gt;&lt;/code&gt;
                      and added the corresponding constructors and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;seed&lt;/span&gt;&lt;/code&gt; overloads the generators.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Added &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;generate_canonical&lt;/span&gt;&lt;/code&gt;.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Renamed the engine tempates. e.g. &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;mersenne_twister&lt;/span&gt;&lt;/code&gt;
                      becomes &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;mersenne_twister_engine&lt;/span&gt;&lt;/code&gt;.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      New engine adapter &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;independent_bits_engine&lt;/span&gt;&lt;/code&gt;.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Added new predefined engine typedefs: &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;mt19937_64&lt;/span&gt;&lt;/code&gt;,
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;ranlux&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;48&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;_base&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;]&lt;/span&gt;&lt;/code&gt;,
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;knuth_b&lt;/span&gt;&lt;/code&gt;.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Updated seeding algorithms.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Added &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;discard&lt;/span&gt;&lt;/code&gt;
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Use unsigned types instead of signed types in all the predefined
                      engines.
                    &lt;/div&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Bug fixes:
                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;linear_congruential_engine&lt;/span&gt;&lt;/code&gt;
                      could assert because the modular arithmetic was not implemented
                      in all cases. &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;shuffle_output&lt;/span&gt;&lt;/code&gt;,
                      now called &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;shuffle_order_engine&lt;/span&gt;&lt;/code&gt;,
                      could cause integer overflow. These cases were not triggered
                      by any predefined engines.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;uniform_small_int&lt;/span&gt;&lt;/code&gt;
                      now actually behaves as documented.
                    &lt;/div&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                New efficient algorithms for &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;binomial_distribution&lt;/span&gt;&lt;/code&gt;
                and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;poisson_distribution&lt;/span&gt;&lt;/code&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Moved all features into &lt;code&gt;&lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt;
                &lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;random&lt;/span&gt;&lt;/code&gt;
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Backwards compatibility issues:
                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      The seeding algorithms have changed. This was unavoidable for
                      compatibility with the standard. Not to mention that some of
                      the existing algorithms were weird and inconsistent.
                      &lt;ul&gt;
                        &lt;li&gt;
                          &lt;div&gt;
                            Seeding with an integer: The behaviour should be unchanged
                            for most generators except &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;lagged_fibonacci&lt;/span&gt;&lt;/code&gt;
                            and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;subtract_with_carry&lt;/span&gt;&lt;/code&gt;
                            (and thus &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;ranlux&lt;/span&gt;&lt;/code&gt;).
                          &lt;/div&gt;
                        &lt;/li&gt;
                        &lt;li&gt;
                          &lt;div&gt;
                            Seeding a generator with another generator: This has
                            been enabled by making all all generators models of
                            &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;SeedSeq&lt;/span&gt;&lt;/code&gt;.
                            Therefore, if you seed a Boost.Random generator with
                            a non Boost.Random generator, your code will no longer
                            compile. The algorithm has changed, so code using this
                            seeding method will yield different values.
                          &lt;/div&gt;
                        &lt;/li&gt;
                        &lt;li&gt;
                          &lt;div&gt;
                            Seeding a generator from a pair of iterators: This implicitly
                            assumed that the elements were 32-bit integers in some
                            places, but not everywhere. I've added this requirement
                            everywhere and updated the algorithms accordingly. The
                            behaviour of generators with a &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;value_type&lt;/span&gt;&lt;/code&gt;
                            no more than 32 bits should be unchanged.
                          &lt;/div&gt;
                        &lt;/li&gt;
                      &lt;/ul&gt;
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Renaming:
                      &lt;ul&gt;
                        &lt;li&gt;
                          &lt;div&gt;
                            Whenever a class was renamed, there is a wrapper with
                            the old name. There are also using declarations in namespace
                            boost for everything that was moved.
                          &lt;/div&gt;
                        &lt;/li&gt;
                        &lt;li&gt;
                          &lt;div&gt;
                            The names of a few accessors in the distributions changed.
                            Both the old and the new names are allowed.
                          &lt;/div&gt;
                        &lt;/li&gt;
                      &lt;/ul&gt;
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;geometric_distribution&lt;/span&gt;&lt;/code&gt;
                      and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;lognormal_distribution&lt;/span&gt;&lt;/code&gt;:
                      The behaviour is different at runtime. &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;geometric_distribution&lt;/span&gt;&lt;/code&gt;
                      and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;lognormal_distribution&lt;/span&gt;&lt;/code&gt; provide
                      the old behaviour, &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;geometric_distribution&lt;/span&gt;&lt;/code&gt;
                      and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;lognormal_distribution&lt;/span&gt;&lt;/code&gt; provide
                      the new behaviour.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Streaming: gamma_distribution has a new parameter, thus text
                      saved with the old version will not readable by the new version.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;variate_generator&lt;/span&gt;&lt;/code&gt;
                      is now a simple pass through wrapper. Code that assumes that
                      it will adjust the generator's result type to match the distribution
                      will no longer work. This is not an issue with any of the distributions
                      provided by Boost.Random.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      Return types: The &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;result_types&lt;/span&gt;&lt;/code&gt;
                      of some generators have changed slightly. Some signed types
                      have changed to unsigned to match the standard.
                    &lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;div&gt;
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;has_fixed_range&lt;/span&gt;&lt;/code&gt;:
                      This is now always false, as it doesn't appear to be very useful
                      and is excessively cumbersome. Anything that was accessing
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;const_min&lt;/span&gt;&lt;/code&gt; and
                      &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;const_max&lt;/span&gt;&lt;/code&gt; without
                      first checking &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;has_fixed_range&lt;/span&gt;&lt;/code&gt;
                      was incorrect to begin with.
                    &lt;/div&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/range/index.html&quot;&gt;Range&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed the end position &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;irange&lt;/span&gt;&lt;/code&gt;
                when step size is greater than 1 (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5544&quot;&gt;#5544&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/spirit/index.html&quot;&gt;Spirit&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Spirit V2.5, see the '&lt;a href=&quot;/doc/libs/1_47_0/libs/spirit/doc/html/spirit/what_s_new/spirit_2_5.html&quot;&gt;What's
                New&lt;/a&gt;' section for details.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/tokenizer/index.html&quot;&gt;Tokenizer&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed bug &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4649&quot;&gt;#4649&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/utility/index.html&quot;&gt;Utility&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Bug fixes: &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4432&quot;&gt;#4432&lt;/a&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/utility/index.html&quot;&gt;Uuid&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Fixed tickets: (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5570&quot;&gt;#5570&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4601&quot;&gt;#4601&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4991&quot;&gt;#4991&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5145&quot;&gt;#5145&lt;/a&gt;,
                &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5235&quot;&gt;#5235&lt;/a&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/wave/index.html&quot;&gt;Wave&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Wave V2.3.0, see the &lt;a href=&quot;/libs/wave/ChangeLog&quot;&gt;Changelog&lt;/a&gt;
                for details.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_47_0.updated_tools&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Updated Tools&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/tools/boostbook/index.html&quot;&gt;BoostBook&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Handle doxygen tags: &lt;code&gt;&lt;span class=&quot;special&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;see&lt;/span&gt;&lt;/code&gt;, &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;tparam&lt;/span&gt;&lt;/code&gt;,
                &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;ref&lt;/span&gt;&lt;/code&gt; (for classes
                only).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Support note for classes as well as functions.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/tools/quickbook/index.html&quot;&gt;Quickbook&lt;/a&gt;:&lt;/span&gt;
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Generate consistent ids for headings.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Improved unicode support for windows.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Warn about windows paths, as they aren't portable.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Reverse deprecation of &lt;code&gt;&lt;span class=&quot;special&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;]&lt;/span&gt;&lt;/code&gt;.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Support date ranges and comma seperated clauses in copyright attributes.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Improved delimeter checking for simple markup (e.g. &lt;code&gt;&lt;span class=&quot;special&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;bold&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;*&lt;/span&gt;&lt;/code&gt;).
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Pass-thru comments in code snippets.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                &lt;code&gt;__FILENAME__&lt;/code&gt; macro now generates relative paths.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Allow quickbook escapes inside comments in syntax highlighted code.
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_47_0.compilers_tested&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Compilers Tested&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      Boost's primary test compilers are:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          Linux:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                LLVM Clang 2.8
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC: 3.4.6, 4.2.4, 4.3.4, 4.3.5, 4.4.1, 4.4.3, 4.4.5, 4.5.1, 4.5.2,
                4.6.0, 4.6.1
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, C++0x mode: 4.3.4, 4.4.3, 4.5.2
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Intel 12.0
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          OS X:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Apple Clang 2.1
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Intel 11.1
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC: 4.2.1, 4.4.4
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, C++0x mode: 4.4.4
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          Windows:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Visual C++ 7.1, 9.0, 10.0
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, mingw: 4.4.0
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          FreeBSD:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC 4.2.1, 64 bit
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          QNX:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                QCC
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
    &lt;p&gt;
      Boost's additional test compilers include:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          Linux:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Clang from subversion, with GNU libstdc++.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                LLVM Clang 2.8
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC: 3.4.6, 4.2.4, 4.3.4, 4.3.5, 4.4.3, 4.4.5, 4.5.1, 4.5.2, 4.6.0,
                4.6.1
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, C++0x mode: 4.3.4, 4.4.3, 4.5.2
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                pgCC: 11.2
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Intel: 10.1, 11.0, 11.1, 12.0
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                PathScale: 3.2
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          OS X:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Clang from subversion, with GNU libstdc++.
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Intel 11.1
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC: 4.4.4
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, C++0x mode: 4.4.4
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          Windows:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                Visual C++ 7.1, 9.0, 10.0
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Visual C++ with STLport: 9.0
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                Visual C++, Windows Mobile 5, with STLport: 9.0
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, mingw: 4.5.2
              &lt;/div&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;div&gt;
                GCC, C++0x mode, mingw: 4.5.2
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          AIX:
          &lt;ul&gt;
            &lt;li&gt;
              &lt;div&gt;
                IBM XL C/C++ Enterprise Edition, V11.1.0.0
              &lt;/div&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_47_0.acknowledgements&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Acknowledgements&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      &lt;a href=&quot;/users/people/beman_dawes.html&quot;&gt;Beman Dawes&lt;/a&gt;, Eric Niebler,
      &lt;a href=&quot;/users/people/rene_rivera.html&quot;&gt;Rene Rivera&lt;/a&gt;, Daniel James
      and Vladimir Prus managed this release.
    &lt;/p&gt;
  &lt;/div&gt;
</description></item><item><title>Version 1.46.1</title><pubDate>Sat, 12 Mar 2011 10:45:53 -0500</pubDate><boostbook:purpose>&lt;span class=&quot;brief&quot;&gt;&lt;span class=&quot;purpose&quot;&gt;
      Bug fixes: Asio, Fusion, Graph, Icl, Math, Polygon, Proto, Property Tree, Signals2,
      TR1, Unordered.
    &lt;/span&gt;&lt;/span&gt;</boostbook:purpose><boostbook:download>http://sourceforge.net/projects/boost/files/boost/1.46.1/</boostbook:download><description>&lt;div class=&quot;description&quot;&gt;
  
  
  
  &lt;div id=&quot;version_1_46_1.updated_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Updated Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/asio/&quot;&gt;Asio&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;EV_ONESHOT&lt;/span&gt;&lt;/code&gt; seems to
              cause problems on some versions of Mac OS X, with the &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;io_service&lt;/span&gt;&lt;/code&gt; destructor getting stuck
              inside the &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;()&lt;/span&gt;&lt;/code&gt;
              system call. Changed the kqueue backend to use &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;EV_CLEAR&lt;/span&gt;&lt;/code&gt;
              instead (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5021&quot;&gt;#5021&lt;/a&gt;).
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed compile failures with some versions of &lt;tt&gt;g++&lt;/tt&gt;
              due to the use of anonymous enums (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4883&quot;&gt;#4883&lt;/a&gt;).
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed a bug on kqueue-based platforms, where some system calls that
              repeatedly fail with &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;EWOULDBLOCK&lt;/span&gt;&lt;/code&gt;
              are not correctly re-registered with kqueue.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Changed &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;asio&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;streambuf&lt;/span&gt;&lt;/code&gt; to ensure that its internal
              pointers are updated correctly after the data has been modified using
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;streambuf&lt;/span&gt;&lt;/code&gt; member functions.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed a bug that prevented the linger socket option from working on
              platforms other than Windows.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/fusion/&quot;&gt;Fusion&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fix &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;disable_if&lt;/span&gt;&lt;/code&gt; for
              Visual C++ 7.1/8.0
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/filesystem/&quot;&gt;Filesystem&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fix for STLPort (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5217&quot;&gt;#5217&lt;/a&gt;).
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              PGI large file support
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/graph/&quot;&gt;Graph&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Bug fixes, including fixes for: &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5181&quot;&gt;#5181&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5180&quot;&gt;#5180&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5199&quot;&gt;#5199&lt;/a&gt;
              and &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5175&quot;&gt;#5175&lt;/a&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/icl/&quot;&gt;Icl&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Intersects for interval_maps and segment_type/element_type (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5207&quot;&gt;#5207&lt;/a&gt;).
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed some ambiguous calls to functions in boost and std namespaces.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Other bug fixes, and documentation fixes.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/math/&quot;&gt;Math&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Several minor bug fixes.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/polygon/&quot;&gt;Polygon&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Disabled 45-degree booleans optimization.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/proto/&quot;&gt;Proto&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Make &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;display_expr&lt;/span&gt;&lt;/code&gt; copyable
              (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5096&quot;&gt;#5096&lt;/a&gt;).
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fix const correctness problem in &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;pass_through&lt;/span&gt;&lt;/code&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/property_tree/&quot;&gt;Property Tree&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fix compile error in JSON parser.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/signals2/&quot;&gt;Signals2&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fix unused parameter warning.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/tr1/&quot;&gt;TR1&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Allow specialization of &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;tr1&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hash&lt;/span&gt;&lt;/code&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Improved support for Pathscale and Sun compilers.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/unordered/&quot;&gt;Unordered&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Add missing copy constructors and assignment operators when using rvalue
              references (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5119&quot;&gt;#5119&lt;/a&gt;).
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_46_1.other_changes&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Other changes&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          Update getting started guide to reflect changes to boost build.
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          In quickbook, workaround optimization bug in g++ 4.4.
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_46_1.compilers_tested&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Compilers Tested&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      Boost's primary test compilers are:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          Linux:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 3.4.6, 4.2.4, 4.3.4, 4.4.1, 4.4.3, 4.4.5, 4.5.2
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, C++0x mode: 4.3.4, 4.4.3, 4.5.2
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Intel: 10.1, 11.0, 11.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Clang: 2.8
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Pathscale: 3.2
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          OS X:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 4.0.1, 4.2.1, 4.4
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, C++0x mode: 4.4.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Intel: 11.1
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          Windows:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual C++: 7.1, 8.0, 9.0 and 10.0.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, mingw: 4.4.0.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          FreeBSD:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 4.2.1, 64 bit.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
    &lt;p&gt;
      Boost's additional test compilers include:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          Linux:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 3.4.6, 4.2.4, 4.3.4, 4.4.3, 4.4.4, 4.4.5, 4.5.2
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, C++0x mode: 4.3.4, 4.4.3, 4.5.2
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              pgCC: 11.2
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Intel: 10.1, 11.0, 11.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              PathScale: 3.2, 4.0.8
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual Age C++: 10.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Clang from subversion
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          OS X:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Intel C++ Compiler: 10.1, 11.0, 11.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 4.0.1, 4.2.1, 4.4.4
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, C++0x mode: 4.4.4
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Clang from subversion, with GNU libstdc++, libc++ and libc++ in C++0x
              mode.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          Windows:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual C++: 7.1, 9.0, 10.0
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual C++ with STLport: 9.0
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual C++, Windows Mobile 5, with STLport: 9.0
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, mingw: 4.5.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, mingw, C++0x mode: 4.5.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Borland: 6.1.3 (2009), 6.2.1 (2010)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          AIX:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              IBM XL C/C++ Enterprise Edition, V11.1.0.0
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          Solaris:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Sun C++: 5.10
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_46_1.acknowledgements&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Acknowledgements&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      &lt;a href=&quot;/users/people/beman_dawes.html&quot;&gt;Beman Dawes&lt;/a&gt;, Eric Niebler,
      &lt;a href=&quot;/users/people/rene_rivera.html&quot;&gt;Rene Rivera&lt;/a&gt;, Daniel James
      and Vladimir Prus managed this release.
    &lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;</description></item><item><title>Version 1.46.0</title><pubDate>Mon, 21 Feb 2011 15:36:13 -0500</pubDate><boostbook:purpose>&lt;span class=&quot;brief&quot;&gt;&lt;span class=&quot;purpose&quot;&gt;
      New Libraries: Icl. Updated Libraries: Array, Asio, Bind, Concept Check, Filesystem,
      Fusion, Hash, Iostreams, Iterator, Math, Meta State Machine, Optional, Pool,
      Program Options, Proto, Signals, Spirit, Tokenizer, Unordered, Wave. Updated
      Tools: Boostbook, Inspect, Quickbook.
    &lt;/span&gt;&lt;/span&gt;</boostbook:purpose><boostbook:download>http://sourceforge.net/projects/boost/files/boost/1.46.0/</boostbook:download><description>&lt;div class=&quot;description&quot;&gt;
  
  
  
  &lt;div id=&quot;version_1_46_0.new_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;New Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/icl/index.html&quot;&gt;Icl&lt;/a&gt;:&lt;/span&gt;
  Interval Container
          Library, interval sets and maps and aggregation of associated values, from
          Joachim Faulhaber.
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_46_0.updated_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Updated Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/array/index.html&quot;&gt;Array&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Added support for cbegin/cend (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4761&quot;&gt;#4761&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed a problem with the Sun compiler (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4757&quot;&gt;#4757&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/asio/index.html&quot;&gt;Asio&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed an integer overflow problem that occurs when &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;address_v4&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;broadcast&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;()&lt;/span&gt;&lt;/code&gt; is used on 64-bit platforms.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed a problem on older Linux kernels (where epoll is used without
              timerfd support) that prevents timely delivery of deadline_timer handlers,
              after the program has been running for some time (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5045&quot;&gt;#5045&lt;/a&gt;).
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/bind/index.html&quot;&gt;Bind&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;make_adaptable&lt;/span&gt;&lt;/code&gt; now
              documented (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4532&quot;&gt;#4532&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/concept_check/index.html&quot;&gt;Concept Check&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              fixed warnings with self-assignment (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4918&quot;&gt;#4918&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/filesystem/index.html&quot;&gt;Filesystem&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Version 3 of the library is now the default.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              IBM vacpp: Workaround for compiler bug affecting &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;iterator_facade&lt;/span&gt;&lt;/code&gt;.
              (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4912&quot;&gt;#4912&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Verify, clarify, document that &lt;code&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hpp&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;
              can be used to specify &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_FILESYSTEM_VERSION&lt;/span&gt;&lt;/code&gt;.
              (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4891&quot;&gt;#4891&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Replaced C-style &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;assert&lt;/span&gt;&lt;/code&gt;
              with &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_ASSERT&lt;/span&gt;&lt;/code&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Undeprecated &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;unique_path&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;()&lt;/span&gt;&lt;/code&gt;. Instead, add a note mentioning the
              workaround for lack of thread safety and possible change to cwd. &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;unique_path&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;()&lt;/span&gt;&lt;/code&gt;
              is just too convenient to deprecate!
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Cleared several GCC warnings.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Changed V2 code to use &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_THROW_EXCEPTION&lt;/span&gt;&lt;/code&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Windows: Fix &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;()&lt;/span&gt;&lt;/code&gt; to report non-symlink reparse point
              correctly.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Add &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;symlink_option&lt;/span&gt;&lt;/code&gt;
              to &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;recursive_directory_iterator&lt;/span&gt;&lt;/code&gt;,
              allowing control over recursion into directory symlinks. Note that
              the default is changed to not recurse into directory symlinks.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Reference documentation cleanup, including fixing missing and broken
              links, and adding missing functions.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Miscellaneous implementation code cleanup.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/fusion/index.html&quot;&gt;Fusion&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              vector copy constructor now copies sequence members in the same order
              on different platforms (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2823&quot;&gt;#2823&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/graph/index.html&quot;&gt;Graph&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed Graphviz output to work on Visual C++ 7.1.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Replaced assert with &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_ASSERT&lt;/span&gt;&lt;/code&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Changed to Boost.Filesystem v3.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed the following bugs from Trac: &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1021&quot;&gt;#1021&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4556&quot;&gt;#4556&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4631&quot;&gt;#4631&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4642&quot;&gt;#4642&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4715&quot;&gt;#4715&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4731&quot;&gt;#4731&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4737&quot;&gt;#4737&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4753&quot;&gt;#4753&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4758&quot;&gt;#4758&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4793&quot;&gt;#4793&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4843&quot;&gt;#4843&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4851&quot;&gt;#4851&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4852&quot;&gt;#4852&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4887&quot;&gt;#4887&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4914&quot;&gt;#4914&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4966&quot;&gt;#4966&lt;/a&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed various bugs not in Trac.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/functional/hash/index.html&quot;&gt;Hash&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Support for &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;type_index&lt;/span&gt;&lt;/code&gt; (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4756&quot;&gt;#4756&lt;/a&gt;).
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Avoid &lt;code&gt;&lt;span class=&quot;special&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;Wconversion&lt;/span&gt;&lt;/code&gt;
              warnings.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/iostreams/index.html&quot;&gt;Iostreams&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Use &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_ASSERT&lt;/span&gt;&lt;/code&gt; instead
              of &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;assert&lt;/span&gt;&lt;/code&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed flush regression (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4590&quot;&gt;#4590&lt;/a&gt;).
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/iterator/index.html&quot;&gt;Iterator&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              fixed problem with &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;implicit_cast&lt;/span&gt;&lt;/code&gt;
              (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3645&quot;&gt;#3645&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/math/doc/sf_and_dist/html/index.html&quot;&gt;Math&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Added Wald, Inverse Gaussian and geometric distributions.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Added information about configuration macros.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Added support for mpreal as a real-numered type.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/msm/index.html&quot;&gt;Meta State Machine&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;a href=&quot;/doc/libs/1_46_0/libs/msm/doc/HTML/ch03s05.html#backend-compile-time-analysis&quot;&gt;Compile-time
              state machine analysis&lt;/a&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;a href=&quot;/doc/libs/1_46_0/libs/msm/doc/HTML/ch03s05.html#backend-boost-parameter&quot;&gt;Boost.Parameter
              interface definition for &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;msm&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;back&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;state_machine&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;/code&gt; template arguments&lt;/a&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;a href=&quot;/doc/libs/1_46_0/libs/msm/doc/HTML/ch03s05.html#backend-queues&quot;&gt;Possibility
              to provide a container for the event and deferred event queues&lt;/a&gt;.
              A policy implementation based on a more efficient Boost.CircularBuffer
              is provided.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;msm&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;back&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;state_machine&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&amp;gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;is_flag_active&lt;/span&gt;&lt;/code&gt; method made const.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;a href=&quot;/doc/libs/1_46_0/libs/msm/doc/HTML/ch03s05.html#backend-enqueueing&quot;&gt;Added
              possibility to enqueue events for delayed processing&lt;/a&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Bugfixes
            &lt;/div&gt;
            &lt;ul&gt;
              &lt;li&gt;
                &lt;div&gt;
                  &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4926&quot;&gt;#4926&lt;/a&gt;.
                &lt;/div&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;div&gt;
                  stack overflow using the Defer functor
                &lt;/div&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;div&gt;
                  anonymous transition of a submachine not called for the initial
                  state
                &lt;/div&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/optional/index.html&quot;&gt;Optional&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Updated test results with information about expected failures (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2294&quot;&gt;#2294&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/pool/index.html&quot;&gt;Pool&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Now can set a max_size for pool (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2696&quot;&gt;#2696&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hpp&lt;/span&gt;&lt;/code&gt; uses &lt;code&gt;&lt;span class=&quot;keyword&quot;&gt;reinterpret_cast&lt;/span&gt;&lt;/code&gt;
              instead of &lt;code&gt;&lt;span class=&quot;keyword&quot;&gt;static_cast&lt;/span&gt;&lt;/code&gt;
              (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2941&quot;&gt;#2941&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;pool_allocator&lt;/span&gt;&lt;/code&gt; now works with vector
              of vectors (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/386&quot;&gt;#386&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Boost pool is now compatible with Microsoft memory leak detection (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4346&quot;&gt;#4346&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/program_options/index.html&quot;&gt;Program Options&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed errors in examples in docs (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3992&quot;&gt;#3992&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4858&quot;&gt;#4858&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Now takes &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;argv&lt;/span&gt;&lt;/code&gt; as const
              (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3909&quot;&gt;#3909&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/proto/index.html&quot;&gt;Proto&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;strong&gt;Breaking change&lt;/strong&gt;: &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;core&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hpp&lt;/span&gt;&lt;/code&gt;
              no longer defines &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;functional&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;pop_front&lt;/span&gt;&lt;/code&gt;
              and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;functional&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;reverse&lt;/span&gt;&lt;/code&gt;, which have moved to their
              own headers under &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;functional&lt;/span&gt;&lt;/code&gt;
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Add callable wrappers for more Fusion algorithms (including &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;fusion&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;at&lt;/span&gt;&lt;/code&gt;); and callable wrappers for some
              std utilities like &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;make_pair&lt;/span&gt;&lt;/code&gt;,
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;first&lt;/span&gt;&lt;/code&gt; and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;second&lt;/span&gt;&lt;/code&gt;, all under the new &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;functional&lt;/span&gt;&lt;/code&gt; directory
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Allow transforms to be specified separately from a grammar
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;matches&lt;/span&gt;&lt;/code&gt; preserves domain-specific
              expression wrappers
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fix ADL issue with &lt;code&gt;&lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;,&lt;/span&gt;&lt;/code&gt; in &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;and_&lt;/span&gt;&lt;/code&gt;
              transform
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fix handling of grammar checking in expressions involving multiple
              domains (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4675&quot;&gt;#4675&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fix ambiguous &lt;code&gt;&lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;/code&gt; in &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;display_expr&lt;/span&gt;&lt;/code&gt;
              (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4910&quot;&gt;#4910&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;fusion&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;is_sequence&lt;/span&gt;&lt;/code&gt; answers true for Proto
              expressions (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5006&quot;&gt;#5006&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Eliminate &lt;code&gt;&lt;span class=&quot;special&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;Wundef&lt;/span&gt;&lt;/code&gt;
              GCC warning in &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;fusion&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hpp&lt;/span&gt;&lt;/code&gt;
              (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5075&quot;&gt;#5075&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/signals/index.html&quot;&gt;Signals&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              gcc warning cleanup (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4365&quot;&gt;#4365&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/spirit/index.html&quot;&gt;Spirit&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Spirit V2.4.2, see the '&lt;a href=&quot;/doc/libs/1_46_0/libs/spirit/doc/html/spirit/what_s_new/spirit_2_4_2.html&quot;&gt;What's
              New&lt;/a&gt;' section for details.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/tokenizer/index.html&quot;&gt;Tokenizer&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;isspace&lt;/span&gt;&lt;/code&gt;/&lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;ispunct&lt;/span&gt;&lt;/code&gt; was called with wrong character
              type (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4791&quot;&gt;#4791&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/unordered/index.html&quot;&gt;Unordered&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Avoid using &lt;code&gt;&lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;amp;&lt;/span&gt;&lt;/code&gt;
              with the value type.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Avoid &lt;code&gt;&lt;span class=&quot;special&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;Wconversion&lt;/span&gt;&lt;/code&gt;
              warnings.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/wave/index.html&quot;&gt;Wave&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              See the &lt;a href=&quot;/libs/wave/ChangeLog&quot;&gt;Changelog&lt;/a&gt; for details.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_46_0.updated_tools&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Updated Tools&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/tools/boostbook/index.html&quot;&gt;Boostbook&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Better support for attributes on root elements - including &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;lang&lt;/span&gt;&lt;/code&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/tools/inspect/index.html&quot;&gt;Inspect&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Check that Boost headers do not use C's &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;assert&lt;/span&gt;&lt;/code&gt;
              macro.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/tools/quickbook/index.html&quot;&gt;Quickbook&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Add support for &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;lang&lt;/span&gt;&lt;/code&gt;
              attribute in documentation info.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Improved anchors.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Support &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;import&lt;/span&gt;&lt;/code&gt;, &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;include&lt;/span&gt;&lt;/code&gt; and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;xinclude&lt;/span&gt;&lt;/code&gt;
              in conditional phrases.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Uses Filesystem 3.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_46_0.compilers_tested&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Compilers Tested&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      Boost's primary test compilers are:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          Linux:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 3.4.6, 4.2.4, 4.3.4, 4.4.3, 4.4.5, 4.5.2,
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, C++0x mode: 4.3.4, 4.4.3, 4.5.0, 4.5.2
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Intel: 10.1, 11.0, 11.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Clang: 2.8
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Pathscale: 3.2.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          OS X:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 4.0.1, 4.2.1, 4.4
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, C++0x mode: 4.4.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Intel: 11.1
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          Windows:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual C++: 7.1, 8.0, 9.0 and 10.0.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, mingw: 4.4.0.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          FreeBSD:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 4.2.1, 64 bit.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
    &lt;p&gt;
      Boost's additional test compilers include:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          Linux:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 3.4.6, 4.2.4, 4.3.4, 4.3.5, 4.4.3, 4.4.5, 4.5.0, 4.5.2
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, C++0x mode: 4.3.4, 4.4.3, 4.5.0, 4.5.2
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              pgCC 11.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Intel: 10.1, 11.0, 11.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              PathScale: 3.2, 4.0
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual Age C++ 10.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Clang from subversion
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          OS X:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Intel C++ Compiler: 10.1, 11.0, 11.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 4.0.1, 4.2.1, 4.4.4
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, C++0x mode: 4.4.4
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Clang from subversion
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          Windows:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual C++: 7.1, 8.0, 9.0, 10.0
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual C++ with STLport: 9.0
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual C++, Windows Mobile 5, with STLport: 9.0
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, mingw: 4.4.0, 4.5.1, 4.6.0
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, mingw, C++0x mode: 4.5.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Borland: 6.1.3 (2009), 6.2.1 (2010)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          AIX:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              IBM XL C/C++ Enterprise Edition, V11.1.0.0
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          FreeBSD:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC 4.2.1, 64 bit
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          Solaris:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Sun C++: 5.10
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_46_0.acknowledgements&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Acknowledgements&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      &lt;a href=&quot;/users/people/beman_dawes.html&quot;&gt;Beman Dawes&lt;/a&gt;, Eric Niebler,
      &lt;a href=&quot;/users/people/rene_rivera.html&quot;&gt;Rene Rivera&lt;/a&gt;, Daniel James
      and Vladimir Prus managed this release.
    &lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;</description></item></channel>
</rss>