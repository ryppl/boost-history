<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:boostbook="urn:boost.org:boostbook">
  <channel>
    <generator>BoostBook2RSS</generator>
    <title>Boost Downloads</title>
    <link>http://www.boost.org/feed/download.rss</link>
    <description/>
    <language>en-us</language>
    <copyright>Distributed under the Boost Software License, Version 1.0. (See accompanying file LICENSE_1_0.txt or http://www.boost.org/LICENSE_1_0.txt)</copyright>
  <item><title>Version 1.38.0</title><pubDate>Sun, 08 Feb 2009 12:00:00 GMT</pubDate><boostbook:purpose>&lt;span class=&quot;brief&quot;&gt;&lt;span class=&quot;purpose&quot;&gt;
      New Libraries: Flyweight, ScopeExit, Swap. Updated Libraries: Accumulators,
      Any, Asio, Config, Date_Time, Exception, Filesystem, Graph, Hash, Interprocess,
      Intrusive, Lexical Cast, Math, Multi-index Containers, Proto, Regex, Thread,
      TR1, Type Traits, Unordered, Xpressive. Other Changes: Experimental CMake build
      system.
    &lt;/span&gt;&lt;/span&gt;</boostbook:purpose><boostbook:download>http://sourceforge.net/project/showfiles.php?group_id=7586&amp;package_id=8041&amp;release_id=659602</boostbook:download><description>&lt;div class=&quot;description&quot;&gt;
  
  &lt;div id=&quot;version_1_38_0.new_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;New Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/flyweight/index.html&quot;&gt;Flyweight&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Design pattern to manage large quantities of highly redundant objects,
            from Joaquín M López Muñoz.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/scope_exit/doc/html/index.html&quot;&gt;ScopeExit&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Execute arbitrary code at scope exit, from Alexander Nasonov.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/utility/swap.html&quot;&gt;Swap&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Enhanced generic swap function, from Joseph Gauterin.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_38_0.updated_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Updated Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/accumulators/index.html&quot;&gt;Accumulators&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Add &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;rolling_sum&lt;/span&gt;&lt;/code&gt;, &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;rolling_count&lt;/span&gt;&lt;/code&gt; and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;rolling_mean&lt;/span&gt;&lt;/code&gt;
            accumulators.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/doc/html/any.html&quot;&gt;Any&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Use a by-value argument for &lt;code&gt;&lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;=&lt;/span&gt;&lt;/code&gt; (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2311&quot;&gt;#2311&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/asio/index.html&quot;&gt;Asio&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Improved compatibility with some Windows firewall software.
          &lt;/li&gt;
          &lt;li&gt;
            Ensured arguments to &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;windows&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;overlapped_ptr&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;complete&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;()&lt;/span&gt;&lt;/code&gt; are correctly passed to the completion
            handler (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2614&quot;&gt;#2614&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Fixed a link problem and multicast failure on QNX (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2504&quot;&gt;#2504&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2530&quot;&gt;#2530&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Fixed a compile error in SSL support on MinGW / g++ 3.4.5.
          &lt;/li&gt;
          &lt;li&gt;
            Drop back to using a pipe for notification if eventfd is not available
            at runtime on Linux (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2683&quot;&gt;#2683&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Various minor bug and documentation fixes (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2534&quot;&gt;#2534&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2541&quot;&gt;#2541&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2607&quot;&gt;#2607&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2617&quot;&gt;#2617&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2619&quot;&gt;#2619&lt;/a&gt;)
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/config/index.html&quot;&gt;Config&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Add new macros BOOST_NO_STD_UNORDERED and BOOST_NO_INITIALIZER_LISTS.
          &lt;/li&gt;
          &lt;li&gt;
            Added Codegear compiler support.
          &lt;/li&gt;
          &lt;li&gt;
            Added Dragonfly to the BSD family of configs.
          &lt;/li&gt;
          &lt;li&gt;
            Updated MSVC's binary ABI settings to match compiler default when doing
            64-bit builds.
          &lt;/li&gt;
          &lt;li&gt;
            Recognise latest compilers from MS and Intel.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/date_time/index.html&quot;&gt;Date_Time&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Added support for formatting and reading time durations longer than 24
            hours with new formatter: &lt;code&gt;&lt;span class=&quot;special&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/code&gt;.
          &lt;/li&gt;
          &lt;li&gt;
            Removed the &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;testfrmwk&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hpp&lt;/span&gt;&lt;/code&gt;
            file from the public include directory.
          &lt;/li&gt;
          &lt;li&gt;
            Fixed several bugs and compile errors.
          &lt;/li&gt;
          &lt;li&gt;
            For full details see the &lt;a href=&quot;/doc/libs/1_38_0/doc/html/date_time/details.html#date_time.changes&quot;&gt;change
            history&lt;/a&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/exception/index.html&quot;&gt;Exception&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Improved and more customizable &lt;a href=&quot;/libs/exception/doc/diagnostic_information.html&quot;&gt;diagnostic_information&lt;/a&gt;
            output.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/filesystem/index.html&quot;&gt;Filesystem&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Fix native(name) test failures on POSIX-like systems.
          &lt;/li&gt;
          &lt;li&gt;
            Several bugfixes (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2543&quot;&gt;#2543&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2224&quot;&gt;#2224&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2531&quot;&gt;#2531&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1840&quot;&gt;#1840&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2542&quot;&gt;#2542&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/graph/index.html&quot;&gt;Graph&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Added a new algorithms for Travelling Salesman Problem approximation
            (&lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;metric_tsp_approx&lt;/span&gt;&lt;/code&gt;) and
            resource-constrained Shortest Paths (&lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;r_c_shortest_paths&lt;/span&gt;&lt;/code&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Support for named vertices in &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;adjacency_list&lt;/span&gt;&lt;/code&gt;.
          &lt;/li&gt;
          &lt;li&gt;
            A number of bugfixes ( &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/416&quot;&gt;#416&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1622&quot;&gt;#1622&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1700&quot;&gt;#1700&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2209&quot;&gt;#2209&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2392&quot;&gt;#2392&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2460&quot;&gt;#2460&lt;/a&gt;,
            and &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2550&quot;&gt;#2550&lt;/a&gt;)
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/functional/hash/index.html&quot;&gt;Hash&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;functional&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;detail&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;container_fwd&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hpp&lt;/span&gt;&lt;/code&gt; has been moved to &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;detail&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;container_fwd&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hpp&lt;/span&gt;&lt;/code&gt;. The current location is deprecated.
          &lt;/li&gt;
          &lt;li&gt;
            For more detail, see the &lt;a href=&quot;/doc/html/hash/changes.html#hash.changes.boost_1_38_0&quot;&gt;library
            changelog&lt;/a&gt;.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/interprocess/index.html&quot;&gt;Interprocess&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Updated documentation to show rvalue-references functions instead of
            emulation functions.
          &lt;/li&gt;
          &lt;li&gt;
            More non-copyable classes are now movable.
          &lt;/li&gt;
          &lt;li&gt;
            Move-constructor and assignments now leave moved object in default-constructed
            state instead of just swapping contents.
          &lt;/li&gt;
          &lt;li&gt;
            Several bugfixes (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2391&quot;&gt;#2391&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2431&quot;&gt;#2431&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1390&quot;&gt;#1390&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2570&quot;&gt;#2570&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2528&quot;&gt;#2528&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/intrusive/index.html&quot;&gt;Intrusive&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            New treap-based containers: treap, treap_set, treap_multiset.
          &lt;/li&gt;
          &lt;li&gt;
            Corrected compilation bug for Windows-based 64 bit compilers.
          &lt;/li&gt;
          &lt;li&gt;
            Corrected exception-safety bugs in container constructors.
          &lt;/li&gt;
          &lt;li&gt;
            Updated documentation to show rvalue-references functions instead of
            emulation functions.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/conversion/lexical_cast.htm&quot;&gt;Lexical Cast&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Changed to work without RTTI when &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_NO_TYPEID&lt;/span&gt;&lt;/code&gt;
            is defined (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1220&quot;&gt;#1220&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/math/doc/sf_and_dist/html/index.html&quot;&gt;Math&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Added Johan Råde's optimised floating point classification routines.
          &lt;/li&gt;
          &lt;li&gt;
            Fixed code so that it compiles in GCC's -pedantic mode (bug report &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1451&quot;&gt;#1451&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/multi_index/doc/index.html&quot;&gt;Multi-index Containers&lt;/a&gt;:&lt;/span&gt;
  Some
        redundant type definitions have been deprecated. Consult the library &lt;a href=&quot;/libs/multi_index/doc/release_notes.html#boost_1_38&quot;&gt;release notes&lt;/a&gt;
        for further information.
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/proto/index.html&quot;&gt;Proto&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Fix problem with SFINAE of binary operators (Bug &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2407&quot;&gt;2407&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Fix &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;call&lt;/span&gt;&lt;/code&gt; transform for callable transforms
            with &amp;gt;3 arguments.
          &lt;/li&gt;
          &lt;li&gt;
            &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;result_of&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;value&lt;/span&gt;&lt;/code&gt; changed behavior for array-by-value
            terminals.
          &lt;/li&gt;
          &lt;li&gt;
            &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;unpack_expr&lt;/span&gt;&lt;/code&gt; requires
            only Forward Sequences rather than Random Access Sequences.
          &lt;/li&gt;
          &lt;li&gt;
            Deprecate legacy undocumented &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_PROTO_DEFINE_&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;VARARG_&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;FUNCTION_TEMPLATE&lt;/span&gt;&lt;/code&gt;
            macros.
          &lt;/li&gt;
          &lt;li&gt;
            Add &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_PROTO_REPEAT&lt;/span&gt;&lt;/code&gt;
            and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_PROTO_LOCAL_ITERATE&lt;/span&gt;&lt;/code&gt;
            macros to help with repetitive code generation
          &lt;/li&gt;
          &lt;li&gt;
            Support for nullary expressions with tag types other than &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;terminal&lt;/span&gt;&lt;/code&gt;
          &lt;/li&gt;
          &lt;li&gt;
            Allow 0- and 1-argument variants of &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;or_&lt;/span&gt;&lt;/code&gt;
            and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;and_&lt;/span&gt;&lt;/code&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/regex/index.html&quot;&gt;Regex&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;em&gt;Breaking change&lt;/em&gt;: empty expressions,
            and empty alternatives are now allowed when using the Perl regular expression
            syntax. This change has been added for Perl compatibility, when the new
            &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;syntax_option_type&lt;/span&gt;&lt;/code&gt; &lt;em&gt;no_empty_expressions&lt;/em&gt;
            is set then the old behaviour is preserved and empty expressions are
            prohibited. This is issue &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1081&quot;&gt;#1081&lt;/a&gt;.
          &lt;/li&gt;
          &lt;li&gt;
            Added support for Perl style ${n} expressions in format strings (issue
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2556&quot;&gt;#2556&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Added support for accessing the location of sub-expressions within the
            regular expression string (issue &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2269&quot;&gt;#2269&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Fixed compiler compatibility issues &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2244&quot;&gt;#2244&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2514&quot;&gt;#2514&lt;/a&gt;,
            and &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2244&quot;&gt;#2458&lt;/a&gt;.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/doc/html/thread.html&quot;&gt;Thread&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            No longer catches unhandled exceptions in threads as this debuggers couldn't
            identify the cause of unhandled exceptions in threads. An unhandled exception
            will still cause the application to terminate.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/tr1/index.html&quot;&gt;TR1&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Added support for the TR1 math functions and the unordered containers.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/type_traits/index.html&quot;&gt;Type Traits&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Added support for Codegear intrinsics.
          &lt;/li&gt;
          &lt;li&gt;
            Minor tweaks to warning suppression and alignment_of code.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/unordered/index.html&quot;&gt;Unordered&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Use &lt;a href=&quot;/libs/utility/swap.html&quot;&gt;&lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;swap&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;.
          &lt;/li&gt;
          &lt;li&gt;
            Use a larger prime number list for selecting the number of buckets.
          &lt;/li&gt;
          &lt;li&gt;
            Use &lt;a href=&quot;/libs/type_traits/doc/html/boost_typetraits/category/alignment.html&quot;&gt;aligned
            storage&lt;/a&gt; to store the types.
          &lt;/li&gt;
          &lt;li&gt;
            Add support for C++0x initializer lists where they're available.
          &lt;/li&gt;
          &lt;li&gt;
            For more detail, see the &lt;a href=&quot;/doc/html/unordered/changes.html#unordered.changes.boost_1_38_0&quot;&gt;library
            changelog&lt;/a&gt;.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/xpressive/index.html&quot;&gt;Xpressive&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;basic_regex&lt;/span&gt;&lt;/code&gt; gets nested
            &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;syntax_option_flags&lt;/span&gt;&lt;/code&gt; and
            &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;value_type&lt;/span&gt;&lt;/code&gt; typedef, for
            compatibility with &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;basic_regex&lt;/span&gt;&lt;/code&gt;
          &lt;/li&gt;
          &lt;li&gt;
            Ported to Proto v4; Proto v2 at &lt;tt&gt;boost/xpressive/proto&lt;/tt&gt;
            has been removed.
          &lt;/li&gt;
          &lt;li&gt;
            &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;regex_error&lt;/span&gt;&lt;/code&gt; inherits
            from &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;exception&lt;/span&gt;&lt;/code&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_38_0.other_changes&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Other Changes&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        Experimental support for building Boost with &lt;a href=&quot;http://www.cmake.org/&quot;&gt;CMake&lt;/a&gt;
        has been introduced in this version. For more details see the &lt;a href=&quot;https://svn.boost.org/trac/boost/wiki/CMake&quot;&gt;wiki&lt;/a&gt;,
        Discussion is taking place on the &lt;a href=&quot;http://lists.boost.org/mailman/listinfo.cgi/boost-cmake&quot;&gt;Boost-cmake
        mailing list&lt;/a&gt;.
      &lt;/li&gt;
      &lt;li&gt;
        Fixed subversion properties for several files. Most notably, unix shell scripts
        should always have unix line endings, even in the windows packages.
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_38_0.compilers_tested&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Compilers Tested&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      Boost's primary test compilers are:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        OS X:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.0.1 on Intel OS X 10.4.10, 10.5.2
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.0.1 on PowerPC OS X 10.4.9
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Linux:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.3.2 on Ubuntu Linux.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.3.3 on Debian &amp;quot;unstable&amp;quot;.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        HP-UX:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.2.1 on HP-UX 64-bit.
          &lt;/li&gt;
          &lt;li&gt;
            HP C/aC++ B3910B A.06.17 on HP-UX 64-bit.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Windows:
        &lt;ul&gt;
          &lt;li&gt;
            Visual C++ 7.1 SP1, 8.0 SP1 and 9.0 SP1 on Windows XP.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
    &lt;p&gt;
      Boost's additional test compilers include:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        Linux:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.1.1, 4.2.1 on 64-bit Red Hat Enterprise Linux
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.1.2 on 64-bit Redhat Server 5.1
          &lt;/li&gt;
          &lt;li&gt;
            GCC 3.4.3, GCC 4.0.1, GCC 4.2.4 and GCC 4.3.2 on Red Hat Enterprise Linux
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.3.2 with C++0x extensions
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.2.1 on OpenSuSE Linux
          &lt;/li&gt;
          &lt;li&gt;
            pgCC 8.0-0a 64-bit target on Red Hat Enterprise Linux
          &lt;/li&gt;
          &lt;li&gt;
            QLogic PathScale(TM) Compiler Suite: Version 3.1 on Red Hat Enterprise
            Linux
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        OS X:
        &lt;ul&gt;
          &lt;li&gt;
            Intel 9.1, 10.0 on OS X 10.4.10
          &lt;/li&gt;
          &lt;li&gt;
            Intel 10.1, 11.0 on OS X 10.5.2
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Windows:
        &lt;ul&gt;
          &lt;li&gt;
            Visual C++ 9.0 on Vista EE 64-bit.
          &lt;/li&gt;
          &lt;li&gt;
            Visual C++ 9.0 express on Vista 32-bit.
          &lt;/li&gt;
          &lt;li&gt;
            Visual C++ 9.0 on XP 32-bit.
          &lt;/li&gt;
          &lt;li&gt;
            Visual C++ 8.0, using STLport, on XP and Windows Mobile 5.0
          &lt;/li&gt;
          &lt;li&gt;
            Visual C++ 7.1, using STLport, on XP
          &lt;/li&gt;
          &lt;li&gt;
            Borland 5.9.3
          &lt;/li&gt;
          &lt;li&gt;
            Borland 6.1.0
          &lt;/li&gt;
          &lt;li&gt;
            Intel C++ 11.0, with a Visual C++ 9.0 backend, on XP 32-bit.
          &lt;/li&gt;
          &lt;li&gt;
            Intel C++ 11.0, with a Visual C++ 9.0 backend, on Vista 64-bit.
          &lt;/li&gt;
          &lt;li&gt;
            Comeau 4.3.10.1 beta 2, with a Visual C++ 9.0 backend.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 3.4.4, on Cygwin
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        AIX:
        &lt;ul&gt;
          &lt;li&gt;
            IBM XL C/C++ Enterprise Edition for AIX, V10.1.0.0, on AIX Version 5.3.0.40
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        FreeBSD:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.2.1 on FreeBSD 7.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        NetBSD:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.1.2 on NetBSD 4.0/i386 and NetBSD 4.0/amd64.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        QNX:
        &lt;ul&gt;
          &lt;li&gt;
            QNX Software Development Platform 6.4.0 x86
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Solaris:
        &lt;ul&gt;
          &lt;li&gt;
            Sun C++ 5.7, 5.8, 5.9 on Solaris 5.10
          &lt;/li&gt;
          &lt;li&gt;
            GCC 3.4.6 on Solaris 5.10
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_38_0.acknowledgements&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Acknowledgements&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      &lt;a href=&quot;/users/people/beman_dawes.html&quot;&gt;Beman Dawes&lt;/a&gt;, Eric Niebler,
      &lt;a href=&quot;/users/people/rene_rivera.html&quot;&gt;Rene Rivera&lt;/a&gt;, and Daniel
      James managed this release. Thanks to Vicente Botet for helping compile these
      release notes.
    &lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;</description></item><item><title>Boost Jam 3.1.17</title><pubDate>Sat, 29 Nov 2008 04:00:00 GMT</pubDate><boostbook:purpose>&lt;span class=&quot;brief&quot;&gt;&lt;span class=&quot;purpose&quot;&gt;
      A year in the making this release has many stability improvements and various
      performance improvements. And because of the efforts of Jurko the code is considerably
      more readable!
    &lt;/span&gt;&lt;/span&gt;</boostbook:purpose><boostbook:download>http://sourceforge.net/project/showfiles.php?group_id=7586&amp;package_id=72941&amp;release_id=643622</boostbook:download><description>&lt;div class=&quot;description&quot;&gt;
  
  &lt;p&gt;
    A year in the making this release has many stability improvements and various
    performance improvements. And because of the efforts of Jurko the code is considerably
    more readable!
  &lt;/p&gt;
  &lt;p&gt;
    &lt;ul&gt;&lt;li&gt;Reflect the results of calling bjam from Python. -- &lt;em&gt;Rene R.&lt;/em&gt;
    &lt;/li&gt;
    &lt;li&gt;For building on Windows: Rework how arguments are parsed and tested to fix handling
    of quoted arguments, options arguments, and arguments with &amp;quot;=&amp;quot;. --
    &lt;em&gt;Rene R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Try to work around at least one compiler bug with
    GCC and variable aliasing that causes crashes with hashing file cache entries.
    -- &lt;em&gt;Rene R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Add -Wc,-fno-strict-aliasing for QCC/QNX to avoid
    the same aliasing crashes as in the general GCC 4.x series (thanks to Niklas
    Angare for the fix). -- &lt;em&gt;Rene R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;On Windows let the child
    bjam commands inherit stdin, as some commands assume it's available. -- &lt;em&gt;Rene
    R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;On Windows don't limit bjam output to ASCII as some tools output
    characters in extended character sets. -- &lt;em&gt;Rene R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Isolate
    running of bjam tests to individual bjam instances to prevent possible spillover
    errors from one test affecting another test. Separate the bjam used to run the
    tests vs. the bjam being tested. And add automatic re-building of the bjam being
    tested. -- &lt;em&gt;Rene R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Fix some possible overrun issues revealed
    by Fortify build. Thanks to Steven Robbins for pointing out the issues. -- &lt;em&gt;Rene
    R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Handle \n and \r escape sequences. -- &lt;em&gt;Vladimir P.&lt;/em&gt;
    &lt;/li&gt;
    &lt;li&gt;Minor edits to remove -Wall warnings. -- &lt;em&gt;Rene R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Dynamically
    adjust pwd buffer query size to allow for when PATH_MAX is default defined instead
    of being provided by the system C library. -- &lt;em&gt;Rene R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Minor
    perf improvement for bjam by replacing hash function with faster version. Only
    1% diff for Boost tree. -- &lt;em&gt;Rene R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Updated Boost Jam's error
    location reporting when parsing Jamfiles. Now it reports the correct error location
    information when encountering an unexpected EOF. It now also reports where an
    invalid lexical token being read started instead of finished which makes it much
    easier to find errors like unclosed quotes or curly braces. -- &lt;em&gt;Jurko
    G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Removed the -xarch=generic architecture from build.jam as this
    option is unknown so the Sun compilers on Linux. -- &lt;em&gt;Noel B.&lt;/em&gt;
    &lt;/li&gt;
    &lt;li&gt;Fixed a bug with T_FATE_ISTMP getting reported as T_FATE_ISTMP &amp;amp; T_FATE_NEEDTMP
    at the same time due to a missing break in a switch statement. -- &lt;em&gt;Jurko
    G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Fixed a Boost Jam bug causing it to sometimes trigger actions depending
    on targets that have not been built yet. -- &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Added
    missing documentation for Boost Jam's :T variable expansion modifier which converts
    all back-slashes ('\') to forward slashed ('/'). -- &lt;em&gt;Jurko G.&lt;/em&gt;
    &lt;/li&gt;
    &lt;li&gt;Added Boost Jam support for executing command lines longer than 2047 characters
    (up to 8191) characters when running on Windows XP or later OS version. -- &lt;em&gt;Jurko
    G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Fixed a Boost Jam bug on Windows causing its SHELL command not
    to work correctly with some commands containing quotes. -- &lt;em&gt;Jurko G.&lt;/em&gt;
    &lt;/li&gt;
    &lt;li&gt;Corrected a potential memory leak in Boost Jam's builtin_shell() function that
    would appear should Boost Jam ever start to release its allocated string objects.
    -- &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Made all Boost Jam's ECHO commands automatically
    flush the standard output to make that output more promptly displayed to the
    user. -- &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Made Boost Jam tests quote their bjam
    executable name when calling it allowing those executables to contain spaces
    in their name and/or path. -- &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Change execunix.c
    to always use fork() instead of vfork() on the Mac. This works around known issues
    with bjam on PPC under Tiger and a problem reported by Rene with bjam on x86
    under Leopard. -- &lt;em&gt;Noel B.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Corrected a bug in Boost Jam's
    base Jambase script causing it to trim the error message displayed when its boost-build
    rule gets called multiple times. -- &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;When importing
    from Python into an module with empty string as name, import into root module.
    -- &lt;em&gt;Vladimir P.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Patch for the NORMALIZE_PATH builtin Boost
    Jam rule as well as an appropriate update for the path.jam Boost Build module
    where that rule was being used to implement path join and related operations.
    -- &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Fixed a bug causing Boost Jam not to handle
    target file names specified as both short and long file names correctly. --
    &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Relaxed test, ignoring case of drive letter. --
    &lt;em&gt;Roland S.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Implemented a patch contributed by Igor Nazarenko
    reimplementing the list_sort() function to use a C qsort() function instead of
    a hand-crafted merge-sort algorithm. Makes some list sortings (e.g. 1,2,1,2,1,2,1,2,
    ...) extremely faster, in turn significantly speeding up some project builds.
    -- &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Fixed a bug with bjam not handling the '' root
    Windows path correctly without its drive letter being specified. -- &lt;em&gt;Jurko
    G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Solved the problem with child process returning the value 259 (Windows
    constant STILL_ACTIVE) causing bjam never to detect that it exited and therefore
    keep running in an endless loop. -- &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Solved the
    problem with bjam going into an active wait state, hogging up processor resources,
    when waiting for one of its child processes to terminate while not all of its
    available child process slots are being used. -- &lt;em&gt;Jurko G.&lt;/em&gt;
    &lt;/li&gt;
    &lt;li&gt;Solved a race condition between bjam's output reading/child process termination
    detection and the child process's output generation/termination which could have
    caused bjam not to collect the terminated process's final output. -- &lt;em&gt;Jurko
    G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Change from vfork to fork for executing actions on Darwin to improve
    stability. -- &lt;em&gt;Noel B.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Code reformatting and cleanups. --
    &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Implement ISFILE built-in. -- &lt;em&gt;Vladimir
    P.&lt;/em&gt; &lt;/li&gt;
&lt;/ul&gt;
  &lt;/p&gt;
&lt;/div&gt;</description></item></channel>
</rss>