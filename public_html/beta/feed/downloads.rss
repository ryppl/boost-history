<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:boostbook="urn:boost.org:boostbook">
  <channel>
    <generator>BoostBook2RSS</generator>
    <title>Boost Downloads</title>
    <link>http://www.boost.org/feed/download.rss</link>
    <description/>
    <language>en-us</language>
    <copyright>Distributed under the Boost Software License, Version 1.0. (See accompanying file LICENSE_1_0.txt or http://www.boost.org/LICENSE_1_0.txt)</copyright>
  <item><title>Version 1.39.0</title><pubDate>$Date: 2009/05/01 20:38:18 $</pubDate><boostbook:purpose>&lt;span class=&quot;brief&quot;&gt;&lt;span class=&quot;purpose&quot;&gt;
      New Libraries: Signals2. Updated Libraries: Asio, Flyweight, Foreach, Hash,
      Interprocess, Intrusive, Program.Options, Proto, PtrContainer, Range, Unordered,
      Xpressive. Updated Tools: Boostbook, Quickbook.
    &lt;/span&gt;&lt;/span&gt;</boostbook:purpose><boostbook:download>http://sourceforge.net/project/showfiles.php?group_id=7586&amp;package_id=8041</boostbook:download><description>&lt;div class=&quot;description&quot;&gt;
  
  
  
  &lt;div id=&quot;version_1_39_0.new_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;New Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/signals2/index.html&quot;&gt;Signals2&lt;/a&gt;:&lt;/span&gt; Managed signals
        &amp;amp; slots callback implementation (thread-safe version 2), from Frank Mori
        Hess.
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_39_0.updated_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Updated Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/asio/index.html&quot;&gt;Asio&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Implement automatic resizing of the bucket array in the internal hash
            maps. This is to improve performance for very large numbers of asynchronous
            operations and also to reduce memory usage for very small numbers. A
            new macro &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_ASIO_HASH_MAP_BUCKETS&lt;/span&gt;&lt;/code&gt;
            may be used to tweak the sizes used for the bucket arrays.
          &lt;/li&gt;
          &lt;li&gt;
            Add performance optimisation for the Windows IOCP backend for when no
            timers are used.
          &lt;/li&gt;
          &lt;li&gt;
            Prevent locale settings from affecting formatting of TCP and UDP endpoints
            (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2682&quot;&gt;#2682&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Fix a memory leak that occurred when an asynchronous SSL operation's
            completion handler threw an exception (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2910&quot;&gt;#2910&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Fix the implementation of &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;io_control&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;()&lt;/span&gt;&lt;/code&gt; so that it adheres to the documented
            type requirements for IoControlCommand (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2820&quot;&gt;#2820&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Fix incompatibility between Asio and ncurses.h (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2156&quot;&gt;#2156&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            On Windows, specifically handle the case when an overlapped &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;ReadFile&lt;/span&gt;&lt;/code&gt; call fails with &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;ERROR_MORE_DATA&lt;/span&gt;&lt;/code&gt;. This enables a hack
            where a &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;windows&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;stream_handle&lt;/span&gt;&lt;/code&gt; can be used with a message-oriented
            named pipe (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2936&quot;&gt;#2936&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Fix system call wrappers to always clear the error on success, as POSIX
            allows successful system calls to modify errno (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2953&quot;&gt;#2953&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Don't include termios.h if &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_ASIO_DISABLE_SERIAL_PORT&lt;/span&gt;&lt;/code&gt;
            is defined (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2917&quot;&gt;#2917&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Cleaned up some more MSVC level 4 warnings (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2828&quot;&gt;#2828&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Various documentation fixes (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2871&quot;&gt;#2871&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/flyweight/index.html&quot;&gt;Flyweight&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            The &lt;a href=&quot;/libs/flyweight/doc/tutorial/configuration.html#refcounted&quot;&gt;refcounted&lt;/a&gt;
            component was not thread-safe due to an incorrect implementation and
            could deadlock under heavy usage conditions. This problem has been corrected.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/foreach/index.html&quot;&gt;Foreach&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Eliminate shadow warnings on gcc for nested &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;FOREACH&lt;/span&gt;&lt;/code&gt;
            loops
          &lt;/li&gt;
          &lt;li&gt;
            Portability fix for Intel-Win toolset
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/functional/hash/index.html&quot;&gt;Hash&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Remove deprecated headers for hashing containers. Everything that was
            in them is included in &lt;code&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;functional&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hpp&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;
            (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2412&quot;&gt;#2412&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Other minor changes, full details in the library &lt;a href=&quot;/doc/html/hash/changes.html#hash.changes.boost_1_39_0&quot;&gt;change
            log&lt;/a&gt;.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/interprocess/index.html&quot;&gt;Interprocess&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Increased portability and bug fixes. Full details in the library &lt;a href=&quot;/doc/html/interprocess/acknowledgements_notes.html#interprocess.acknowledgements_notes.release_notes.release_notes_boost_1_39_00&quot;&gt;change
            log&lt;/a&gt;.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/intrusive/index.html&quot;&gt;Intrusive&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Optimizations and bug fixes. Full details in the library &lt;a href=&quot;/doc/html/intrusive/release_notes.html#intrusive.release_notes.release_notes_boost_1_39_00&quot;&gt;change
            log&lt;/a&gt;.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/program_options/index.html&quot;&gt;Program.Options&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Multitoken options fixed (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/469&quot;&gt;#469&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/proto/index.html&quot;&gt;Proto&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Work around incompatibility with standard Linux header.
          &lt;/li&gt;
          &lt;li&gt;
            Add &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;noinvoke&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;/code&gt;
            to block metafunction invocation in object transforms.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/ptr_container/index.html&quot;&gt;PtrContainer&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Bug fixes from Trac applied.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/range/index.html&quot;&gt;Range&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Bug fixes from Trac applied.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/unordered/index.html&quot;&gt;Unordered&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Fixed regression in 1.38 that prevented unordered from using more than
            about 1.5 million buckets (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2975&quot;&gt;#2975&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Minor implementation changes, including &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2756&quot;&gt;#2756&lt;/a&gt;.
            Full details in the library &lt;a href=&quot;/doc/html/unordered/changes.html#unordered.changes.boost_1_39_0&quot;&gt;change
            log&lt;/a&gt;.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/xpressive/index.html&quot;&gt;Xpressive&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Work around for gcc optimization problem resulting in pure virtual function
            call runtime error (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2655&quot;&gt;#2655&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_39_0.updated_tools&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Updated Tools&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/tools/boostbook/index.html&quot;&gt;Boostbook&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Improved PDF generation.
          &lt;/li&gt;
          &lt;li&gt;
            Preliminary HTMLHelp support.
          &lt;/li&gt;
          &lt;li&gt;
            Add default path for callout images.
          &lt;/li&gt;
          &lt;li&gt;
            Include data members' &lt;code&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;purpose&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;
            in the class synopsis.
          &lt;/li&gt;
          &lt;li&gt;
            Fix bug where a function's &lt;code&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;purpose&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;
            wasn't displayed if it was just plain text.
          &lt;/li&gt;
          &lt;li&gt;
            Support the alt tag in &lt;code&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;headername&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;
            and &lt;code&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;macroname&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;. Use this if the header or macro
            name is different to the contents of the tag (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1977&quot;&gt;#1977&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Support links relative to the boost root in &lt;code&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;ulink&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;
            tags, using a custom url, see the &lt;a href=&quot;/doc/html/boostbook/together.html#boostbook.linking&quot;&gt;linking
            documentation&lt;/a&gt; for details (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1166&quot;&gt;#1166&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Avoid generating filenames that only differ in case for function, method
            and macro documentation.
          &lt;/li&gt;
          &lt;li&gt;
            Run the docbook chunker quietly, unless boostbook.verbose is set. This
            parameter might be used in other places in future releases.
          &lt;/li&gt;
          &lt;li&gt;
            Make the 1.1 DTD available.
          &lt;/li&gt;
          &lt;li&gt;
            Fill in some missing reference documentation (partially fixes &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2153&quot;&gt;#2153&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Changes to doxygen integration:
            &lt;ul&gt;
              &lt;li&gt;
                Support &lt;code&gt;&lt;span class=&quot;special&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt;&lt;/code&gt;.
              &lt;/li&gt;
              &lt;li&gt;
                Support global variables and enums.
              &lt;/li&gt;
              &lt;li&gt;
                Better support for documentation written in function and method bodies.
              &lt;/li&gt;
              &lt;li&gt;
                Workaround a problem with doxygen 1.5.8's xml output (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2937&quot;&gt;#2937&lt;/a&gt;).
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/tools/quickbook/index.html&quot;&gt;Quickbook&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Return an error code and error count if there are any errors (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1399&quot;&gt;#1399&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Support both windows and cygwin paths at the compile line when compiled
            with cygwin.
          &lt;/li&gt;
          &lt;li&gt;
            Fix some issues with C++ and Python code:
            &lt;ul&gt;
              &lt;li&gt;
                Fail gracefully for a mismatched &lt;code&gt;&lt;span class=&quot;char&quot;&gt;''&lt;/span&gt;&lt;/code&gt;.
              &lt;/li&gt;
              &lt;li&gt;
                Warn if any unexpected character are encountered and write them out
                properly (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1170&quot;&gt;#1170&lt;/a&gt;).
              &lt;/li&gt;
              &lt;li&gt;
                Fix a bug for hex encoded characters in strings (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2860&quot;&gt;#2860&lt;/a&gt;).
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;
            Improved testing, including tests for expected failures.
          &lt;/li&gt;
          &lt;li&gt;
            Generate valid document info for document types other than &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;library&lt;/span&gt;&lt;/code&gt; (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2711&quot;&gt;#2711&lt;/a&gt;):
            &lt;ul&gt;
              &lt;li&gt;
                Remove library specific attributes.
              &lt;/li&gt;
              &lt;li&gt;
                Put title before info block.
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;
            Fix a bug when calling templates.
          &lt;/li&gt;
          &lt;li&gt;
            Less warnings when built using gcc.
          &lt;/li&gt;
          &lt;li&gt;
            Small documentation improvements (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1213&quot;&gt;#1213&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2701&quot;&gt;#2701&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Fix a bug with xinclude pages when outdir is the current directory (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2921&quot;&gt;#2921&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_39_0.compilers_tested&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Compilers Tested&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      Boost's primary test compilers are:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        OS X:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.0.1 on Intel Tiger and Leopard
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.0.1 on PowerPC Tiger
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Linux:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.3.2 on Ubuntu Linux.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.3.3 on Debian &amp;quot;unstable&amp;quot;.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Windows:
        &lt;ul&gt;
          &lt;li&gt;
            Visual C++ 7.1 SP1, 8.0 SP1 and 9.0 SP1 on Windows XP.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
    &lt;p&gt;
      Boost's additional test compilers include:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        Linux:
        &lt;ul&gt;
          &lt;li&gt;
            Intel 9.0 on Red Hat Enterprise Linux
          &lt;/li&gt;
          &lt;li&gt;
            Intel 10.0 on Red Hat Enterprise Linux
          &lt;/li&gt;
          &lt;li&gt;
            Intel 10.1 on 64-bit Linux Redhat 5.1 Server.
          &lt;/li&gt;
          &lt;li&gt;
            Intel 10.1 on Suse Linux on 64 bit Itanium
          &lt;/li&gt;
          &lt;li&gt;
            Intel 11.0 on Red Hat Enterprise Linux
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.1.1, 4.2.1 on 64-bit Red Hat Enterprise Linux
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.1.2 on 64-bit Redhat Server 5.1
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.1.2 on Suse Linux on 64 bit Itanium
          &lt;/li&gt;
          &lt;li&gt;
            GCC 3.4.3, GCC 4.0.1, GCC 4.2.4 and GCC 4.3.2 on Red Hat Enterprise Linux
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.3.2 with C++0x extensions on Red Hat Enterprise Linux
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.2.1 on OpenSuSE Linux
          &lt;/li&gt;
          &lt;li&gt;
            QLogic PathScale(TM) Compiler Suite: Version 3.1 on Red Hat Enterprise
            Linux
          &lt;/li&gt;
          &lt;li&gt;
            GNU gcc version 4.2.0 (PathScale 3.2 driver) on 64-bit Red Hat Enterprise
            Linux
          &lt;/li&gt;
          &lt;li&gt;
            Sun 5.9 on Red Hat Enterprise Linux
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        OS X:
        &lt;ul&gt;
          &lt;li&gt;
            Intel 9.1, 10.1 on Tiger
          &lt;/li&gt;
          &lt;li&gt;
            Intel 10.1, 11.0 on Leopard
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.2.1 on Leopard
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Windows:
        &lt;ul&gt;
          &lt;li&gt;
            Visual C++ 9.0 on Vista.
          &lt;/li&gt;
          &lt;li&gt;
            Visual C++ 9.0, using STLport 5.2, on XP and Windows Mobile 5.0.
          &lt;/li&gt;
          &lt;li&gt;
            Borland 5.9.3
          &lt;/li&gt;
          &lt;li&gt;
            Borland 6.1.0
          &lt;/li&gt;
          &lt;li&gt;
            Intel C++ 11.0, with a Visual C++ 9.0 backend, on XP 32-bit.
          &lt;/li&gt;
          &lt;li&gt;
            Intel C++ 11.0, with a Visual C++ 9.0 backend, on Vista 64-bit. (TODO:
            not recently)
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.3.3, on Mingw
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        AIX:
        &lt;ul&gt;
          &lt;li&gt;
            IBM XL C/C++ Enterprise Edition for AIX, V10.1.0.0, on AIX Version 5.3.0.40
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        NetBSD:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.1.2 on NetBSD 4.0/i386 and NetBSD 4.0/amd64.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Solaris:
        &lt;ul&gt;
          &lt;li&gt;
            Sun C++ 5.7, 5.8, 5.9 on Solaris 5.10
          &lt;/li&gt;
          &lt;li&gt;
            GCC 3.4.6 on Solaris 5.10
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_39_0.acknowledgements&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Acknowledgements&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      &lt;a href=&quot;/users/people/beman_dawes.html&quot;&gt;Beman Dawes&lt;/a&gt;, Eric Niebler,
      &lt;a href=&quot;/users/people/rene_rivera.html&quot;&gt;Rene Rivera&lt;/a&gt;, and Daniel
      James managed this release.
    &lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;</description></item><item><title>Boost Jam 3.1.17</title><pubDate>Sat, 29 Nov 2008 04:00:00 GMT</pubDate><boostbook:purpose>&lt;span class=&quot;brief&quot;&gt;&lt;span class=&quot;purpose&quot;&gt;
      A year in the making this release has many stability improvements and various
      performance improvements. And because of the efforts of Jurko the code is considerably
      more readable!
    &lt;/span&gt;&lt;/span&gt;</boostbook:purpose><boostbook:download>http://sourceforge.net/project/showfiles.php?group_id=7586&amp;package_id=72941&amp;release_id=643622</boostbook:download><description>&lt;div class=&quot;description&quot;&gt;
  
  
  
  &lt;p&gt;
    A year in the making this release has many stability improvements and various
    performance improvements. And because of the efforts of Jurko the code is considerably
    more readable!
  &lt;/p&gt;
  &lt;p&gt;
    &lt;ul&gt;&lt;li&gt;Reflect the results of calling bjam from Python. -- &lt;em&gt;Rene R.&lt;/em&gt;
    &lt;/li&gt;
    &lt;li&gt;For building on Windows: Rework how arguments are parsed and tested to fix handling
    of quoted arguments, options arguments, and arguments with &amp;quot;=&amp;quot;. --
    &lt;em&gt;Rene R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Try to work around at least one compiler bug with
    GCC and variable aliasing that causes crashes with hashing file cache entries.
    -- &lt;em&gt;Rene R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Add -Wc,-fno-strict-aliasing for QCC/QNX to avoid
    the same aliasing crashes as in the general GCC 4.x series (thanks to Niklas
    Angare for the fix). -- &lt;em&gt;Rene R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;On Windows let the child
    bjam commands inherit stdin, as some commands assume it's available. -- &lt;em&gt;Rene
    R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;On Windows don't limit bjam output to ASCII as some tools output
    characters in extended character sets. -- &lt;em&gt;Rene R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Isolate
    running of bjam tests to individual bjam instances to prevent possible spillover
    errors from one test affecting another test. Separate the bjam used to run the
    tests vs. the bjam being tested. And add automatic re-building of the bjam being
    tested. -- &lt;em&gt;Rene R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Fix some possible overrun issues revealed
    by Fortify build. Thanks to Steven Robbins for pointing out the issues. -- &lt;em&gt;Rene
    R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Handle \n and \r escape sequences. -- &lt;em&gt;Vladimir P.&lt;/em&gt;
    &lt;/li&gt;
    &lt;li&gt;Minor edits to remove -Wall warnings. -- &lt;em&gt;Rene R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Dynamically
    adjust pwd buffer query size to allow for when PATH_MAX is default defined instead
    of being provided by the system C library. -- &lt;em&gt;Rene R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Minor
    perf improvement for bjam by replacing hash function with faster version. Only
    1% diff for Boost tree. -- &lt;em&gt;Rene R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Updated Boost Jam's error
    location reporting when parsing Jamfiles. Now it reports the correct error location
    information when encountering an unexpected EOF. It now also reports where an
    invalid lexical token being read started instead of finished which makes it much
    easier to find errors like unclosed quotes or curly braces. -- &lt;em&gt;Jurko
    G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Removed the -xarch=generic architecture from build.jam as this
    option is unknown so the Sun compilers on Linux. -- &lt;em&gt;Noel B.&lt;/em&gt;
    &lt;/li&gt;
    &lt;li&gt;Fixed a bug with T_FATE_ISTMP getting reported as T_FATE_ISTMP &amp;amp; T_FATE_NEEDTMP
    at the same time due to a missing break in a switch statement. -- &lt;em&gt;Jurko
    G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Fixed a Boost Jam bug causing it to sometimes trigger actions depending
    on targets that have not been built yet. -- &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Added
    missing documentation for Boost Jam's :T variable expansion modifier which converts
    all back-slashes ('\') to forward slashed ('/'). -- &lt;em&gt;Jurko G.&lt;/em&gt;
    &lt;/li&gt;
    &lt;li&gt;Added Boost Jam support for executing command lines longer than 2047 characters
    (up to 8191) characters when running on Windows XP or later OS version. -- &lt;em&gt;Jurko
    G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Fixed a Boost Jam bug on Windows causing its SHELL command not
    to work correctly with some commands containing quotes. -- &lt;em&gt;Jurko G.&lt;/em&gt;
    &lt;/li&gt;
    &lt;li&gt;Corrected a potential memory leak in Boost Jam's builtin_shell() function that
    would appear should Boost Jam ever start to release its allocated string objects.
    -- &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Made all Boost Jam's ECHO commands automatically
    flush the standard output to make that output more promptly displayed to the
    user. -- &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Made Boost Jam tests quote their bjam
    executable name when calling it allowing those executables to contain spaces
    in their name and/or path. -- &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Change execunix.c
    to always use fork() instead of vfork() on the Mac. This works around known issues
    with bjam on PPC under Tiger and a problem reported by Rene with bjam on x86
    under Leopard. -- &lt;em&gt;Noel B.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Corrected a bug in Boost Jam's
    base Jambase script causing it to trim the error message displayed when its boost-build
    rule gets called multiple times. -- &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;When importing
    from Python into an module with empty string as name, import into root module.
    -- &lt;em&gt;Vladimir P.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Patch for the NORMALIZE_PATH builtin Boost
    Jam rule as well as an appropriate update for the path.jam Boost Build module
    where that rule was being used to implement path join and related operations.
    -- &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Fixed a bug causing Boost Jam not to handle
    target file names specified as both short and long file names correctly. --
    &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Relaxed test, ignoring case of drive letter. --
    &lt;em&gt;Roland S.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Implemented a patch contributed by Igor Nazarenko
    reimplementing the list_sort() function to use a C qsort() function instead of
    a hand-crafted merge-sort algorithm. Makes some list sortings (e.g. 1,2,1,2,1,2,1,2,
    ...) extremely faster, in turn significantly speeding up some project builds.
    -- &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Fixed a bug with bjam not handling the '' root
    Windows path correctly without its drive letter being specified. -- &lt;em&gt;Jurko
    G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Solved the problem with child process returning the value 259 (Windows
    constant STILL_ACTIVE) causing bjam never to detect that it exited and therefore
    keep running in an endless loop. -- &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Solved the
    problem with bjam going into an active wait state, hogging up processor resources,
    when waiting for one of its child processes to terminate while not all of its
    available child process slots are being used. -- &lt;em&gt;Jurko G.&lt;/em&gt;
    &lt;/li&gt;
    &lt;li&gt;Solved a race condition between bjam's output reading/child process termination
    detection and the child process's output generation/termination which could have
    caused bjam not to collect the terminated process's final output. -- &lt;em&gt;Jurko
    G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Change from vfork to fork for executing actions on Darwin to improve
    stability. -- &lt;em&gt;Noel B.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Code reformatting and cleanups. --
    &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Implement ISFILE built-in. -- &lt;em&gt;Vladimir
    P.&lt;/em&gt; &lt;/li&gt;
&lt;/ul&gt;
  &lt;/p&gt;
&lt;/div&gt;</description></item></channel>
</rss>