<?xml version="1.0" encoding="utf-8"?><rss version="2.0" xmlns:boostbook="urn:boost.org:boostbook">
  <channel>
    <generator>BoostBook2RSS</generator>
    <title>Boost Downloads</title>
    <link>http://www.boost.org/feed/download.rss</link>
    <description/>
    <language>en-us</language>
    <copyright>Distributed under the Boost Software License, Version 1.0. (See accompanying file LICENSE_1_0.txt or http://www.boost.org/LICENSE_1_0.txt)</copyright>
  <item><title>Version 1.41.0</title><pubDate>Sat, 14 Nov 2009 17:00:00 GMT</pubDate><boostbook:purpose>&lt;span class=&quot;brief&quot;&gt;&lt;span class=&quot;purpose&quot;&gt;
      New Library: Property Tree. Updated libraries: DateTime, Filesystem, Iostreams,
      Math, Multi-index Containers, Proto, Python, Regex, Spirit, System, Thread,
      Unordered, Utility, Wave, Xpressive. Also updated build system and quickbook.
      CMake has been removed from the main release.
    &lt;/span&gt;&lt;/span&gt;</boostbook:purpose><boostbook:download>http://sourceforge.net/projects/boost/files/boost/1.41.0/</boostbook:download><description>&lt;div class=&quot;description&quot;&gt;
  
  
  
  &lt;div id=&quot;version_1_41_0.new_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;New Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/property_tree/index.html&quot;&gt;Property Tree&lt;/a&gt;:&lt;/span&gt; A
        tree data structure especially suited to storing configuration data, from
        Marcin Kalicinski and Sebastian Redl.
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_41_0.updated_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Updated Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/date_time/index.html&quot;&gt;DateTime&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            The default format for time durations is now &amp;quot;&lt;code&gt;&lt;span class=&quot;special&quot;&gt;%-%&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;O&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;:%&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;:%&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;F&lt;/span&gt;&lt;/code&gt;&amp;quot; instead of &amp;quot;&lt;code&gt;&lt;span class=&quot;special&quot;&gt;%-%&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;H&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;:%&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;:%&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;F&lt;/span&gt;&lt;/code&gt;&amp;quot;
            that was used previously. In order to retain the old behavior, the format
            string has to be specified explicitly during the time IO facet construction
            (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1861&quot;&gt;#1861&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Gregorian dates now use 32-bit integer type internally on 64-bit platforms
            (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3308&quot;&gt;#3308&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            See the &lt;a href=&quot;/doc/html/date_time/details.html#date_time.changes&quot;&gt;full
            changelog&lt;/a&gt; for more detail.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/filesystem/index.html&quot;&gt;Filesystem&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Bug fixes: (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3385&quot;&gt;#3385&lt;/a&gt;).
            (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3528&quot;&gt;#3528&lt;/a&gt;).
            (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3509&quot;&gt;#3509&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/iostreams/index.html&quot;&gt;Iostreams&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Add a grep filter (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1627&quot;&gt;#1627&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Support archives with multiple members (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1896&quot;&gt;#1896&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Make &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;tee&lt;/span&gt;&lt;/code&gt; work with input
            streams (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/791&quot;&gt;#791&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Improved filesystem interoperability.
          &lt;/li&gt;
          &lt;li&gt;
            Several warnings fixed or suppressed (including &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1618&quot;&gt;#1618&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1875&quot;&gt;#1875&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2779&quot;&gt;#2779&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Various other fixes (including &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1580&quot;&gt;#1580&lt;/a&gt;,
            &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1671&quot;&gt;#1671&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/math/index.html&quot;&gt;Math&lt;/a&gt;:&lt;/span&gt;
  Substantially improved
        the performance of the incomplete gamma function and it's inverse: this enhances
        the performance of the gamma, poisson, chi-squared and non-central chi-squared
        distributions.
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/multi_index/doc/index.html&quot;&gt;Multi-index Containers&lt;/a&gt;:&lt;/span&gt;
  Maintenance
        fixes. Consult the library &lt;a href=&quot;/libs/multi_index/doc/release_notes.html#boost_1_41&quot;&gt;release
        notes&lt;/a&gt; for further information.
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/proto/index.html&quot;&gt;Proto&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Clean up some MSVC warnings and errors in /Za (disable Microsoft extensions)
            mode.
          &lt;/li&gt;
          &lt;li&gt;
            Fixes for c++0x mode on various compilers.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/python/index.html&quot;&gt;Python&lt;/a&gt;:&lt;/span&gt;
  Boost.Python now
        supports Python 3 (Haoyu Bai's Google Summer of Code project, mentored by
        Stefan Seefeld).
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/regex/index.html&quot;&gt;Regex&lt;/a&gt;:&lt;/span&gt;
  Added support for
        many Perl 5.10 syntax elements including named sub-expressions, branch resets
        and recursive regular expressions.
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/spirit/index.html&quot;&gt;Spirit&lt;/a&gt;:&lt;/span&gt; This is the initial
        official release of the new Spirit V2.1, a completely new library for parsing,
        lexing, and output generation. Note: this release is not backwards compatible
        with earlier versions.
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/system/index.html&quot;&gt;System&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Bug fix: (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3559&quot;&gt;#3559&lt;/a&gt;).
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/thread/index.html&quot;&gt;Thread&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Support for futures, promises and packaged tasks added
          &lt;/li&gt;
          &lt;li&gt;
            &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;thread_specific_ptr&lt;/span&gt;&lt;/code&gt; is now faster when
            there are lots of thread-specific objects
          &lt;/li&gt;
          &lt;li&gt;
            Some Boost.Thread facilities are now header-only
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/unordered/index.html&quot;&gt;Unordered&lt;/a&gt;:&lt;/span&gt;
  Major update:
        &lt;ul&gt;
          &lt;li&gt;
            Replaced a lot of the macro based implementation with a cleaner template
            based implementation.
          &lt;/li&gt;
          &lt;li&gt;
            Reduced memory use.
          &lt;/li&gt;
          &lt;li&gt;
            Full details in &lt;a href=&quot;/doc/html/unordered/changes.html#unordered.changes.boost_1_41_1&quot;&gt;the
            changelog&lt;/a&gt;.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/utility/index.html&quot;&gt;Utility&lt;/a&gt;:&lt;/span&gt;
  A &amp;quot;const&amp;quot;
        issue of &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;value_initialized&lt;/span&gt;&lt;/code&gt;
        is fixed: Its &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;()&lt;/span&gt;&lt;/code&gt;
        member function and its conversion operator are replaced by overloads for
        const and non-const access (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2548&quot;&gt;#2548&lt;/a&gt;).
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/wave/index.html&quot;&gt;Wave&lt;/a&gt;:&lt;/span&gt;
  See the &lt;a href=&quot;/libs/wave/ChangeLog&quot;&gt;changelog&lt;/a&gt;
        for details.
      &lt;/li&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/xpressive/index.html&quot;&gt;Xpressive&lt;/a&gt;:&lt;/span&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Fix infinite loop with some uses of &lt;tt&gt;\Q...\E&lt;/tt&gt; quotemeta
            (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3586&quot;&gt;#3586&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Eliminate unreachable code warnings on MSVC
          &lt;/li&gt;
          &lt;li&gt;
            Clean up some MSVC warnings and errors in /Za (&amp;quot;disable Microsoft
            extensions&amp;quot;) mode.
          &lt;/li&gt;
          &lt;li&gt;
            Fixes for c++0x mode on various compilers.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_41_0.build_system&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Build System&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      A bug preventing &amp;quot;fat&amp;quot; 32-bit + 64-bit builds on OSX has been fixed.
    &lt;/p&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_41_0.boost_cmake_moved&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Boost.CMake moved&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      The cmake version of boost has moved; the Boost.CMmake release will be separate
      and will lag the main release slightly, but will also be capable of producing
      patch releases as necessary.
    &lt;/p&gt;
    &lt;p&gt;
      More information on the &lt;a href=&quot;https:://svn.boost.org/trac/boost/wiki/CMake&quot;&gt;Boost
      CMake wiki page&lt;/a&gt;.
    &lt;/p&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_41_0.updated_tools&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Updated Tools&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/tools/quickbook/index.html&quot;&gt;Quickbook 1.5&lt;/a&gt;:&lt;/span&gt;
  These
        changes require your document to use the &lt;code&gt;&lt;span class=&quot;special&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;quickbook&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1.5&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;]&lt;/span&gt;&lt;/code&gt; tag:
        &lt;ul&gt;
          &lt;li&gt;
            More intuitive syntax and variable lookup for template calls (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1174&quot;&gt;#1174&lt;/a&gt;, &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2034&quot;&gt;#2034&lt;/a&gt;, &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2036&quot;&gt;#2036&lt;/a&gt;).
          &lt;/li&gt;
          &lt;li&gt;
            Image attributes (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1157&quot;&gt;#1157&lt;/a&gt;)
          &lt;/li&gt;
          &lt;li&gt;
            Table Ids (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1194&quot;&gt;#1194&lt;/a&gt;)
          &lt;/li&gt;
          &lt;li&gt;
            Better handling of whitespace in &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;section&lt;/span&gt;&lt;/code&gt;
            syntax. (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2712&quot;&gt;#2712&lt;/a&gt;)
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_41_0.compilers_tested&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Compilers Tested&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      Boost's primary test compilers are:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        OS X:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.0.1 on Intel Tiger and Leopard.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.0.1 on PowerPC Tiger.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Linux:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.4.1 on Ubuntu Linux.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.4 on Debian
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Windows:
        &lt;ul&gt;
          &lt;li&gt;
            Visual C++ 7.1 SP1, 8.0 SP1 and 9.0 SP1 on Windows XP.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
    &lt;p&gt;
      Boost's additional test compilers include:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        Linux:
        &lt;ul&gt;
          &lt;li&gt;
            Intel 10.1 on Red Hat Enterprise Linux.
          &lt;/li&gt;
          &lt;li&gt;
            Intel 10.1 on 64-bit Red Hat Enterprise Linux.
          &lt;/li&gt;
          &lt;li&gt;
            Intel 10.1 on Suse Linux on 64 bit Itanium.
          &lt;/li&gt;
          &lt;li&gt;
            Intel 11.0 on 32 bit Red Hat Enterprise Linux.
          &lt;/li&gt;
          &lt;li&gt;
            Intel 11.0 on 64 bit Red Hat Enterprise Linux.
          &lt;/li&gt;
          &lt;li&gt;
            Intel 11.1 on 64 bit Red Hat Enterprise Linux.
          &lt;/li&gt;
          &lt;li&gt;
            Intel 11.1 on 64 bit Linux Redhat 5.1 Server.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 3.4.3, GCC 4.2.4, GCC 4.3.3 and GCC 4.4.1 on Red Hat Enterprise Linux.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.3.3 and GCC 4.4.1 with C++0x extensions on Red Hat Enterprise Linux.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.3.3 on 64-bit Redhat Server 5.1.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.3.3 on 64 bit Linux.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.3.4 on Debian unstable.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.3.2 on 64 bit Gentoo.
          &lt;/li&gt;
          &lt;li&gt;
            QLogic PathScale(TM) Compiler Suite: Version 3.2 on Red Hat Enterprise
            Linux.
          &lt;/li&gt;
          &lt;li&gt;
            Sun 5.9 on Red Hat Enterprise Linux.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        OS X:
        &lt;ul&gt;
          &lt;li&gt;
            Intel C++ Compiler 11.1 on Leopard.
          &lt;/li&gt;
          &lt;li&gt;
            Intel C++ Compiler 10.1, 11.0.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.0.1 on Intel Tiger.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.0.1 on PowerPC Tiger.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Windows:
        &lt;ul&gt;
          &lt;li&gt;
            Visual C++ 7.1, 8,0, 9,0 on XP.
          &lt;/li&gt;
          &lt;li&gt;
            Visual C++ 9.0 on 32-bit Vista.
          &lt;/li&gt;
          &lt;li&gt;
            Visual C++ 9.0 on AMD 64-bit Vista.
          &lt;/li&gt;
          &lt;li&gt;
            Visual C++ 9.0 using STLport 5.2 on XP and Windows Mobile 5.0.
          &lt;/li&gt;
          &lt;li&gt;
            Visual C++ 10.0 beta 1 with &lt;a href=&quot;http://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?FeedbackID=457199&quot;&gt;a
            patch for the program options lib&lt;/a&gt;.
          &lt;/li&gt;
          &lt;li&gt;
            Borland/Codegear C++ 5.9.3, 6.1.3 (2009), 6.2.0 (2010).
          &lt;/li&gt;
          &lt;li&gt;
            Intel C++ 11.1, with a Visual C++ 9.0 backend, on Vista 32-bit.
          &lt;/li&gt;
          &lt;li&gt;
            GCC 4.4.1 on Mingw, with and without C++0x extensions.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        AIX:
        &lt;ul&gt;
          &lt;li&gt;
            IBM XL C/C++ Enterprise Edition for AIX, V10.1.0.0, on AIX Version 5.3.0.40.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        FreeBSD:
        &lt;ul&gt;
          &lt;li&gt;
            GCC 4.2.1 on FreeBSD 7.0.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        Solaris:
        &lt;ul&gt;
          &lt;li&gt;
            Sun C++ 5.10 on Solaris 5.10.
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_41_0.acknowledgements&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Acknowledgements&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      &lt;a href=&quot;/users/people/beman_dawes.html&quot;&gt;Beman Dawes&lt;/a&gt;, Eric Niebler,
      &lt;a href=&quot;/users/people/rene_rivera.html&quot;&gt;Rene Rivera&lt;/a&gt;, and Daniel
      James managed this release.
    &lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;</description></item><item><title>Boost Jam 3.1.17</title><pubDate>Sat, 29 Nov 2008 04:00:00 GMT</pubDate><boostbook:purpose>&lt;span class=&quot;brief&quot;&gt;&lt;span class=&quot;purpose&quot;&gt;
      A year in the making this release has many stability improvements and various
      performance improvements. And because of the efforts of Jurko the code is considerably
      more readable!
    &lt;/span&gt;&lt;/span&gt;</boostbook:purpose><boostbook:download>http://sourceforge.net/project/showfiles.php?group_id=7586&amp;package_id=72941&amp;release_id=643622</boostbook:download><description>&lt;div class=&quot;description&quot;&gt;
  
  
  
  &lt;p&gt;
    A year in the making this release has many stability improvements and various
    performance improvements. And because of the efforts of Jurko the code is considerably
    more readable!
  &lt;/p&gt;
  &lt;p&gt;
    &lt;ul&gt;&lt;li&gt;Reflect the results of calling bjam from Python. -- &lt;em&gt;Rene R.&lt;/em&gt;
    &lt;/li&gt;
    &lt;li&gt;For building on Windows: Rework how arguments are parsed and tested to fix handling
    of quoted arguments, options arguments, and arguments with &amp;quot;=&amp;quot;. --
    &lt;em&gt;Rene R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Try to work around at least one compiler bug with
    GCC and variable aliasing that causes crashes with hashing file cache entries.
    -- &lt;em&gt;Rene R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Add -Wc,-fno-strict-aliasing for QCC/QNX to avoid
    the same aliasing crashes as in the general GCC 4.x series (thanks to Niklas
    Angare for the fix). -- &lt;em&gt;Rene R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;On Windows let the child
    bjam commands inherit stdin, as some commands assume it's available. -- &lt;em&gt;Rene
    R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;On Windows don't limit bjam output to ASCII as some tools output
    characters in extended character sets. -- &lt;em&gt;Rene R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Isolate
    running of bjam tests to individual bjam instances to prevent possible spillover
    errors from one test affecting another test. Separate the bjam used to run the
    tests vs. the bjam being tested. And add automatic re-building of the bjam being
    tested. -- &lt;em&gt;Rene R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Fix some possible overrun issues revealed
    by Fortify build. Thanks to Steven Robbins for pointing out the issues. -- &lt;em&gt;Rene
    R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Handle \n and \r escape sequences. -- &lt;em&gt;Vladimir P.&lt;/em&gt;
    &lt;/li&gt;
    &lt;li&gt;Minor edits to remove -Wall warnings. -- &lt;em&gt;Rene R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Dynamically
    adjust pwd buffer query size to allow for when PATH_MAX is default defined instead
    of being provided by the system C library. -- &lt;em&gt;Rene R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Minor
    perf improvement for bjam by replacing hash function with faster version. Only
    1% diff for Boost tree. -- &lt;em&gt;Rene R.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Updated Boost Jam's error
    location reporting when parsing Jamfiles. Now it reports the correct error location
    information when encountering an unexpected EOF. It now also reports where an
    invalid lexical token being read started instead of finished which makes it much
    easier to find errors like unclosed quotes or curly braces. -- &lt;em&gt;Jurko
    G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Removed the -xarch=generic architecture from build.jam as this
    option is unknown so the Sun compilers on Linux. -- &lt;em&gt;Noel B.&lt;/em&gt;
    &lt;/li&gt;
    &lt;li&gt;Fixed a bug with T_FATE_ISTMP getting reported as T_FATE_ISTMP &amp;amp; T_FATE_NEEDTMP
    at the same time due to a missing break in a switch statement. -- &lt;em&gt;Jurko
    G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Fixed a Boost Jam bug causing it to sometimes trigger actions depending
    on targets that have not been built yet. -- &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Added
    missing documentation for Boost Jam's :T variable expansion modifier which converts
    all back-slashes ('\') to forward slashed ('/'). -- &lt;em&gt;Jurko G.&lt;/em&gt;
    &lt;/li&gt;
    &lt;li&gt;Added Boost Jam support for executing command lines longer than 2047 characters
    (up to 8191) characters when running on Windows XP or later OS version. -- &lt;em&gt;Jurko
    G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Fixed a Boost Jam bug on Windows causing its SHELL command not
    to work correctly with some commands containing quotes. -- &lt;em&gt;Jurko G.&lt;/em&gt;
    &lt;/li&gt;
    &lt;li&gt;Corrected a potential memory leak in Boost Jam's builtin_shell() function that
    would appear should Boost Jam ever start to release its allocated string objects.
    -- &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Made all Boost Jam's ECHO commands automatically
    flush the standard output to make that output more promptly displayed to the
    user. -- &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Made Boost Jam tests quote their bjam
    executable name when calling it allowing those executables to contain spaces
    in their name and/or path. -- &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Change execunix.c
    to always use fork() instead of vfork() on the Mac. This works around known issues
    with bjam on PPC under Tiger and a problem reported by Rene with bjam on x86
    under Leopard. -- &lt;em&gt;Noel B.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Corrected a bug in Boost Jam's
    base Jambase script causing it to trim the error message displayed when its boost-build
    rule gets called multiple times. -- &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;When importing
    from Python into an module with empty string as name, import into root module.
    -- &lt;em&gt;Vladimir P.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Patch for the NORMALIZE_PATH builtin Boost
    Jam rule as well as an appropriate update for the path.jam Boost Build module
    where that rule was being used to implement path join and related operations.
    -- &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Fixed a bug causing Boost Jam not to handle
    target file names specified as both short and long file names correctly. --
    &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Relaxed test, ignoring case of drive letter. --
    &lt;em&gt;Roland S.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Implemented a patch contributed by Igor Nazarenko
    reimplementing the list_sort() function to use a C qsort() function instead of
    a hand-crafted merge-sort algorithm. Makes some list sortings (e.g. 1,2,1,2,1,2,1,2,
    ...) extremely faster, in turn significantly speeding up some project builds.
    -- &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Fixed a bug with bjam not handling the '' root
    Windows path correctly without its drive letter being specified. -- &lt;em&gt;Jurko
    G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Solved the problem with child process returning the value 259 (Windows
    constant STILL_ACTIVE) causing bjam never to detect that it exited and therefore
    keep running in an endless loop. -- &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Solved the
    problem with bjam going into an active wait state, hogging up processor resources,
    when waiting for one of its child processes to terminate while not all of its
    available child process slots are being used. -- &lt;em&gt;Jurko G.&lt;/em&gt;
    &lt;/li&gt;
    &lt;li&gt;Solved a race condition between bjam's output reading/child process termination
    detection and the child process's output generation/termination which could have
    caused bjam not to collect the terminated process's final output. -- &lt;em&gt;Jurko
    G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Change from vfork to fork for executing actions on Darwin to improve
    stability. -- &lt;em&gt;Noel B.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Code reformatting and cleanups. --
    &lt;em&gt;Jurko G.&lt;/em&gt; &lt;/li&gt;
    &lt;li&gt;Implement ISFILE built-in. -- &lt;em&gt;Vladimir
    P.&lt;/em&gt; &lt;/li&gt;
&lt;/ul&gt;
  &lt;/p&gt;
&lt;/div&gt;</description></item><item><title>Version 1.40.0.cmake2 (Boost + CMake)</title><pubDate>Sat, 29 Nov 2008 04:00:00 GMT</pubDate><boostbook:purpose>&lt;span class=&quot;brief&quot;&gt;&lt;span class=&quot;purpose&quot;&gt;
      Latest patch release of Boost.CMake
    &lt;/span&gt;&lt;/span&gt;</boostbook:purpose><boostbook:download>http://sodium.resophonic.com/boost-cmake/1.40.0.cmake2</boostbook:download><description>&lt;div class=&quot;description&quot;&gt;
  
  
  
  &lt;p&gt;
    This is the most recent separately-distributed patch release of cmakeable boost
    version 1.40.0.cmake2. Support for the upcoming cmake version 2.8.0 is in, as
    well as a slew of tweaks for various platforms and compilers.
  &lt;/p&gt;
  &lt;p&gt;
    See the &lt;a href=&quot;http://svn.boost.org/trac/boost/wiki/CMake&quot;&gt;Boost.CMake wiki
    page&lt;/a&gt; for more information.
  &lt;/p&gt;
&lt;/div&gt;</description></item></channel>
</rss>