<?xml version="1.0" encoding="utf-8"?><rss version="2.0" xmlns:boostbook="urn:boost.org:boostbook">
  <channel>
    <generator>BoostBook2RSS</generator>
    <title>Boost Downloads</title>
    <link>http://www.boost.org/feed/downloads.rss</link>
    <description/>
    <language>en-us</language>
    <copyright>Distributed under the Boost Software License, Version 1.0. (See accompanying file LICENSE_1_0.txt or http://www.boost.org/LICENSE_1_0.txt)</copyright>
  <item><title>Version 1.46.1</title><pubDate>$Date$</pubDate><boostbook:purpose>&lt;span class=&quot;brief&quot;&gt;&lt;span class=&quot;purpose&quot;&gt;
      Bug fixes: Asio, Fusion, Graph, Icl, Math, Polygon, Proto, Property Tree, Signals2,
      TR1, Unordered.
    &lt;/span&gt;&lt;/span&gt;</boostbook:purpose><description>&lt;div class=&quot;description&quot;&gt;
  
  
  &lt;div id=&quot;version_1_46_1.updated_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Updated Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/asio/&quot;&gt;Asio&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;EV_ONESHOT&lt;/span&gt;&lt;/code&gt; seems to
              cause problems on some versions of Mac OS X, with the &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;io_service&lt;/span&gt;&lt;/code&gt; destructor getting stuck
              inside the &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;()&lt;/span&gt;&lt;/code&gt;
              system call. Changed the kqueue backend to use &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;EV_CLEAR&lt;/span&gt;&lt;/code&gt;
              instead (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5021&quot;&gt;#5021&lt;/a&gt;).
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed compile failures with some versions of &lt;tt&gt;g++&lt;/tt&gt;
              due to the use of anonymous enums (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4883&quot;&gt;#4883&lt;/a&gt;).
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed a bug on kqueue-based platforms, where some system calls that
              repeatedly fail with &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;EWOULDBLOCK&lt;/span&gt;&lt;/code&gt;
              are not correctly re-registered with kqueue.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Changed &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;asio&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;streambuf&lt;/span&gt;&lt;/code&gt; to ensure that its internal
              pointers are updated correctly after the data has been modified using
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;streambuf&lt;/span&gt;&lt;/code&gt; member functions.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed a bug that prevented the linger socket option from working on
              platforms other than Windows.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/fusion/&quot;&gt;Fusion&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fix &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;disable_if&lt;/span&gt;&lt;/code&gt; for
              Visual C++ 7.1/8.0
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/filesystem/&quot;&gt;Filesystem&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fix for STLPort (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5217&quot;&gt;#5217&lt;/a&gt;).
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              PGI large file support
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/graph/&quot;&gt;Graph&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Bug fixes, including fixes for: &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5181&quot;&gt;#5181&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5180&quot;&gt;#5180&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5199&quot;&gt;#5199&lt;/a&gt;
              and &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5175&quot;&gt;#5175&lt;/a&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/icl/&quot;&gt;Icl&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Intersects for interval_maps and segment_type/element_type (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5207&quot;&gt;#5207&lt;/a&gt;).
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed some ambiguous calls to functions in boost and std namespaces.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Other bug fixes, and documentation fixes.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/math/&quot;&gt;Math&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Several minor bug fixes.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/polygon/&quot;&gt;Polygon&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Disabled 45-degree booleans optimization.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/proto/&quot;&gt;Proto&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Make &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;display_expr&lt;/span&gt;&lt;/code&gt; copyable
              (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5096&quot;&gt;#5096&lt;/a&gt;).
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fix const correctness problem in &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;pass_through&lt;/span&gt;&lt;/code&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/property_tree/&quot;&gt;Property Tree&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fix compile error in JSON parser.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/signals2/&quot;&gt;Signals2&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fix unused parameter warning.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/tr1/&quot;&gt;TR1&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Allow specialization of &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;tr1&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hash&lt;/span&gt;&lt;/code&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Improved support for Pathscale and Sun compilers.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/unordered/&quot;&gt;Unordered&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Add missing copy constructors and assignment operators when using rvalue
              references (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5119&quot;&gt;#5119&lt;/a&gt;).
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_46_1.other_changes&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Other changes&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          Update getting started guide to reflect changes to boost build.
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          In quickbook, workaround optimization bug in g++ 4.4.
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_46_1.compilers_tested&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Compilers Tested&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      Boost's primary test compilers are:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          Linux:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 3.4.6, 4.2.4, 4.3.4, 4.4.1, 4.4.3, 4.4.5, 4.5.2
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, C++0x mode: 4.3.4, 4.4.3, 4.5.2
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Intel: 10.1, 11.0, 11.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Clang: 2.8
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Pathscale: 3.2
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          OS X:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 4.0.1, 4.2.1, 4.4
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, C++0x mode: 4.4.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Intel: 11.1
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          Windows:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual C++: 7.1, 8.0, 9.0 and 10.0.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, mingw: 4.4.0.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          FreeBSD:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 4.2.1, 64 bit.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
    &lt;p&gt;
      Boost's additional test compilers include:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          Linux:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 3.4.6, 4.2.4, 4.3.4, 4.4.3, 4.4.4, 4.4.5, 4.5.2
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, C++0x mode: 4.3.4, 4.4.3, 4.5.2
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              pgCC: 11.2
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Intel: 10.1, 11.0, 11.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              PathScale: 3.2, 4.0.8
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual Age C++: 10.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Clang from subversion
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          OS X:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Intel C++ Compiler: 10.1, 11.0, 11.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 4.0.1, 4.2.1, 4.4.4
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, C++0x mode: 4.4.4
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Clang from subversion, with GNU libstdc++, libc++ and libc++ in C++0x
              mode.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          Windows:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual C++: 7.1, 9.0, 10.0
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual C++ with STLport: 9.0
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual C++, Windows Mobile 5, with STLport: 9.0
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, mingw: 4.5.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, mingw, C++0x mode: 4.5.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Borland: 6.1.3 (2009), 6.2.1 (2010)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          AIX:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              IBM XL C/C++ Enterprise Edition, V11.1.0.0
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          Solaris:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Sun C++: 5.10
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_46_1.acknowledgements&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Acknowledgements&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      &lt;a href=&quot;/users/people/beman_dawes.html&quot;&gt;Beman Dawes&lt;/a&gt;, Eric Niebler,
      &lt;a href=&quot;/users/people/rene_rivera.html&quot;&gt;Rene Rivera&lt;/a&gt;, Daniel James
      and Vladimir Prus managed this release.
    &lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;</description></item><item><title>Version 1.46.0</title><pubDate>Mon, 21 Feb 2011 15:36:13 -0500</pubDate><boostbook:purpose>&lt;span class=&quot;brief&quot;&gt;&lt;span class=&quot;purpose&quot;&gt;
      New Libraries: Icl. Updated Libraries: Array, Asio, Bind, Concept Check, Filesystem,
      Fusion, Hash, Iostreams, Iterator, Math, Meta State Machine, Optional, Pool,
      Program Options, Proto, Signals, Spirit, Tokenizer, Unordered, Wave. Updated
      Tools: Boostbook, Inspect, Quickbook.
    &lt;/span&gt;&lt;/span&gt;</boostbook:purpose><boostbook:download>http://sourceforge.net/projects/boost/files/boost/1.46.0/</boostbook:download><description>&lt;div class=&quot;description&quot;&gt;
  
  
  
  &lt;div id=&quot;version_1_46_0.new_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;New Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/icl/index.html&quot;&gt;Icl&lt;/a&gt;:&lt;/span&gt;
  Interval Container
          Library, interval sets and maps and aggregation of associated values, from
          Joachim Faulhaber.
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_46_0.updated_libraries&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Updated Libraries&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/array/index.html&quot;&gt;Array&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Added support for cbegin/cend (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4761&quot;&gt;#4761&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed a problem with the Sun compiler (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4757&quot;&gt;#4757&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/asio/index.html&quot;&gt;Asio&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed an integer overflow problem that occurs when &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;address_v4&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;broadcast&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;()&lt;/span&gt;&lt;/code&gt; is used on 64-bit platforms.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed a problem on older Linux kernels (where epoll is used without
              timerfd support) that prevents timely delivery of deadline_timer handlers,
              after the program has been running for some time (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5045&quot;&gt;#5045&lt;/a&gt;).
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/bind/index.html&quot;&gt;Bind&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;make_adaptable&lt;/span&gt;&lt;/code&gt; now
              documented (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4532&quot;&gt;#4532&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/concept_check/index.html&quot;&gt;Concept Check&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              fixed warnings with self-assignment (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4918&quot;&gt;#4918&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/filesystem/index.html&quot;&gt;Filesystem&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Version 3 of the library is now the default.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              IBM vacpp: Workaround for compiler bug affecting &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;iterator_facade&lt;/span&gt;&lt;/code&gt;.
              (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4912&quot;&gt;#4912&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Verify, clarify, document that &lt;code&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hpp&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;
              can be used to specify &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_FILESYSTEM_VERSION&lt;/span&gt;&lt;/code&gt;.
              (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4891&quot;&gt;#4891&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Replaced C-style &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;assert&lt;/span&gt;&lt;/code&gt;
              with &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_ASSERT&lt;/span&gt;&lt;/code&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Undeprecated &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;unique_path&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;()&lt;/span&gt;&lt;/code&gt;. Instead, add a note mentioning the
              workaround for lack of thread safety and possible change to cwd. &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;unique_path&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;()&lt;/span&gt;&lt;/code&gt;
              is just too convenient to deprecate!
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Cleared several GCC warnings.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Changed V2 code to use &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_THROW_EXCEPTION&lt;/span&gt;&lt;/code&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Windows: Fix &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;()&lt;/span&gt;&lt;/code&gt; to report non-symlink reparse point
              correctly.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Add &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;symlink_option&lt;/span&gt;&lt;/code&gt;
              to &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;recursive_directory_iterator&lt;/span&gt;&lt;/code&gt;,
              allowing control over recursion into directory symlinks. Note that
              the default is changed to not recurse into directory symlinks.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Reference documentation cleanup, including fixing missing and broken
              links, and adding missing functions.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Miscellaneous implementation code cleanup.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/fusion/index.html&quot;&gt;Fusion&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              vector copy constructor now copies sequence members in the same order
              on different platforms (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2823&quot;&gt;#2823&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/graph/index.html&quot;&gt;Graph&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed Graphviz output to work on Visual C++ 7.1.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Replaced assert with &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_ASSERT&lt;/span&gt;&lt;/code&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Changed to Boost.Filesystem v3.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed the following bugs from Trac: &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/1021&quot;&gt;#1021&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4556&quot;&gt;#4556&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4631&quot;&gt;#4631&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4642&quot;&gt;#4642&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4715&quot;&gt;#4715&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4731&quot;&gt;#4731&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4737&quot;&gt;#4737&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4753&quot;&gt;#4753&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4758&quot;&gt;#4758&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4793&quot;&gt;#4793&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4843&quot;&gt;#4843&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4851&quot;&gt;#4851&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4852&quot;&gt;#4852&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4887&quot;&gt;#4887&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4914&quot;&gt;#4914&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4966&quot;&gt;#4966&lt;/a&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed various bugs not in Trac.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/functional/hash/index.html&quot;&gt;Hash&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Support for &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;type_index&lt;/span&gt;&lt;/code&gt; (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4756&quot;&gt;#4756&lt;/a&gt;).
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Avoid &lt;code&gt;&lt;span class=&quot;special&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;Wconversion&lt;/span&gt;&lt;/code&gt;
              warnings.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/iostreams/index.html&quot;&gt;Iostreams&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Use &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;BOOST_ASSERT&lt;/span&gt;&lt;/code&gt; instead
              of &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;assert&lt;/span&gt;&lt;/code&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed flush regression (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4590&quot;&gt;#4590&lt;/a&gt;).
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/iterator/index.html&quot;&gt;Iterator&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              fixed problem with &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;implicit_cast&lt;/span&gt;&lt;/code&gt;
              (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3645&quot;&gt;#3645&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/math/doc/sf_and_dist/html/index.html&quot;&gt;Math&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Added Wald, Inverse Gaussian and geometric distributions.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Added information about configuration macros.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Added support for mpreal as a real-numered type.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/msm/index.html&quot;&gt;Meta State Machine&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;a href=&quot;/doc/libs/1_46_0/libs/msm/doc/HTML/ch03s05.html#backend-compile-time-analysis&quot;&gt;Compile-time
              state machine analysis&lt;/a&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;a href=&quot;/doc/libs/1_46_0/libs/msm/doc/HTML/ch03s05.html#backend-boost-parameter&quot;&gt;Boost.Parameter
              interface definition for &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;msm&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;back&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;state_machine&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;/code&gt; template arguments&lt;/a&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;a href=&quot;/doc/libs/1_46_0/libs/msm/doc/HTML/ch03s05.html#backend-queues&quot;&gt;Possibility
              to provide a container for the event and deferred event queues&lt;/a&gt;.
              A policy implementation based on a more efficient Boost.CircularBuffer
              is provided.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;msm&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;back&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;state_machine&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&amp;gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;is_flag_active&lt;/span&gt;&lt;/code&gt; method made const.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;a href=&quot;/doc/libs/1_46_0/libs/msm/doc/HTML/ch03s05.html#backend-enqueueing&quot;&gt;Added
              possibility to enqueue events for delayed processing&lt;/a&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Bugfixes
            &lt;/div&gt;
            &lt;ul&gt;
              &lt;li&gt;
                &lt;div&gt;
                  &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4926&quot;&gt;#4926&lt;/a&gt;.
                &lt;/div&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;div&gt;
                  stack overflow using the Defer functor
                &lt;/div&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;div&gt;
                  anonymous transition of a submachine not called for the initial
                  state
                &lt;/div&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/optional/index.html&quot;&gt;Optional&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Updated test results with information about expected failures (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2294&quot;&gt;#2294&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/pool/index.html&quot;&gt;Pool&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Now can set a max_size for pool (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2696&quot;&gt;#2696&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hpp&lt;/span&gt;&lt;/code&gt; uses &lt;code&gt;&lt;span class=&quot;keyword&quot;&gt;reinterpret_cast&lt;/span&gt;&lt;/code&gt;
              instead of &lt;code&gt;&lt;span class=&quot;keyword&quot;&gt;static_cast&lt;/span&gt;&lt;/code&gt;
              (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/2941&quot;&gt;#2941&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;pool_allocator&lt;/span&gt;&lt;/code&gt; now works with vector
              of vectors (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/386&quot;&gt;#386&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Boost pool is now compatible with Microsoft memory leak detection (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4346&quot;&gt;#4346&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/program_options/index.html&quot;&gt;Program Options&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fixed errors in examples in docs (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3992&quot;&gt;#3992&lt;/a&gt;,
              &lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4858&quot;&gt;#4858&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Now takes &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;argv&lt;/span&gt;&lt;/code&gt; as const
              (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/3909&quot;&gt;#3909&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/proto/index.html&quot;&gt;Proto&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;strong&gt;Breaking change&lt;/strong&gt;: &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;core&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hpp&lt;/span&gt;&lt;/code&gt;
              no longer defines &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;functional&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;pop_front&lt;/span&gt;&lt;/code&gt;
              and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;functional&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;reverse&lt;/span&gt;&lt;/code&gt;, which have moved to their
              own headers under &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;functional&lt;/span&gt;&lt;/code&gt;
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Add callable wrappers for more Fusion algorithms (including &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;fusion&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;at&lt;/span&gt;&lt;/code&gt;); and callable wrappers for some
              std utilities like &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;make_pair&lt;/span&gt;&lt;/code&gt;,
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;first&lt;/span&gt;&lt;/code&gt; and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;second&lt;/span&gt;&lt;/code&gt;, all under the new &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;functional&lt;/span&gt;&lt;/code&gt; directory
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Allow transforms to be specified separately from a grammar
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;matches&lt;/span&gt;&lt;/code&gt; preserves domain-specific
              expression wrappers
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fix ADL issue with &lt;code&gt;&lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;,&lt;/span&gt;&lt;/code&gt; in &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;and_&lt;/span&gt;&lt;/code&gt;
              transform
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fix handling of grammar checking in expressions involving multiple
              domains (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4675&quot;&gt;#4675&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Fix ambiguous &lt;code&gt;&lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;/code&gt; in &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;display_expr&lt;/span&gt;&lt;/code&gt;
              (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4910&quot;&gt;#4910&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;fusion&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;is_sequence&lt;/span&gt;&lt;/code&gt; answers true for Proto
              expressions (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5006&quot;&gt;#5006&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Eliminate &lt;code&gt;&lt;span class=&quot;special&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;Wundef&lt;/span&gt;&lt;/code&gt;
              GCC warning in &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;fusion&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;hpp&lt;/span&gt;&lt;/code&gt;
              (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/5075&quot;&gt;#5075&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/signals/index.html&quot;&gt;Signals&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              gcc warning cleanup (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4365&quot;&gt;#4365&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/spirit/index.html&quot;&gt;Spirit&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Spirit V2.4.2, see the '&lt;a href=&quot;/doc/libs/1_46_0/libs/spirit/doc/html/spirit/what_s_new/spirit_2_4_2.html&quot;&gt;What's
              New&lt;/a&gt;' section for details.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/tokenizer/index.html&quot;&gt;Tokenizer&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;isspace&lt;/span&gt;&lt;/code&gt;/&lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;ispunct&lt;/span&gt;&lt;/code&gt; was called with wrong character
              type (&lt;a href=&quot;https://svn.boost.org/trac/boost/ticket/4791&quot;&gt;#4791&lt;/a&gt;)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/unordered/index.html&quot;&gt;Unordered&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Avoid using &lt;code&gt;&lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;special&quot;&gt;&amp;amp;&lt;/span&gt;&lt;/code&gt;
              with the value type.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Avoid &lt;code&gt;&lt;span class=&quot;special&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;Wconversion&lt;/span&gt;&lt;/code&gt;
              warnings.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/libs/wave/index.html&quot;&gt;Wave&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              See the &lt;a href=&quot;/libs/wave/ChangeLog&quot;&gt;Changelog&lt;/a&gt; for details.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_46_0.updated_tools&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Updated Tools&lt;/span&gt;&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/tools/boostbook/index.html&quot;&gt;Boostbook&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Better support for attributes on root elements - including &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;lang&lt;/span&gt;&lt;/code&gt;.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/tools/inspect/index.html&quot;&gt;Inspect&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Check that Boost headers do not use C's &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;assert&lt;/span&gt;&lt;/code&gt;
              macro.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          &lt;span class=&quot;library&quot;&gt;&lt;a href=&quot;/tools/quickbook/index.html&quot;&gt;Quickbook&lt;/a&gt;:&lt;/span&gt;

        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Add support for &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;lang&lt;/span&gt;&lt;/code&gt;
              attribute in documentation info.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Improved anchors.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Support &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;import&lt;/span&gt;&lt;/code&gt;, &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;include&lt;/span&gt;&lt;/code&gt; and &lt;code&gt;&lt;span class=&quot;identifier&quot;&gt;xinclude&lt;/span&gt;&lt;/code&gt;
              in conditional phrases.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Uses Filesystem 3.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_46_0.compilers_tested&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Compilers Tested&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      Boost's primary test compilers are:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          Linux:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 3.4.6, 4.2.4, 4.3.4, 4.4.3, 4.4.5, 4.5.2,
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, C++0x mode: 4.3.4, 4.4.3, 4.5.0, 4.5.2
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Intel: 10.1, 11.0, 11.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Clang: 2.8
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Pathscale: 3.2.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          OS X:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 4.0.1, 4.2.1, 4.4
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, C++0x mode: 4.4.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Intel: 11.1
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          Windows:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual C++: 7.1, 8.0, 9.0 and 10.0.
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, mingw: 4.4.0.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          FreeBSD:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 4.2.1, 64 bit.
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
    &lt;p&gt;
      Boost's additional test compilers include:
    &lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;div&gt;
          Linux:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 3.4.6, 4.2.4, 4.3.4, 4.3.5, 4.4.3, 4.4.5, 4.5.0, 4.5.2
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, C++0x mode: 4.3.4, 4.4.3, 4.5.0, 4.5.2
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              pgCC 11.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Intel: 10.1, 11.0, 11.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              PathScale: 3.2, 4.0
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual Age C++ 10.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Clang from subversion
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          OS X:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Intel C++ Compiler: 10.1, 11.0, 11.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC: 4.0.1, 4.2.1, 4.4.4
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, C++0x mode: 4.4.4
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Clang from subversion
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          Windows:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual C++: 7.1, 8.0, 9.0, 10.0
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual C++ with STLport: 9.0
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Visual C++, Windows Mobile 5, with STLport: 9.0
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, mingw: 4.4.0, 4.5.1, 4.6.0
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC, mingw, C++0x mode: 4.5.1
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;div&gt;
              Borland: 6.1.3 (2009), 6.2.1 (2010)
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          AIX:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              IBM XL C/C++ Enterprise Edition, V11.1.0.0
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          FreeBSD:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              GCC 4.2.1, 64 bit
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div&gt;
          Solaris:
        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;div&gt;
              Sun C++: 5.10
            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;version_1_46_0.acknowledgements&quot;&gt;
    &lt;h3&gt;&lt;span class=&quot;link&quot;&gt;Acknowledgements&lt;/span&gt;&lt;/h3&gt;
    &lt;p&gt;
      &lt;a href=&quot;/users/people/beman_dawes.html&quot;&gt;Beman Dawes&lt;/a&gt;, Eric Niebler,
      &lt;a href=&quot;/users/people/rene_rivera.html&quot;&gt;Rene Rivera&lt;/a&gt;, Daniel James
      and Vladimir Prus managed this release.
    &lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;</description></item></channel>
</rss>