[article Version 1.42.0
    [quickbook 1.5]
    [source-mode c++]
    [purpose New Libraries: Updated Libraries: ]
    [authors [Dawes, Beman]]
    [last-revision ]
]

[include ext.qbk]

[/ TODO: Check download link on release.]
[download http://sourceforge.net/projects/boost/files/boost/1.42.0/]

[section New Libraries]

* [phrase library..[@/libs/uuid/index.html Uuid]:]
  A universally unique identifier, from Andy Tompkins.

[endsect]

[section Updated Libraries]
  
* [phrase library..[@/libs/circular_buffer/index.html Circular Buffer]:]
  * Added methods erase_begin(size_type) and erase_end(size_type) with constant
    complexity for such types of stored elements which do not need an explicit
    destruction e.g. int or double.
  * Similarly changed implementation of the clear() method and the destructor
    so their complexity is now constant for such types of stored elements which
    do not require an explicit destruction (the complexity for other types
    remains linear).

* [phrase library..[@/libs/fusion/index.html Fusion]:]
  * The accumulator is the first argument to the functor of
    `fusion::fold` and `fusion::accumulate`
    ([@https://svn.boost.org/trac/boost/ticket/2355 #2355]).
  * Added support for associative iterators and views
    ([@https://svn.boost.org/trac/boost/ticket/3473 #3473]).

* [phrase library..[@/libs/graph/index.html Graph]:]
  * Removed old interface to `compressed_sparse_row_graph`, making new
    interface the default.

* [phrase library..[@/libs/integer/index.html Integer]:]
  * Reverted Trunk to release branch state (i.e. a "known good state").
  * Fixed issues: [@https://svn.boost.org/trac/boost/ticket/653 653], 
  [@https://svn.boost.org/trac/boost/ticket/3084 3084], 
  [@https://svn.boost.org/trac/boost/ticket/3177 3177], 
  [@https://svn.boost.org/trac/boost/ticket/3180 3180], 
  [@https://svn.boost.org/trac/boost/ticket/3548 3568], 
  [@https://svn.boost.org/trac/boost/ticket/3657 3657], 
  [@https://svn.boost.org/trac/boost/ticket/2134 2134].
  * Added long long support to [^boost::static_log2], [^boost::static_signed_min], [^boost::static_signed_max], 
   [^boost::static_unsigned_min][^boost::static_unsigned_max], when available.
  * The argument type and the result type of [^boost::static_signed_min] etc are now typedef'd. 
    Formerly, they were hardcoded as [^unsigned long] and [^int] respectively. Please, use the 
    provided typedefs in new code (and update old code as soon as possible).

* [phrase library..[@/libs/iostreams/index.html Iostreams]:]
  * Fixed many outstanding issues. Thanks to Richard Smith for his work on this.
    ([@https://svn.boost.org/trac/boost/ticket/3612 #3612],
     [@https://svn.boost.org/trac/boost/ticket/3311 #3311],
     [@https://svn.boost.org/trac/boost/ticket/2094 #2094],
     [@https://svn.boost.org/trac/boost/ticket/3010 #3010],
     [@https://svn.boost.org/trac/boost/ticket/2894 #2894],
     [@https://svn.boost.org/trac/boost/ticket/3011 #3011],
     [@https://svn.boost.org/trac/boost/ticket/3352 #3352],
     [@https://svn.boost.org/trac/boost/ticket/3505 #3505]).
  * For more information see the
    [@/libs/iostreams/doc/release_notes.html library release notes].

* [phrase library..[@/libs/program_options/index.html Program.Options]:]
  * Information about option name added to a few exception classes and
    various clean ups in exception classes
    ([@https://svn.boost.org/trac/boost/ticket/3423 #3423]).
  * Description wordwrapping in presense of default parameters fixed
    ([@https://svn.boost.org/trac/boost/ticket/2613 #2613]).
  * Empty value in configuration file is now permitted
    ([@https://svn.boost.org/trac/boost/ticket/1537 #1537]).
  * Quotes are no longer stripped from string values
    ([@https://svn.boost.org/trac/boost/ticket/850 #850]).
  * Fix endless loop in case of long default arguments
    ([@https://svn.boost.org/trac/boost/ticket/689 #689]).
  * Fix compile warning caused by usage of boost::any
    ([@https://svn.boost.org/trac/boost/ticket/2562 #2562]).
  * Fix memory bug in example/response_file.cpp
    ([@https://svn.boost.org/trac/boost/ticket/3525 #3525]).  
  * Most compilation warnings were fixed
    ([@https://svn.boost.org/trac/boost/ticket/3608 #3608]).
  * Make column width for description text configurable.
    ([@https://svn.boost.org/trac/boost/ticket/3703 #3703]).
  * Add general split function: split_unix()
    ([@https://svn.boost.org/trac/boost/ticket/2561 #2561]).
  * Enable open config files from given file name
    ([@https://svn.boost.org/trac/boost/ticket/3264 #3264]).
  * Additional flag for required options
    ([@https://svn.boost.org/trac/boost/ticket/2982 #2982]).
  * Enable case insensitive style for command line
    ([@https://svn.boost.org/trac/boost/ticket/3498 #3498]).

* [phrase library..[@/libs/property_map/index.html PropertyMap]:]
  * Removed old header files (directly in the `boost/` directory);
    they were deprecated since 1.40, replaced by headers in
    `boost/property_map/`.

* [phrase library..[@/libs/proto/index.html Proto]:]
  * Fix const correctness issues with `proto::flatten` and friends
    ([@https://svn.boost.org/trac/boost/ticket/3364 #3364]).
  * Accomodate recent change to `fusion::fold`, remove old support for Doxygen
    and pre-1.35 Fusion
    ([@https://svn.boost.org/trac/boost/ticket/3553 #3553]).
  * In binary operations, when one operand has a user-specified domain and the
    other has the default domain, the user-specified domain trumps.
  * Fix `BOOST_PROTO_EXTENDS` to work with elaborated types.
  * Work around EDG compiler bug with function types and cv-qualification.

* [phrase library..[@/libs/regex/index.html Regex]:]
  * Added support for Functors rather than strings as format expressions.
  * Improved error reporting when throwing exceptions to include better more relevant information.
  * Improved performance and reduced stack usage of recursive expressions.
  * Fixed tickets
   [@https://svn.boost.org/trac/boost/ticket/2802 #2802],
   [@https://svn.boost.org/trac/boost/ticket/3425 #3425],
   [@https://svn.boost.org/trac/boost/ticket/3507 #3507],
   [@https://svn.boost.org/trac/boost/ticket/3546 #3546],
   [@https://svn.boost.org/trac/boost/ticket/3631 #3631],
   [@https://svn.boost.org/trac/boost/ticket/3632 #3632],
   [@https://svn.boost.org/trac/boost/ticket/3715 #3715],
   [@https://svn.boost.org/trac/boost/ticket/3718 #3718],
   [@https://svn.boost.org/trac/boost/ticket/3763 #3763],
   [@https://svn.boost.org/trac/boost/ticket/3764 #3764]

* [phrase library..[@/libs/unordered/index.html Unordered]:]
  * Support instantiating the containers with incomplete value types.
  * Add `erase_return_void` as a temporary workaround for the current
    `erase` which can be inefficient because it has to find the next
    element to return an iterator
    ([@http://svn.boost.org/trac/boost/ticket/3693 #3693]).
  * Add templated find overload for compatible keys.
  * Improved codegear compatibility.
  * Other minor changes, full details in
    [@/doc/html/unordered/changes.html#unordered.changes.boost_1_42_0
    the changelog].

* [phrase library..[@/libs/xpressive/index.html Xpressive]:]
  * `match_results` no longer relies on undefined behavior in `std::list`
    ([@https://svn.boost.org/trac/boost/ticket/3278 #3278]).
  * Do NOT copy singular iterators
    ([@https://svn.boost.org/trac/boost/ticket/3538 #3538]).
  * Eliminate gcc and darwin warnings
    ([@https://svn.boost.org/trac/boost/ticket/3734 #3734]).

[endsect]

[section Compilers Tested]

Boost's primary test compilers are:

* /TODO/

Boost's additional test compilers include:

* /TODO/

[endsect]

[section Acknowledgements]

/TODO/

[endsect]


