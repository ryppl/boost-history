[article Version 1.42.0
    [quickbook 1.5]
    [source-mode c++]
    [purpose New Libraries: Updated Libraries: ]
    [authors [Dawes, Beman]]
    [last-revision ]
]

[include ext.qbk]

[/ TODO: Check download link on release.]
[download http://sourceforge.net/projects/boost/files/boost/1.42.0/]

[/
    When adding libraries:

    1. Libraries are listed in alphabetical order.
    2. Besides the dedicated entry, the lib name should be added to the
       [purpose] section at the beginning of the page.

    Example new libraries message:

* [phrase library..[@/libs/accumulators/index.html Accumulators]:] Framework for
  incremental calculation, and collection of statistical accumulators, from Eric Niebler.

    Example update message:

* [phrase library..[@/libs/interprocess/index.html Interprocess]:]
  * Added anonymous shared memory for UNIX systems.
  * Fixed missing move semantics on managed memory classes.
  * Added copy_on_write and open_read_only options for shared memory
    and mapped file managed classes.
  * `shared_ptr` is movable and supports aliasing.
]

[section New Libraries]

* /TODO/

[endsect]

[section Updated Libraries]
  
* [phrase library..[@/libs/fusion/index.html Fusion]:]
  * The accumulator is the first argument to the functor of
    `fusion::fold` and `fusion::accumulate`
    ([@https://svn.boost.org/trac/boost/ticket/2355 #2355]).
  * Added support for associative iterators and views
    ([@https://svn.boost.org/trac/boost/ticket/3473 #3473]).

* [phrase library..[@/libs/circular_buffer/index.html Circular Buffer]:]
  * Added methods erase_begin(size_type) and erase_end(size_type) with constant
    complexity for such types of stored elements which do not need an explicit
    destruction e.g. int or double.
  * Similarly changed implementation of the clear() method and the destructor
    so their complexity is now constant for such types of stored elements which
    do not require an explicit destruction (the complexity for other types
    remains linear).

* [phrase library..[@/libs/program_options/index.html Program.Options]:]
  * Information about option name added to a few exception classes and
    various clean ups in exception classes
    ([@https://svn.boost.org/trac/boost/ticket/3423 #3423]).
  * Description wordwrapping in presense of default parameters fixed
    ([@https://svn.boost.org/trac/boost/ticket/2613 #2613]).
  * Empty value in configuration file is now permitted
    ([@https://svn.boost.org/trac/boost/ticket/1537 #1537]).
  * Quotes are no longer stripped from string values
    ([@https://svn.boost.org/trac/boost/ticket/850 #850]).
  * Fix endless loop in case of long default arguments
    ([@https://svn.boost.org/trac/boost/ticket/689 #689]).
  * Fix compile warning caused by usage of boost::any
    ([@https://svn.boost.org/trac/boost/ticket/2562 #2562]).
  * Fix memory bug in example/response_file.cpp
    ([@https://svn.boost.org/trac/boost/ticket/3525 #3525]).  
  * Most compilation warnings were fixed
    ([@https://svn.boost.org/trac/boost/ticket/3608 #3608]).
  * Make column width for description text configurable.
    ([@https://svn.boost.org/trac/boost/ticket/3703 #3703]).
  * Add general split function: split_unix()
    ([@https://svn.boost.org/trac/boost/ticket/2561 #2561]).
  * Enable open config files from given file name
    ([@https://svn.boost.org/trac/boost/ticket/3264 #3264]).
  * Additional flag for required options
    ([@https://svn.boost.org/trac/boost/ticket/2982 #2982]).
  * Enable case insensitive style for command line
    ([@https://svn.boost.org/trac/boost/ticket/3498 #3498]).
    
[endsect]

[section Compilers Tested]

Boost's primary test compilers are:

* /TODO/

Boost's additional test compilers include:

* /TODO/

[endsect]

[section Acknowledgements]

/TODO/

[endsect]

