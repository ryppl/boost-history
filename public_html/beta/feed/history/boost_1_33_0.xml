<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE library PUBLIC "-//Boost//DTD BoostBook XML V1.0//EN" "http://www.boost.org/tools/boostbook/dtd/boostbook.dtd">
<article id="version_1_33_0" name="Version 1.33.0" dirname="version_1_33_0" last-revision="Thu, 11 Aug 2005 12:00:00 GMT"
 xmlns:xi="http://www.w3.org/2001/XInclude">
  <articleinfo>
    <authorgroup>
    <author>
      <firstname>Douglas</firstname> <surname>Gregor</surname>
    </author>
    </authorgroup>
    <articlepurpose>
      New Libraries: Iostream, Hash, Parameter, Pointer Container, Wave. Updated
      Libraries: Any, Assignment, Bind, Date-Time, Graph, Multi-Index, Program Options,
      Property Map, Python, Random Number, Range, Regex, Serialization, Signals.
    </articlepurpose>
  </articleinfo>
  <title>Version 1.33.0</title>
  <section id="version_1_33_0.new_libraries">
    <title><link linkend="version_1_33_0.new_libraries">New Libraries</link></title>
    <itemizedlist>
      <listitem>
        <phrase role="library"><ulink url="/doc/libs/1_33_1/libs/iostreams/doc/index.html">Iostreams
        Library</ulink>:</phrase>
  Framework for defining streams, stream buffers and i/o filters,
        from Jonathan Turkanis.
      </listitem>
      <listitem>
        <phrase role="library"><ulink url="/doc/libs/1_33_1/libs/functional/hash/index.html">Functional/Hash
        Library</ulink>:</phrase> A TR1 hash function object that can be extended to hash user
        defined types, from Daniel James.
      </listitem>
      <listitem>
        <phrase role="library"><ulink url="/doc/libs/1_33_1/libs/parameter/doc/html/index.html">Parameter
        Library</ulink>:</phrase>
  Write functions that accept arguments by name: especially
        useful when a function has more than one argument with a useful default value,
        since named arguments can be passed in any order.
      </listitem>
      <listitem>
        <phrase role="library"><ulink url="/doc/libs/1_33_1/libs/ptr_container/index.html">Pointer
        Container Library</ulink>:</phrase>
  Containers for storing heap-allocated polymorphic
        objects to ease OO-programming, from Thorsten Ottosen.
      </listitem>
      <listitem>
        <phrase role="library"><ulink url="/doc/libs/1_33_1/libs/wave/index.html">Wave</ulink>:</phrase> Standards
        conformant implementation of the mandated C99/C++ preprocessor functionality
        packed behind an easy to use iterator interface, from Hartmut Kaiser.
      </listitem>
    </itemizedlist>
  </section>
  <section id="version_1_33_0.updated_libraries">
    <title><link linkend="version_1_33_0.updated_libraries">Updated Libraries</link></title>
    <itemizedlist>
      <listitem>
        <phrase role="library"><ulink url="/doc/libs/1_33_1/doc/html/any.html">Any Library</ulink>:</phrase> <code><phrase
        role="identifier">any_cast</phrase></code> has been enhanced to allow direct
        access to <code><phrase role="identifier">any</phrase></code>'s held value.
      </listitem>
      <listitem>
        <phrase role="library"><ulink url="/doc/libs/1_33_1/libs/assign/doc/index.html">Assignment
        Library</ulink>:</phrase> Support for <ulink url="/doc/libs/1_33_1/libs/ptr_container/index.html">Pointer
        Container Library</ulink> and new efficient functions <code><phrase role="identifier">ref_list_of</phrase><phrase
        role="special">()</phrase></code> and <code><phrase role="identifier">cref_list_of</phrase><phrase
        role="special">()</phrase></code> for generating anonymous ranges.
      </listitem>
      <listitem>
        <phrase role="library"><ulink url="/doc/libs/1_33_1/libs/bind/bind.html">Bind Library</ulink>:</phrase> Bind
        expressions now support <ulink url="/doc/libs/1_33_1/libs/bind/bind.html#operators">comparisons
        and negation</ulink>. Example: <code><phrase role="identifier">bind</phrase><phrase
        role="special">(&amp;</phrase><phrase role="identifier">X</phrase><phrase
        role="special">::</phrase><phrase role="identifier">name</phrase><phrase
        role="special">,</phrase> <phrase role="identifier">_1</phrase><phrase role="special">)</phrase>
        <phrase role="special">&lt;</phrase> <phrase role="identifier">bind</phrase><phrase
        role="special">(&amp;</phrase><phrase role="identifier">X</phrase><phrase
        role="special">::</phrase><phrase role="identifier">name</phrase><phrase
        role="special">,</phrase> <phrase role="identifier">_2</phrase><phrase role="special">)</phrase></code>.
      </listitem>
      <listitem>
        <phrase role="library"><ulink url="/doc/libs/1_33_1/doc/html/date_time.html">Date-Time Library</ulink>:</phrase>
        <itemizedlist>
          <listitem>
            Added <ulink url="/doc/libs/1_33_1/doc/html/date_time/local_time.html">local
            time and time zone classes</ulink>.
          </listitem>
          <listitem>
            Added <ulink url="/doc/libs/1_33_1/doc/html/date_time/date_time_io.html">format-based
            Input/Output facets</ulink>.
          </listitem>
          <listitem>
            For a complete list of changes, see the library <ulink url="/doc/libs/1_33_1/doc/html/date_time/details.html#date_time.changes">change
            history</ulink>.
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <phrase role="library"><ulink url="/doc/libs/1_33_1/libs/graph/doc/index.html">Graph Library</ulink>:</phrase> Introduced
        several new algorithms and improved existing algorithms:
        <itemizedlist>
          <listitem>
            <ulink url="/doc/libs/1_33_1/libs/graph/doc/python.html">Experimental
            Python bindings</ulink>, from Doug Gregor and Indiana University.
          </listitem>
          <listitem>
            <ulink url="/doc/libs/1_33_1/libs/graph/doc/floyd_warshall_shortest.html"><code><phrase
            role="identifier">floyd</phrase> <phrase role="identifier">warshall</phrase>
            <phrase role="identifier">all</phrase> <phrase role="identifier">pairs</phrase>
            <phrase role="identifier">shortest</phrase> <phrase role="identifier">paths</phrase></code></ulink>,
            from Lauren Foutz and Scott Hill.
          </listitem>
          <listitem>
            <ulink url="/doc/libs/1_33_1/libs/graph/doc/astar_search.html"><code><phrase
            role="identifier">astar</phrase> <phrase role="identifier">search</phrase></code></ulink>,
            from Kristopher Beevers and Jufeng Peng.
          </listitem>
          <listitem>
            <ulink url="/doc/libs/1_33_1/libs/graph/doc/fruchterman_reingold.html"><code><phrase
            role="identifier">fruchterman</phrase> <phrase role="identifier">reingold</phrase>
            <phrase role="identifier">force</phrase> <phrase role="identifier">directed</phrase>
            <phrase role="identifier">layout</phrase></code></ulink>, from Doug Gregor
            and Indiana University.
          </listitem>
          <listitem>
            <ulink url="/doc/libs/1_33_1/libs/graph/doc/biconnected_components.html"><code><phrase
            role="identifier">biconnected</phrase> <phrase role="identifier">components</phrase></code>
            and <code><phrase role="identifier">articulation</phrase> <phrase role="identifier">points</phrase></code></ulink>,
            from Jeremy Siek, Janusz Piwowarski, and Doug Gregor.
          </listitem>
          <listitem>
            <ulink url="/doc/libs/1_33_1/libs/graph/doc/sequential_vertex_coloring.html"><code><phrase
            role="identifier">sequential</phrase> <phrase role="identifier">vertex</phrase>
            <phrase role="identifier">coloring</phrase></code></ulink> has been updated,
            tested, and documented.
          </listitem>
          <listitem>
            <ulink url="/doc/libs/1_33_1/libs/graph/doc/gursoy_atun_layout.html"><code><phrase
            role="identifier">gursoy</phrase> <phrase role="identifier">atun</phrase>
            <phrase role="identifier">layout</phrase></code></ulink>, from Jeremiah
            Willcock and Doug Gregor of Indiana University.
          </listitem>
          <listitem>
            <ulink url="/doc/libs/1_33_1/libs/graph/doc/king_ordering.html"><code><phrase
            role="identifier">king</phrase> <phrase role="identifier">ordering</phrase></code></ulink>,
            from D. Kevin McGrath of Indiana University.
          </listitem>
          <listitem>
            <ulink url="/doc/libs/1_33_1/libs/graph/doc/cuthill_mckee_ordering.html"><code><phrase
            role="identifier">cuthill</phrase> <phrase role="identifier">mckee</phrase>
            <phrase role="identifier">ordering</phrase></code></ulink> has been recast
            as an invocation of <code><phrase role="identifier">breadth</phrase>
            <phrase role="identifier">first</phrase> <phrase role="identifier">search</phrase></code>
            and now supports graphs with multiple components.
          </listitem>
          <listitem>
            <ulink url="/doc/libs/1_33_1/libs/graph/doc/dijkstra_shortest_paths.html"><code><phrase
            role="identifier">dijkstra</phrase> <phrase role="identifier">shortest</phrase>
            <phrase role="identifier">paths</phrase></code></ulink> now uses a relaxed
            heap [<ulink url="/doc/libs/1_33_1/libs/graph/doc/bibliography.html#driscoll88">61</ulink>]
            as its priority queue, improving its complexity to O(V log V) and improving
            real-world performance for larger graphs.
          </listitem>
          <listitem>
            <ulink url="/doc/libs/1_33_1/libs/graph/doc/read_graphviz.html"><code><phrase
            role="identifier">read</phrase> <phrase role="identifier">graphviz</phrase></code></ulink>
            now has a new, Spirit-based parser that works for all graph types and
            supports arbitrary properties on the graph, from Ron Garcia. The old,
            Bison-based GraphViz reader has been deprecated and will be removed in
            a future Boost release. <ulink url="/doc/libs/1_33_1/libs/graph/doc/write-graphviz.html"><code><phrase
            role="identifier">write</phrase> <phrase role="identifier">graphviz</phrase></code></ulink>
            also supports dynamic properties.
          </listitem>
          <listitem>
            <ulink url="/doc/libs/1_33_1/libs/graph/doc/subgraph.html"><code><phrase
            role="identifier">subgraph</phrase></code></ulink>: <code><phrase role="identifier">get_property</phrase></code>
            now refers to the subgraph property, not the root graph's property.
          </listitem>
          <listitem>
            See the <ulink url="/doc/libs/1_33_1/libs/graph/doc/history.html#by-version">history</ulink>
            for additional changes and bug fixes.
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <phrase role="library"><ulink url="/doc/libs/1_33_1/libs/multi_index/doc/index.html">Multi-index
        Containers Library</ulink>:</phrase>
        <itemizedlist>
          <listitem>
            New <ulink url="/doc/libs/1_33_1/libs/multi_index/doc/tutorial/indices.html#hashed_indices">hashed
            indices</ulink>.
          </listitem>
          <listitem>
            Added <ulink url="/doc/libs/1_33_1/libs/multi_index/doc/tutorial/creation.html#serialization">serialization
            support</ulink>.
          </listitem>
          <listitem>
            For a complete list of changes, see the library <ulink url="/doc/libs/1_33_1/libs/multi_index/doc/release_notes.html">release
            notes</ulink>.
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <phrase role="library"><ulink url="/doc/libs/1_33_1/libs/program_options/doc/index.html">Program
        Options Library</ulink>:</phrase>
        <itemizedlist>
          <listitem>
            Option descriptions are now printed with word wrapping.
          </listitem>
          <listitem>
            Command line parser can bypass unregistered options, instread of throwing.
          </listitem>
          <listitem>
            Removed support for &quot;implicit&quot; (optional) values.
          </listitem>
          <listitem>
            New customization method 'command_line_parser::extra_style_parser'. Unlike
            'additional_parser', allows the user to parse several tokens and return
            a vector of options, not just a single option.
          </listitem>
          <listitem>
            Work with disabled exceptions.
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <phrase role="library"><ulink url="/doc/libs/1_33_1/libs/property_map/property_map.html">Property
        Map Library</ulink>:</phrase> Introduced the <ulink url="/doc/libs/1_33_1/libs/property_map/doc/dynamic_property_map.html"><code><phrase
        role="identifier">dynamic</phrase> <phrase role="identifier">properties</phrase></code></ulink>
        class, which provides dynamically-typed access to a set of property maps.
      </listitem>
      <listitem>
        <phrase role="library"><ulink url="/doc/libs/1_33_1/libs/python/doc/index.html">Boost.Python</ulink>:</phrase>
        <itemizedlist>
          <listitem>
            Added support for docstrings on nonstatic properties.
          </listitem>
          <listitem>
            We now export the client-provided docstrings for <code><phrase role="identifier">init</phrase><phrase
            role="special">&lt;</phrase><phrase role="identifier">optional</phrase><phrase
            role="special">&lt;&gt;</phrase> <phrase role="special">&gt;</phrase></code>
            and <emphasis>XXX</emphasis><code><phrase role="identifier">_FUNCTION_OVERLOADS</phrase><phrase
            role="special">()</phrase></code> for only the last overload.
          </listitem>
          <listitem>
            Support for Embedded VC++ 4 and GCC-3.3 on MacOS added
          </listitem>
          <listitem>
            Introduced better support for rvalue from-python conversions of shared_ptr.
          </listitem>
          <listitem>
            Support for exposing <code><phrase role="identifier">vector</phrase><phrase
            role="special">&lt;</phrase><phrase role="identifier">T</phrase><phrase
            role="special">*&gt;</phrase></code> with the indexing suite.
          </listitem>
          <listitem>
            updated visual studio project build file.
          </listitem>
          <listitem>
            Added search feature to the index page.
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <para><phrase role="library"><ulink url="/doc/libs/1_33_1/libs/random/index.html">Random Number
        Library</ulink>:</phrase>
  Improved initialization for <code><phrase role="identifier">mersenne_twister</phrase></code>,
        algorithm by Makoto Matsumoto and Takuji Nishimura, implemented for Boost
        by Jens Maurer.</para>
  <para>Note: All test vectors for <code><phrase role="identifier">mersenne_twister</phrase></code>s
        constructed or seeded without parameters or with a single <code><phrase role="keyword">unsigned</phrase>
        <phrase role="keyword">int</phrase></code> parameter become invalid.</para>

      </listitem>
      <listitem>
        <phrase role="library"><ulink url="/doc/libs/1_33_1/libs/range/index.html">Range Library</ulink>:</phrase> Minor
        addition of convenience functions to <code><phrase role="identifier">iterator</phrase>
        <phrase role="identifier">range</phrase></code> like <code><phrase role="identifier">front</phrase><phrase
        role="special">(),</phrase> <phrase role="identifier">back</phrase><phrase
        role="special">()</phrase></code> and <code><phrase role="keyword">operator</phrase><phrase
        role="special">[]()</phrase></code>.
      </listitem>
      <listitem>
        <phrase role="library"><ulink url="/doc/libs/1_33_1/libs/regex/index.html">Regex Library</ulink>:</phrase>
        <itemizedlist>
          <listitem>
            Rewritten front end parser now supports (?imsx-imsx) constructs, plus
            lookbehind assertions and conditional expressions.
          </listitem>
          <listitem>
            Thin wrapper classes improve integration with MFC/ATL code.
          </listitem>
          <listitem>
            Full (optional) Unicode support via the ICU library. Refer to the <ulink
            url="/doc/libs/1_33_1/libs/regex/doc/history.html">regex history page</ulink>
            for more information on these and other small changes.
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <phrase role="library"><ulink url="/doc/libs/1_33_1/libs/serialization/doc/index.html">Serialization
        Library</ulink>:</phrase>
        <itemizedlist>
          <listitem>
            DLL version.
          </listitem>
          <listitem>
            Auto-linking.
          </listitem>
          <listitem>
            Serialization of variants.
          </listitem>
          <listitem>
            Improved serialization of shared pointers.
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <phrase role="library"><ulink url="/doc/libs/1_33_1/doc/html/signals.html">Signals Library</ulink>:</phrase> added
        slot blocking/unblocking, from Frantz Maerten. Huge improvements to signal
        invocation performance from Robert Zeh.
      </listitem>
    </itemizedlist>
  </section>
  <section id="version_1_33_0.supported_compilers">
    <title><link linkend="version_1_33_0.supported_compilers">Supported Compilers</link></title>
    <para>
      Boost is tested on a wide range of compilers and platforms. Since Boost libraries
      rely on modern C++ features not available in all compilers, not all Boost libraries
      will work with every compiler. The following compilers and platforms have been
      extensively tested with Boost, although many other compilers and platforms
      will work as well. For more information, see the <ulink url="http://www.boost.org/regression/release/user/">regression
      test results</ulink>.
    </para>
    <itemizedlist>
      <listitem>
        <ulink url="http://developer.apple.com/">Apple GCC</ulink> 3.x on Mac OS
        X.
      </listitem>
      <listitem>
        <ulink url="http://www.borland.com/us/products/cbuilder/">Borland C++</ulink>
        5.6.4 on Windows.
      </listitem>
      <listitem>
        <ulink url="http://gcc.gnu.org">GNU C++</ulink> 2.95.3 (with and without
        STLport), 3.2.x., 3.3.x, 3.4.x, 4.0.x on Windows, Linux and Solaris.
      </listitem>
      <listitem>
        <ulink url="http://www.intel.com/cd/software/products/asmo-na/eng/compilers/index.htm">Intel
        C++</ulink> 8.1, 9.0 on Windows, Linux.
      </listitem>
      <listitem>
        <ulink url="http://www.metrowerks.com">Metrowerks CodeWarrior</ulink> 8.3,
        9.4, 9.5 on Mac OS X and Windows.
      </listitem>
      <listitem>
        <ulink url="http://msdn.microsoft.com/visualc/">Microsoft Visual C++</ulink>
        6.0 (sp5, with and without STLport), 7.0, 7.1, 8.0 beta. Note: due to intermittent
        problems with Visual C++ 8.0 beta, and the presence of a variety of pre-release
        compiler builds, we are unable to guarantee compatibility until the final
        compiler is released.
      </listitem>
    </itemizedlist>
  </section>
  <section id="version_1_33_0.acknowledgements">
    <title><link linkend="version_1_33_0.acknowledgements">Acknowledgements</link></title>
    <para>
      <inlinemediaobject><imageobject><imagedata fileref="/gfx/boost_1_33_0.jpg"></imagedata></imageobject>
      <textobject>
        <phrase>boost_1_33_0</phrase>
      </textobject>
      </inlinemediaobject><ulink url="/users/people/doug_gregor.html">Douglas Gregor</ulink>
      managed this release.
    </para>
    <para>
      A great number of people contributed their time and expertise to make this
      release possible. Special thanks go to Aleksey Gurtovoy and Misha Bergal, who
      managed to keep the regression testing system working throughout the release
      process; David Abrahams, Beman Dawes, Aleksey Gurtovoy, Rene Rivera and Jonathan
      Turkanis for greatly improving the quality of this release; Rene Rivera for
      the new Boost web page design; and Zoltan &quot;cad&quot; Juhasz for the new
      Boost logo.
    </para>
  </section>
</article>
