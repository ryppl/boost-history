[article Version 1.37.0
    [quickbook 1.4]
    [source-mode c++]
    [purpose New Library: Proto.
        Updated Libraries: Circular Buffer, Dynamic Bitset, Interprocess,
        Intrusive]
    [authors [Dawes, Beman]]
    [last-revision ]
]

[include ext.qbk]

[/ TODO: Update download link on release]
[download http://sourceforge.net/project/showfiles.php?group_id=7586&package_id=8041&release_id=616969]

[/
    When adding libraries:

    1. Libraries are listed in alphabetical order.
    2. Besides the dedicated entry, the lib name should be added to the
       [purpose] section at the beginning of the page.
]

[section New Libraries]

* [phrase library..[@/libs/proto/index.html Proto]:]
  * Expression template library and compiler construction toolkit for
    domain-specific embedded languages, from Eric Niebler.

[endsect]

[section Updated Libraries]

* [phrase library..[@/libs/circular_buffer/index.html Circular Buffer]:]
  * Added new methods `is_linearized()` and `rotate(const_iterator)`.
  * Minor bug fixes and documentation updates.
* [phrase library..[@/libs/dynamic_bitset/dynamic_bitset.html Dynamic Bitset]:]
  * Implemented constructor ['do-the-right-thing] dispatch, a la
    standard sequences (mimics resolution of library issue 438,
    currently in the [^C++0x] working paper)
  * Miscellaneous improvements to documentation, code examples and
    implementation details.
* [phrase library..[@/libs/functional/hash/index.html Hash]:]
  * Minor bug fix (see [@http://svn.boost.org/trac/boost/ticket/2264 Ticket 2264]).
* [phrase library..[@/libs/interprocess/index.html Interprocess]:]
  *  Added placement insertion (`emplace()`, `emplace_back()`...) methods to
     containers.
  *  Containers can be used now in recursive types.
  *  Minor bug fixes.
* [phrase library..[@/libs/intrusive/index.html Intrusive]:]
  *  Intrusive now takes advantage of compilers with variadic templates.
  *  `clone_from` functions now copy predicates and hash functions of
     associative containers.
  *  Added incremental hashing to unordered containers via `incremental<>`
     option.
  *  Minor bug fixes.
* [phrase library..[@/libs/unordered/index.html Unordered]:]
  * Rename overload of `emplace` with hint, to `emplace_hint` as specified in
    [@http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2008/n2691.pdf n2691].
  * Provide forwarding headers at `<boost/unordered/unordered_map_fwd.hpp>` and
    `<boost/unordered/unordered_set_fwd.hpp>`.
  * Move all of the implementation inside the `boost/unordered` directory.

[endsect]

[section Compilers Tested]

Boost's primary test compilers are:

* /TODO/

Boost's additional test compilers include:

* /TODO/

[endsect]

[section Acknowledgements]

/TODO/

[endsect]

