[article Version 1.37.0
    [quickbook 1.4]
    [source-mode c++]
    [purpose New Library: Proto.
        Updated Libraries: Asio, Circular Buffer, Dynamic Bitset, Hash,
        Interprocess, Intrusive, Unordered Math Type Traits]
    [authors [Dawes, Beman]]
    [last-revision ]
]

[include ext.qbk]

[/ TODO: Update download link on release]
[download http://sourceforge.net/project/showfiles.php?group_id=7586&package_id=8041&release_id=616969]

[/
    When adding libraries:

    1. Libraries are listed in alphabetical order.
    2. Besides the dedicated entry, the lib name should be added to the
       [purpose] section at the beginning of the page.
]

[section New Libraries]

* [phrase library..[@/libs/proto/index.html Proto]:]
  * Expression template library and compiler construction toolkit for
    domain-specific embedded languages, from Eric Niebler.

[endsect]

[section Updated Libraries]

* [phrase library..[@/libs/asio/index.html Asio]:]
  * Enhanced CompletionCondition concept with the signature
    `size_t CompletionCondition(error_code ec, size_t total)`, where the return
    value indicates the maximum number of bytes to be transferred on the next
    read or write operation. (The old CompletionCondition signature is still
    supported for backwards compatibility).
  * New windows::overlapped_ptr class to allow arbitrary overlapped I/O
    functions (such as TransmitFile) to be used with Asio.
  * On recent versions of Linux, an eventfd descriptor is now used (rather than
    a pipe) to interrupt a blocked select/epoll reactor.
  * Added const overloads of lowest_layer().
  * Synchronous read, write, accept and connect operations are now thread safe
    (meaning that it is now permitted to perform concurrent synchronous
    operations on an individual socket, if supported by the OS).
  * Reactor-based io_service implementations now use lazy initialisation to
    reduce the memory usage of an io_service object used only as a message
    queue.
* [phrase library..[@/libs/circular_buffer/index.html Circular Buffer]:]
  * Added new methods `is_linearized()` and `rotate(const_iterator)`.
  * Minor bug fixes and documentation updates.
* [phrase library..[@/libs/dynamic_bitset/ Dynamic Bitset]:]
  * Constructor "do the right thing" dispatch, a la standard sequence
    containers (follows the proposed resolution of
    [@http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#438
    library issue 438], currently in the [^C++0x] working paper).
  * Improvements to documentation, code examples and implementation.
* [phrase library..[@/libs/functional/hash/index.html Hash]:]
  * Minor bug fix (see [@http://svn.boost.org/trac/boost/ticket/2264 Ticket 2264]).
* [phrase library..[@/libs/interprocess/index.html Interprocess]:]
  *  Added placement insertion (`emplace()`, `emplace_back()`...) methods to
     containers.
  *  Containers can be used now in recursive types.
  *  Minor bug fixes.
* [phrase library..[@/libs/intrusive/index.html Intrusive]:]
  *  Intrusive now takes advantage of compilers with variadic templates.
  *  `clone_from` functions now copy predicates and hash functions of
     associative containers.
  *  Added incremental hashing to unordered containers via `incremental<>`
     option.
  *  Minor bug fixes.
* [phrase library..[@/libs/math/doc/sf_and_dist/html/index.html Math.Special Functions]:]
   Improved accuracy and testing of the inverse hypergeometric functions.
* [phrase library..[@/libs/type_traits/index.html Type Traits]:]
   Added better support for the Codegear compiler.
* [phrase library..[@/libs/unordered/index.html Unordered]:]
  * Rename overload of `emplace` with hint, to `emplace_hint` as specified in
    [@http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2008/n2691.pdf n2691].
  * Provide forwarding headers at `<boost/unordered/unordered_map_fwd.hpp>` and
    `<boost/unordered/unordered_set_fwd.hpp>`.
  * Move all of the implementation inside the `boost/unordered` directory.

[endsect]

[section Compilers Tested]

Boost's primary test compilers are:

* /TODO/

Boost's additional test compilers include:

* /TODO/

[endsect]

[section Acknowledgements]

/TODO/

[endsect]



