[article Version 1.47.0
    [quickbook 1.5]
    [source-mode c++]
    [purpose
    New Libraries: Chrono, Geometry, Phoenix and Ratio.
    Updated Libraries: Accumulators, Asio, Config, DateTime, Dynamic Bitset,
    Foreach, Function, Function Types, Graph, Iostreams, Iterator, Lexical Cast,
    Logic, Math, Meta State Machine, MultiIndex, Proto, Random, Range,
    Spirit, Tokenizer, Utility, Uuid, Wave]
    [authors [Dawes, Beman]]
    [last-revision ]
]

[include ext.qbk]

[/ TODO: Check download link on release.
[download http://sourceforge.net/projects/boost/files/boost/1.47.0/]
]

[section New Libraries]

* [phrase library..[@/libs/chrono/index.html Chrono]:]
  Useful time utilities, from Vicente J. Botet Escribá.

* [phrase library..[@/libs/geometry/index.html Geometry]:]
  Geometry Library, from Barend Gehrels, Bruno Lalande and Mateusz Loskot.

* [phrase library..[@/libs/phoenix/index.html Phoenix]:]
  Define small unnamed function objects at the actual call site, and more, from Joel de Guzman, Dan Marsden and Thomas Heller.

* [phrase library..[@/libs/ratio/index.html Ratio]:]
  Compile time rational arithmetic, from Vicente J. Botet Escribá.

[endsect]

[section Updated Libraries]

* [phrase library..[@/libs/accumulators/index.html Accumulators]:]
  * New statistical accumulators: `sum_kahan`, `sum_of_weights_kahan`, `sum_of_variates_kahan`.

* [phrase library..[@/libs/asio/index.html Asio]:]
  * Many new features and improvements:
    * Signal handling.
    * A debugging aid for asynchronous programs.
    * Timeouts on socket iostreams.
    * Composed connect operations.
    * Rewritten SSL implementation.
    * C++0x move support.
    * Compatibility with POSIX `fork()`.
    * ... and much more. See the
      [@/doc/libs/1_47_0/doc/html/boost_asio/history.html Revision History] in
      the Boost.Asio documentation for more details.
  * Tickets addressed:
    [@https://svn.boost.org/trac/boost/ticket/2879 #2879],
    [@https://svn.boost.org/trac/boost/ticket/3238 #3238],
    [@https://svn.boost.org/trac/boost/ticket/3297 #3297],
    [@https://svn.boost.org/trac/boost/ticket/3307 #3307],
    [@https://svn.boost.org/trac/boost/ticket/3702 #3702],
    [@https://svn.boost.org/trac/boost/ticket/3741 #3741],
    [@https://svn.boost.org/trac/boost/ticket/3900 #3900],
    [@https://svn.boost.org/trac/boost/ticket/3905 #3905],
    [@https://svn.boost.org/trac/boost/ticket/3939 #3939],
    [@https://svn.boost.org/trac/boost/ticket/3958 #3958],
    [@https://svn.boost.org/trac/boost/ticket/4162 #4162],
    [@https://svn.boost.org/trac/boost/ticket/4971 #4971],
    [@https://svn.boost.org/trac/boost/ticket/5124 #5124],
    [@https://svn.boost.org/trac/boost/ticket/5128 #5128],
    [@https://svn.boost.org/trac/boost/ticket/5418 #5418],
    [@https://svn.boost.org/trac/boost/ticket/5453 #5453].

* [phrase library..[@/libs/config/index.html Config]:]
  * Fixed bug [@https://svn.boost.org/trac/boost/ticket/1988 #1988]

* [phrase library..[@/libs/date_time/index.html DateTime]:]
  * Fixed bugs
    [@https://svn.boost.org/trac/boost/ticket/4920 #4920],
    [@https://svn.boost.org/trac/boost/ticket/3651 #3651],
    [@https://svn.boost.org/trac/boost/ticket/4845 #4845],
    [@https://svn.boost.org/trac/boost/ticket/4475 #4475],
    [@https://svn.boost.org/trac/boost/ticket/4952 #4952],
    [@https://svn.boost.org/trac/boost/ticket/5345 #5345],
    [@https://svn.boost.org/trac/boost/ticket/5250 #5250],
    [@https://svn.boost.org/trac/boost/ticket/4798 #4798],
    [@https://svn.boost.org/trac/boost/ticket/4754 #4754],
    [@https://svn.boost.org/trac/boost/ticket/4411 #4411],
    [@https://svn.boost.org/trac/boost/ticket/5126 #5126],
    [@https://svn.boost.org/trac/boost/ticket/4780 #4780],
    [@https://svn.boost.org/trac/boost/ticket/2475 #2475],
    [@https://svn.boost.org/trac/boost/ticket/1674 #1674].

* [phrase library..[@/libs/dynamic_bitset/index.html Dynamic Bitset]:]
  * Fixed bug [@https://svn.boost.org/trac/boost/ticket/5439 #5439]

* [phrase library..[@/libs/foreach/index.html Foreach]:]
  * Use rvalue refs on supporting compilers for const rvalue detection.

* [phrase library..[@/libs/function/index.html Function]:]
  * Bug fixes:
    [@https://svn.boost.org/trac/boost/ticket/3410 #3410],
    [@https://svn.boost.org/trac/boost/ticket/3618 #3618],
    [@https://svn.boost.org/trac/boost/ticket/3912 #3912],
    [@https://svn.boost.org/trac/boost/ticket/4073 #4073],
    [@https://svn.boost.org/trac/boost/ticket/4325 #4325],
    [@https://svn.boost.org/trac/boost/ticket/4717 #4717],
    [@https://svn.boost.org/trac/boost/ticket/4765 #4765].

* [phrase library..[@/libs/function_types/index.html Function Types]:]
  * Bug fixes:
    [@https://svn.boost.org/trac/boost/ticket/1653 #1653],
    [@https://svn.boost.org/trac/boost/ticket/3162 #3162].

* [phrase library..[@/libs/graph/index.html Graph]:]
  * Bug fixes.
  * Remove deprecated function `kolmogorov_max_flow`,
    use `boykov_kolmogorov_max_flow` instead.
  * Removed `<boost/graph/detail/is_same.hpp>` header
    since its functionality is in Boost.Type_Traits.

* [phrase library..[@/libs/iostreams/index.html Iostreams]:]
  * Support filesystem v3 paths
    ([@https://svn.boost.org/trac/boost/ticket/4485 #4485]).
  * Fix a memory leak in `chain`
    ([@https://svn.boost.org/trac/boost/ticket/4922 #4922]).

* [phrase library..[@/libs/iterator/index.html Iterator]:]
  * Add `function_input_iterator`
    ([@https://svn.boost.org/trac/boost/ticket/2893 #2893]).
  * Bug fixes:
    [@https://svn.boost.org/trac/boost/ticket/1427 #1427],
    [@https://svn.boost.org/trac/boost/ticket/1517 #1517],
    [@https://svn.boost.org/trac/boost/ticket/3434 #3434].

* [phrase library..[@/libs/conversion/lexical_cast.htm Lexical cast]:]
  * Better performance and less memory usage for many combinations of
    Source and Target types
    ([@https://svn.boost.org/trac/boost/ticket/5564 #5564],
    [@https://svn.boost.org/trac/boost/ticket/5417 #5417],
    [@https://svn.boost.org/trac/boost/ticket/4397 #4397],
    [@https://svn.boost.org/trac/boost/ticket/5350 #5350],
    [@https://svn.boost.org/trac/boost/ticket/5576 #5576]).
  * Documentation updated
    ([@https://svn.boost.org/trac/boost/ticket/5576 #5576],
    [@https://svn.boost.org/trac/boost/ticket/5494 #5494]).

* [phrase library..[@/libs/logic/index.html Logic]:]
  * Bug fixes:
    [@https://svn.boost.org/trac/boost/ticket/3093 #3093],
    [@https://svn.boost.org/trac/boost/ticket/3600 #3600].

* [phrase library..[@/libs/math/index.html Math]:]
  * Added changesign function to sign.hpp to facilitate addition of nonfinite
    facets.
  * Addition of nonfinite facets from Johan Rade, with tests, examples of use
    for C99 format infinity and NaN, and documentation.
  * Added tests and documentation of changesign from Johan Rade.

* [phrase library..[@/libs/msm/index.html Meta State Machine]:]
  * Added a [@/doc/libs/1_47_0/libs/msm/doc/HTML/ch03s05.html#backend-start `stop()`]
    method in the back-end.
  * Added partial support for [@/doc/libs/1_47_0/libs/msm/doc/HTML/ch03s04.html#eUML-phoenix Boost.Phoenix functors in eUML].
  * Added the possibility to [@/doc/libs/1_47_0/libs/msm/doc/HTML/ch03s05.html#backend-state-switch choose when state switching occurs].
  * Bugfixes:
    * [@https://svn.boost.org/trac/boost/ticket/5117 #5117],
      [@https://svn.boost.org/trac/boost/ticket/5253 #5253],
      [@https://svn.boost.org/trac/boost/ticket/5533 #5533],
      [@https://svn.boost.org/trac/boost/ticket/5573 #5573].
    * gcc warnings about unused variables.
    * better implementation of `favor_compile_time` back-end policy.
    * bug with eUML and state construction.
    * incorrect eUML event and state macros.
    * incorrect event type passed to a direct entry state's on_entry action.
    * more examples.

* [phrase library..[@/libs/multi_index/index.html MultiIndex]:]
  * Fixed an ADL problem in `composite_key_compare` related with Boost.Ref.
  * Maintenance fixes.

* [phrase library..[@/libs/proto/index.html Proto]:]
  * Pre-preprocessed for better compile times.
  * Default preprocessor limits raised:
    * Max expression arity (`BOOST_PROTO_MAX_ARITY`) bumped from 5 to 10.
    * Max function call arity (`BOOST_PROTO_MAX_FUNCTION_CALL_ARITY`) bumped
      from 5 to 10.
    * Max logical operator arity (`BOOST_PROTO_MAX_LOGICAL_ARITY`) bumped from
      8 to 10.
  * Better integration of `proto::basic_expr` to avoid accidental needless
    instantiations of `proto::expr`.

* [phrase library..[@/libs/random/index.html Random]:]
  * Synchronized with the new standard.
    * Many new distributions added:
      `chi_squared_distribution`, `negative_binomial_distribution`,
      `fisher_f_distribution`, `student_t_distribution`,
      `weibull_distribution`, `extreme_value_distribution`,
      `discrete_distribution`, `piecewise_constant_distribution`,
      `piecewise_liear_distribution`
    * Renamed `uniform_int` and `uniform_real` to
      `uniform_int_distribution` and `uniform_real_distribution`.
    * Added members to all distributions:
      `param_type`, `param`, stream operators,
      comparison operators, `min` and `max`.
    * Allow distributions to be used directly with
      generators without use of `variate_generator`.
    * Changed the meaning of the parameters of
      `geometric_distribution` and `lognormal_distribution`.
    * Added a second parameter to `gamma_distribution`.
    * Added `seed_seq` and added the corresponding
      constructors and `seed` overloads the generators.
    * Added `generate_canonical`.
    * Renamed the engine tempates.  e.g. `mersenne_twister`
      becomes `mersenne_twister_engine`.
    * New engine adapter `independent_bits_engine`.
    * Added new predefined engine typedefs:
      `mt19937_64`, `ranlux[24|48][_base]`, `knuth_b`.
    * Updated seeding algorithms.
    * Added `discard`
    * Use unsigned types instead of signed types in all
      the predefined engines.
  * Bug fixes:
    * `linear_congruential_engine` could assert because
      the modular arithmetic was not implemented in all
      cases.  `shuffle_output`, now called `shuffle_order_engine`,
      could cause integer overflow.  These cases were
      not triggered by any predefined engines.
    * `uniform_small_int` now actually behaves as documented.
  * New efficient algorithms for `binomial_distribution`
    and `poisson_distribution`.
  * Moved all features into `namespace boost::random`
  * Backwards compatibility issues:
    * The seeding algorithms have changed.
      This was unavoidable for compatibility
      with the standard.  Not to mention
      that some of the existing algorithms
      were weird and inconsistent.
      * Seeding with an integer:
        The behaviour should be unchanged for
        most generators except `lagged_fibonacci` and
        `subtract_with_carry` (and thus `ranlux`).
      * Seeding a generator with another generator:
        This has been enabled by making all
        all generators models of `SeedSeq`.  Therefore,
        if you seed a Boost.Random generator with
        a non Boost.Random generator, your code
        will no longer compile.  The algorithm
        has changed, so code using this seeding
        method will yield different values.
      * Seeding a generator from a pair of iterators:
        This implicitly assumed that the elements
        were 32-bit integers in some places, but
        not everywhere.  I've added this requirement
        everywhere and updated the algorithms
        accordingly.  The behaviour of generators
        with a `value_type` no more than 32 bits should
        be unchanged.
    * Renaming:
      * Whenever a class was renamed, there is a wrapper
        with the old name.  There are also using declarations
        in namespace boost for everything that was moved.
      * The names of a few accessors in the distributions
        changed.  Both the old and the new names are allowed.
    * `geometric_distribution` and `lognormal_distribution`:
      The behaviour is different at runtime.
      `boost::geometric_distribution` and `boost::lognormal_distribution`
      provide the old behaviour, `boost::random::geometric_distribution`
      and `boost::random::lognormal_distribution` provide
      the new behaviour.
    * Streaming:
      gamma_distribution has a new parameter, thus
      text saved with the old version will not readable
      by the new version.
    * `variate_generator` is now a simple pass through wrapper.
      Code that assumes that it will adjust the generator's
      result type to match the distribution will no longer
      work.  This is not an issue with any of the distributions
      provided by Boost.Random.
    * Return types:
      The `result_types` of some generators have changed
      slightly.  Some signed types have changed to unsigned
      to match the standard.
    * `has_fixed_range`:
      This is now always false, as it doesn't appear to be very
      useful and is excessively cumbersome.  Anything that
      was accessing `const_min` and `const_max` without first
      checking `has_fixed_range` was incorrect to begin with. 

* [phrase library..[@/libs/range/index.html Range]:]
  * Fixed the end position `irange` when step size is greater than 1
    ([@https://svn.boost.org/trac/boost/ticket/5544 #5544]).

* [phrase library..[@/libs/spirit/index.html Spirit]:]
  * Spirit V2.5, see the
    '[@/doc/libs/1_47_0/libs/spirit/doc/html/spirit/what_s_new/spirit_2_5.html What's New]'
    section for details.

* [phrase library..[@/libs/tokenizer/index.html Tokenizer]:]
  * Fixed bug [@https://svn.boost.org/trac/boost/ticket/4649 #4649].

* [phrase library..[@/libs/utility/index.html Utility]:]
  * Bug fixes:
    [@https://svn.boost.org/trac/boost/ticket/4432 #4432].

* [phrase library..[@/libs/utility/index.html Uuid]:]
  * Fixed tickets:
  	([@https://svn.boost.org/trac/boost/ticket/5570 #5570],
  	[@https://svn.boost.org/trac/boost/ticket/4601 #4601],
  	[@https://svn.boost.org/trac/boost/ticket/4991 #4991],
  	[@https://svn.boost.org/trac/boost/ticket/5145 #5145],
  	[@https://svn.boost.org/trac/boost/ticket/5235 #5235]).

* [phrase library..[@/libs/wave/index.html Wave]:]
  * Wave V2.3.0, see the [@/libs/wave/ChangeLog Changelog] for details.

[endsect]

[section Updated Tools]

* [phrase library..[@/tools/boostbook/index.html BoostBook]:]
  * Handle doxygen tags: `\see`, `tparam`, `ref` (for classes only).
  * Support note for classes as well as functions.
* [phrase library..[@/tools/quickbook/index.html Quickbook]:]
  * Generate consistent ids for headings.
  * Improved unicode support for windows.
  * Warn about windows paths, as they aren't portable.
  * Reverse deprecation of `[br]`.
  * Support date ranges and comma seperated clauses in copyright attributes.
  * Improved delimeter checking for simple markup (e.g. `*bold*`).
  * Pass-thru comments in code snippets.
  * '''<code>__FILENAME__</code>''' macro now generates relative paths.
  * Allow quickbook escapes inside comments in syntax highlighted code.

[endsect]

[section Compilers Tested]

Boost's primary test compilers are:

* Linux:
  * LLVM Clang 2.8
  * GCC: 3.4.6, 4.2.4, 4.3.4, 4.3.5, 4.4.1, 4.4.3, 4.4.5, 4.5.1, 4.5.2, 4.6.0, 4.6.1
  * GCC, C++0x mode: 4.3.4, 4.4.3, 4.5.2
  * Intel 12.0
* OS X:
  * Apple Clang 2.1
  * Intel 11.1
  * GCC: 4.2.1, 4.4.4
  * GCC, C++0x mode: 4.4.4
* Windows:
  * Visual C++ 7.1, 9.0, 10.0
  * GCC, mingw: 4.4.0
* FreeBSD:
  * GCC 4.2.1, 64 bit
* QNX:
  * QCC

Boost's additional test compilers include:

* Linux:
  * Clang from subversion, with GNU libstdc++.
  * LLVM Clang 2.8
  * GCC: 3.4.6, 4.2.4, 4.3.4, 4.3.5, 4.4.3, 4.4.5, 4.5.1, 4.5.2, 4.6.0, 4.6.1
  * GCC, C++0x mode: 4.3.4, 4.4.3, 4.5.2
  * pgCC: 11.2
  * Intel: 10.1, 11.0, 11.1, 12.0
  * PathScale: 3.2
* OS X:
  * Clang from subversion, with GNU libstdc++.
  * Intel 11.1
  * GCC: 4.4.4
  * GCC, C++0x mode: 4.4.4
* Windows:
  * Visual C++ 7.1, 9.0, 10.0
  * Visual C++ with STLport: 9.0
  * Visual C++, Windows Mobile 5, with STLport: 9.0
  * GCC, mingw: 4.5.2
  * GCC, C++0x mode, mingw: 4.5.2
* AIX:
  * IBM XL C/C++ Enterprise Edition, V11.1.0.0

[endsect]

[section Acknowledgements]

[@/users/people/beman_dawes.html Beman Dawes],
Eric Niebler,
[@/users/people/rene_rivera.html Rene Rivera],
Daniel James and Vladimir Prus managed this release.

[endsect]

