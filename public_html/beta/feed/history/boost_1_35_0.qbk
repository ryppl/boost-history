[article Version 1.35.0
    [quickbook 1.4]
    [source-mode c++]
    [purpose Release.]
    [authors [Dawes, Beman]]
    [last-revision Wed, 23 Jan 2008 12:00:00 GMT]
]

[include ext.qbk]

[download http://sourceforge.net/project/showfiles.php?group_id=7586&package_id=8041]

[section New Libraries]

* [phrase library..[@/libs/asio/index.html ASIO]:] Portable networking, 
  including sockets, timers, hostname resolution and socket iostreams, 
  from Chris Kohlhoff.
* [phrase library..[@/libs/bimap/index.html Bimap]:] Boost.Bimap is a 
  bidirectional maps library for C++. With Boost.Bimap you can create 
  associative containers in which both types can be used as key, from
  Matias Capeletto.
* [phrase library..[@/libs/circular_buffer/index.html circular_buffer]:] STL compliant container 
  also known as ring or cyclic buffer, from Jan Gaspar.
* [phrase library..[@/libs/function_types/index.html Function Types]:] 
  Boost.FunctionTypes provides functionality to classify, decompose 
  and synthesize function, function pointer, function reference and 
  pointer to member types.  From Tobias Schwinger.
* [phrase library..[@/libs/fusion/index.html Fusion]:] 
  Library for working with tuples, including various containers, 
  algorithms, etc. From Joel de Guzman, Dan Marsden and Tobias Schwinger.
* [phrase library..[@/libs/gil/doc/index.html GIL]:] 
  Generic Image Library, from Lubomir Bourdev and Hailin Jin.
* [phrase library..[@/libs/interprocess/index.html Interprocess]:] 
  Shared memory, memory mapped files, process-shared mutexes, 
  condition variables, containers and allocators, from Ion Gaztanaga.
* [phrase library..[@/libs/intrusive/index.html Intrusive]:] 
  Intrusive containers and algorithms, from Ion Gaztanaga.
* [phrase library..[@/libs/math/doc/sf_and_dist/html/index.html Math/Special Functions]:] 
  A wide selection of mathematical special functions from 
  John Maddock, Paul Bristow, Hubert Holin and Xiaogang Zhang.
* [phrase library..[@/libs/math/doc/sf_and_dist/html/index.html Math/Statistical Distributions]:] 
  A wide selection of univariate statistical distributions and functions that 
  operate on them from John Maddock and Paul Bristow
* [phrase library..[@/doc/html/mpi.html MPI]:] 
  Message Passing Interface library, for use in distributed-memory 
  parallel application programming, from Douglas Gregor and Matthias Troyer.
* [phrase library..[@/libs/system/index.html System]:] 
  Operating system support, including the diagnostics support that will be 
  part of the C++0x standard library, from Beman Dawes.


[endsect]

[section Updated Libraries]

* [phrase library..[@/libs/iostreams/index.html Iostreams]:] Framework for defining streams, stream 
  buffers and i/o filters, from Jonathan Turkanis. Highlights:
  * Clarified the semantics of close(). This fixes several bugs but will break
    some existing code. See [@/libs/iostreams/doc/index.html?path=12 Release Notes] 
    for details.
  * Numerous other bug fixes and optimizations.
* [phrase library..[@/libs/wave/index.html Wave]:] Standards conformant implementation of the 
  mandated C99/C++ preprocessor functionality packed behind an easy to use 
  iterator interface, from Hartmut Kaiser. Highlights:
  * Added the possibility to continue the preprocessing after an error occured.
  * Added the macro introspection API to the wave::context object.
  * Added threading support to the library.
  * Improved the overall performance by upto 30%.
  * Changed and unified preprocessor hook interface (this is an interface 
    breaking change!), added several new preprocessor hook functions.
  * Added serialization support.
  * Added new examples (for instance: Hannibal - a partial C++ parser, by Danny 
    Havenith).
  * Added a new lexical analyzer based on Ben Hansons Lexertl library.
  * Fixed a large number of other bugs and problems.
* [phrase library..[@/libs/xpressive/index.html Xpressive]:] Regular expressions that can be
  written as strings or as expression templates, and that can refer to each
  other and themselves recursively with the power of context-free grammars,
  from Eric Niebler. Highlights:
  * Added /semantic actions/ to static regexes. A semantic action is code that
    executes when part of a regular expression matches.
  * Added /custom assertions/ to static regexes. A custom assertion is a Boolean
    predicate that can participate in the regex match.
  * Added /named regexes/ for embedding a static or dynamic regex into a dynamic
    regex. This can be used to create dynamic regex grammars.
  * Added /named captures/ to dynamic regexes, like Perl.

[endsect]

[section Supported Compilers]

[endsect]

[section Acknowledgements]

[@/users/people/beman_dawes.html Beman Dawes] managed this release.

[endsect]
