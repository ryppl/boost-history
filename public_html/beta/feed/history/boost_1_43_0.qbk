[article Version 1.43.0
    [quickbook 1.4]
    [source-mode c++]
    [purpose Updated: Array, Fusion, Iostreams,
        Multi-index Containers, Random, Range, Spirit, Unordered,
        Wave, the build system and quickbook.]
    [authors [Dawes, Beman]]
    [last-revision ]
]

[include ext.qbk]

[/ TODO: Check download link on release.]
[download http://sourceforge.net/projects/boost/files/boost/1.43.0/]

[/
    When adding libraries:

    1. Libraries are listed in alphabetical order.
    2. Besides the dedicated entry, the lib name should be added to the
       [purpose] section at the beginning of the page.
]

[section Updated Libraries]

* [phrase library..[@/libs/array/index.html Array]:]
  * Added support for SunCC compiler.
  * Added 'fill' member function.
  * Changed exception code to use boost::throw_exception.

* [phrase library..[@/libs/fusion/index.html Fusion]:]
  * Added new macros for adapting or defining custom types. See the
    [@/libs/fusion/doc/html/fusion/change_log.html Changelog] for details.
  
* [phrase library..[@/libs/iostreams/index.html Iostreams]:]
  * Minor fixes
    ([@https://svn.boost.org/trac/boost/ticket/3839 #3839],
    [@https://svn.boost.org/trac/boost/ticket/3953 #3953],
    [@https://svn.boost.org/trac/boost/ticket/3723 #3723],
    [@https://svn.boost.org/trac/boost/ticket/3969 #3969],
    [@https://svn.boost.org/trac/boost/ticket/2505 #2505]).

* [phrase library..[@/libs/multi_index/doc/index.html Multi-index Containers]:]
  * [@/libs/serialization/doc/serialization.html#constructors Serialization
    of non default constructible values] is now properly
    supported through user-provided facilities `save_construct_data`
    and `load_construct_data`. `multi_index_container` serialization
    [@/libs/serialization/doc/tutorial.html#versioning class version]
    has been bumped from 1 to 2. 
  
* [phrase library..[@/libs/random/index.html Random]:]
  * Put the implementation of random_device in a compiled lib,
    and added Windows support.
  * Rewrote the documentation using Quickbook/Doxygen/Boostbook
    and brought it up to date.

* [phrase library..[@/libs/range/index.html Range]:]
  * All of the features from the Boost.RangeEx review have been merged
    into Boost.Range.
  * New functionality:
    * Range Adaptors
    * Range Algorithms
    * New functions: irange, istream_range, join, combine.
  * Removed singularity from the Range Concepts.

* [phrase library..[@/libs/spirit/index.html Spirit]:]
  Spirit V2.3, see the
  '[@/doc/libs/1_44_0/libs/spirit/doc/html/spirit/what_s_new.html What's New]'
  section for details.

* [phrase library..[@/libs/thread/index.html Thread]:]
  * Uses `boost::throw_exception` for all exceptions except `thread_interrupted`
  * Added fix for issue 2742
  * Optimizations to mutex locks and `call_once`

* [phrase library..[@/libs/unordered/index.html Unordered]:]
  * `erase_return_void` is now `quick_erase`
    ([@http://svn.boost.org/trac/boost/ticket/3966 #3966]).

* [phrase library..[@/libs/wave/index.html Wave]:]
  See the [@/libs/wave/ChangeLog Changelog] for details.

[endsect]

[section Build System]

* When cross-compiling to GNU targets, static libraries are properly created.
  Previously, using such libraries resulted in [^Archive has no index] error.
* The naming of DLL and import libraries with gcc compiler on Windows, both
  mingw and cygwin, now matches default conventions of those environments.
  Previously, the naming scheme was the same as for other Windows compilers.
  
[endsect]

[section Updated Tools]

* [phrase library..[@/tools/quickbook/index.html Quickbook]:]
  * Unicode escape characters.
  * Support the UTF-8 byte order mark.
  * Disallow `[` in simple markup. Fixes some errors with mismatched punctuation.
  * Add a command line flag (`-D`) to define macros at the command line.
  * Improved post-processor output.
  * Check that `[section]` and `[endsect]` tags are balanced in templates.

[endsect]

[section Compilers Tested]

Boost's primary test compilers are:

* /TODO/

Boost's additional test compilers include:

* /TODO/

[endsect]

[section Acknowledgements]

/TODO/

[endsect]

