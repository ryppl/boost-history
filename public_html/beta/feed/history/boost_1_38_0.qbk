[article Version 1.38.0
    [quickbook 1.4]
    [source-mode c++]
    [purpose New Libraries: Flyweight, ScopeExit, Swap
        Updated Libraries: Hash, Multi-index Containers, Unordered]
    [authors [Dawes, Beman]]
    [last-revision ]
]

[include ext.qbk]

[/ TODO: Add download link on release]

[/
    When adding libraries:

    1. Libraries are listed in alphabetical order.
    2. Besides the dedicated entry, the lib name should be added to the
       [purpose] section at the beginning of the page.
]

[section New Libraries]

* [phrase library..[@/libs/flyweight/index.html Flyweight]:]
  * Design pattern to manage large quantities of highly redundant objects,
    from Joaqu'''&#237;'''n M L'''&#243;'''pez Mu'''&#241;'''oz.

* [phrase library..[@/libs/scope_exit/doc/html/index.html ScopeExit]:]
  * Execute arbitrary code at scope exit,
    from Alexander Nasonov.

* [phrase library..[@/libs/utility/swap.html Swap]:]
  * Enhanced generic swap function,
    from Joseph Gauterin.

[endsect]

[section Updated Libraries]

* [phrase library..[@/libs/accumulators/index.html Accumulators]:]
  * Add `rolling_sum`, `rolling_count` and `rolling_mean` accumulators.

* [phrase library..[@/libs/functional/hash/index.html Hash]:]
  * `boost/functional/detail/container_fwd.hpp` has been moved to
    `boost/detail/container_fwd.hpp`.
    The current location is deprecated.
  * For more detail, see the
    [@/doc/html/hash/changes.html#hash.changes.boost_1_38_0
    library changelog].
    
* [phrase library..[@/libs/multi_index/doc/index.html Multi-index Containers]:]
  Some redundant type definitions have been deprecated. Consult the library
  [@/libs/multi_index/doc/release_notes.html#boost_1_38 release notes] for
  further information.
   
* [phrase library..[@/libs/proto/index.html Proto]:]
  * Fix problem with SFINAE of binary operators (Bug
    [@https://svn.boost.org/trac/boost/ticket/2407 2407]).
  * Fix `proto::call` transform for callable transforms with >3 arguments.
  * `result_of::value` changed behavior for array-by-value terminals.
  * `unpack_expr` requires only Forward Sequences rather than Random Access 
    Sequences.
  * Deprecate legacy undocumented `BOOST_PROTO_DEFINE_(VARARG_)FUNCTION_TEMPLATE`
    macros.
  * Add `BOOST_PROTO_REPEAT` and `BOOST_PROTO_LOCAL_ITERATE` macros to help with
    repetitive code generation
  * Support for nullary expressions with tag types other than 
    `proto::tag::terminal`
  * Allow 0- and 1-argument variants of `proto::or_` and `proto::and_`

* [phrase library..[@/libs/unordered/index.html Unordered]:]
  * Use [@/libs/utility/swap.html `boost::swap`].
  * Use a larger prime number list for selecting the number of buckets.
  * Use
    [@/libs/type_traits/doc/html/boost_typetraits/category/alignment.html
    aligned storage] to store the types.
  * Add support for C++0x initializer lists where they're available.
  * For more detail, see the
    [@/doc/html/unordered/changes.html#unordered.changes.boost_1_38_0
    library changelog].

* [phrase library..[@/libs/xpressive/index.html Xpressive]:]
  * `basic_regex` gets nested `syntax_option_flags` and `value_type` typedef, for
    compatibility with `std::basic_regex`
  * Ported to Proto v4; Proto v2 at [^boost/xpressive/proto] has been removed.
  * `regex_error` inherits from `boost::exception`

* [phrase library..[@/libs/exception/index.html Exception]:]
  * Improved and more customizable [@/libs/exception/doc/diagnostic_information.html diagnostic_information] output.

[endsect]

[section Compilers Tested]

Boost's primary test compilers are:

* /TODO/

Boost's additional test compilers include:

* /TODO/

[endsect]

[section Acknowledgements]

/TODO/

[endsect]

