[article Version 1.44.0
    [quickbook 1.5]
    [source-mode c++]
    [purpose New Libraries: Updated Libraries: ]
    [authors [Dawes, Beman]]
    [last-revision ]
]

[include ext.qbk]

[/ TODO: Check download link on release.]
[/download http://sourceforge.net/projects/boost/files/boost/1.44.0/]

[/
    When adding libraries:

    1. Libraries are listed in alphabetical order.
    2. Besides the dedicated entry, the lib name should be added to the
       [purpose] section at the beginning of the page.

    Example new libraries message:

* [phrase library..[@/libs/accumulators/index.html Accumulators]:] Framework for
  incremental calculation, and collection of statistical accumulators, from Eric Niebler.

    Example update message:

* [phrase library..[@/libs/interprocess/index.html Interprocess]:]
  * Added anonymous shared memory for UNIX systems.
  * Fixed missing move semantics on managed memory classes.
  * Added copy_on_write and open_read_only options for shared memory
    and mapped file managed classes.
  * `shared_ptr` is movable and supports aliasing.
]

[section New Libraries]

* [phrase library..[@/libs/msm/index.html Meta State Machine]:]
  High-performance expressive UML2 finite state machines, from Christophe Henry
* [phrase library..[@/libs/polygon/index.html Polygon]:]
  Booleans/clipping, resizing/offsetting and more for planar polygons with
  integral coordinates, from Lucanus Simonson.

[endsect]

[section Updated Libraries]

* [phrase library..[@/libs/numeric.ublas/index.html uBLAS]:]
  * New assignment operators to feed in vectors and matrices in many nice ways ([@http://svn.boost.org/trac/boost/ticket/4034 #4034]). Thank you Nasos
  * New doxygen-based [@/libs/numeric/ublas/doc/html/index.html documentation]
  * Enable arithmetic operators (+,-,*,/) to work between ublas containers of std::complex and integral types ([@http://svn/boost/org/trac/boost/ticket/3649 #3649]). Thank you Neal
  * Removed unused variables in functional.hpp ([@http://svn.boost.org/trac/boost/ticket/4377 #4377]). Thank you Marco

/TODO/

[endsect]

[section Compilers Tested]

Boost's primary test compilers are:

* /TODO/

Boost's additional test compilers include:

* /TODO/

[endsect]

[section Acknowledgements]

/TODO/

[endsect]

