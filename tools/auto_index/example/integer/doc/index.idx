
#
# The Boost.Integer docs do not include full
# declarations for the types described, as a 
# result we end up indexing nothing unless we
# use more permissive scanning rules for the types
# we find in the headers:
!define-scanner class_name "^[[:space:]]*(template[[:space:]]*<[^;:{]+>[[:space:]]*)?(class|struct)[[:space:]]*(\<\w+\>([[:blank:]]*\([^)]*\))?[[:space:]]*)*(\<\w*\>)[[:space:]]*(<[^;:{]+>)?[[:space:]]*(\{|:[^;\{()]*\{)" "\\<\5\\>" \5
!define-scanner typedef_name "typedef[^;{}#]+?(\w+)\s*;"  "\\<\1\\>" "\1"
!define-scanner "macro_name" "^\s*#\s*define\s+(\w+)" "\\<\1\\>" "\1"
!define-scanner "function_name" "\w+\s+(\w+)\s*\([^\)]*\)\s*[;{]" "\\<\1\\>" "\1"

!scan-dir boost/intreger true
!scan boost/cstdint.hpp
!scan boost/integer.hpp
!scan boost/integer_fwd.hpp
!scan boost/integer_traits.hpp
!exclude BOOST_NO_INT64_T
!exclude Synopsis type
