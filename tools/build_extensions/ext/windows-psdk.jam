#~ Copyright Redshift Software, Inc. 2006-2008.
#~ Distributed under the Boost Software License, Version 1.0.
#~ (See accompanying file LICENSE_1_0.txt or copy at
#~ http://www.boost.org/LICENSE_1_0.txt)

### Minimal support for using the Windows Platform SDK with
### BBv2 toolsets. Currently this only injects the needed
### paths for finding the headers and libs. And hence is likely
### to only work toolsets that don't come with *any* Win32
### support, for example the Visual Studio C++ Express distribution.
### To use declare the sdk in your user-config.jam with both
### location and the toolsets you want it to apply to. For example:
### 
###     using windows-psdk : srv.2003.sp1
###         : "C:/Program Files/Microsoft Platform SDK"
###         : --toolset=msvc-8.0express ;
### 
### More than one "--toolset=*" can be given and will be applied. The
### version number is optional and currently not used.


import extension ;

extension.declare windows-psdk ;

rule init ( version ? : location : options * )
{
    version ?= default ;
    local requirements =
        [ extension.define windows-psdk $(version) : $(location) : $(options) ]
        <windows-psdk-version>$(version)
        <windows-psdk-location>$(location)
        #~ <toolset>msvc:<define>_CRT_SECURE_NO_DEPRECATE
        #~ <toolset>msvc:<define>_SCL_SECURE_NO_WARNINGS
        ;
    local common-requirements =
        ;
    
    import modules ;
    
    for local toolset in [ MATCH "--toolset=(.*)" : $(options) ]
    {
        local tool = [ MATCH "([^-]+)" : $(toolset) ] ;
        modules.call-in $(tool) :
            toolset.flags $(tool) INCLUDES <toolset>$(toolset) : $(location)/Include ;
        modules.call-in $(tool) :
            toolset.flags $(tool) LINKPATH <toolset>$(toolset) : $(location)/Lib ;
    }
}
