#
# Boost.Synchro
# Build script for tests.
#
# Copyright (c) 2008-2009 Vicente J. Botet Escriba]
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

using testing ;

if ! $(BOOST_ROOT)
{
    BOOST_ROOT = [ modules.peek : BOOST_ROOT ] ;
}

# bjam -V2 threading=multi target-os=cygwin threadapi=pthread variant=debug

project :
    : requirements
        <include>$(BOOST_ROOT)
        <include>/sandbox/synchro
        <include>/sandbox/async
        <include>/sandbox/chrono
        <include>/sandbox/conversion
        <include>../../..
        
        <threading>multi
#        <target-os>cygwin
        #<threadapi>pthread
#        <variant>debug
        
        #<library>/boost/test//boost_unit_test_framework/<link>static
        #<library>/boost/thread//boost_thread/<link>static
        
        <library>/boost_1_39_0/libs/test/build//boost_unit_test_framework/<link>static
        <library>/boost_1_39_0/libs/thread/build//boost_thread/<link>static
        <library>/sandbox/chrono/libs/chrono/build//boost_chrono/<link>static
        <library>/boost_1_39_0/libs/system/build//boost_system/<link>static
      
;

     
test-suite "port" :
#     [ run port_test.cpp ]
    ; 


test-suite "compile_fail_test"  :
#    [ compile-fail ../example/IL_BancAccount.cpp : <define>BOOST_SYNCHRO_DO_NOT_COMPILE  : IL_BancAccount_comp_fail ]
    ;
    
test-suite "examples" :
    [ run     ../example/SingleBuf.cpp  ]
    [ run     ../example/Master_Slave.cpp  ]
    [ run     ../example/HotelReservation.cpp  ]
    [ link     ../example/QualifiedSingleBuf.cpp  ]
    [ run     ../example/Histogram.cpp  ]
    ;
    